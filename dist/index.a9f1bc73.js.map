{"mappings":"qLAAO,SAASA,EAAQC,GAEtB,OADAA,EAAgBA,GAAiB,GAC1BC,MAAMC,QAAQF,GAAiBA,EAAgB,CAACA,E,CAGlD,SAASG,EAAIC,GAClB,MAAO,mBAAmBA,G,kVCN5B,IAAAC,EAAAC,EAAA,S,uCAIA,MAAMC,EAAI,+IAyCV,SAASC,EAAMC,GACbC,QAAQC,IAAI,mBAAmBF,I,CAuDjC,MAAMG,EAAe,C,OA/CrB,SAAiBC,GACf,IAAIC,EAAaC,EAAAC,QAAaX,EAAAY,MAAe,QACzCC,EAAW,OACf,MAAMC,EAAQC,QAAQP,GAAWA,EAAQM,OACnCE,EAAWD,QAAQP,GAAWA,EAAQQ,UAT9C,IAAuBC,EAWjBT,IACkB,MAAhBA,EAAQU,OACVT,EAZkB,OADDQ,EAaST,EAAQU,MAZvB,GAAaR,EAAAS,KAAUC,EAAAC,UAAcJ,EAAQK,MAAM,IAAML,GAc9C,MAApBT,EAAQK,WACVA,EAAWL,EAAQK,WAIvB,IAEE,MAAMU,EAAShB,EAAaiB,MAAMC,EAAAC,aAAgBjB,EAAY,C,SAAEI,KAoBhE,OAlBAc,OAAOC,KAAKL,GAAQM,SAAQ,SAAUC,GAC/BH,OAAOI,UAAUC,eAAeC,KAAKjC,EAAAkC,IAAaJ,KAGpC,IAAbd,GACiBO,EAAOO,GAGxBhB,GAEAX,GADe,IAAba,EACG,IAAIc,+DAEJ,IAAIA,qEAVMP,EAAOO,E,IAgBvB,C,OAAEP,E,CACT,MAAOY,GAKP,OAJIrB,GACFX,EAAK,kBAAkBM,KAAc0B,EAAE/B,WAGlC,CAAEgC,MAAOD,E,SA1FpB,SAAgBE,GACd,MAAMC,EAAM,GAGZ,IAKIC,EALAC,EAAQH,EAAII,WAMhB,IAHAD,EAAQA,EAAME,QAAO,UAAY,MAGI,OAA7BH,EAAQrC,EAAKyC,KAAKH,KAAiB,CACzC,MAAMV,EAAMS,EAAM,GAGlB,IAAIK,EAASL,EAAM,IAAM,GAGzBK,EAAQA,EAAMC,OAGd,MAAMC,EAAaF,EAAM,GAGzBA,EAAQA,EAAMF,QAAO,yBAA2B,MAG7B,MAAfI,IACFF,EAAQA,EAAMF,QAAO,OAAS,MAC9BE,EAAQA,EAAMF,QAAO,OAAS,OAIhCJ,EAAIR,GAAOc,C,CAGb,OAAON,C,GAgETS,EAAAC,QAAeC,OAAS1C,EAAa0C,OACrCF,EAAAC,QAAexB,MAAQjB,EAAaiB,MACpCuB,EAAAC,QAAiBzC,C,sCC3GjB,IAOI2C,EACAC,EARAC,EAAUL,EAAAC,QAAiB,GAU/B,SAASK,IACL,MAAM,IAAIC,MAAM,kC,CAEpB,SAASC,IACL,MAAM,IAAID,MAAM,oC,CAsBpB,SAASE,EAAWC,GAChB,GAAIP,IAAqBQ,WAErB,OAAOA,WAAWD,EAAK,GAG3B,IAAKP,IAAqBG,IAAqBH,IAAqBQ,WAEhE,OADAR,EAAmBQ,WACZA,WAAWD,EAAK,GAE3B,IAEI,OAAOP,EAAiBO,EAAK,E,CAC/B,MAAMtB,GACJ,IAEI,OAAOe,EAAiBjB,KAAK,KAAMwB,EAAK,E,CAC1C,MAAME,GAEJ,OAAOT,EAAiBjB,KAAK2B,KAAMH,EAAK,E,IAvCnD,WACG,IAEQP,EADsB,mBAAfQ,WACYA,WAEAL,C,CAEzB,MAAOlB,GACLe,EAAmBG,C,CAEvB,IAEQF,EADwB,mBAAjBU,aACcA,aAEAN,C,CAE3B,MAAOI,GACLR,EAAqBI,C,CAE5B,CAnBA,GAwED,IAEIO,EAFAC,EAAQ,GACRC,GAAW,EAEXC,GAAa,EAEjB,SAASC,IACAF,GAAaF,IAGlBE,GAAW,EACPF,EAAaK,OACbJ,EAAQD,EAAaM,OAAOL,GAE5BE,GAAa,EAEbF,EAAMI,QACNE,I,CAIR,SAASA,IACL,IAAIL,EAAJ,CAGA,IAAIM,EAAUd,EAAWU,GACzBF,GAAW,EAGX,IADA,IAAIO,EAAMR,EAAMI,OACVI,GAAK,CAGP,IAFAT,EAAeC,EACfA,EAAQ,KACCE,EAAaM,GACdT,GACAA,EAAaG,GAAYO,MAGjCP,GAAa,EACbM,EAAMR,EAAMI,M,CAEhBL,EAAe,KACfE,GAAW,EAnEf,SAAyBS,GACrB,GAAItB,IAAuBU,aAEvB,OAAOA,aAAaY,GAGxB,IAAKtB,IAAuBI,IAAwBJ,IAAuBU,aAEvE,OADAV,EAAqBU,aACdA,aAAaY,GAExB,IAEWtB,EAAmBsB,E,CAC5B,MAAOtC,GACL,IAEI,OAAOgB,EAAmBlB,KAAK,KAAMwC,E,CACvC,MAAOd,GAGL,OAAOR,EAAmBlB,KAAK2B,KAAMa,E,GAgD7CC,CAAgBJ,EAnBZ,C,CAoCR,SAASK,EAAKlB,EAAKmB,GACfhB,KAAKH,IAAMA,EACXG,KAAKgB,MAAQA,C,CAYjB,SAASC,IAAO,CA5BhBzB,EAAQ0B,SAAW,SAAUrB,GACzB,IAAIsB,EAAO,IAAInF,MAAMoF,UAAUb,OAAS,GACxC,GAAIa,UAAUb,OAAS,EACnB,IAAK,IAAIc,EAAI,EAAGA,EAAID,UAAUb,OAAQc,IAClCF,EAAKE,EAAI,GAAKD,UAAUC,GAGhClB,EAAMmB,KAAK,IAAIP,EAAKlB,EAAKsB,IACJ,IAAjBhB,EAAMI,QAAiBH,GACvBR,EAAWa,E,EASnBM,EAAK5C,UAAUyC,IAAM,WACjBZ,KAAKH,IAAI0B,MAAM,KAAMvB,KAAKgB,M,EAE9BxB,EAAQgC,MAAQ,UAChBhC,EAAQiC,SAAU,EAClBjC,EAAQlB,IAAM,GACdkB,EAAQkC,KAAO,GACflC,EAAQmC,QAAU,GAClBnC,EAAQoC,SAAW,GAInBpC,EAAQqC,GAAKZ,EACbzB,EAAQsC,YAAcb,EACtBzB,EAAQuC,KAAOd,EACfzB,EAAQwC,IAAMf,EACdzB,EAAQyC,eAAiBhB,EACzBzB,EAAQ0C,mBAAqBjB,EAC7BzB,EAAQ2C,KAAOlB,EACfzB,EAAQ4C,gBAAkBnB,EAC1BzB,EAAQ6C,oBAAsBpB,EAE9BzB,EAAQ8C,UAAY,SAAUC,GAAQ,MAAO,E,EAE7C/C,EAAQgD,QAAU,SAAUD,GACxB,MAAM,IAAI7C,MAAM,mC,EAGpBF,EAAQxC,IAAM,WAAc,MAAO,G,EACnCwC,EAAQiD,MAAQ,SAAUC,GACtB,MAAM,IAAIhD,MAAM,iC,EAEpBF,EAAQmD,MAAQ,WAAa,OAAO,C,8FC7JpC,SAASC,EAAWtF,GAClB,GAAoB,iBAATA,EACT,MAAM,IAAIuF,UAAU,mCAAqCC,KAAKC,UAAUzF,G,CAK5E,SAAS0F,EAAqB1F,EAAM2F,GAMlC,IALA,IAIIC,EAJAC,EAAM,GACNC,EAAoB,EACpBC,GAAY,EACZC,EAAO,EAEFjC,EAAI,EAAGA,GAAK/D,EAAKiD,SAAUc,EAAG,CACrC,GAAIA,EAAI/D,EAAKiD,OACX2C,EAAO5F,EAAKiG,WAAWlC,OACpB,IAAa,KAAT6B,EACP,MAEAA,EAAO,EAAE,CACX,GAAa,KAATA,EAAmB,CACrB,GAAIG,IAAchC,EAAI,GAAc,IAATiC,QAEpB,GAAID,IAAchC,EAAI,GAAc,IAATiC,EAAY,CAC5C,GAAIH,EAAI5C,OAAS,GAA2B,IAAtB6C,GAA8D,KAAnCD,EAAII,WAAWJ,EAAI5C,OAAS,IAAsD,KAAnC4C,EAAII,WAAWJ,EAAI5C,OAAS,GAC1H,GAAI4C,EAAI5C,OAAS,EAAG,CAClB,IAAIiD,EAAiBL,EAAIM,YAAY,KACrC,GAAID,IAAmBL,EAAI5C,OAAS,EAAG,EACd,IAAnBiD,GACFL,EAAM,GACNC,EAAoB,GAGpBA,GADAD,EAAMA,EAAIzF,MAAM,EAAG8F,IACKjD,OAAS,EAAI4C,EAAIM,YAAY,KAEvDJ,EAAYhC,EACZiC,EAAO,EACP,Q,OAEG,GAAmB,IAAfH,EAAI5C,QAA+B,IAAf4C,EAAI5C,OAAc,CAC/C4C,EAAM,GACNC,EAAoB,EACpBC,EAAYhC,EACZiC,EAAO,EACP,Q,CAGAL,IACEE,EAAI5C,OAAS,EACf4C,GAAO,MAEPA,EAAM,KACRC,EAAoB,E,MAGlBD,EAAI5C,OAAS,EACf4C,GAAO,IAAM7F,EAAKI,MAAM2F,EAAY,EAAGhC,GAEvC8B,EAAM7F,EAAKI,MAAM2F,EAAY,EAAGhC,GAClC+B,EAAoB/B,EAAIgC,EAAY,EAEtCA,EAAYhC,EACZiC,EAAO,C,MACW,KAATJ,IAA8B,IAATI,IAC5BA,EAEFA,GAAO,C,CAGX,OAAOH,C,CAeT,IAAIO,EAAQ,CAEV3G,QAAS,WAKP,IAJA,IAEIC,EAFA2G,EAAe,GACfC,GAAmB,EAGdvC,EAAID,UAAUb,OAAS,EAAGc,IAAK,IAAOuC,EAAkBvC,IAAK,CACpE,IAAI/D,EACA+D,GAAK,EACP/D,EAAO8D,UAAUC,SAELwC,IAAR7G,IACFA,EAAM8G,EAAA9G,OACRM,EAAON,GAGT4F,EAAWtF,GAGS,IAAhBA,EAAKiD,SAIToD,EAAerG,EAAO,IAAMqG,EAC5BC,EAA0C,KAAvBtG,EAAKiG,WAAW,G,CASrC,OAFAI,EAAeX,EAAqBW,GAAeC,GAE/CA,EACED,EAAapD,OAAS,EACjB,IAAMoD,EAEN,IACAA,EAAapD,OAAS,EACxBoD,EAEA,G,EAIXI,UAAW,SAAmBzG,GAG5B,GAFAsF,EAAWtF,GAES,IAAhBA,EAAKiD,OAAc,MAAO,IAE9B,IAAIyD,EAAoC,KAAvB1G,EAAKiG,WAAW,GAC7BU,EAAyD,KAArC3G,EAAKiG,WAAWjG,EAAKiD,OAAS,GAQtD,OAHoB,KAFpBjD,EAAO0F,EAAqB1F,GAAO0G,IAE1BzD,QAAiByD,IAAY1G,EAAO,KACzCA,EAAKiD,OAAS,GAAK0D,IAAmB3G,GAAQ,KAE9C0G,EAAmB,IAAM1G,EACtBA,C,EAGT0G,WAAY,SAAoB1G,GAE9B,OADAsF,EAAWtF,GACJA,EAAKiD,OAAS,GAA4B,KAAvBjD,EAAKiG,WAAW,E,EAG5ChG,KAAM,WACJ,GAAyB,IAArB6D,UAAUb,OACZ,MAAO,IAET,IADA,IAAI2D,EACK7C,EAAI,EAAGA,EAAID,UAAUb,SAAUc,EAAG,CACzC,IAAI8C,EAAM/C,UAAUC,GACpBuB,EAAWuB,GACPA,EAAI5D,OAAS,SACAsD,IAAXK,EACFA,EAASC,EAETD,GAAU,IAAMC,E,CAGtB,YAAeN,IAAXK,EACK,IACFR,EAAMK,UAAUG,E,EAGzBE,SAAU,SAAkBC,EAAMC,GAIhC,GAHA1B,EAAWyB,GACXzB,EAAW0B,GAEPD,IAASC,EAAI,MAAO,GAKxB,IAHAD,EAAOX,EAAM3G,QAAQsH,OACrBC,EAAKZ,EAAM3G,QAAQuH,IAEF,MAAO,GAIxB,IADA,IAAIC,EAAY,EACTA,EAAYF,EAAK9D,QACa,KAA/B8D,EAAKd,WAAWgB,KADYA,GASlC,IALA,IAAIC,EAAUH,EAAK9D,OACfkE,EAAUD,EAAUD,EAGpBG,EAAU,EACPA,EAAUJ,EAAG/D,QACa,KAA3B+D,EAAGf,WAAWmB,KADUA,GAW9B,IAPA,IACIC,EADQL,EAAG/D,OACKmE,EAGhBnE,EAASkE,EAAUE,EAAQF,EAAUE,EACrCC,GAAgB,EAChBvD,EAAI,EACDA,GAAKd,IAAUc,EAAG,CACvB,GAAIA,IAAMd,EAAQ,CAChB,GAAIoE,EAAQpE,EAAQ,CAClB,GAAmC,KAA/B+D,EAAGf,WAAWmB,EAAUrD,GAG1B,OAAOiD,EAAG5G,MAAMgH,EAAUrD,EAAI,GACzB,GAAU,IAANA,EAGT,OAAOiD,EAAG5G,MAAMgH,EAAUrD,E,MAEnBoD,EAAUlE,IACoB,KAAnC8D,EAAKd,WAAWgB,EAAYlD,GAG9BuD,EAAgBvD,EACD,IAANA,IAGTuD,EAAgB,IAGpB,K,CAEF,IAAIC,EAAWR,EAAKd,WAAWgB,EAAYlD,GAE3C,GAAIwD,IADSP,EAAGf,WAAWmB,EAAUrD,GAEnC,MACoB,KAAbwD,IACPD,EAAgBvD,E,CAGpB,IAAIyD,EAAM,GAGV,IAAKzD,EAAIkD,EAAYK,EAAgB,EAAGvD,GAAKmD,IAAWnD,EAClDA,IAAMmD,GAAkC,KAAvBH,EAAKd,WAAWlC,KAChB,IAAfyD,EAAIvE,OACNuE,GAAO,KAEPA,GAAO,OAMb,OAAIA,EAAIvE,OAAS,EACRuE,EAAMR,EAAG5G,MAAMgH,EAAUE,IAEhCF,GAAWE,EACoB,KAA3BN,EAAGf,WAAWmB,MACdA,EACGJ,EAAG5G,MAAMgH,G,EAIpBK,UAAW,SAAmBzH,GAC5B,OAAOA,C,EAGT0H,QAAS,SAAiB1H,GAExB,GADAsF,EAAWtF,GACS,IAAhBA,EAAKiD,OAAc,MAAO,IAK9B,IAJA,IAAI2C,EAAO5F,EAAKiG,WAAW,GACvB0B,EAAmB,KAAT/B,EACVgC,GAAM,EACNC,GAAe,EACV9D,EAAI/D,EAAKiD,OAAS,EAAGc,GAAK,IAAKA,EAEtC,GAAa,MADb6B,EAAO5F,EAAKiG,WAAWlC,KAEnB,IAAK8D,EAAc,CACjBD,EAAM7D,EACN,K,OAIJ8D,GAAe,EAInB,OAAY,IAARD,EAAmBD,EAAU,IAAM,IACnCA,GAAmB,IAARC,EAAkB,KAC1B5H,EAAKI,MAAM,EAAGwH,E,EAGvBE,SAAU,SAAkB9H,EAAM+H,GAChC,QAAYxB,IAARwB,GAAoC,iBAARA,EAAkB,MAAM,IAAIxC,UAAU,mCACtED,EAAWtF,GAEX,IAGI+D,EAHAiE,EAAQ,EACRJ,GAAM,EACNC,GAAe,EAGnB,QAAYtB,IAARwB,GAAqBA,EAAI9E,OAAS,GAAK8E,EAAI9E,QAAUjD,EAAKiD,OAAQ,CACpE,GAAI8E,EAAI9E,SAAWjD,EAAKiD,QAAU8E,IAAQ/H,EAAM,MAAO,GACvD,IAAIiI,EAASF,EAAI9E,OAAS,EACtBiF,GAAmB,EACvB,IAAKnE,EAAI/D,EAAKiD,OAAS,EAAGc,GAAK,IAAKA,EAAG,CACrC,IAAI6B,EAAO5F,EAAKiG,WAAWlC,GAC3B,GAAa,KAAT6B,GAGA,IAAKiC,EAAc,CACjBG,EAAQjE,EAAI,EACZ,K,OAGqB,IAArBmE,IAGFL,GAAe,EACfK,EAAmBnE,EAAI,GAErBkE,GAAU,IAERrC,IAASmC,EAAI9B,WAAWgC,IACT,KAAXA,IAGJL,EAAM7D,IAKRkE,GAAS,EACTL,EAAMM,G,CAOd,OADIF,IAAUJ,EAAKA,EAAMM,GAAkC,IAARN,IAAYA,EAAM5H,EAAKiD,QACnEjD,EAAKI,MAAM4H,EAAOJ,E,CAEzB,IAAK7D,EAAI/D,EAAKiD,OAAS,EAAGc,GAAK,IAAKA,EAClC,GAA2B,KAAvB/D,EAAKiG,WAAWlC,IAGhB,IAAK8D,EAAc,CACjBG,EAAQjE,EAAI,EACZ,K,OAEe,IAAR6D,IAGXC,GAAe,EACfD,EAAM7D,EAAI,GAId,OAAY,IAAR6D,EAAmB,GAChB5H,EAAKI,MAAM4H,EAAOJ,E,EAI7BO,QAAS,SAAiBnI,GACxBsF,EAAWtF,GAQX,IAPA,IAAIoI,GAAW,EACXC,EAAY,EACZT,GAAM,EACNC,GAAe,EAGfS,EAAc,EACTvE,EAAI/D,EAAKiD,OAAS,EAAGc,GAAK,IAAKA,EAAG,CACzC,IAAI6B,EAAO5F,EAAKiG,WAAWlC,GAC3B,GAAa,KAAT6B,GASQ,IAARgC,IAGFC,GAAe,EACfD,EAAM7D,EAAI,GAEC,KAAT6B,GAEiB,IAAbwC,EACFA,EAAWrE,EACY,IAAhBuE,IACPA,EAAc,IACI,IAAbF,IAGTE,GAAc,QArBZ,IAAKT,EAAc,CACjBQ,EAAYtE,EAAI,EAChB,K,EAuBR,OAAiB,IAAbqE,IAA2B,IAARR,GAEH,IAAhBU,GAEgB,IAAhBA,GAAqBF,IAAaR,EAAM,GAAKQ,IAAaC,EAAY,EACjE,GAEFrI,EAAKI,MAAMgI,EAAUR,E,EAG9BW,OAAQ,SAAgBC,GACtB,GAAmB,OAAfA,GAA6C,iBAAfA,EAChC,MAAM,IAAIjD,UAAU,0EAA4EiD,GAElG,OAvVJ,SAAiBC,EAAKD,GACpB,IAAIpD,EAAMoD,EAAWpD,KAAOoD,EAAWE,KACnCC,EAAOH,EAAWG,OAASH,EAAWvD,MAAQ,KAAOuD,EAAWT,KAAO,IAC3E,OAAK3C,EAGDA,IAAQoD,EAAWE,KACdtD,EAAMuD,EAERvD,EAAMqD,EAAME,EALVA,C,CAmVAC,CAAQ,IAAKJ,E,EAGtBlI,MAAO,SAAeN,GACpBsF,EAAWtF,GAEX,IAAI6I,EAAM,CAAEH,KAAM,GAAItD,IAAK,GAAIuD,KAAM,GAAIZ,IAAK,GAAI9C,KAAM,IACxD,GAAoB,IAAhBjF,EAAKiD,OAAc,OAAO4F,EAC9B,IAEIb,EAFApC,EAAO5F,EAAKiG,WAAW,GACvBS,EAAsB,KAATd,EAEbc,GACFmC,EAAIH,KAAO,IACXV,EAAQ,GAERA,EAAQ,EAaV,IAXA,IAAII,GAAW,EACXC,EAAY,EACZT,GAAM,EACNC,GAAe,EACf9D,EAAI/D,EAAKiD,OAAS,EAIlBqF,EAAc,EAGXvE,GAAKiE,IAASjE,EAEnB,GAAa,MADb6B,EAAO5F,EAAKiG,WAAWlC,KAUX,IAAR6D,IAGFC,GAAe,EACfD,EAAM7D,EAAI,GAEC,KAAT6B,GAEiB,IAAbwC,EAAiBA,EAAWrE,EAA2B,IAAhBuE,IAAmBA,EAAc,IACtD,IAAbF,IAGXE,GAAc,QAlBZ,IAAKT,EAAc,CACjBQ,EAAYtE,EAAI,EAChB,K,CAyCR,OArBiB,IAAbqE,IAA2B,IAARR,GAEP,IAAhBU,GAEgB,IAAhBA,GAAqBF,IAAaR,EAAM,GAAKQ,IAAaC,EAAY,GACxD,IAART,IACiCiB,EAAIF,KAAOE,EAAI5D,KAAhC,IAAdoD,GAAmB3B,EAAkC1G,EAAKI,MAAM,EAAGwH,GAAgC5H,EAAKI,MAAMiI,EAAWT,KAG7G,IAAdS,GAAmB3B,GACrBmC,EAAI5D,KAAOjF,EAAKI,MAAM,EAAGgI,GACzBS,EAAIF,KAAO3I,EAAKI,MAAM,EAAGwH,KAEzBiB,EAAI5D,KAAOjF,EAAKI,MAAMiI,EAAWD,GACjCS,EAAIF,KAAO3I,EAAKI,MAAMiI,EAAWT,IAEnCiB,EAAId,IAAM/H,EAAKI,MAAMgI,EAAUR,IAG7BS,EAAY,EAAGQ,EAAIzD,IAAMpF,EAAKI,MAAM,EAAGiI,EAAY,GAAY3B,IAAYmC,EAAIzD,IAAM,KAElFyD,C,EAGTJ,IAAK,IACLK,UAAW,IACXC,MAAO,KACPC,MAAO,MAGT5C,EAAM4C,MAAQ5C,EAEdvE,EAAAC,QAAiBsE,C,sCC/gBjB,IAOI6C,EACAC,EARAC,EAAUtH,EAAAC,QAAiB,GAU/B,SAASsH,IACL,MAAM,IAAIhH,MAAM,kC,CAEpB,SAASiH,IACL,MAAM,IAAIjH,MAAM,oC,CAsBpB,SAASkH,EAAW/G,GAChB,GAAI0G,IAAqBzG,WAErB,OAAOA,WAAWD,EAAK,GAG3B,IAAK0G,IAAqBG,IAAqBH,IAAqBzG,WAEhE,OADAyG,EAAmBzG,WACZA,WAAWD,EAAK,GAE3B,IAEI,OAAO0G,EAAiB1G,EAAK,E,CAC/B,MAAMtB,GACJ,IAEI,OAAOgI,EAAiBlI,KAAK,KAAMwB,EAAK,E,CAC1C,MAAME,GAEJ,OAAOwG,EAAiBlI,KAAK2B,KAAMH,EAAK,E,IAvCnD,WACG,IAEQ0G,EADsB,mBAAfzG,WACYA,WAEA4G,C,CAEzB,MAAOnI,GACLgI,EAAmBG,C,CAEvB,IAEQF,EADwB,mBAAjBvG,aACcA,aAEA0G,C,CAE3B,MAAO5G,GACLyG,EAAqBG,C,CAE5B,CAnBA,GAwED,IAEIE,EAFAC,EAAQ,GACRC,GAAW,EAEXC,GAAa,EAEjB,SAASC,IACAF,GAAaF,IAGlBE,GAAW,EACPF,EAAatG,OACbuG,EAAQD,EAAarG,OAAOsG,GAE5BE,GAAa,EAEbF,EAAMvG,QACN2G,I,CAIR,SAASA,IACL,IAAIH,EAAJ,CAGA,IAAIrG,EAAUkG,EAAWK,GACzBF,GAAW,EAGX,IADA,IAAIpG,EAAMmG,EAAMvG,OACVI,GAAK,CAGP,IAFAkG,EAAeC,EACfA,EAAQ,KACCE,EAAarG,GACdkG,GACAA,EAAaG,GAAYpG,MAGjCoG,GAAa,EACbrG,EAAMmG,EAAMvG,M,CAEhBsG,EAAe,KACfE,GAAW,EAnEf,SAAyBlG,GACrB,GAAI2F,IAAuBvG,aAEvB,OAAOA,aAAaY,GAGxB,IAAK2F,IAAuBG,IAAwBH,IAAuBvG,aAEvE,OADAuG,EAAqBvG,aACdA,aAAaY,GAExB,IAEW2F,EAAmB3F,E,CAC5B,MAAOtC,GACL,IAEI,OAAOiI,EAAmBnI,KAAK,KAAMwC,E,CACvC,MAAOd,GAGL,OAAOyG,EAAmBnI,KAAK2B,KAAMa,E,GAgD7CsG,CAAgBzG,EAnBZ,C,CAoCR,SAAS0G,EAAKvH,EAAKmB,GACfhB,KAAKH,IAAMA,EACXG,KAAKgB,MAAQA,C,CAYjB,SAASqG,IAAO,CA5BhBZ,EAAQvF,SAAW,SAAUrB,GACzB,IAAIsB,EAAO,IAAInF,MAAMoF,UAAUb,OAAS,GACxC,GAAIa,UAAUb,OAAS,EACnB,IAAK,IAAIc,EAAI,EAAGA,EAAID,UAAUb,OAAQc,IAClCF,EAAKE,EAAI,GAAKD,UAAUC,GAGhCyF,EAAMxF,KAAK,IAAI8F,EAAKvH,EAAKsB,IACJ,IAAjB2F,EAAMvG,QAAiBwG,GACvBH,EAAWM,E,EASnBE,EAAKjJ,UAAUyC,IAAM,WACjBZ,KAAKH,IAAI0B,MAAM,KAAMvB,KAAKgB,M,EAE9ByF,EAAQjF,MAAQ,UAChBiF,EAAQhF,SAAU,EAClBgF,EAAQnI,IAAM,GACdmI,EAAQ/E,KAAO,GACf+E,EAAQ9E,QAAU,GAClB8E,EAAQ7E,SAAW,GAInB6E,EAAQ5E,GAAKwF,EACbZ,EAAQ3E,YAAcuF,EACtBZ,EAAQ1E,KAAOsF,EACfZ,EAAQzE,IAAMqF,EACdZ,EAAQxE,eAAiBoF,EACzBZ,EAAQvE,mBAAqBmF,EAC7BZ,EAAQtE,KAAOkF,EACfZ,EAAQrE,gBAAkBiF,EAC1BZ,EAAQpE,oBAAsBgF,EAE9BZ,EAAQnE,UAAY,SAAUC,GAAQ,MAAO,E,EAE7CkE,EAAQjE,QAAU,SAAUD,GACxB,MAAM,IAAI7C,MAAM,mC,EAGpB+G,EAAQzJ,IAAM,WAAc,MAAO,G,EACnCyJ,EAAQhE,MAAQ,SAAUC,GACtB,MAAM,IAAIhD,MAAM,iC,EAEpB+G,EAAQ9D,MAAQ,WAAa,OAAO,C,mDCzIpC2E,E,gHAAAA,EAAkB,WACjB,MAAO,G,wCCvCN,WAGA,IAAIzD,EAUA0D,EAAkB,sBAIlBC,EAAiB,4BAMjBC,EAAc,yBAgBdC,EAAwB,GACxBC,EAAoB,GACpBC,EAA0B,GAC1BC,EAAgB,IAChBC,EAAkB,IAiBlBC,EAAW,IACXC,EAAmB,iBAEnBC,EAAM,IAGNC,EAAmB,WAKnBC,EAAY,CACd,CAAC,MAAON,GACR,CAAC,OAtCkB,GAuCnB,CAAC,UAtCsB,GAuCvB,CAAC,QArCmB,GAsCpB,CAAC,aAAcH,GACf,CAAC,OAjCkB,KAkCnB,CAAC,UAAWC,GACZ,CAAC,eAAgBC,GACjB,CAAC,QAASE,IAIRM,EAAU,qBACVC,EAAW,iBAEXC,EAAU,mBACVC,EAAU,gBAEVC,EAAW,iBACXC,EAAU,oBACVC,EAAS,6BACTC,EAAS,eACTC,EAAY,kBAEZC,EAAY,kBACZC,EAAa,mBAEbC,EAAY,kBACZC,EAAS,eACTC,EAAY,kBACZC,EAAY,kBAEZC,EAAa,mBAGbC,EAAiB,uBACjBC,EAAc,oBACdC,EAAa,wBACbC,EAAa,wBACbC,EAAU,qBACVC,EAAW,sBACXC,EAAW,sBACXC,EAAW,sBACXC,EAAkB,6BAClBC,EAAY,uBACZC,EAAY,uBAGZC,EAAoB,iBACpBC,EAAmB,qBACnBC,EAAqB,gCAGrBC,EAAa,4BACbC,EAAe,WACfC,EAAmBC,OAAOH,EAAcI,QACxCC,EAAqBF,OAAOF,EAAgBG,QAG5CE,EAAQ,mBACRC,EAAU,kBACVC,EAAa,mBAGbC,GAAY,mDACZC,GAAa,QACbC,GAAU,mGAMVC,GAAY,sBACZC,GAAkBV,OAAOS,GAAaR,QAGtCU,GAAW,OAGXC,GAAY,KAGZC,GAAa,4CACbC,GAAa,oCACbC,GAAc,QAGdC,GAAW,4CAYXC,GAA0B,mBAG1BC,GAAY,WAMZC,GAAY,kCAGZC,GAAO,OAGPC,GAAU,qBAGVC,GAAU,aAGVC,GAAY,8BAGZC,GAAS,cAGTC,GAAQ,mBAGRC,GAAO,8CAGPC,GAAS,OAGTC,GAAiB,yBAOjBC,GAAeC,gDACfC,GAAiB,kBACjBC,GAAe,4BAKfC,GAAe,4BACfC,GAAa,iBACbC,GAAeC,8OAGfC,GAAS,OACTC,GAAW,kBACXC,GAAU,IAAMJ,GAAe,IAC/BK,GAAU,IAAMX,GAAe,IAC/BY,GAAW,OACXC,GAAY,oBACZC,GAAU,IAAMX,GAAe,IAC/BY,GAAS,kBAAuBT,GAAeM,GAAWV,GAAiBC,GAAeC,GAAe,IAGzGY,GAAc,mBACdC,GAAa,+BACbC,GAAa,iCACbC,GAAU,IAAMf,GAAe,IAI/BgB,GAAc,MAAQN,GAAU,IAAMC,GAAS,IAC/CM,GAAc,MAAQF,GAAU,IAAMJ,GAAS,IAC/CO,GAAkB,gCAClBC,GAAkB,gCAClBC,GAZa,MAAQb,GAAU,IAAlB,yBAYW,IACxBc,GAAW,oBAIXC,GAAQD,GAAWD,IAHP,gBAAwB,CAACR,GAAaC,GAAYC,IAAY7P,KAAK,KAAO,IAAMoQ,GAAWD,GAAW,MAIlHG,GAAU,MAAQ,CAACd,GAAWI,GAAYC,IAAY7P,KAAK,KAAO,IAAMqQ,GACxEE,GAAW,MAAQ,CAACZ,GAAcL,GAAU,IAAKA,GAASM,GAAYC,GAAYT,IAAUpP,KAAK,KAAO,IAGxGwQ,GAAS1D,OAAOqC,GAAQ,KAMxBsB,GAAc3D,OAAOwC,GAAS,KAG9BoB,GAAY5D,OAAO6D,kDAAiCJ,GAAWF,GAAO,KAGtEO,GAAgB9D,OAAO,CACzBgD,GAAU,IAAML,GAAU,IAAMQ,GAAkB,MAAQ,CAACZ,GAASS,GAAS,KAAK9P,KAAK,KAAO,IAC9FgQ,GAAc,IAAME,GAAkB,MAAQ,CAACb,GAASS,GAAUC,GAAa,KAAK/P,KAAK,KAAO,IAChG8P,GAAU,IAAMC,GAAc,IAAME,GACpCH,GAAU,IAAMI,GAtBD,mDADA,mDA0BfX,GACAe,IACAtQ,KAAK,KAAM,KAGT6Q,GAAe/D,OAAO,wBAA+B6B,GAAeK,GAAa,KAGjF8B,GAAgB,qEAGhBC,GAAe,CACjB,QAAS,SAAU,WAAY,OAAQ,QAAS,eAAgB,eAChE,WAAY,YAAa,aAAc,aAAc,MAAO,OAAQ,SACpE,UAAW,SAAU,MAAO,SAAU,SAAU,YAAa,aAC7D,oBAAqB,cAAe,cAAe,UACnD,IAAK,eAAgB,WAAY,WAAY,cAI3CC,IAAkB,EAGlBC,GAAiB,GACrBA,GAAelF,GAAckF,GAAejF,GAC5CiF,GAAehF,GAAWgF,GAAe/E,GACzC+E,GAAe9E,GAAY8E,GAAe7E,GAC1C6E,GAAe5E,GAAmB4E,GAAe3E,GACjD2E,GAAe1E,IAAa,EAC5B0E,GAAepG,GAAWoG,GAAenG,GACzCmG,GAAepF,GAAkBoF,GAAelG,GAChDkG,GAAenF,GAAemF,GAAejG,GAC7CiG,GAAehG,GAAYgG,GAAe/F,GAC1C+F,GAAe7F,GAAU6F,GAAe5F,GACxC4F,GAAe3F,GAAa2F,GAAezF,GAC3CyF,GAAexF,GAAUwF,GAAevF,GACxCuF,GAAerF,IAAc,EAG7B,IAAIsF,GAAgB,GACpBA,GAAcrG,GAAWqG,GAAcpG,GACvCoG,GAAcrF,GAAkBqF,GAAcpF,GAC9CoF,GAAcnG,GAAWmG,GAAclG,GACvCkG,GAAcnF,GAAcmF,GAAclF,GAC1CkF,GAAcjF,GAAWiF,GAAchF,GACvCgF,GAAc/E,GAAY+E,GAAc9F,GACxC8F,GAAc7F,GAAa6F,GAAc5F,GACzC4F,GAAc1F,GAAa0F,GAAczF,GACzCyF,GAAcxF,GAAawF,GAAcvF,GACzCuF,GAAc9E,GAAY8E,GAAc7E,GACxC6E,GAAc5E,GAAa4E,GAAc3E,IAAa,EACtD2E,GAAcjG,GAAYiG,GAAchG,GACxCgG,GAActF,IAAc,EAG5B,IA4EIuF,GAAgB,CAClB,KAAM,KACN,IAAK,IACL,KAAM,IACN,KAAM,IACN,SAAU,QACV,SAAU,SAIRC,GAAiBC,WACjBC,GAAeC,SAGfC,GAA8B,iBAAVC,GAAsBA,GAAUA,EAAOjR,SAAWA,QAAUiR,EAGhFC,GAA0B,iBAARC,MAAoBA,MAAQA,KAAKnR,SAAWA,QAAUmR,KAGxElJ,GAAO+I,IAAcE,IAAYE,SAAS,cAATA,GAGjCC,GAAchQ,IAA0CA,EAAQiQ,UAAYjQ,EAG5EkQ,GAAaF,IAA4CjQ,IAAWA,EAAOkQ,UAAYlQ,EAGvFoQ,GAAgBD,IAAcA,GAAWlQ,UAAYgQ,GAGrDI,GAAcD,IAAiBR,GAAWU,QAG1CC,GAAY,WACd,IAEE,IAAIC,EAAQL,IAAcA,GAAWM,SAAWN,GAAWM,QAAQ,QAAQD,MAE3E,OAAIA,GAKGH,IAAeA,GAAYhN,SAAWgN,GAAYhN,QAAQ,OACvD,CAAV,MAAOjE,GAAG,C,CAXE,GAeZsR,GAAoBH,IAAYA,GAASI,cACzCC,GAAaL,IAAYA,GAASM,OAClCC,GAAYP,IAAYA,GAASQ,MACjCC,GAAeT,IAAYA,GAASU,SACpCC,GAAYX,IAAYA,GAASY,MACjCC,GAAmBb,IAAYA,GAASc,aAc5C,SAASjP,GAAMkP,EAAMC,EAASvP,GAC5B,OAAQA,EAAKZ,QACX,KAAK,EAAG,OAAOkQ,EAAKpS,KAAKqS,GACzB,KAAK,EAAG,OAAOD,EAAKpS,KAAKqS,EAASvP,EAAK,IACvC,KAAK,EAAG,OAAOsP,EAAKpS,KAAKqS,EAASvP,EAAK,GAAIA,EAAK,IAChD,KAAK,EAAG,OAAOsP,EAAKpS,KAAKqS,EAASvP,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAE3D,OAAOsP,EAAKlP,MAAMmP,EAASvP,E,CAa7B,SAASwP,GAAgB3P,EAAO4P,EAAQC,EAAUC,GAIhD,IAHA,IAAIC,GAAQ,EACRxQ,EAAkB,MAATS,EAAgB,EAAIA,EAAMT,SAE9BwQ,EAAQxQ,GAAQ,CACvB,IAAIvB,EAAQgC,EAAM+P,GAClBH,EAAOE,EAAa9R,EAAO6R,EAAS7R,GAAQgC,E,CAE9C,OAAO8P,C,CAYT,SAASE,GAAUhQ,EAAO6P,GAIxB,IAHA,IAAIE,GAAQ,EACRxQ,EAAkB,MAATS,EAAgB,EAAIA,EAAMT,SAE9BwQ,EAAQxQ,IAC8B,IAAzCsQ,EAAS7P,EAAM+P,GAAQA,EAAO/P,KAIpC,OAAOA,C,CAYT,SAASiQ,GAAejQ,EAAO6P,GAG7B,IAFA,IAAItQ,EAAkB,MAATS,EAAgB,EAAIA,EAAMT,OAEhCA,MAC0C,IAA3CsQ,EAAS7P,EAAMT,GAASA,EAAQS,KAItC,OAAOA,C,CAaT,SAASkQ,GAAWlQ,EAAOmQ,GAIzB,IAHA,IAAIJ,GAAQ,EACRxQ,EAAkB,MAATS,EAAgB,EAAIA,EAAMT,SAE9BwQ,EAAQxQ,GACf,IAAK4Q,EAAUnQ,EAAM+P,GAAQA,EAAO/P,GAClC,OAAO,EAGX,OAAO,C,CAYT,SAASoQ,GAAYpQ,EAAOmQ,GAM1B,IALA,IAAIJ,GAAQ,EACRxQ,EAAkB,MAATS,EAAgB,EAAIA,EAAMT,OACnC8Q,EAAW,EACXC,EAAS,KAEJP,EAAQxQ,GAAQ,CACvB,IAAIvB,EAAQgC,EAAM+P,GACdI,EAAUnS,EAAO+R,EAAO/P,KAC1BsQ,EAAOD,KAAcrS,E,CAGzB,OAAOsS,C,CAYT,SAASC,GAAcvQ,EAAOhC,GAE5B,SADsB,MAATgC,EAAgB,EAAIA,EAAMT,SACpBiR,GAAYxQ,EAAOhC,EAAO,IAAK,C,CAYpD,SAASyS,GAAkBzQ,EAAOhC,EAAO0S,GAIvC,IAHA,IAAIX,GAAQ,EACRxQ,EAAkB,MAATS,EAAgB,EAAIA,EAAMT,SAE9BwQ,EAAQxQ,GACf,GAAImR,EAAW1S,EAAOgC,EAAM+P,IAC1B,OAAO,EAGX,OAAO,C,CAYT,SAASY,GAAS3Q,EAAO6P,GAKvB,IAJA,IAAIE,GAAQ,EACRxQ,EAAkB,MAATS,EAAgB,EAAIA,EAAMT,OACnC+Q,EAAStV,MAAMuE,KAEVwQ,EAAQxQ,GACf+Q,EAAOP,GAASF,EAAS7P,EAAM+P,GAAQA,EAAO/P,GAEhD,OAAOsQ,C,CAWT,SAASM,GAAU5Q,EAAO6Q,GAKxB,IAJA,IAAId,GAAQ,EACRxQ,EAASsR,EAAOtR,OAChBuR,EAAS9Q,EAAMT,SAEVwQ,EAAQxQ,GACfS,EAAM8Q,EAASf,GAASc,EAAOd,GAEjC,OAAO/P,C,CAeT,SAAS+Q,GAAY/Q,EAAO6P,EAAUC,EAAakB,GACjD,IAAIjB,GAAQ,EACRxQ,EAAkB,MAATS,EAAgB,EAAIA,EAAMT,OAKvC,IAHIyR,GAAazR,IACfuQ,EAAc9P,IAAQ+P,MAEfA,EAAQxQ,GACfuQ,EAAcD,EAASC,EAAa9P,EAAM+P,GAAQA,EAAO/P,GAE3D,OAAO8P,C,CAeT,SAASmB,GAAiBjR,EAAO6P,EAAUC,EAAakB,GACtD,IAAIzR,EAAkB,MAATS,EAAgB,EAAIA,EAAMT,OAIvC,IAHIyR,GAAazR,IACfuQ,EAAc9P,IAAQT,IAEjBA,KACLuQ,EAAcD,EAASC,EAAa9P,EAAMT,GAASA,EAAQS,GAE7D,OAAO8P,C,CAaT,SAASoB,GAAUlR,EAAOmQ,GAIxB,IAHA,IAAIJ,GAAQ,EACRxQ,EAAkB,MAATS,EAAgB,EAAIA,EAAMT,SAE9BwQ,EAAQxQ,GACf,GAAI4Q,EAAUnQ,EAAM+P,GAAQA,EAAO/P,GACjC,OAAO,EAGX,OAAO,C,CAUT,IAAImR,GAAYC,GAAa,UAmC7B,SAASC,GAAYC,EAAYnB,EAAWoB,GAC1C,IAAIjB,EAOJ,OANAiB,EAASD,GAAY,SAAStT,EAAOd,EAAKoU,GACxC,GAAInB,EAAUnS,EAAOd,EAAKoU,GAExB,OADAhB,EAASpT,GACF,C,IAGJoT,C,CAcT,SAASkB,GAAcxR,EAAOmQ,EAAWsB,EAAWC,GAIlD,IAHA,IAAInS,EAASS,EAAMT,OACfwQ,EAAQ0B,GAAaC,EAAY,GAAI,GAEjCA,EAAY3B,MAAYA,EAAQxQ,GACtC,GAAI4Q,EAAUnQ,EAAM+P,GAAQA,EAAO/P,GACjC,OAAO+P,EAGX,OAAO,C,CAYT,SAASS,GAAYxQ,EAAOhC,EAAOyT,GACjC,OAAOzT,GAAUA,EAidnB,SAAuBgC,EAAOhC,EAAOyT,GACnC,IAAI1B,EAAQ0B,EAAY,EACpBlS,EAASS,EAAMT,OAEnB,OAASwQ,EAAQxQ,GACf,GAAIS,EAAM+P,KAAW/R,EACnB,OAAO+R,EAGX,OAAO,C,CAzdH4B,CAAc3R,EAAOhC,EAAOyT,GAC5BD,GAAcxR,EAAO4R,GAAWH,E,CAatC,SAASI,GAAgB7R,EAAOhC,EAAOyT,EAAWf,GAIhD,IAHA,IAAIX,EAAQ0B,EAAY,EACpBlS,EAASS,EAAMT,SAEVwQ,EAAQxQ,GACf,GAAImR,EAAW1Q,EAAM+P,GAAQ/R,GAC3B,OAAO+R,EAGX,OAAO,C,CAUT,SAAS6B,GAAU5T,GACjB,OAAOA,GAAUA,C,CAYnB,SAAS8T,GAAS9R,EAAO6P,GACvB,IAAItQ,EAAkB,MAATS,EAAgB,EAAIA,EAAMT,OACvC,OAAOA,EAAUwS,GAAQ/R,EAAO6P,GAAYtQ,EAAU0H,C,CAUxD,SAASmK,GAAalU,GACpB,OAAO,SAAS8U,GACd,OAAiB,MAAVA,EAAiBnP,EAAYmP,EAAO9U,E,EAW/C,SAAS+U,GAAeD,GACtB,OAAO,SAAS9U,GACd,OAAiB,MAAV8U,EAAiBnP,EAAYmP,EAAO9U,E,EAiB/C,SAASgV,GAAWZ,EAAYzB,EAAUC,EAAakB,EAAWO,GAMhE,OALAA,EAASD,GAAY,SAAStT,EAAO+R,EAAOuB,GAC1CxB,EAAckB,GACTA,GAAY,EAAOhT,GACpB6R,EAASC,EAAa9R,EAAO+R,EAAOuB,E,IAEnCxB,C,CAgCT,SAASiC,GAAQ/R,EAAO6P,GAKtB,IAJA,IAAIS,EACAP,GAAQ,EACRxQ,EAASS,EAAMT,SAEVwQ,EAAQxQ,GAAQ,CACvB,IAAI4S,EAAUtC,EAAS7P,EAAM+P,IACzBoC,IAAYtP,IACdyN,EAASA,IAAWzN,EAAYsP,EAAW7B,EAAS6B,E,CAGxD,OAAO7B,C,CAYT,SAAS8B,GAAUC,EAAGxC,GAIpB,IAHA,IAAIE,GAAQ,EACRO,EAAStV,MAAMqX,KAEVtC,EAAQsC,GACf/B,EAAOP,GAASF,EAASE,GAE3B,OAAOO,C,CAyBT,SAASgC,GAASC,GAChB,OAAOA,EACHA,EAAO7V,MAAM,EAAG8V,GAAgBD,GAAU,GAAGzU,QAAQkM,GAAa,IAClEuI,C,CAUN,SAASE,GAAUhD,GACjB,OAAO,SAASzR,GACd,OAAOyR,EAAKzR,E,EAchB,SAAS0U,GAAWV,EAAQW,GAC1B,OAAOhC,GAASgC,GAAO,SAASzV,GAC9B,OAAO8U,EAAO9U,E,IAYlB,SAAS0V,GAASC,EAAO3V,GACvB,OAAO2V,EAAMC,IAAI5V,E,CAYnB,SAAS6V,GAAgBC,EAAYC,GAInC,IAHA,IAAIlD,GAAQ,EACRxQ,EAASyT,EAAWzT,SAEfwQ,EAAQxQ,GAAUiR,GAAYyC,EAAYD,EAAWjD,GAAQ,IAAK,IAC3E,OAAOA,C,CAYT,SAASmD,GAAcF,EAAYC,GAGjC,IAFA,IAAIlD,EAAQiD,EAAWzT,OAEhBwQ,KAAWS,GAAYyC,EAAYD,EAAWjD,GAAQ,IAAK,IAClE,OAAOA,C,CAWT,SAASoD,GAAanT,EAAOoT,GAI3B,IAHA,IAAI7T,EAASS,EAAMT,OACf+Q,EAAS,EAEN/Q,KACDS,EAAMT,KAAY6T,KAClB9C,EAGN,OAAOA,C,CAWT,IAAI+C,GAAepB,GAjxBG,CAEpB,IAAQ,IAAM,IAAQ,IAAK,IAAQ,IAAK,IAAQ,IAAK,IAAQ,IAAK,IAAQ,IAC1E,IAAQ,IAAM,IAAQ,IAAK,IAAQ,IAAK,IAAQ,IAAK,IAAQ,IAAK,IAAQ,IAC1E,IAAQ,IAAM,IAAQ,IACtB,IAAQ,IAAM,IAAQ,IACtB,IAAQ,IAAM,IAAQ,IAAK,IAAQ,IAAK,IAAQ,IAChD,IAAQ,IAAM,IAAQ,IAAK,IAAQ,IAAK,IAAQ,IAChD,IAAQ,IAAM,IAAQ,IAAK,IAAQ,IAAK,IAAQ,IAChD,IAAQ,IAAM,IAAQ,IAAK,IAAQ,IAAK,IAAQ,IAChD,IAAQ,IAAM,IAAQ,IACtB,IAAQ,IAAM,IAAQ,IAAK,IAAQ,IAAK,IAAQ,IAAK,IAAQ,IAAK,IAAQ,IAC1E,IAAQ,IAAM,IAAQ,IAAK,IAAQ,IAAK,IAAQ,IAAK,IAAQ,IAAK,IAAQ,IAC1E,IAAQ,IAAM,IAAQ,IAAK,IAAQ,IAAK,IAAQ,IAChD,IAAQ,IAAM,IAAQ,IAAK,IAAQ,IAAK,IAAQ,IAChD,IAAQ,IAAM,IAAQ,IAAK,IAAQ,IACnC,IAAQ,KAAM,IAAQ,KACtB,IAAQ,KAAM,IAAQ,KACtB,IAAQ,KAER,IAAU,IAAM,IAAU,IAAK,IAAU,IACzC,IAAU,IAAM,IAAU,IAAK,IAAU,IACzC,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IACxD,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IACxD,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IACxD,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IAAK,IAAU,IACvE,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IAAK,IAAU,IACvE,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IACxD,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IACxD,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IACxD,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IAAK,IAAU,IACvE,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IAAK,IAAU,IACvE,IAAU,IAAM,IAAU,IAC1B,IAAU,IAAM,IAAU,IAAK,IAAU,IACzC,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IAAK,IAAU,IACvE,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IAAK,IAAU,IACvE,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IACxD,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IACxD,IAAU,IAAM,IAAU,IAAK,IAAU,IACzC,IAAU,IAAM,IAAU,IAAK,IAAU,IACzC,IAAU,IAAM,IAAU,IAAK,IAAU,IACzC,IAAU,IAAM,IAAU,IAAK,IAAU,IACzC,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IACxD,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IACxD,IAAU,IAAM,IAAU,IAAK,IAAU,IACzC,IAAU,IAAM,IAAU,IAAK,IAAU,IACzC,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IAAK,IAAU,IAAK,IAAU,IACtF,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IAAK,IAAU,IAAK,IAAU,IACtF,IAAU,IAAM,IAAU,IAC1B,IAAU,IAAM,IAAU,IAAK,IAAU,IACzC,IAAU,IAAM,IAAU,IAAK,IAAU,IACzC,IAAU,IAAM,IAAU,IAAK,IAAU,IACzC,IAAU,KAAM,IAAU,KAC1B,IAAU,KAAM,IAAU,KAC1B,IAAU,KAAM,IAAU,MAouBxBqB,GAAiBrB,GAhuBH,CAChB,IAAK,QACL,IAAK,OACL,IAAK,OACL,IAAK,SACL,IAAK,UAouBP,SAASsB,GAAiBC,GACxB,MAAO,KAAO9F,GAAc8F,E,CAsB9B,SAASC,GAAWlB,GAClB,OAAOnF,GAAasG,KAAKnB,E,CAsC3B,SAASoB,GAAWC,GAClB,IAAI7D,GAAQ,EACRO,EAAStV,MAAM4Y,EAAIC,MAKvB,OAHAD,EAAI3W,SAAQ,SAASe,EAAOd,GAC1BoT,IAASP,GAAS,CAAC7S,EAAKc,E,IAEnBsS,C,CAWT,SAASwD,GAAQrE,EAAMsE,GACrB,OAAO,SAAS5Q,GACd,OAAOsM,EAAKsE,EAAU5Q,G,EAa1B,SAAS6Q,GAAehU,EAAOoT,GAM7B,IALA,IAAIrD,GAAQ,EACRxQ,EAASS,EAAMT,OACf8Q,EAAW,EACXC,EAAS,KAEJP,EAAQxQ,GAAQ,CACvB,IAAIvB,EAAQgC,EAAM+P,GACd/R,IAAUoV,GAAepV,IAAUyI,IACrCzG,EAAM+P,GAAStJ,EACf6J,EAAOD,KAAcN,E,CAGzB,OAAOO,C,CAUT,SAAS2D,GAAWC,GAClB,IAAInE,GAAQ,EACRO,EAAStV,MAAMkZ,EAAIL,MAKvB,OAHAK,EAAIjX,SAAQ,SAASe,GACnBsS,IAASP,GAAS/R,C,IAEbsS,C,CAqET,SAAS6D,GAAW5B,GAClB,OAAOkB,GAAWlB,GAiDpB,SAAqBA,GACnB,IAAIjC,EAASrD,GAAUmH,UAAY,EACnC,KAAOnH,GAAUyG,KAAKnB,MAClBjC,EAEJ,OAAOA,C,CArDH+D,CAAY9B,GACZpB,GAAUoB,E,CAUhB,SAAS+B,GAAc/B,GACrB,OAAOkB,GAAWlB,GAmDpB,SAAwBA,GACtB,OAAOA,EAAO5U,MAAMsP,KAAc,E,CAnD9BsH,CAAehC,GA7kBrB,SAAsBA,GACpB,OAAOA,EAAOiC,MAAM,G,CA6kBhBC,CAAalC,E,CAWnB,SAASC,GAAgBD,GAGvB,IAFA,IAAIxC,EAAQwC,EAAOhT,OAEZwQ,KAAW9F,GAAayJ,KAAKnB,EAAOmC,OAAO3E,MAClD,OAAOA,C,CAUT,IAAI4E,GAAmB1C,GA38BH,CAClB,QAAS,IACT,OAAQ,IACR,OAAQ,IACR,SAAU,IACV,QAAS,MA4gCX,IAs3eI2C,GAt3egB,SAASC,EAAaC,GAIxC,IA6BMC,EA7BFC,IAHJF,EAAqB,MAAXA,EAAkB9P,GAAO4P,GAAEK,SAASjQ,GAAKjI,SAAU+X,EAASF,GAAEM,KAAKlQ,GAAMsI,MAG/DtS,MAChBma,GAAOL,EAAQK,KACfzW,GAAQoW,EAAQpW,MAChB0W,GAAWN,EAAQ3G,SACnBkH,GAAOP,EAAQO,KACfC,GAASR,EAAQ/X,OACjBwY,GAAST,EAAQzL,OACjBmM,GAASV,EAAQU,OACjB3T,GAAYiT,EAAQjT,UAGpB4T,GAAaT,GAAM7X,UACnBuY,GAAYN,GAASjY,UACrBwY,GAAcL,GAAOnY,UAGrByY,GAAad,EAAQ,sBAGrBe,GAAeH,GAAU7X,SAGzBT,GAAiBuY,GAAYvY,eAG7B0Y,GAAY,EAGZC,IACEhB,EAAM,SAAShX,KAAK6X,IAAcA,GAAW5Y,MAAQ4Y,GAAW5Y,KAAKgZ,UAAY,KACvE,iBAAmBjB,EAAO,GAQtCkB,GAAuBN,GAAY9X,SAGnCqY,GAAmBL,GAAaxY,KAAKiY,IAGrCa,GAAUnR,GAAK4P,EAGfwB,GAAab,GAAO,IACtBM,GAAaxY,KAAKD,IAAgBU,QAAQgM,GAAc,QACvDhM,QAAO,yDAA2D,SAAW,KAI5EuY,GAAS9H,GAAgBuG,EAAQuB,OAASxT,EAC1CyT,GAASxB,EAAQwB,OACjBC,GAAazB,EAAQyB,WACrBC,GAAcH,GAASA,GAAOG,YAAc3T,EAC5C4T,GAAe3C,GAAQwB,GAAOoB,eAAgBpB,IAC9CqB,GAAerB,GAAOsB,OACtBC,GAAuBlB,GAAYkB,qBACnCC,GAASrB,GAAWqB,OACpBC,GAAmBT,GAASA,GAAOU,mBAAqBnU,EACxDoU,GAAcX,GAASA,GAAOY,SAAWrU,EACzCsU,GAAiBb,GAASA,GAAOc,YAAcvU,EAE/CwU,GAAkB,WACpB,IACE,IAAI5H,EAAO6H,GAAUhC,GAAQ,kBAE7B,OADA7F,EAAK,GAAI,GAAI,IACNA,CACG,CAAV,MAAOlS,GAAG,C,CALQ,GASlBga,GAAkBzC,EAAQ7V,eAAiB+F,GAAK/F,cAAgB6V,EAAQ7V,aACxEuY,GAASrC,IAAQA,GAAKsC,MAAQzS,GAAKmQ,KAAKsC,KAAOtC,GAAKsC,IACpDC,GAAgB5C,EAAQhW,aAAekG,GAAKlG,YAAcgW,EAAQhW,WAGlE6Y,GAAatC,GAAKuC,KAClBC,GAAcxC,GAAKyC,MACnBC,GAAmBzC,GAAO0C,sBAC1BC,GAAiB5B,GAASA,GAAO6B,SAAWrV,EAC5CsV,GAAiBrD,EAAQsD,SACzBC,GAAa5C,GAAWlZ,KACxB+b,GAAaxE,GAAQwB,GAAOtY,KAAMsY,IAClCiD,GAAYlD,GAAKmD,IACjBC,GAAYpD,GAAKqD,IACjBC,GAAYxD,GAAKsC,IACjBmB,GAAiB9D,EAAQhH,SACzB+K,GAAexD,GAAKyD,OACpBC,GAAgBtD,GAAWuD,QAG3BC,GAAW3B,GAAUxC,EAAS,YAC9BoE,GAAM5B,GAAUxC,EAAS,OACzBqE,GAAU7B,GAAUxC,EAAS,WAC7BsE,GAAM9B,GAAUxC,EAAS,OACzBuE,GAAU/B,GAAUxC,EAAS,WAC7BwE,GAAehC,GAAUhC,GAAQ,UAGjCiE,GAAUF,IAAW,IAAIA,GAGzBG,GAAY,GAGZC,GAAqBC,GAAST,IAC9BU,GAAgBD,GAASR,IACzBU,GAAoBF,GAASP,IAC7BU,GAAgBH,GAASN,IACzBU,GAAoBJ,GAASL,IAG7BU,GAAczD,GAASA,GAAOnZ,UAAY0F,EAC1CmX,GAAgBD,GAAcA,GAAYE,QAAUpX,EACpDqX,GAAiBH,GAAcA,GAAYlc,SAAWgF,EAyH1D,SAASsX,GAAOnc,GACd,GAAIoc,GAAapc,KAAW/C,GAAQ+C,MAAYA,aAAiBqc,IAAc,CAC7E,GAAIrc,aAAiBsc,GACnB,OAAOtc,EAET,GAAIZ,GAAeC,KAAKW,EAAO,eAC7B,OAAOuc,GAAavc,E,CAGxB,OAAO,IAAIsc,GAActc,E,CAW3B,IAAIwc,GAAc,WAChB,SAASxI,IAAS,CAClB,OAAO,SAASyI,GACd,IAAKC,GAASD,GACZ,MAAO,GAET,GAAI9D,GACF,OAAOA,GAAa8D,GAEtBzI,EAAO7U,UAAYsd,EACnB,IAAInK,EAAS,IAAI0B,EAEjB,OADAA,EAAO7U,UAAY0F,EACZyN,C,EAZO,GAqBlB,SAASqK,K,CAWT,SAASL,GAActc,EAAO4c,GAC5B5b,KAAK6b,YAAc7c,EACnBgB,KAAK8b,YAAc,GACnB9b,KAAK+b,YAAcH,EACnB5b,KAAKgc,UAAY,EACjBhc,KAAKic,WAAapY,C,CAgFpB,SAASwX,GAAYrc,GACnBgB,KAAK6b,YAAc7c,EACnBgB,KAAK8b,YAAc,GACnB9b,KAAKkc,QAAU,EACflc,KAAKmc,cAAe,EACpBnc,KAAKoc,cAAgB,GACrBpc,KAAKqc,cAAgBnU,EACrBlI,KAAKsc,UAAY,E,CAgHnB,SAASC,GAAKC,GACZ,IAAIzL,GAAQ,EACRxQ,EAAoB,MAAXic,EAAkB,EAAIA,EAAQjc,OAG3C,IADAP,KAAKyc,UACI1L,EAAQxQ,GAAQ,CACvB,IAAImc,EAAQF,EAAQzL,GACpB/Q,KAAKkV,IAAIwH,EAAM,GAAIA,EAAM,G,EAiG7B,SAASC,GAAUH,GACjB,IAAIzL,GAAQ,EACRxQ,EAAoB,MAAXic,EAAkB,EAAIA,EAAQjc,OAG3C,IADAP,KAAKyc,UACI1L,EAAQxQ,GAAQ,CACvB,IAAImc,EAAQF,EAAQzL,GACpB/Q,KAAKkV,IAAIwH,EAAM,GAAIA,EAAM,G,EA8G7B,SAASE,GAASJ,GAChB,IAAIzL,GAAQ,EACRxQ,EAAoB,MAAXic,EAAkB,EAAIA,EAAQjc,OAG3C,IADAP,KAAKyc,UACI1L,EAAQxQ,GAAQ,CACvB,IAAImc,EAAQF,EAAQzL,GACpB/Q,KAAKkV,IAAIwH,EAAM,GAAIA,EAAM,G,EAiG7B,SAASG,GAAShL,GAChB,IAAId,GAAQ,EACRxQ,EAAmB,MAAVsR,EAAiB,EAAIA,EAAOtR,OAGzC,IADAP,KAAK8c,SAAW,IAAIF,KACX7L,EAAQxQ,GACfP,KAAK+c,IAAIlL,EAAOd,G,CA6CpB,SAASiM,GAAMR,GACb,IAAIS,EAAOjd,KAAK8c,SAAW,IAAIH,GAAUH,GACzCxc,KAAK6U,KAAOoI,EAAKpI,I,CAqGnB,SAASqI,GAAcle,EAAOme,GAC5B,IAAIC,EAAQnhB,GAAQ+C,GAChBqe,GAASD,GAASE,GAAYte,GAC9Bue,GAAUH,IAAUC,GAASnE,GAASla,GACtCwe,GAAUJ,IAAUC,IAAUE,GAAU/M,GAAaxR,GACrDye,EAAcL,GAASC,GAASE,GAAUC,EAC1ClM,EAASmM,EAAcrK,GAAUpU,EAAMuB,OAAQiW,IAAU,GACzDjW,EAAS+Q,EAAO/Q,OAEpB,IAAK,IAAIrC,KAAOc,GACTme,IAAa/e,GAAeC,KAAKW,EAAOd,IACvCuf,IAEQ,UAAPvf,GAECqf,IAAkB,UAAPrf,GAA0B,UAAPA,IAE9Bsf,IAAkB,UAAPtf,GAA0B,cAAPA,GAA8B,cAAPA,IAEtDwf,GAAQxf,EAAKqC,KAElB+Q,EAAOhQ,KAAKpD,GAGhB,OAAOoT,C,CAUT,SAASqM,GAAY3c,GACnB,IAAIT,EAASS,EAAMT,OACnB,OAAOA,EAASS,EAAM4c,GAAW,EAAGrd,EAAS,IAAMsD,C,CAWrD,SAASga,GAAgB7c,EAAOqS,GAC9B,OAAOyK,GAAYC,GAAU/c,GAAQgd,GAAU3K,EAAG,EAAGrS,EAAMT,Q,CAU7D,SAAS0d,GAAajd,GACpB,OAAO8c,GAAYC,GAAU/c,G,CAY/B,SAASkd,GAAiBlL,EAAQ9U,EAAKc,IACjCA,IAAW6E,IAAcsa,GAAGnL,EAAO9U,GAAMc,IACxCA,IAAU6E,KAAe3F,KAAO8U,KACnCoL,GAAgBpL,EAAQ9U,EAAKc,E,CAcjC,SAASqf,GAAYrL,EAAQ9U,EAAKc,GAChC,IAAIsf,EAAWtL,EAAO9U,GAChBE,GAAeC,KAAK2U,EAAQ9U,IAAQigB,GAAGG,EAAUtf,KAClDA,IAAU6E,GAAe3F,KAAO8U,IACnCoL,GAAgBpL,EAAQ9U,EAAKc,E,CAYjC,SAASuf,GAAavd,EAAO9C,GAE3B,IADA,IAAIqC,EAASS,EAAMT,OACZA,KACL,GAAI4d,GAAGnd,EAAMT,GAAQ,GAAIrC,GACvB,OAAOqC,EAGX,OAAO,C,CAcT,SAASie,GAAelM,EAAY1B,EAAQC,EAAUC,GAIpD,OAHA2N,GAASnM,GAAY,SAAStT,EAAOd,EAAKoU,GACxC1B,EAAOE,EAAa9R,EAAO6R,EAAS7R,GAAQsT,E,IAEvCxB,C,CAYT,SAAS4N,GAAW1L,EAAQ1I,GAC1B,OAAO0I,GAAU2L,GAAWrU,EAAQtM,GAAKsM,GAAS0I,E,CAyBpD,SAASoL,GAAgBpL,EAAQ9U,EAAKc,GACzB,aAAPd,GAAsBma,GACxBA,GAAerF,EAAQ9U,EAAK,CAC1B0gB,cAAgB,EAChBC,YAAc,EACd7f,MAASA,EACT8f,UAAY,IAGd9L,EAAO9U,GAAOc,C,CAYlB,SAAS+f,GAAO/L,EAAQgM,GAMtB,IALA,IAAIjO,GAAQ,EACRxQ,EAASye,EAAMze,OACf+Q,EAAS0E,GAAMzV,GACf0e,EAAiB,MAAVjM,IAEFjC,EAAQxQ,GACf+Q,EAAOP,GAASkO,EAAOpb,EAAYqb,GAAIlM,EAAQgM,EAAMjO,IAEvD,OAAOO,C,CAYT,SAAS0M,GAAUmB,EAAQC,EAAOC,GAShC,OARIF,GAAWA,IACTE,IAAUxb,IACZsb,EAASA,GAAUE,EAAQF,EAASE,GAElCD,IAAUvb,IACZsb,EAASA,GAAUC,EAAQD,EAASC,IAGjCD,C,CAmBT,SAASG,GAAUtgB,EAAOugB,EAASC,EAAYthB,EAAK8U,EAAQyM,GAC1D,IAAInO,EACAoO,EArkFc,EAqkFLH,EACTI,EArkFc,EAqkFLJ,EACTK,EArkFiB,EAqkFRL,EAKb,GAHIC,IACFlO,EAAS0B,EAASwM,EAAWxgB,EAAOd,EAAK8U,EAAQyM,GAASD,EAAWxgB,IAEnEsS,IAAWzN,EACb,OAAOyN,EAET,IAAKoK,GAAS1c,GACZ,OAAOA,EAET,IAAIoe,EAAQnhB,GAAQ+C,GACpB,GAAIoe,GAEF,GADA9L,EA68GJ,SAAwBtQ,GACtB,IAAIT,EAASS,EAAMT,OACf+Q,EAAS,IAAItQ,EAAM6e,YAAYtf,GAG/BA,GAA6B,iBAAZS,EAAM,IAAkB5C,GAAeC,KAAK2C,EAAO,WACtEsQ,EAAOP,MAAQ/P,EAAM+P,MACrBO,EAAOwO,MAAQ9e,EAAM8e,OAEvB,OAAOxO,C,CAt9GIyO,CAAe/gB,IACnB0gB,EACH,OAAO3B,GAAU/e,EAAOsS,OAErB,CACL,IAAI0O,EAAMC,GAAOjhB,GACbkhB,EAASF,GAAOvX,GAAWuX,GAAOtX,EAEtC,GAAIwQ,GAASla,GACX,OAAOmhB,GAAYnhB,EAAO0gB,GAE5B,GAAIM,GAAOnX,GAAamX,GAAO5X,GAAY8X,IAAWlN,GAEpD,GADA1B,EAASqO,GAAWO,EAAU,GAAKE,GAAgBphB,IAC9C0gB,EACH,OAAOC,EA+nEf,SAAuBrV,EAAQ0I,GAC7B,OAAO2L,GAAWrU,EAAQ+V,GAAa/V,GAAS0I,E,CA/nEtCsN,CAActhB,EAnH1B,SAAsBgU,EAAQ1I,GAC5B,OAAO0I,GAAU2L,GAAWrU,EAAQiW,GAAOjW,GAAS0I,E,CAkHrBwN,CAAalP,EAAQtS,IAknEtD,SAAqBsL,EAAQ0I,GAC3B,OAAO2L,GAAWrU,EAAQmW,GAAWnW,GAAS0I,E,CAlnEpC0N,CAAY1hB,EAAO0f,GAAWpN,EAAQtS,QAEvC,CACL,IAAKyP,GAAcuR,GACjB,OAAOhN,EAAShU,EAAQ,GAE1BsS,EA49GN,SAAwB0B,EAAQgN,EAAKN,GACnC,IAAIiB,EAAO3N,EAAO6M,YAClB,OAAQG,GACN,KAAK5W,EACH,OAAOwX,GAAiB5N,GAE1B,KAAK1K,EACL,KAAKC,EACH,OAAO,IAAIoY,GAAM3N,GAEnB,KAAK3J,EACH,OA5nDN,SAAuBwX,EAAUnB,GAC/B,IAAIoB,EAASpB,EAASkB,GAAiBC,EAASC,QAAUD,EAASC,OACnE,OAAO,IAAID,EAAShB,YAAYiB,EAAQD,EAASE,WAAYF,EAASG,W,CA0nD3DC,CAAcjO,EAAQ0M,GAE/B,KAAKpW,EAAY,KAAKC,EACtB,KAAKC,EAAS,KAAKC,EAAU,KAAKC,EAClC,KAAKC,EAAU,KAAKC,EAAiB,KAAKC,EAAW,KAAKC,EACxD,OAAOoX,GAAgBlO,EAAQ0M,GAEjC,KAAK/W,EACH,OAAO,IAAIgY,EAEb,KAAK/X,EACL,KAAKK,EACH,OAAO,IAAI0X,EAAK3N,GAElB,KAAKjK,EACH,OA/nDN,SAAqBoY,GACnB,IAAI7P,EAAS,IAAI6P,EAAOtB,YAAYsB,EAAO7W,OAAQmB,GAAQ1M,KAAKoiB,IAEhE,OADA7P,EAAO8D,UAAY+L,EAAO/L,UACnB9D,C,CA4nDI8P,CAAYpO,GAErB,KAAKhK,EACH,OAAO,IAAI2X,EAEb,KAAKzX,EACH,OAxnDemY,EAwnDIrO,EAvnDhBgI,GAAgB1E,GAAO0E,GAAc3c,KAAKgjB,IAAW,GAD9D,IAAqBA,C,CAp4DNC,CAAetiB,EAAOghB,EAAKN,E,EAIxCD,IAAUA,EAAQ,IAAIzC,IACtB,IAAIuE,EAAU9B,EAAMP,IAAIlgB,GACxB,GAAIuiB,EACF,OAAOA,EAET9B,EAAMvK,IAAIlW,EAAOsS,GAEbhB,GAAMtR,GACRA,EAAMf,SAAQ,SAASujB,GACrBlQ,EAAOyL,IAAIuC,GAAUkC,EAAUjC,EAASC,EAAYgC,EAAUxiB,EAAOygB,G,IAE9DvP,GAAMlR,IACfA,EAAMf,SAAQ,SAASujB,EAAUtjB,GAC/BoT,EAAO4D,IAAIhX,EAAKohB,GAAUkC,EAAUjC,EAASC,EAAYthB,EAAKc,EAAOygB,G,IAIzE,IAII9L,EAAQyJ,EAAQvZ,GAJL+b,EACVD,EAAS8B,GAAeC,GACxB/B,EAASY,GAASviB,IAEkBgB,GASzC,OARAgS,GAAU2C,GAAS3U,GAAO,SAASwiB,EAAUtjB,GACvCyV,IAEF6N,EAAWxiB,EADXd,EAAMsjB,IAIRnD,GAAY/M,EAAQpT,EAAKohB,GAAUkC,EAAUjC,EAASC,EAAYthB,EAAKc,EAAOygB,G,IAEzEnO,C,CAyBT,SAASqQ,GAAe3O,EAAQ1I,EAAQqJ,GACtC,IAAIpT,EAASoT,EAAMpT,OACnB,GAAc,MAAVyS,EACF,OAAQzS,EAGV,IADAyS,EAASsD,GAAOtD,GACTzS,KAAU,CACf,IAAIrC,EAAMyV,EAAMpT,GACZ4Q,EAAY7G,EAAOpM,GACnBc,EAAQgU,EAAO9U,GAEnB,GAAIc,IAAW6E,KAAe3F,KAAO8U,KAAa7B,EAAUnS,GAC1D,OAAO,C,CAGX,OAAO,C,CAaT,SAAS4iB,GAAUnR,EAAMoR,EAAM1gB,GAC7B,GAAmB,mBAARsP,EACT,MAAM,IAAI5N,GAAU0E,GAEtB,OAAOzH,IAAW,WAAa2Q,EAAKlP,MAAMsC,EAAW1C,E,GAAU0gB,E,CAcjE,SAASC,GAAe9gB,EAAO6Q,EAAQhB,EAAUa,GAC/C,IAAIX,GAAQ,EACRgR,EAAWxQ,GACXyQ,GAAW,EACXzhB,EAASS,EAAMT,OACf+Q,EAAS,GACT2Q,EAAepQ,EAAOtR,OAE1B,IAAKA,EACH,OAAO+Q,EAELT,IACFgB,EAASF,GAASE,EAAQ4B,GAAU5C,KAElCa,GACFqQ,EAAWtQ,GACXuQ,GAAW,GAEJnQ,EAAOtR,QAtvFG,MAuvFjBwhB,EAAWnO,GACXoO,GAAW,EACXnQ,EAAS,IAAIgL,GAAShL,IAExBqQ,EACA,OAASnR,EAAQxQ,GAAQ,CACvB,IAAIvB,EAAQgC,EAAM+P,GACdoR,EAAuB,MAAZtR,EAAmB7R,EAAQ6R,EAAS7R,GAGnD,GADAA,EAAQ0S,GAAyB,IAAV1S,EAAeA,EAAQ,EAC1CgjB,GAAYG,GAAaA,EAAU,CAErC,IADA,IAAIC,EAAcH,EACXG,KACL,GAAIvQ,EAAOuQ,KAAiBD,EAC1B,SAASD,EAGb5Q,EAAOhQ,KAAKtC,E,MAEJ+iB,EAASlQ,EAAQsQ,EAAUzQ,IACnCJ,EAAOhQ,KAAKtC,E,CAGhB,OAAOsS,C,CAjkCT6J,GAAOkH,iBAAmB,CAQxBC,OAAU9X,EAQV+X,SAAY9X,EAQZ+X,YAAe9X,EAQf+X,SAAY,GAQZC,QAAW,CAQT9M,EAAKuF,KAKTA,GAAOhd,UAAYwd,GAAWxd,UAC9Bgd,GAAOhd,UAAU0hB,YAAc1E,GAE/BG,GAAcnd,UAAYqd,GAAWG,GAAWxd,WAChDmd,GAAcnd,UAAU0hB,YAAcvE,GAsHtCD,GAAYld,UAAYqd,GAAWG,GAAWxd,WAC9Ckd,GAAYld,UAAU0hB,YAAcxE,GAoGpCkB,GAAKpe,UAAUse,MAvEf,WACEzc,KAAK8c,SAAWxC,GAAeA,GAAa,MAAQ,GACpDta,KAAK6U,KAAO,C,EAsEd0H,GAAKpe,UAAkB,OAzDvB,SAAoBD,GAClB,IAAIoT,EAAStR,KAAK8T,IAAI5V,WAAe8B,KAAK8c,SAAS5e,GAEnD,OADA8B,KAAK6U,MAAQvD,EAAS,EAAI,EACnBA,C,EAuDTiL,GAAKpe,UAAU+gB,IA3Cf,SAAiBhhB,GACf,IAAI+e,EAAOjd,KAAK8c,SAChB,GAAIxC,GAAc,CAChB,IAAIhJ,EAAS2L,EAAK/e,GAClB,OAAOoT,IAAW9J,EAAiB3D,EAAYyN,C,CAEjD,OAAOlT,GAAeC,KAAK4e,EAAM/e,GAAO+e,EAAK/e,GAAO2F,C,EAsCtD0Y,GAAKpe,UAAU2V,IA1Bf,SAAiB5V,GACf,IAAI+e,EAAOjd,KAAK8c,SAChB,OAAOxC,GAAgB2C,EAAK/e,KAAS2F,EAAazF,GAAeC,KAAK4e,EAAM/e,E,EAyB9Eqe,GAAKpe,UAAU+W,IAZf,SAAiBhX,EAAKc,GACpB,IAAIie,EAAOjd,KAAK8c,SAGhB,OAFA9c,KAAK6U,MAAQ7U,KAAK8T,IAAI5V,GAAO,EAAI,EACjC+e,EAAK/e,GAAOoc,IAAiBtb,IAAU6E,EAAa2D,EAAiBxI,EAC9DgB,I,EAyHT2c,GAAUxe,UAAUse,MApFpB,WACEzc,KAAK8c,SAAW,GAChB9c,KAAK6U,KAAO,C,EAmFd8H,GAAUxe,UAAkB,OAvE5B,SAAyBD,GACvB,IAAI+e,EAAOjd,KAAK8c,SACZ/L,EAAQwN,GAAatB,EAAM/e,GAE/B,QAAI6S,EAAQ,KAIRA,GADYkM,EAAK1c,OAAS,EAE5B0c,EAAK0F,MAEL7K,GAAOzZ,KAAK4e,EAAMlM,EAAO,KAEzB/Q,KAAK6U,MACA,E,EA0DT8H,GAAUxe,UAAU+gB,IA9CpB,SAAsBhhB,GACpB,IAAI+e,EAAOjd,KAAK8c,SACZ/L,EAAQwN,GAAatB,EAAM/e,GAE/B,OAAO6S,EAAQ,EAAIlN,EAAYoZ,EAAKlM,GAAO,E,EA2C7C4L,GAAUxe,UAAU2V,IA/BpB,SAAsB5V,GACpB,OAAOqgB,GAAave,KAAK8c,SAAU5e,IAAO,C,EA+B5Cye,GAAUxe,UAAU+W,IAlBpB,SAAsBhX,EAAKc,GACzB,IAAIie,EAAOjd,KAAK8c,SACZ/L,EAAQwN,GAAatB,EAAM/e,GAQ/B,OANI6S,EAAQ,KACR/Q,KAAK6U,KACPoI,EAAK3b,KAAK,CAACpD,EAAKc,KAEhBie,EAAKlM,GAAO,GAAK/R,EAEZgB,I,EA2GT4c,GAASze,UAAUse,MAtEnB,WACEzc,KAAK6U,KAAO,EACZ7U,KAAK8c,SAAW,CACd8F,KAAQ,IAAIrG,GACZ3H,IAAO,IAAKsF,IAAOyC,IACnBpJ,OAAU,IAAIgJ,G,EAkElBK,GAASze,UAAkB,OArD3B,SAAwBD,GACtB,IAAIoT,EAASuR,GAAW7iB,KAAM9B,GAAa,OAAEA,GAE7C,OADA8B,KAAK6U,MAAQvD,EAAS,EAAI,EACnBA,C,EAmDTsL,GAASze,UAAU+gB,IAvCnB,SAAqBhhB,GACnB,OAAO2kB,GAAW7iB,KAAM9B,GAAKghB,IAAIhhB,E,EAuCnC0e,GAASze,UAAU2V,IA3BnB,SAAqB5V,GACnB,OAAO2kB,GAAW7iB,KAAM9B,GAAK4V,IAAI5V,E,EA2BnC0e,GAASze,UAAU+W,IAdnB,SAAqBhX,EAAKc,GACxB,IAAIie,EAAO4F,GAAW7iB,KAAM9B,GACxB2W,EAAOoI,EAAKpI,KAIhB,OAFAoI,EAAK/H,IAAIhX,EAAKc,GACdgB,KAAK6U,MAAQoI,EAAKpI,MAAQA,EAAO,EAAI,EAC9B7U,I,EA2DT6c,GAAS1e,UAAU4e,IAAMF,GAAS1e,UAAUmD,KAnB5C,SAAqBtC,GAEnB,OADAgB,KAAK8c,SAAS5H,IAAIlW,EAAOwI,GAClBxH,I,EAkBT6c,GAAS1e,UAAU2V,IANnB,SAAqB9U,GACnB,OAAOgB,KAAK8c,SAAShJ,IAAI9U,E,EAuG3Bge,GAAM7e,UAAUse,MA3EhB,WACEzc,KAAK8c,SAAW,IAAIH,GACpB3c,KAAK6U,KAAO,C,EA0EdmI,GAAM7e,UAAkB,OA9DxB,SAAqBD,GACnB,IAAI+e,EAAOjd,KAAK8c,SACZxL,EAAS2L,EAAa,OAAE/e,GAG5B,OADA8B,KAAK6U,KAAOoI,EAAKpI,KACVvD,C,EA0DT0L,GAAM7e,UAAU+gB,IA9ChB,SAAkBhhB,GAChB,OAAO8B,KAAK8c,SAASoC,IAAIhhB,E,EA8C3B8e,GAAM7e,UAAU2V,IAlChB,SAAkB5V,GAChB,OAAO8B,KAAK8c,SAAShJ,IAAI5V,E,EAkC3B8e,GAAM7e,UAAU+W,IArBhB,SAAkBhX,EAAKc,GACrB,IAAIie,EAAOjd,KAAK8c,SAChB,GAAIG,aAAgBN,GAAW,CAC7B,IAAImG,EAAQ7F,EAAKH,SACjB,IAAK5C,IAAQ4I,EAAMviB,OAASwiB,IAG1B,OAFAD,EAAMxhB,KAAK,CAACpD,EAAKc,IACjBgB,KAAK6U,OAASoI,EAAKpI,KACZ7U,KAETid,EAAOjd,KAAK8c,SAAW,IAAIF,GAASkG,E,CAItC,OAFA7F,EAAK/H,IAAIhX,EAAKc,GACdgB,KAAK6U,KAAOoI,EAAKpI,KACV7U,I,EAscT,IAAIye,GAAWuE,GAAeC,IAU1BC,GAAgBF,GAAeG,IAAiB,GAWpD,SAASC,GAAU9Q,EAAYnB,GAC7B,IAAIG,GAAS,EAKb,OAJAmN,GAASnM,GAAY,SAAStT,EAAO+R,EAAOuB,GAE1C,OADAhB,IAAWH,EAAUnS,EAAO+R,EAAOuB,E,IAG9BhB,C,CAaT,SAAS+R,GAAariB,EAAO6P,EAAUa,GAIrC,IAHA,IAAIX,GAAQ,EACRxQ,EAASS,EAAMT,SAEVwQ,EAAQxQ,GAAQ,CACvB,IAAIvB,EAAQgC,EAAM+P,GACdoC,EAAUtC,EAAS7R,GAEvB,GAAe,MAAXmU,IAAoBgP,IAAate,EAC5BsP,GAAYA,IAAYmQ,GAASnQ,GAClCzB,EAAWyB,EAASgP,IAE1B,IAAIA,EAAWhP,EACX7B,EAAStS,C,CAGjB,OAAOsS,C,CAuCT,SAASiS,GAAWjR,EAAYnB,GAC9B,IAAIG,EAAS,GAMb,OALAmN,GAASnM,GAAY,SAAStT,EAAO+R,EAAOuB,GACtCnB,EAAUnS,EAAO+R,EAAOuB,IAC1BhB,EAAOhQ,KAAKtC,E,IAGTsS,C,CAcT,SAASkS,GAAYxiB,EAAOyiB,EAAOtS,EAAWuS,EAAUpS,GACtD,IAAIP,GAAQ,EACRxQ,EAASS,EAAMT,OAKnB,IAHA4Q,IAAcA,EAAYwS,IAC1BrS,IAAWA,EAAS,MAEXP,EAAQxQ,GAAQ,CACvB,IAAIvB,EAAQgC,EAAM+P,GACd0S,EAAQ,GAAKtS,EAAUnS,GACrBykB,EAAQ,EAEVD,GAAYxkB,EAAOykB,EAAQ,EAAGtS,EAAWuS,EAAUpS,GAEnDM,GAAUN,EAAQtS,GAEV0kB,IACVpS,EAAOA,EAAO/Q,QAAUvB,E,CAG5B,OAAOsS,C,CAcT,IAAIsS,GAAUC,KAYVC,GAAeD,IAAc,GAUjC,SAASZ,GAAWjQ,EAAQnC,GAC1B,OAAOmC,GAAU4Q,GAAQ5Q,EAAQnC,EAAU7S,G,CAW7C,SAASmlB,GAAgBnQ,EAAQnC,GAC/B,OAAOmC,GAAU8Q,GAAa9Q,EAAQnC,EAAU7S,G,CAYlD,SAAS+lB,GAAc/Q,EAAQW,GAC7B,OAAOvC,GAAYuC,GAAO,SAASzV,GACjC,OAAO8lB,GAAWhR,EAAO9U,G,IAY7B,SAAS+lB,GAAQjR,EAAQ1V,GAMvB,IAHA,IAAIyT,EAAQ,EACRxQ,GAHJjD,EAAO4mB,GAAS5mB,EAAM0V,IAGJzS,OAED,MAAVyS,GAAkBjC,EAAQxQ,GAC/ByS,EAASA,EAAOmR,GAAM7mB,EAAKyT,OAE7B,OAAOA,GAAUA,GAASxQ,EAAUyS,EAASnP,C,CAc/C,SAASugB,GAAepR,EAAQqR,EAAUC,GACxC,IAAIhT,EAAS+S,EAASrR,GACtB,OAAO/W,GAAQ+W,GAAU1B,EAASM,GAAUN,EAAQgT,EAAYtR,G,CAUlE,SAASuR,GAAWvlB,GAClB,OAAa,MAATA,EACKA,IAAU6E,EAn7FJ,qBARL,gBA67FHsU,IAAmBA,MAAkB7B,GAAOtX,GA23FrD,SAAmBA,GACjB,IAAIwlB,EAAQpmB,GAAeC,KAAKW,EAAOmZ,IACnC6H,EAAMhhB,EAAMmZ,IAEhB,IACEnZ,EAAMmZ,IAAkBtU,EACxB,IAAI4gB,GAAW,CACL,CAAV,MAAOlmB,GAAG,CAEZ,IAAI+S,EAAS2F,GAAqB5Y,KAAKW,GACnCylB,IACED,EACFxlB,EAAMmZ,IAAkB6H,SAEjBhhB,EAAMmZ,KAGjB,OAAO7G,C,CA34FHoT,CAAU1lB,GA+5GhB,SAAwBA,GACtB,OAAOiY,GAAqB5Y,KAAKW,E,CA/5G7B2lB,CAAe3lB,E,CAYrB,SAAS4lB,GAAO5lB,EAAO6lB,GACrB,OAAO7lB,EAAQ6lB,C,CAWjB,SAASC,GAAQ9R,EAAQ9U,GACvB,OAAiB,MAAV8U,GAAkB5U,GAAeC,KAAK2U,EAAQ9U,E,CAWvD,SAAS6mB,GAAU/R,EAAQ9U,GACzB,OAAiB,MAAV8U,GAAkB9U,KAAOoY,GAAOtD,E,CA0BzC,SAASgS,GAAiBC,EAAQpU,EAAUa,GAS1C,IARA,IAAIqQ,EAAWrQ,EAAaD,GAAoBF,GAC5ChR,EAAS0kB,EAAO,GAAG1kB,OACnB2kB,EAAYD,EAAO1kB,OACnB4kB,EAAWD,EACXE,EAASpP,GAAMkP,GACfG,EAAYC,IACZhU,EAAS,GAEN6T,KAAY,CACjB,IAAInkB,EAAQikB,EAAOE,GACfA,GAAYtU,IACd7P,EAAQ2Q,GAAS3Q,EAAOyS,GAAU5C,KAEpCwU,EAAY5L,GAAUzY,EAAMT,OAAQ8kB,GACpCD,EAAOD,IAAazT,IAAeb,GAAatQ,GAAU,KAAOS,EAAMT,QAAU,KAC7E,IAAIsc,GAASsI,GAAYnkB,GACzB6C,C,CAEN7C,EAAQikB,EAAO,GAEf,IAAIlU,GAAQ,EACRwU,EAAOH,EAAO,GAElBlD,EACA,OAASnR,EAAQxQ,GAAU+Q,EAAO/Q,OAAS8kB,GAAW,CACpD,IAAIrmB,EAAQgC,EAAM+P,GACdoR,EAAWtR,EAAWA,EAAS7R,GAASA,EAG5C,GADAA,EAAQ0S,GAAyB,IAAV1S,EAAeA,EAAQ,IACxCumB,EACE3R,GAAS2R,EAAMpD,GACfJ,EAASzQ,EAAQ6Q,EAAUzQ,IAC5B,CAEL,IADAyT,EAAWD,IACFC,GAAU,CACjB,IAAItR,EAAQuR,EAAOD,GACnB,KAAMtR,EACED,GAASC,EAAOsO,GAChBJ,EAASkD,EAAOE,GAAWhD,EAAUzQ,IAE3C,SAASwQ,C,CAGTqD,GACFA,EAAKjkB,KAAK6gB,GAEZ7Q,EAAOhQ,KAAKtC,E,EAGhB,OAAOsS,C,CA+BT,SAASkU,GAAWxS,EAAQ1V,EAAM6D,GAGhC,IAAIsP,EAAiB,OADrBuC,EAASyS,GAAOzS,EADhB1V,EAAO4mB,GAAS5mB,EAAM0V,KAEMA,EAASA,EAAOmR,GAAMuB,GAAKpoB,KACvD,OAAe,MAARmT,EAAe5M,EAAYtC,GAAMkP,EAAMuC,EAAQ7R,E,CAUxD,SAASwkB,GAAgB3mB,GACvB,OAAOoc,GAAapc,IAAUulB,GAAWvlB,IAAUoJ,C,CAuCrD,SAASwd,GAAY5mB,EAAO6lB,EAAOtF,EAASC,EAAYC,GACtD,OAAIzgB,IAAU6lB,IAGD,MAAT7lB,GAA0B,MAAT6lB,IAAmBzJ,GAAapc,KAAWoc,GAAayJ,GACpE7lB,GAAUA,GAAS6lB,GAAUA,EAmBxC,SAAyB7R,EAAQ6R,EAAOtF,EAASC,EAAYqG,EAAWpG,GACtE,IAAIqG,EAAW7pB,GAAQ+W,GACnB+S,EAAW9pB,GAAQ4oB,GACnBmB,EAASF,EAAWzd,EAAW4X,GAAOjN,GACtCiT,EAASF,EAAW1d,EAAW4X,GAAO4E,GAKtCqB,GAHJF,EAASA,GAAU5d,EAAUS,EAAYmd,IAGhBnd,EACrBsd,GAHJF,EAASA,GAAU7d,EAAUS,EAAYod,IAGhBpd,EACrBud,EAAYJ,GAAUC,EAE1B,GAAIG,GAAalN,GAASlG,GAAS,CACjC,IAAKkG,GAAS2L,GACZ,OAAO,EAETiB,GAAW,EACXI,GAAW,C,CAEb,GAAIE,IAAcF,EAEhB,OADAzG,IAAUA,EAAQ,IAAIzC,IACf8I,GAAatV,GAAawC,GAC7BqT,GAAYrT,EAAQ6R,EAAOtF,EAASC,EAAYqG,EAAWpG,GA81EnE,SAAoBzM,EAAQ6R,EAAO7E,EAAKT,EAASC,EAAYqG,EAAWpG,GACtE,OAAQO,GACN,KAAK3W,EACH,GAAI2J,EAAQgO,YAAc6D,EAAM7D,YAC3BhO,EAAO+N,YAAc8D,EAAM9D,WAC9B,OAAO,EAET/N,EAASA,EAAO8N,OAChB+D,EAAQA,EAAM/D,OAEhB,KAAK1X,EACH,QAAI4J,EAAQgO,YAAc6D,EAAM7D,aAC3B6E,EAAU,IAAItO,GAAWvE,GAAS,IAAIuE,GAAWsN,KAKxD,KAAKvc,EACL,KAAKC,EACL,KAAKK,EAGH,OAAOuV,IAAInL,GAAS6R,GAEtB,KAAKrc,EACH,OAAOwK,EAAOzQ,MAAQsiB,EAAMtiB,MAAQyQ,EAAOxW,SAAWqoB,EAAMroB,QAE9D,KAAKuM,EACL,KAAKE,EAIH,OAAO+J,GAAW6R,EAAQ,GAE5B,KAAKlc,EACH,IAAI2d,EAAU3R,GAEhB,KAAK3L,EACH,IAAIud,EAxnLe,EAwnLHhH,EAGhB,GAFA+G,IAAYA,EAAUrR,IAElBjC,EAAO6B,MAAQgQ,EAAMhQ,OAAS0R,EAChC,OAAO,EAGT,IAAIhF,EAAU9B,EAAMP,IAAIlM,GACxB,GAAIuO,EACF,OAAOA,GAAWsD,EAEpBtF,GAloLqB,EAqoLrBE,EAAMvK,IAAIlC,EAAQ6R,GAClB,IAAIvT,EAAS+U,GAAYC,EAAQtT,GAASsT,EAAQzB,GAAQtF,EAASC,EAAYqG,EAAWpG,GAE1F,OADAA,EAAc,OAAEzM,GACT1B,EAET,KAAKpI,EACH,GAAI8R,GACF,OAAOA,GAAc3c,KAAK2U,IAAWgI,GAAc3c,KAAKwmB,GAG9D,OAAO,C,CA35ED2B,CAAWxT,EAAQ6R,EAAOmB,EAAQzG,EAASC,EAAYqG,EAAWpG,GAExE,KAvvGuB,EAuvGjBF,GAAiC,CACrC,IAAIkH,EAAeP,GAAY9nB,GAAeC,KAAK2U,EAAQ,eACvD0T,EAAeP,GAAY/nB,GAAeC,KAAKwmB,EAAO,eAE1D,GAAI4B,GAAgBC,EAAc,CAChC,IAAIC,EAAeF,EAAezT,EAAOhU,QAAUgU,EAC/C4T,EAAeF,EAAe7B,EAAM7lB,QAAU6lB,EAGlD,OADApF,IAAUA,EAAQ,IAAIzC,IACf6I,EAAUc,EAAcC,EAAcrH,EAASC,EAAYC,E,EAGtE,QAAK2G,IAGL3G,IAAUA,EAAQ,IAAIzC,IA05ExB,SAAsBhK,EAAQ6R,EAAOtF,EAASC,EAAYqG,EAAWpG,GACnE,IAAI8G,EAjqLmB,EAiqLPhH,EACZsH,EAAWnF,GAAW1O,GACtB8T,EAAYD,EAAStmB,OAErB2kB,EADWxD,GAAWmD,GACDtkB,OAEzB,GAAIumB,GAAa5B,IAAcqB,EAC7B,OAAO,EAET,IAAIxV,EAAQ+V,EACZ,KAAO/V,KAAS,CACd,IAAI7S,EAAM2oB,EAAS9V,GACnB,KAAMwV,EAAYroB,KAAO2mB,EAAQzmB,GAAeC,KAAKwmB,EAAO3mB,IAC1D,OAAO,C,CAIX,IAAI6oB,EAAatH,EAAMP,IAAIlM,GACvBgU,EAAavH,EAAMP,IAAI2F,GAC3B,GAAIkC,GAAcC,EAChB,OAAOD,GAAclC,GAASmC,GAAchU,EAE9C,IAAI1B,GAAS,EACbmO,EAAMvK,IAAIlC,EAAQ6R,GAClBpF,EAAMvK,IAAI2P,EAAO7R,GAEjB,IAAIiU,EAAWV,EACf,OAASxV,EAAQ+V,GAAW,CAE1B,IAAIxI,EAAWtL,EADf9U,EAAM2oB,EAAS9V,IAEXmW,EAAWrC,EAAM3mB,GAErB,GAAIshB,EACF,IAAI2H,EAAWZ,EACX/G,EAAW0H,EAAU5I,EAAUpgB,EAAK2mB,EAAO7R,EAAQyM,GACnDD,EAAWlB,EAAU4I,EAAUhpB,EAAK8U,EAAQ6R,EAAOpF,GAGzD,KAAM0H,IAAatjB,EACVya,IAAa4I,GAAYrB,EAAUvH,EAAU4I,EAAU3H,EAASC,EAAYC,GAC7E0H,GACD,CACL7V,GAAS,EACT,K,CAEF2V,IAAaA,EAAkB,eAAP/oB,E,CAE1B,GAAIoT,IAAW2V,EAAU,CACvB,IAAIG,EAAUpU,EAAO6M,YACjBwH,EAAUxC,EAAMhF,YAGhBuH,GAAWC,KACV,gBAAiBrU,MAAU,gBAAiB6R,IACzB,mBAAXuC,GAAyBA,aAAmBA,GACjC,mBAAXC,GAAyBA,aAAmBA,IACvD/V,GAAS,E,CAKb,OAFAmO,EAAc,OAAEzM,GAChByM,EAAc,OAAEoF,GACTvT,C,CAv9EAgW,CAAatU,EAAQ6R,EAAOtF,EAASC,EAAYqG,EAAWpG,G,CA3D5D8H,CAAgBvoB,EAAO6lB,EAAOtF,EAASC,EAAYoG,GAAanG,G,CAmFzE,SAAS+H,GAAYxU,EAAQ1I,EAAQmd,EAAWjI,GAC9C,IAAIzO,EAAQ0W,EAAUlnB,OAClBA,EAASwQ,EACT2W,GAAgBlI,EAEpB,GAAc,MAAVxM,EACF,OAAQzS,EAGV,IADAyS,EAASsD,GAAOtD,GACTjC,KAAS,CACd,IAAIkM,EAAOwK,EAAU1W,GACrB,GAAI2W,GAAiBzK,EAAK,GAClBA,EAAK,KAAOjK,EAAOiK,EAAK,MACtBA,EAAK,KAAMjK,GAEnB,OAAO,C,CAGX,OAASjC,EAAQxQ,GAAQ,CAEvB,IAAIrC,GADJ+e,EAAOwK,EAAU1W,IACF,GACXuN,EAAWtL,EAAO9U,GAClBypB,EAAW1K,EAAK,GAEpB,GAAIyK,GAAgBzK,EAAK,IACvB,GAAIqB,IAAaza,KAAe3F,KAAO8U,GACrC,OAAO,MAEJ,CACL,IAAIyM,EAAQ,IAAIzC,GAChB,GAAIwC,EACF,IAAIlO,EAASkO,EAAWlB,EAAUqJ,EAAUzpB,EAAK8U,EAAQ1I,EAAQmV,GAEnE,KAAMnO,IAAWzN,EACT+hB,GAAY+B,EAAUrJ,EAAUsJ,EAA+CpI,EAAYC,GAC3FnO,GAEN,OAAO,C,EAIb,OAAO,C,CAWT,SAASuW,GAAa7oB,GACpB,SAAK0c,GAAS1c,KA05FEyR,EA15FiBzR,EA25FxB+X,IAAeA,MAActG,MAx5FxBuT,GAAWhlB,GAASoY,GAAaxL,IAChC8I,KAAKgG,GAAS1b,IAs5F/B,IAAkByR,C,CA12FlB,SAASqX,GAAa9oB,GAGpB,MAAoB,mBAATA,EACFA,EAEI,MAATA,EACK+oB,GAEW,iBAAT/oB,EACF/C,GAAQ+C,GACXgpB,GAAoBhpB,EAAM,GAAIA,EAAM,IACpCipB,GAAYjpB,GAEXkpB,GAASlpB,E,CAUlB,SAASmpB,GAASnV,GAChB,IAAKoV,GAAYpV,GACf,OAAOsG,GAAWtG,GAEpB,IAAI1B,EAAS,GACb,IAAK,IAAIpT,KAAOoY,GAAOtD,GACjB5U,GAAeC,KAAK2U,EAAQ9U,IAAe,eAAPA,GACtCoT,EAAOhQ,KAAKpD,GAGhB,OAAOoT,C,CAUT,SAAS+W,GAAWrV,GAClB,IAAK0I,GAAS1I,GACZ,OA09FJ,SAAsBA,GACpB,IAAI1B,EAAS,GACb,GAAc,MAAV0B,EACF,IAAK,IAAI9U,KAAOoY,GAAOtD,GACrB1B,EAAOhQ,KAAKpD,GAGhB,OAAOoT,C,CAj+FEgX,CAAatV,GAEtB,IAAIuV,EAAUH,GAAYpV,GACtB1B,EAAS,GAEb,IAAK,IAAIpT,KAAO8U,GACD,eAAP9U,IAAyBqqB,GAAYnqB,GAAeC,KAAK2U,EAAQ9U,KACrEoT,EAAOhQ,KAAKpD,GAGhB,OAAOoT,C,CAYT,SAASkX,GAAOxpB,EAAO6lB,GACrB,OAAO7lB,EAAQ6lB,C,CAWjB,SAAS4D,GAAQnW,EAAYzB,GAC3B,IAAIE,GAAQ,EACRO,EAASoX,GAAYpW,GAAc0D,GAAM1D,EAAW/R,QAAU,GAKlE,OAHAke,GAASnM,GAAY,SAAStT,EAAOd,EAAKoU,GACxChB,IAASP,GAASF,EAAS7R,EAAOd,EAAKoU,E,IAElChB,C,CAUT,SAAS2W,GAAY3d,GACnB,IAAImd,EAAYkB,GAAare,GAC7B,OAAwB,GAApBmd,EAAUlnB,QAAeknB,EAAU,GAAG,GACjCmB,GAAwBnB,EAAU,GAAG,GAAIA,EAAU,GAAG,IAExD,SAASzU,GACd,OAAOA,IAAW1I,GAAUkd,GAAYxU,EAAQ1I,EAAQmd,E,EAY5D,SAASO,GAAoB1qB,EAAMqqB,GACjC,OAAIkB,GAAMvrB,IAASwrB,GAAmBnB,GAC7BiB,GAAwBzE,GAAM7mB,GAAOqqB,GAEvC,SAAS3U,GACd,IAAIsL,EAAWY,GAAIlM,EAAQ1V,GAC3B,OAAOghB,IAAcza,GAAaya,IAAaqJ,EAC3CoB,GAAM/V,EAAQ1V,GACdsoB,GAAY+B,EAAUrJ,EAAUsJ,E,EAexC,SAASoB,GAAUhW,EAAQ1I,EAAQ2e,EAAUzJ,EAAYC,GACnDzM,IAAW1I,GAGfsZ,GAAQtZ,GAAQ,SAASqd,EAAUzpB,GAEjC,GADAuhB,IAAUA,EAAQ,IAAIzC,IAClBtB,GAASiM,IA+BjB,SAAuB3U,EAAQ1I,EAAQpM,EAAK+qB,EAAUC,EAAW1J,EAAYC,GAC3E,IAAInB,EAAW6K,GAAQnW,EAAQ9U,GAC3BypB,EAAWwB,GAAQ7e,EAAQpM,GAC3BqjB,EAAU9B,EAAMP,IAAIyI,GAExB,GAAIpG,EAEF,YADArD,GAAiBlL,EAAQ9U,EAAKqjB,GAGhC,IAAI6H,EAAW5J,EACXA,EAAWlB,EAAUqJ,EAAWzpB,EAAM,GAAK8U,EAAQ1I,EAAQmV,GAC3D5b,EAEAme,EAAWoH,IAAavlB,EAE5B,GAAIme,EAAU,CACZ,IAAI5E,EAAQnhB,GAAQ0rB,GAChBpK,GAAUH,GAASlE,GAASyO,GAC5B0B,GAAWjM,IAAUG,GAAU/M,GAAamX,GAEhDyB,EAAWzB,EACPvK,GAASG,GAAU8L,EACjBptB,GAAQqiB,GACV8K,EAAW9K,EAEJgL,GAAkBhL,GACzB8K,EAAWrL,GAAUO,GAEdf,GACPyE,GAAW,EACXoH,EAAWjJ,GAAYwH,GAAU,IAE1B0B,GACPrH,GAAW,EACXoH,EAAWlI,GAAgByG,GAAU,IAGrCyB,EAAW,GAGNG,GAAc5B,IAAarK,GAAYqK,IAC9CyB,EAAW9K,EACPhB,GAAYgB,GACd8K,EAAWI,GAAclL,GAEjB5C,GAAS4C,KAAa0F,GAAW1F,KACzC8K,EAAWhJ,GAAgBuH,KAI7B3F,GAAW,C,CAGXA,IAEFvC,EAAMvK,IAAIyS,EAAUyB,GACpBF,EAAUE,EAAUzB,EAAUsB,EAAUzJ,EAAYC,GACpDA,EAAc,OAAEkI,IAElBzJ,GAAiBlL,EAAQ9U,EAAKkrB,E,CAzF1BK,CAAczW,EAAQ1I,EAAQpM,EAAK+qB,EAAUD,GAAWxJ,EAAYC,OAEjE,CACH,IAAI2J,EAAW5J,EACXA,EAAW2J,GAAQnW,EAAQ9U,GAAMypB,EAAWzpB,EAAM,GAAK8U,EAAQ1I,EAAQmV,GACvE5b,EAEAulB,IAAavlB,IACfulB,EAAWzB,GAEbzJ,GAAiBlL,EAAQ9U,EAAKkrB,E,IAE/B7I,G,CAwFL,SAASmJ,GAAQ1oB,EAAOqS,GACtB,IAAI9S,EAASS,EAAMT,OACnB,GAAKA,EAIL,OAAOmd,GADPrK,GAAKA,EAAI,EAAI9S,EAAS,EACJA,GAAUS,EAAMqS,GAAKxP,C,CAYzC,SAAS8lB,GAAYrX,EAAYsX,EAAWC,GAExCD,EADEA,EAAUrpB,OACAoR,GAASiY,GAAW,SAAS/Y,GACvC,OAAI5U,GAAQ4U,GACH,SAAS7R,GACd,OAAOilB,GAAQjlB,EAA2B,IAApB6R,EAAStQ,OAAesQ,EAAS,GAAKA,E,EAGzDA,C,IAGG,CAACkX,IAGf,IAAIhX,GAAQ,EACZ6Y,EAAYjY,GAASiY,EAAWnW,GAAUqW,OAE1C,IAAIxY,EAASmX,GAAQnW,GAAY,SAAStT,EAAOd,EAAKoU,GACpD,IAAIyX,EAAWpY,GAASiY,GAAW,SAAS/Y,GAC1C,OAAOA,EAAS7R,E,IAElB,MAAO,CAAE+qB,SAAYA,EAAUhZ,QAAWA,EAAO/R,MAASA,E,IAG5D,OA5xFJ,SAAoBgC,EAAOgpB,GACzB,IAAIzpB,EAASS,EAAMT,OAGnB,IADAS,EAAMipB,KAAKD,GACJzpB,KACLS,EAAMT,GAAUS,EAAMT,GAAQvB,MAEhC,OAAOgC,C,CAqxFEkpB,CAAW5Y,GAAQ,SAAS0B,EAAQ6R,GACzC,OA04BJ,SAAyB7R,EAAQ6R,EAAOgF,GACtC,IAAI9Y,GAAQ,EACRoZ,EAAcnX,EAAO+W,SACrBK,EAAcvF,EAAMkF,SACpBxpB,EAAS4pB,EAAY5pB,OACrB8pB,EAAeR,EAAOtpB,OAE1B,OAASwQ,EAAQxQ,GAAQ,CACvB,IAAI+Q,EAASgZ,GAAiBH,EAAYpZ,GAAQqZ,EAAYrZ,IAC9D,GAAIO,EACF,OAAIP,GAASsZ,EACJ/Y,EAGFA,GAAmB,QADduY,EAAO9Y,IACgB,EAAK,E,CAU5C,OAAOiC,EAAOjC,MAAQ8T,EAAM9T,K,CAl6BnBwZ,CAAgBvX,EAAQ6R,EAAOgF,E,IA4B1C,SAASW,GAAWxX,EAAQgM,EAAO7N,GAKjC,IAJA,IAAIJ,GAAQ,EACRxQ,EAASye,EAAMze,OACf+Q,EAAS,KAEJP,EAAQxQ,GAAQ,CACvB,IAAIjD,EAAO0hB,EAAMjO,GACb/R,EAAQilB,GAAQjR,EAAQ1V,GAExB6T,EAAUnS,EAAO1B,IACnBmtB,GAAQnZ,EAAQ4S,GAAS5mB,EAAM0V,GAAShU,E,CAG5C,OAAOsS,C,CA2BT,SAASoZ,GAAY1pB,EAAO6Q,EAAQhB,EAAUa,GAC5C,IAAIiZ,EAAUjZ,EAAamB,GAAkBrB,GACzCT,GAAQ,EACRxQ,EAASsR,EAAOtR,OAChBglB,EAAOvkB,EAQX,IANIA,IAAU6Q,IACZA,EAASkM,GAAUlM,IAEjBhB,IACF0U,EAAO5T,GAAS3Q,EAAOyS,GAAU5C,OAE1BE,EAAQxQ,GAKf,IAJA,IAAIkS,EAAY,EACZzT,EAAQ6S,EAAOd,GACfoR,EAAWtR,EAAWA,EAAS7R,GAASA,GAEpCyT,EAAYkY,EAAQpF,EAAMpD,EAAU1P,EAAWf,KAAe,GAChE6T,IAASvkB,GACX8W,GAAOzZ,KAAKknB,EAAM9S,EAAW,GAE/BqF,GAAOzZ,KAAK2C,EAAOyR,EAAW,GAGlC,OAAOzR,C,CAYT,SAAS4pB,GAAW5pB,EAAO6pB,GAIzB,IAHA,IAAItqB,EAASS,EAAQ6pB,EAAQtqB,OAAS,EAClC6U,EAAY7U,EAAS,EAElBA,KAAU,CACf,IAAIwQ,EAAQ8Z,EAAQtqB,GACpB,GAAIA,GAAU6U,GAAarE,IAAU+Z,EAAU,CAC7C,IAAIA,EAAW/Z,EACX2M,GAAQ3M,GACV+G,GAAOzZ,KAAK2C,EAAO+P,EAAO,GAE1Bga,GAAU/pB,EAAO+P,E,EAIvB,OAAO/P,C,CAYT,SAAS4c,GAAWwB,EAAOC,GACzB,OAAOD,EAAQvG,GAAYgB,MAAkBwF,EAAQD,EAAQ,G,CAkC/D,SAAS4L,GAAWzX,EAAQF,GAC1B,IAAI/B,EAAS,GACb,IAAKiC,GAAUF,EAAI,GAAKA,EAAIrL,EAC1B,OAAOsJ,EAIT,GACM+B,EAAI,IACN/B,GAAUiC,IAEZF,EAAIwF,GAAYxF,EAAI,MAElBE,GAAUA,SAELF,GAET,OAAO/B,C,CAWT,SAAS2Z,GAASxa,EAAMnL,GACtB,OAAO4lB,GAAYC,GAAS1a,EAAMnL,EAAOyiB,IAAWtX,EAAO,G,CAU7D,SAAS2a,GAAW9Y,GAClB,OAAOqL,GAAY9L,GAAOS,G,CAW5B,SAAS+Y,GAAe/Y,EAAYe,GAClC,IAAIrS,EAAQ6Q,GAAOS,GACnB,OAAOwL,GAAY9c,EAAOgd,GAAU3K,EAAG,EAAGrS,EAAMT,Q,CAalD,SAASkqB,GAAQzX,EAAQ1V,EAAM0B,EAAOwgB,GACpC,IAAK9D,GAAS1I,GACZ,OAAOA,EAST,IALA,IAAIjC,GAAQ,EACRxQ,GAHJjD,EAAO4mB,GAAS5mB,EAAM0V,IAGJzS,OACd6U,EAAY7U,EAAS,EACrB+qB,EAAStY,EAEI,MAAVsY,KAAoBva,EAAQxQ,GAAQ,CACzC,IAAIrC,EAAMimB,GAAM7mB,EAAKyT,IACjBqY,EAAWpqB,EAEf,GAAY,cAARd,GAA+B,gBAARA,GAAiC,cAARA,EAClD,OAAO8U,EAGT,GAAIjC,GAASqE,EAAW,CACtB,IAAIkJ,EAAWgN,EAAOptB,IACtBkrB,EAAW5J,EAAaA,EAAWlB,EAAUpgB,EAAKotB,GAAUznB,KAC3CA,IACfulB,EAAW1N,GAAS4C,GAChBA,EACCZ,GAAQpgB,EAAKyT,EAAQ,IAAM,GAAK,G,CAGzCsN,GAAYiN,EAAQptB,EAAKkrB,GACzBkC,EAASA,EAAOptB,E,CAElB,OAAO8U,C,CAWT,IAAIuY,GAAehR,GAAqB,SAAS9J,EAAMwM,GAErD,OADA1C,GAAQrF,IAAIzE,EAAMwM,GACXxM,C,EAFoBsX,GAazByD,GAAmBnT,GAA4B,SAAS5H,EAAM8C,GAChE,OAAO8E,GAAe5H,EAAM,WAAY,CACtCmO,cAAgB,EAChBC,YAAc,EACd7f,MAASysB,GAASlY,GAClBuL,UAAY,G,EALwBiJ,GAgBxC,SAAS2D,GAAYpZ,GACnB,OAAOwL,GAAYjM,GAAOS,G,CAY5B,SAASqZ,GAAU3qB,EAAOsE,EAAOJ,GAC/B,IAAI6L,GAAQ,EACRxQ,EAASS,EAAMT,OAEf+E,EAAQ,IACVA,GAASA,EAAQ/E,EAAS,EAAKA,EAAS+E,IAE1CJ,EAAMA,EAAM3E,EAASA,EAAS2E,GACpB,IACRA,GAAO3E,GAETA,EAAS+E,EAAQJ,EAAM,EAAKA,EAAOI,IAAW,EAC9CA,KAAW,EAGX,IADA,IAAIgM,EAAS0E,GAAMzV,KACVwQ,EAAQxQ,GACf+Q,EAAOP,GAAS/P,EAAM+P,EAAQzL,GAEhC,OAAOgM,C,CAYT,SAASsa,GAAStZ,EAAYnB,GAC5B,IAAIG,EAMJ,OAJAmN,GAASnM,GAAY,SAAStT,EAAO+R,EAAOuB,GAE1C,QADAhB,EAASH,EAAUnS,EAAO+R,EAAOuB,G,MAG1BhB,C,CAeX,SAASua,GAAgB7qB,EAAOhC,EAAO8sB,GACrC,IAAIC,EAAM,EACNC,EAAgB,MAAThrB,EAAgB+qB,EAAM/qB,EAAMT,OAEvC,GAAoB,iBAATvB,GAAqBA,GAAUA,GAASgtB,GAn/H3B9jB,WAm/H0D,CAChF,KAAO6jB,EAAMC,GAAM,CACjB,IAAIC,EAAMF,EAAOC,IAAU,EACvB7J,EAAWnhB,EAAMirB,GAEJ,OAAb9J,IAAsBmB,GAASnB,KAC9B2J,EAAc3J,GAAYnjB,EAAUmjB,EAAWnjB,GAClD+sB,EAAME,EAAM,EAEZD,EAAOC,C,CAGX,OAAOD,C,CAET,OAAOE,GAAkBlrB,EAAOhC,EAAO+oB,GAAU+D,E,CAgBnD,SAASI,GAAkBlrB,EAAOhC,EAAO6R,EAAUib,GACjD,IAAIC,EAAM,EACNC,EAAgB,MAAThrB,EAAgB,EAAIA,EAAMT,OACrC,GAAa,IAATyrB,EACF,OAAO,EAST,IALA,IAAIG,GADJntB,EAAQ6R,EAAS7R,KACQA,EACrBotB,EAAsB,OAAVptB,EACZqtB,EAAc/I,GAAStkB,GACvBstB,EAAiBttB,IAAU6E,EAExBkoB,EAAMC,GAAM,CACjB,IAAIC,EAAMpT,IAAakT,EAAMC,GAAQ,GACjC7J,EAAWtR,EAAS7P,EAAMirB,IAC1BM,EAAepK,IAAate,EAC5B2oB,EAAyB,OAAbrK,EACZsK,EAAiBtK,GAAaA,EAC9BuK,EAAcpJ,GAASnB,GAE3B,GAAIgK,EACF,IAAIQ,EAASb,GAAcW,OAE3BE,EADSL,EACAG,IAAmBX,GAAcS,GACjCH,EACAK,GAAkBF,IAAiBT,IAAeU,GAClDH,EACAI,GAAkBF,IAAiBC,IAAcV,IAAeY,IAChEF,IAAaE,IAGbZ,EAAc3J,GAAYnjB,EAAUmjB,EAAWnjB,GAEtD2tB,EACFZ,EAAME,EAAM,EAEZD,EAAOC,C,CAGX,OAAOxS,GAAUuS,EA1jIC9jB,W,CAskIpB,SAAS0kB,GAAe5rB,EAAO6P,GAM7B,IALA,IAAIE,GAAQ,EACRxQ,EAASS,EAAMT,OACf8Q,EAAW,EACXC,EAAS,KAEJP,EAAQxQ,GAAQ,CACvB,IAAIvB,EAAQgC,EAAM+P,GACdoR,EAAWtR,EAAWA,EAAS7R,GAASA,EAE5C,IAAK+R,IAAUoN,GAAGgE,EAAUoD,GAAO,CACjC,IAAIA,EAAOpD,EACX7Q,EAAOD,KAAwB,IAAVrS,EAAc,EAAIA,C,EAG3C,OAAOsS,C,CAWT,SAASub,GAAa7tB,GACpB,MAAoB,iBAATA,EACFA,EAELskB,GAAStkB,GACJiJ,GAEDjJ,C,CAWV,SAAS8tB,GAAa9tB,GAEpB,GAAoB,iBAATA,EACT,OAAOA,EAET,GAAI/C,GAAQ+C,GAEV,OAAO2S,GAAS3S,EAAO8tB,IAAgB,GAEzC,GAAIxJ,GAAStkB,GACX,OAAOkc,GAAiBA,GAAe7c,KAAKW,GAAS,GAEvD,IAAIsS,EAAUtS,EAAQ,GACtB,MAAkB,KAAXsS,GAAkB,EAAKtS,IAAU,IAAa,KAAOsS,C,CAY9D,SAASyb,GAAS/rB,EAAO6P,EAAUa,GACjC,IAAIX,GAAQ,EACRgR,EAAWxQ,GACXhR,EAASS,EAAMT,OACfyhB,GAAW,EACX1Q,EAAS,GACTiU,EAAOjU,EAEX,GAAII,EACFsQ,GAAW,EACXD,EAAWtQ,QAER,GAAIlR,GAjtIU,IAitIkB,CACnC,IAAI2U,EAAMrE,EAAW,KAAOmc,GAAUhsB,GACtC,GAAIkU,EACF,OAAOD,GAAWC,GAEpB8M,GAAW,EACXD,EAAWnO,GACX2R,EAAO,IAAI1I,E,MAGX0I,EAAO1U,EAAW,GAAKS,EAEzB4Q,EACA,OAASnR,EAAQxQ,GAAQ,CACvB,IAAIvB,EAAQgC,EAAM+P,GACdoR,EAAWtR,EAAWA,EAAS7R,GAASA,EAG5C,GADAA,EAAQ0S,GAAyB,IAAV1S,EAAeA,EAAQ,EAC1CgjB,GAAYG,GAAaA,EAAU,CAErC,IADA,IAAI8K,EAAY1H,EAAKhlB,OACd0sB,KACL,GAAI1H,EAAK0H,KAAe9K,EACtB,SAASD,EAGTrR,GACF0U,EAAKjkB,KAAK6gB,GAEZ7Q,EAAOhQ,KAAKtC,E,MAEJ+iB,EAASwD,EAAMpD,EAAUzQ,KAC7B6T,IAASjU,GACXiU,EAAKjkB,KAAK6gB,GAEZ7Q,EAAOhQ,KAAKtC,G,CAGhB,OAAOsS,C,CAWT,SAASyZ,GAAU/X,EAAQ1V,GAGzB,OAAiB,OADjB0V,EAASyS,GAAOzS,EADhB1V,EAAO4mB,GAAS5mB,EAAM0V,aAEUA,EAAOmR,GAAMuB,GAAKpoB,I,CAapD,SAAS4vB,GAAWla,EAAQ1V,EAAM6vB,EAAS3N,GACzC,OAAOiL,GAAQzX,EAAQ1V,EAAM6vB,EAAQlJ,GAAQjR,EAAQ1V,IAAQkiB,E,CAc/D,SAAS4N,GAAUpsB,EAAOmQ,EAAWkc,EAAQ3a,GAI3C,IAHA,IAAInS,EAASS,EAAMT,OACfwQ,EAAQ2B,EAAYnS,GAAS,GAEzBmS,EAAY3B,MAAYA,EAAQxQ,IACtC4Q,EAAUnQ,EAAM+P,GAAQA,EAAO/P,KAEjC,OAAOqsB,EACH1B,GAAU3qB,EAAQ0R,EAAY,EAAI3B,EAAS2B,EAAY3B,EAAQ,EAAIxQ,GACnEorB,GAAU3qB,EAAQ0R,EAAY3B,EAAQ,EAAI,EAAK2B,EAAYnS,EAASwQ,E,CAa1E,SAASuc,GAAiBtuB,EAAOuuB,GAC/B,IAAIjc,EAAStS,EAIb,OAHIsS,aAAkB+J,KACpB/J,EAASA,EAAOtS,SAEX+S,GAAYwb,GAAS,SAASjc,EAAQkc,GAC3C,OAAOA,EAAO/c,KAAKlP,MAAMisB,EAAO9c,QAASkB,GAAU,CAACN,GAASkc,EAAOrsB,M,GACnEmQ,E,CAaL,SAASmc,GAAQxI,EAAQpU,EAAUa,GACjC,IAAInR,EAAS0kB,EAAO1kB,OACpB,GAAIA,EAAS,EACX,OAAOA,EAASwsB,GAAS9H,EAAO,IAAM,GAKxC,IAHA,IAAIlU,GAAQ,EACRO,EAAS0E,GAAMzV,KAEVwQ,EAAQxQ,GAIf,IAHA,IAAIS,EAAQikB,EAAOlU,GACfoU,GAAW,IAENA,EAAW5kB,GACd4kB,GAAYpU,IACdO,EAAOP,GAAS+Q,GAAexQ,EAAOP,IAAU/P,EAAOikB,EAAOE,GAAWtU,EAAUa,IAIzF,OAAOqb,GAASvJ,GAAYlS,EAAQ,GAAIT,EAAUa,E,CAYpD,SAASgc,GAAc/Z,EAAO9B,EAAQ8b,GAMpC,IALA,IAAI5c,GAAQ,EACRxQ,EAASoT,EAAMpT,OACfqtB,EAAa/b,EAAOtR,OACpB+Q,EAAS,KAEJP,EAAQxQ,GAAQ,CACvB,IAAIvB,EAAQ+R,EAAQ6c,EAAa/b,EAAOd,GAASlN,EACjD8pB,EAAWrc,EAAQqC,EAAM5C,GAAQ/R,E,CAEnC,OAAOsS,C,CAUT,SAASuc,GAAoB7uB,GAC3B,OAAOsqB,GAAkBtqB,GAASA,EAAQ,E,CAU5C,SAAS8uB,GAAa9uB,GACpB,MAAuB,mBAATA,EAAsBA,EAAQ+oB,E,CAW9C,SAAS7D,GAASllB,EAAOgU,GACvB,OAAI/W,GAAQ+C,GACHA,EAEF6pB,GAAM7pB,EAAOgU,GAAU,CAAChU,GAAS+uB,GAAalvB,GAASG,G,CAYhE,IAAIgvB,GAAW/C,GAWf,SAASgD,GAAUjtB,EAAOsE,EAAOJ,GAC/B,IAAI3E,EAASS,EAAMT,OAEnB,OADA2E,EAAMA,IAAQrB,EAAYtD,EAAS2E,GAC1BI,GAASJ,GAAO3E,EAAUS,EAAQ2qB,GAAU3qB,EAAOsE,EAAOJ,E,CASrE,IAAIjF,GAAesY,IAAmB,SAAS2V,GAC7C,OAAOloB,GAAK/F,aAAaiuB,E,EAW3B,SAAS/N,GAAYW,EAAQpB,GAC3B,GAAIA,EACF,OAAOoB,EAAOpjB,QAEhB,IAAI6C,EAASugB,EAAOvgB,OAChB+Q,EAASkG,GAAcA,GAAYjX,GAAU,IAAIugB,EAAOjB,YAAYtf,GAGxE,OADAugB,EAAOqN,KAAK7c,GACLA,C,CAUT,SAASsP,GAAiBwN,GACxB,IAAI9c,EAAS,IAAI8c,EAAYvO,YAAYuO,EAAYpN,YAErD,OADA,IAAIzJ,GAAWjG,GAAQ4D,IAAI,IAAIqC,GAAW6W,IACnC9c,C,CAgDT,SAAS4P,GAAgBmN,EAAY3O,GACnC,IAAIoB,EAASpB,EAASkB,GAAiByN,EAAWvN,QAAUuN,EAAWvN,OACvE,OAAO,IAAIuN,EAAWxO,YAAYiB,EAAQuN,EAAWtN,WAAYsN,EAAW9tB,O,CAW9E,SAAS+pB,GAAiBtrB,EAAO6lB,GAC/B,GAAI7lB,IAAU6lB,EAAO,CACnB,IAAIyJ,EAAetvB,IAAU6E,EACzBuoB,EAAsB,OAAVptB,EACZuvB,EAAiBvvB,GAAUA,EAC3BqtB,EAAc/I,GAAStkB,GAEvButB,EAAe1H,IAAUhhB,EACzB2oB,EAAsB,OAAV3H,EACZ4H,EAAiB5H,GAAUA,EAC3B6H,EAAcpJ,GAASuB,GAE3B,IAAM2H,IAAcE,IAAgBL,GAAertB,EAAQ6lB,GACtDwH,GAAeE,GAAgBE,IAAmBD,IAAcE,GAChEN,GAAaG,GAAgBE,IAC5B6B,GAAgB7B,IACjB8B,EACH,OAAO,EAET,IAAMnC,IAAcC,IAAgBK,GAAe1tB,EAAQ6lB,GACtD6H,GAAe4B,GAAgBC,IAAmBnC,IAAcC,GAChEG,GAAa8B,GAAgBC,IAC5BhC,GAAgBgC,IACjB9B,EACH,OAAO,C,CAGX,OAAO,C,CAuDT,SAAS+B,GAAYrtB,EAAMstB,EAAUC,EAASC,GAU5C,IATA,IAAIC,GAAY,EACZC,EAAa1tB,EAAKZ,OAClBuuB,EAAgBJ,EAAQnuB,OACxBwuB,GAAY,EACZC,EAAaP,EAASluB,OACtB0uB,EAAc1V,GAAUsV,EAAaC,EAAe,GACpDxd,EAAS0E,GAAMgZ,EAAaC,GAC5BC,GAAeP,IAEVI,EAAYC,GACnB1d,EAAOyd,GAAaN,EAASM,GAE/B,OAASH,EAAYE,IACfI,GAAeN,EAAYC,KAC7Bvd,EAAOod,EAAQE,IAAcztB,EAAKytB,IAGtC,KAAOK,KACL3d,EAAOyd,KAAe5tB,EAAKytB,KAE7B,OAAOtd,C,CAcT,SAAS6d,GAAiBhuB,EAAMstB,EAAUC,EAASC,GAWjD,IAVA,IAAIC,GAAY,EACZC,EAAa1tB,EAAKZ,OAClB6uB,GAAe,EACfN,EAAgBJ,EAAQnuB,OACxB8uB,GAAa,EACbC,EAAcb,EAASluB,OACvB0uB,EAAc1V,GAAUsV,EAAaC,EAAe,GACpDxd,EAAS0E,GAAMiZ,EAAcK,GAC7BJ,GAAeP,IAEVC,EAAYK,GACnB3d,EAAOsd,GAAaztB,EAAKytB,GAG3B,IADA,IAAI9c,EAAS8c,IACJS,EAAaC,GACpBhe,EAAOQ,EAASud,GAAcZ,EAASY,GAEzC,OAASD,EAAeN,IAClBI,GAAeN,EAAYC,KAC7Bvd,EAAOQ,EAAS4c,EAAQU,IAAiBjuB,EAAKytB,MAGlD,OAAOtd,C,CAWT,SAASyM,GAAUzT,EAAQtJ,GACzB,IAAI+P,GAAQ,EACRxQ,EAAS+J,EAAO/J,OAGpB,IADAS,IAAUA,EAAQgV,GAAMzV,MACfwQ,EAAQxQ,GACfS,EAAM+P,GAASzG,EAAOyG,GAExB,OAAO/P,C,CAaT,SAAS2d,GAAWrU,EAAQqJ,EAAOX,EAAQwM,GACzC,IAAI+P,GAASvc,EACbA,IAAWA,EAAS,IAKpB,IAHA,IAAIjC,GAAQ,EACRxQ,EAASoT,EAAMpT,SAEVwQ,EAAQxQ,GAAQ,CACvB,IAAIrC,EAAMyV,EAAM5C,GAEZqY,EAAW5J,EACXA,EAAWxM,EAAO9U,GAAMoM,EAAOpM,GAAMA,EAAK8U,EAAQ1I,GAClDzG,EAEAulB,IAAavlB,IACfulB,EAAW9e,EAAOpM,IAEhBqxB,EACFnR,GAAgBpL,EAAQ9U,EAAKkrB,GAE7B/K,GAAYrL,EAAQ9U,EAAKkrB,E,CAG7B,OAAOpW,C,CAmCT,SAASwc,GAAiB5e,EAAQ6e,GAChC,OAAO,SAASnd,EAAYzB,GAC1B,IAAIJ,EAAOxU,GAAQqW,GAAc3B,GAAkB6N,GAC/C1N,EAAc2e,EAAcA,IAAgB,GAEhD,OAAOhf,EAAK6B,EAAY1B,EAAQkZ,GAAYjZ,EAAU,GAAIC,E,EAW9D,SAAS4e,GAAeC,GACtB,OAAO1E,IAAS,SAASjY,EAAQ4c,GAC/B,IAAI7e,GAAQ,EACRxQ,EAASqvB,EAAQrvB,OACjBif,EAAajf,EAAS,EAAIqvB,EAAQrvB,EAAS,GAAKsD,EAChDgsB,EAAQtvB,EAAS,EAAIqvB,EAAQ,GAAK/rB,EAWtC,IATA2b,EAAamQ,EAAUpvB,OAAS,GAA0B,mBAAdif,GACvCjf,IAAUif,GACX3b,EAEAgsB,GAASC,GAAeF,EAAQ,GAAIA,EAAQ,GAAIC,KAClDrQ,EAAajf,EAAS,EAAIsD,EAAY2b,EACtCjf,EAAS,GAEXyS,EAASsD,GAAOtD,KACPjC,EAAQxQ,GAAQ,CACvB,IAAI+J,EAASslB,EAAQ7e,GACjBzG,GACFqlB,EAAS3c,EAAQ1I,EAAQyG,EAAOyO,E,CAGpC,OAAOxM,C,IAYX,SAASgQ,GAAezQ,EAAUG,GAChC,OAAO,SAASJ,EAAYzB,GAC1B,GAAkB,MAAdyB,EACF,OAAOA,EAET,IAAKoW,GAAYpW,GACf,OAAOC,EAASD,EAAYzB,GAM9B,IAJA,IAAItQ,EAAS+R,EAAW/R,OACpBwQ,EAAQ2B,EAAYnS,GAAS,EAC7BwvB,EAAWzZ,GAAOhE,IAEdI,EAAY3B,MAAYA,EAAQxQ,KACa,IAA/CsQ,EAASkf,EAAShf,GAAQA,EAAOgf,KAIvC,OAAOzd,C,EAWX,SAASuR,GAAcnR,GACrB,OAAO,SAASM,EAAQnC,EAAUwT,GAMhC,IALA,IAAItT,GAAQ,EACRgf,EAAWzZ,GAAOtD,GAClBW,EAAQ0Q,EAASrR,GACjBzS,EAASoT,EAAMpT,OAEZA,KAAU,CACf,IAAIrC,EAAMyV,EAAMjB,EAAYnS,IAAWwQ,GACvC,IAA+C,IAA3CF,EAASkf,EAAS7xB,GAAMA,EAAK6xB,GAC/B,K,CAGJ,OAAO/c,C,EAgCX,SAASgd,GAAgBC,GACvB,OAAO,SAAS1c,GAGd,IAAIS,EAAaS,GAFjBlB,EAAS1U,GAAS0U,IAGd+B,GAAc/B,GACd1P,EAEA2Q,EAAMR,EACNA,EAAW,GACXT,EAAOmC,OAAO,GAEdwa,EAAWlc,EACXia,GAAUja,EAAY,GAAGzW,KAAK,IAC9BgW,EAAO7V,MAAM,GAEjB,OAAO8W,EAAIyb,KAAgBC,C,EAW/B,SAASC,GAAiBC,GACxB,OAAO,SAAS7c,GACd,OAAOxB,GAAYse,GAAMC,GAAO/c,GAAQzU,QAAQiP,GAAQ,KAAMqiB,EAAU,G,EAY5E,SAASG,GAAW5P,GAClB,OAAO,WAIL,IAAIxf,EAAOC,UACX,OAAQD,EAAKZ,QACX,KAAK,EAAG,OAAO,IAAIogB,EACnB,KAAK,EAAG,OAAO,IAAIA,EAAKxf,EAAK,IAC7B,KAAK,EAAG,OAAO,IAAIwf,EAAKxf,EAAK,GAAIA,EAAK,IACtC,KAAK,EAAG,OAAO,IAAIwf,EAAKxf,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAC/C,KAAK,EAAG,OAAO,IAAIwf,EAAKxf,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACxD,KAAK,EAAG,OAAO,IAAIwf,EAAKxf,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACjE,KAAK,EAAG,OAAO,IAAIwf,EAAKxf,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAC1E,KAAK,EAAG,OAAO,IAAIwf,EAAKxf,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAErF,IAAIqvB,EAAchV,GAAWmF,EAAKxiB,WAC9BmT,EAASqP,EAAKpf,MAAMivB,EAAarvB,GAIrC,OAAOua,GAASpK,GAAUA,EAASkf,C,EAgDvC,SAASC,GAAWC,GAClB,OAAO,SAASpe,EAAYnB,EAAWsB,GACrC,IAAIsd,EAAWzZ,GAAOhE,GACtB,IAAKoW,GAAYpW,GAAa,CAC5B,IAAIzB,EAAWiZ,GAAY3Y,EAAW,GACtCmB,EAAatU,GAAKsU,GAClBnB,EAAY,SAASjT,GAAO,OAAO2S,EAASkf,EAAS7xB,GAAMA,EAAK6xB,E,EAElE,IAAIhf,EAAQ2f,EAAcpe,EAAYnB,EAAWsB,GACjD,OAAO1B,GAAQ,EAAKgf,EAASlf,EAAWyB,EAAWvB,GAASA,GAASlN,C,EAWzE,SAAS8sB,GAAWje,GAClB,OAAOke,IAAS,SAASC,GACvB,IAAItwB,EAASswB,EAAMtwB,OACfwQ,EAAQxQ,EACRuwB,EAASxV,GAAcnd,UAAU4yB,KAKrC,IAHIre,GACFme,EAAM7W,UAEDjJ,KAAS,CACd,IAAIN,EAAOogB,EAAM9f,GACjB,GAAmB,mBAARN,EACT,MAAM,IAAI5N,GAAU0E,GAEtB,GAAIupB,IAAWE,GAAgC,WAArBC,GAAYxgB,GACpC,IAAIugB,EAAU,IAAI1V,GAAc,IAAI,E,CAIxC,IADAvK,EAAQigB,EAAUjgB,EAAQxQ,IACjBwQ,EAAQxQ,GAAQ,CAGvB,IAAI2wB,EAAWD,GAFfxgB,EAAOogB,EAAM9f,IAGTkM,EAAmB,WAAZiU,EAAwBC,GAAQ1gB,GAAQ5M,EAMjDmtB,EAJE/T,GAAQmU,GAAWnU,EAAK,KACV,KAAZA,EAAK,KACJA,EAAK,GAAG1c,QAAqB,GAAX0c,EAAK,GAElB+T,EAAQC,GAAYhU,EAAK,KAAK1b,MAAMyvB,EAAS/T,EAAK,IAElC,GAAhBxM,EAAMlQ,QAAe6wB,GAAW3gB,GACtCugB,EAAQE,KACRF,EAAQD,KAAKtgB,E,CAGrB,OAAO,WACL,IAAItP,EAAOC,UACPpC,EAAQmC,EAAK,GAEjB,GAAI6vB,GAA0B,GAAf7vB,EAAKZ,QAAetE,GAAQ+C,GACzC,OAAOgyB,EAAQK,MAAMryB,GAAOA,QAK9B,IAHA,IAAI+R,EAAQ,EACRO,EAAS/Q,EAASswB,EAAM9f,GAAOxP,MAAMvB,KAAMmB,GAAQnC,IAE9C+R,EAAQxQ,GACf+Q,EAASuf,EAAM9f,GAAO1S,KAAK2B,KAAMsR,GAEnC,OAAOA,C,KAwBb,SAASggB,GAAa7gB,EAAM8O,EAAS7O,EAAS+d,EAAUC,EAAS6C,EAAeC,EAAcC,EAAQC,EAAKC,GACzG,IAAIC,EAAQrS,EAAU1X,EAClBgqB,EA5iKa,EA4iKJtS,EACTuS,EA5iKiB,EA4iKLvS,EACZoP,EAAuB,GAAXpP,EACZwS,EAtiKa,IAsiKJxS,EACToB,EAAOmR,EAAYjuB,EAAY0sB,GAAW9f,GA6C9C,OA3CA,SAASugB,IAKP,IAJA,IAAIzwB,EAASa,UAAUb,OACnBY,EAAO6U,GAAMzV,GACbwQ,EAAQxQ,EAELwQ,KACL5P,EAAK4P,GAAS3P,UAAU2P,GAE1B,GAAI4d,EACF,IAAIva,EAAc4d,GAAUhB,GACxBiB,EAAe9d,GAAahT,EAAMiT,GASxC,GAPIqa,IACFttB,EAAOqtB,GAAYrtB,EAAMstB,EAAUC,EAASC,IAE1C4C,IACFpwB,EAAOguB,GAAiBhuB,EAAMowB,EAAeC,EAAc7C,IAE7DpuB,GAAU0xB,EACNtD,GAAapuB,EAASoxB,EAAO,CAC/B,IAAIO,EAAald,GAAe7T,EAAMiT,GACtC,OAAO+d,GACL1hB,EAAM8O,EAAS+R,GAAcN,EAAQ5c,YAAa1D,EAClDvP,EAAM+wB,EAAYT,EAAQC,EAAKC,EAAQpxB,E,CAG3C,IAAIiwB,EAAcqB,EAASnhB,EAAU1Q,KACjCoyB,EAAKN,EAAYtB,EAAY/f,GAAQA,EAczC,OAZAlQ,EAASY,EAAKZ,OACVkxB,EACFtwB,EAAOkxB,GAAQlxB,EAAMswB,GACZM,GAAUxxB,EAAS,GAC5BY,EAAK6Y,UAEH4X,GAASF,EAAMnxB,IACjBY,EAAKZ,OAASmxB,GAEZ1xB,MAAQA,OAASgG,IAAQhG,gBAAgBgxB,IAC3CoB,EAAKzR,GAAQ4P,GAAW6B,IAEnBA,EAAG7wB,MAAMivB,EAAarvB,E,EAajC,SAASmxB,GAAe1hB,EAAQ2hB,GAC9B,OAAO,SAASvf,EAAQnC,GACtB,OAh/DJ,SAAsBmC,EAAQpC,EAAQC,EAAUC,GAI9C,OAHAmS,GAAWjQ,GAAQ,SAAShU,EAAOd,EAAK8U,GACtCpC,EAAOE,EAAaD,EAAS7R,GAAQd,EAAK8U,E,IAErClC,C,CA4+DE0hB,CAAaxf,EAAQpC,EAAQ2hB,EAAW1hB,GAAW,G,EAY9D,SAAS4hB,GAAoBC,EAAUC,GACrC,OAAO,SAAS3zB,EAAO6lB,GACrB,IAAIvT,EACJ,GAAItS,IAAU6E,GAAaghB,IAAUhhB,EACnC,OAAO8uB,EAKT,GAHI3zB,IAAU6E,IACZyN,EAAStS,GAEP6lB,IAAUhhB,EAAW,CACvB,GAAIyN,IAAWzN,EACb,OAAOghB,EAEW,iBAAT7lB,GAAqC,iBAAT6lB,GACrC7lB,EAAQ8tB,GAAa9tB,GACrB6lB,EAAQiI,GAAajI,KAErB7lB,EAAQ6tB,GAAa7tB,GACrB6lB,EAAQgI,GAAahI,IAEvBvT,EAASohB,EAAS1zB,EAAO6lB,E,CAE3B,OAAOvT,C,EAWX,SAASshB,GAAWC,GAClB,OAAOjC,IAAS,SAAShH,GAEvB,OADAA,EAAYjY,GAASiY,EAAWnW,GAAUqW,OACnCmB,IAAS,SAAS9pB,GACvB,IAAIuP,EAAU1Q,KACd,OAAO6yB,EAAUjJ,GAAW,SAAS/Y,GACnC,OAAOtP,GAAMsP,EAAUH,EAASvP,E,UAexC,SAAS2xB,GAAcvyB,EAAQwyB,GAG7B,IAAIC,GAFJD,EAAQA,IAAUlvB,EAAY,IAAMipB,GAAaiG,IAEzBxyB,OACxB,GAAIyyB,EAAc,EAChB,OAAOA,EAAchI,GAAW+H,EAAOxyB,GAAUwyB,EAEnD,IAAIzhB,EAAS0Z,GAAW+H,EAAOpa,GAAWpY,EAAS4U,GAAW4d,KAC9D,OAAOte,GAAWse,GACd9E,GAAU3Y,GAAchE,GAAS,EAAG/Q,GAAQhD,KAAK,IACjD+T,EAAO5T,MAAM,EAAG6C,E,CA6CtB,SAAS0yB,GAAYvgB,GACnB,OAAO,SAASpN,EAAOJ,EAAKguB,GAa1B,OAZIA,GAAuB,iBAARA,GAAoBpD,GAAexqB,EAAOJ,EAAKguB,KAChEhuB,EAAMguB,EAAOrvB,GAGfyB,EAAQ6tB,GAAS7tB,GACbJ,IAAQrB,GACVqB,EAAMI,EACNA,EAAQ,GAERJ,EAAMiuB,GAASjuB,GA57CrB,SAAmBI,EAAOJ,EAAKguB,EAAMxgB,GAKnC,IAJA,IAAI3B,GAAQ,EACRxQ,EAASgZ,GAAUZ,IAAYzT,EAAMI,IAAU4tB,GAAQ,IAAK,GAC5D5hB,EAAS0E,GAAMzV,GAEZA,KACL+Q,EAAOoB,EAAYnS,IAAWwQ,GAASzL,EACvCA,GAAS4tB,EAEX,OAAO5hB,C,CAs7CE8hB,CAAU9tB,EAAOJ,EADxBguB,EAAOA,IAASrvB,EAAayB,EAAQJ,EAAM,GAAI,EAAMiuB,GAASD,GAC3BxgB,E,EAWvC,SAAS2gB,GAA0BX,GACjC,OAAO,SAAS1zB,EAAO6lB,GAKrB,MAJsB,iBAAT7lB,GAAqC,iBAAT6lB,IACvC7lB,EAAQs0B,GAASt0B,GACjB6lB,EAAQyO,GAASzO,IAEZ6N,EAAS1zB,EAAO6lB,E,EAqB3B,SAASsN,GAAc1hB,EAAM8O,EAASgU,EAAUnf,EAAa1D,EAAS+d,EAAUC,EAAS+C,EAAQC,EAAKC,GACpG,IAAI6B,EArxKc,EAqxKJjU,EAMdA,GAAYiU,EAAU7rB,EAAoBC,EA5xKlB,GA6xKxB2X,KAAaiU,EAAU5rB,EAA0BD,MAG/C4X,IAAW,GAEb,IAAIkU,EAAU,CACZhjB,EAAM8O,EAAS7O,EAVC8iB,EAAU/E,EAAW5qB,EAFtB2vB,EAAU9E,EAAU7qB,EAGd2vB,EAAU3vB,EAAY4qB,EAFvB+E,EAAU3vB,EAAY6qB,EAYzB+C,EAAQC,EAAKC,GAG5BrgB,EAASiiB,EAAShyB,MAAMsC,EAAW4vB,GAKvC,OAJIrC,GAAW3gB,IACbijB,GAAQpiB,EAAQmiB,GAElBniB,EAAO8C,YAAcA,EACduf,GAAgBriB,EAAQb,EAAM8O,E,CAUvC,SAASqU,GAAY3D,GACnB,IAAIxf,EAAO4F,GAAK4Z,GAChB,OAAO,SAAS9Q,EAAQ0U,GAGtB,GAFA1U,EAASmU,GAASnU,IAClB0U,EAAyB,MAAbA,EAAoB,EAAIpa,GAAUqa,GAAUD,GAAY,OACnD1a,GAAegG,GAAS,CAGvC,IAAI4U,GAAQl1B,GAASsgB,GAAU,KAAK3J,MAAM,KAI1C,SADAue,GAAQl1B,GAFI4R,EAAKsjB,EAAK,GAAK,MAAQA,EAAK,GAAKF,KAEnB,KAAKre,MAAM,MACvB,GAAK,MAAQue,EAAK,GAAKF,G,CAEvC,OAAOpjB,EAAK0O,E,EAWhB,IAAI6N,GAAc5S,IAAO,EAAKnF,GAAW,IAAImF,GAAI,C,EAAE,KAAM,IAAOrS,EAAmB,SAAS8J,GAC1F,OAAO,IAAIuI,GAAIvI,E,EAD2DmiB,GAW5E,SAASC,GAAc5P,GACrB,OAAO,SAASrR,GACd,IAAIgN,EAAMC,GAAOjN,GACjB,OAAIgN,GAAOrX,EACFgM,GAAW3B,GAEhBgN,GAAOhX,EAhpIjB,SAAoBkM,GAClB,IAAInE,GAAQ,EACRO,EAAStV,MAAMkZ,EAAIL,MAKvB,OAHAK,EAAIjX,SAAQ,SAASe,GACnBsS,IAASP,GAAS,CAAC/R,EAAOA,E,IAErBsS,C,CA0oIM4iB,CAAWlhB,GAn6I1B,SAAqBA,EAAQW,GAC3B,OAAOhC,GAASgC,GAAO,SAASzV,GAC9B,MAAO,CAACA,EAAK8U,EAAO9U,G,IAm6IXi2B,CAAYnhB,EAAQqR,EAASrR,G,EA6BxC,SAASohB,GAAW3jB,EAAM8O,EAAS7O,EAAS+d,EAAUC,EAAS+C,EAAQC,EAAKC,GAC1E,IAAIG,EAl4KiB,EAk4KLvS,EAChB,IAAKuS,GAA4B,mBAARrhB,EACvB,MAAM,IAAI5N,GAAU0E,GAEtB,IAAIhH,EAASkuB,EAAWA,EAASluB,OAAS,EAS1C,GARKA,IACHgf,IAAW,GACXkP,EAAWC,EAAU7qB,GAEvB6tB,EAAMA,IAAQ7tB,EAAY6tB,EAAMnY,GAAUua,GAAUpC,GAAM,GAC1DC,EAAQA,IAAU9tB,EAAY8tB,EAAQmC,GAAUnC,GAChDpxB,GAAUmuB,EAAUA,EAAQnuB,OAAS,EAEjCgf,EAAU3X,EAAyB,CACrC,IAAI2pB,EAAgB9C,EAChB+C,EAAe9C,EAEnBD,EAAWC,EAAU7qB,C,CAEvB,IAAIoZ,EAAO6U,EAAYjuB,EAAYstB,GAAQ1gB,GAEvCgjB,EAAU,CACZhjB,EAAM8O,EAAS7O,EAAS+d,EAAUC,EAAS6C,EAAeC,EAC1DC,EAAQC,EAAKC,GAkBf,GAfI1U,GA26BN,SAAmBA,EAAM3S,GACvB,IAAIiV,EAAUtC,EAAK,GACfoX,EAAa/pB,EAAO,GACpBgqB,EAAa/U,EAAU8U,EACvBrS,EAAWsS,EAAc,IAEzBC,EACFF,GAAgBxsB,GA50MA,GA40MmB0X,GAClC8U,GAAexsB,GAAmB0X,GAAWzX,GAAqBmV,EAAK,GAAG1c,QAAU+J,EAAO,IAC3E,KAAhB+pB,GAAsD/pB,EAAO,GAAG/J,QAAU+J,EAAO,IA90MlE,GA80M0EiV,EAG5F,IAAMyC,IAAYuS,EAChB,OAAOtX,EAr1MQ,EAw1MboX,IACFpX,EAAK,GAAK3S,EAAO,GAEjBgqB,GA31Me,EA21MD/U,EAA2B,EAz1MnB,GA41MxB,IAAIvgB,EAAQsL,EAAO,GACnB,GAAItL,EAAO,CACT,IAAIyvB,EAAWxR,EAAK,GACpBA,EAAK,GAAKwR,EAAWD,GAAYC,EAAUzvB,EAAOsL,EAAO,IAAMtL,EAC/Die,EAAK,GAAKwR,EAAWzZ,GAAeiI,EAAK,GAAIxV,GAAe6C,EAAO,E,EAGrEtL,EAAQsL,EAAO,MAEbmkB,EAAWxR,EAAK,GAChBA,EAAK,GAAKwR,EAAWU,GAAiBV,EAAUzvB,EAAOsL,EAAO,IAAMtL,EACpEie,EAAK,GAAKwR,EAAWzZ,GAAeiI,EAAK,GAAIxV,GAAe6C,EAAO,KAGrEtL,EAAQsL,EAAO,MAEb2S,EAAK,GAAKje,GAGRq1B,EAAaxsB,IACfoV,EAAK,GAAgB,MAAXA,EAAK,GAAa3S,EAAO,GAAKmP,GAAUwD,EAAK,GAAI3S,EAAO,KAGrD,MAAX2S,EAAK,KACPA,EAAK,GAAK3S,EAAO,IAGnB2S,EAAK,GAAK3S,EAAO,GACjB2S,EAAK,GAAKqX,C,CA59BRE,CAAUf,EAASxW,GAErBxM,EAAOgjB,EAAQ,GACflU,EAAUkU,EAAQ,GAClB/iB,EAAU+iB,EAAQ,GAClBhF,EAAWgF,EAAQ,GACnB/E,EAAU+E,EAAQ,KAClB9B,EAAQ8B,EAAQ,GAAKA,EAAQ,KAAO5vB,EAC/BiuB,EAAY,EAAIrhB,EAAKlQ,OACtBgZ,GAAUka,EAAQ,GAAKlzB,EAAQ,KAEV,GAAXgf,IACZA,IAAW,IAERA,GA56KY,GA46KDA,EAGdjO,EA56KgB,GA26KPiO,GAA8BA,GAAW7X,EApgBtD,SAAqB+I,EAAM8O,EAASoS,GAClC,IAAIhR,EAAO4P,GAAW9f,GAwBtB,OAtBA,SAASugB,IAMP,IALA,IAAIzwB,EAASa,UAAUb,OACnBY,EAAO6U,GAAMzV,GACbwQ,EAAQxQ,EACR6T,EAAc4d,GAAUhB,GAErBjgB,KACL5P,EAAK4P,GAAS3P,UAAU2P,GAE1B,IAAI2d,EAAUnuB,EAAU,GAAKY,EAAK,KAAOiT,GAAejT,EAAKZ,EAAS,KAAO6T,EACzE,GACAY,GAAe7T,EAAMiT,GAGzB,OADA7T,GAAUmuB,EAAQnuB,QACLoxB,EACJQ,GACL1hB,EAAM8O,EAAS+R,GAAcN,EAAQ5c,YAAavQ,EAClD1C,EAAMutB,EAAS7qB,EAAWA,EAAW8tB,EAAQpxB,GAG1CgB,GADEvB,MAASA,OAASgG,IAAQhG,gBAAgBgxB,EAAWrQ,EAAOlQ,EACpDzQ,KAAMmB,E,EA8edszB,CAAYhkB,EAAM8O,EAASoS,GAC1BpS,GAAW5X,GAAiC,IAAZ4X,GAAqDmP,EAAQnuB,OAG9F+wB,GAAa/vB,MAAMsC,EAAW4vB,GA9O3C,SAAuBhjB,EAAM8O,EAAS7O,EAAS+d,GAC7C,IAAIoD,EAtsKa,EAssKJtS,EACToB,EAAO4P,GAAW9f,GAkBtB,OAhBA,SAASugB,IAQP,IAPA,IAAIpC,GAAY,EACZC,EAAaztB,UAAUb,OACvBwuB,GAAY,EACZC,EAAaP,EAASluB,OACtBY,EAAO6U,GAAMgZ,EAAaH,GAC1BuD,EAAKpyB,MAASA,OAASgG,IAAQhG,gBAAgBgxB,EAAWrQ,EAAOlQ,IAE5Dse,EAAYC,GACnB7tB,EAAK4tB,GAAaN,EAASM,GAE7B,KAAOF,KACL1tB,EAAK4tB,KAAe3tB,YAAYwtB,GAElC,OAAOrtB,GAAM6wB,EAAIP,EAASnhB,EAAU1Q,KAAMmB,E,EA0NjCuzB,CAAcjkB,EAAM8O,EAAS7O,EAAS+d,QAJ/C,IAAInd,EAhmBR,SAAoBb,EAAM8O,EAAS7O,GACjC,IAAImhB,EA90Ja,EA80JJtS,EACToB,EAAO4P,GAAW9f,GAMtB,OAJA,SAASugB,IAEP,OADShxB,MAASA,OAASgG,IAAQhG,gBAAgBgxB,EAAWrQ,EAAOlQ,GAC3DlP,MAAMswB,EAASnhB,EAAU1Q,KAAMoB,U,EA0lB5BuzB,CAAWlkB,EAAM8O,EAAS7O,GASzC,OAAOijB,IADM1W,EAAOsO,GAAcmI,IACJpiB,EAAQmiB,GAAUhjB,EAAM8O,E,CAexD,SAASqV,GAAuBtW,EAAUqJ,EAAUzpB,EAAK8U,GACvD,OAAIsL,IAAaza,GACZsa,GAAGG,EAAU3H,GAAYzY,MAAUE,GAAeC,KAAK2U,EAAQ9U,GAC3DypB,EAEFrJ,C,CAiBT,SAASuW,GAAoBvW,EAAUqJ,EAAUzpB,EAAK8U,EAAQ1I,EAAQmV,GAOpE,OANI/D,GAAS4C,IAAa5C,GAASiM,KAEjClI,EAAMvK,IAAIyS,EAAUrJ,GACpB0K,GAAU1K,EAAUqJ,EAAU9jB,EAAWgxB,GAAqBpV,GAC9DA,EAAc,OAAEkI,IAEXrJ,C,CAYT,SAASwW,GAAgB91B,GACvB,OAAOuqB,GAAcvqB,GAAS6E,EAAY7E,C,CAgB5C,SAASqnB,GAAYrlB,EAAO6jB,EAAOtF,EAASC,EAAYqG,EAAWpG,GACjE,IAAI8G,EApgLmB,EAogLPhH,EACZwV,EAAY/zB,EAAMT,OAClB2kB,EAAYL,EAAMtkB,OAEtB,GAAIw0B,GAAa7P,KAAeqB,GAAarB,EAAY6P,GACvD,OAAO,EAGT,IAAIC,EAAavV,EAAMP,IAAIle,GACvBgmB,EAAavH,EAAMP,IAAI2F,GAC3B,GAAImQ,GAAchO,EAChB,OAAOgO,GAAcnQ,GAASmC,GAAchmB,EAE9C,IAAI+P,GAAQ,EACRO,GAAS,EACTiU,EAlhLqB,EAkhLdhG,EAAqC,IAAI1C,GAAWhZ,EAM/D,IAJA4b,EAAMvK,IAAIlU,EAAO6jB,GACjBpF,EAAMvK,IAAI2P,EAAO7jB,KAGR+P,EAAQgkB,GAAW,CAC1B,IAAIE,EAAWj0B,EAAM+P,GACjBmW,EAAWrC,EAAM9T,GAErB,GAAIyO,EACF,IAAI2H,EAAWZ,EACX/G,EAAW0H,EAAU+N,EAAUlkB,EAAO8T,EAAO7jB,EAAOye,GACpDD,EAAWyV,EAAU/N,EAAUnW,EAAO/P,EAAO6jB,EAAOpF,GAE1D,GAAI0H,IAAatjB,EAAW,CAC1B,GAAIsjB,EACF,SAEF7V,GAAS,EACT,K,CAGF,GAAIiU,GACF,IAAKrT,GAAU2S,GAAO,SAASqC,EAAU/B,GACnC,IAAKvR,GAAS2R,EAAMJ,KACf8P,IAAa/N,GAAYrB,EAAUoP,EAAU/N,EAAU3H,EAASC,EAAYC,IAC/E,OAAO8F,EAAKjkB,KAAK6jB,E,IAEjB,CACN7T,GAAS,EACT,K,OAEG,GACD2jB,IAAa/N,IACXrB,EAAUoP,EAAU/N,EAAU3H,EAASC,EAAYC,GACpD,CACLnO,GAAS,EACT,K,EAKJ,OAFAmO,EAAc,OAAEze,GAChBye,EAAc,OAAEoF,GACTvT,C,CA0KT,SAASsf,GAASngB,GAChB,OAAOya,GAAYC,GAAS1a,EAAM5M,EAAWqxB,IAAUzkB,EAAO,G,CAUhE,SAASiR,GAAW1O,GAClB,OAAOoR,GAAepR,EAAQhV,GAAMyiB,G,CAWtC,SAASgB,GAAazO,GACpB,OAAOoR,GAAepR,EAAQuN,GAAQF,G,CAUxC,IAAI8Q,GAAW5W,GAAiB,SAAS9J,GACvC,OAAO8J,GAAQ2E,IAAIzO,E,EADIujB,GAWzB,SAAS/C,GAAYxgB,GAKnB,IAJA,IAAIa,EAAUb,EAAKlO,KAAO,GACtBvB,EAAQwZ,GAAUlJ,GAClB/Q,EAASnC,GAAeC,KAAKmc,GAAWlJ,GAAUtQ,EAAMT,OAAS,EAE9DA,KAAU,CACf,IAAI0c,EAAOjc,EAAMT,GACb40B,EAAYlY,EAAKxM,KACrB,GAAiB,MAAb0kB,GAAqBA,GAAa1kB,EACpC,OAAOwM,EAAK1a,I,CAGhB,OAAO+O,C,CAUT,SAAS0gB,GAAUvhB,GAEjB,OADarS,GAAeC,KAAK8c,GAAQ,eAAiBA,GAAS1K,GACrD2D,W,CAchB,SAAS0V,KACP,IAAIxY,EAAS6J,GAAOtK,UAAYA,GAEhC,OADAS,EAASA,IAAWT,GAAWiX,GAAexW,EACvClQ,UAAUb,OAAS+Q,EAAOlQ,UAAU,GAAIA,UAAU,IAAMkQ,C,CAWjE,SAASuR,GAAWjO,EAAK1W,GACvB,IAgYiBc,EACbo2B,EAjYAnY,EAAOrI,EAAIkI,SACf,OAiYgB,WADZsY,SADap2B,EA/XAd,KAiYmB,UAARk3B,GAA4B,UAARA,GAA4B,WAARA,EACrD,cAAVp2B,EACU,OAAVA,GAlYDie,EAAmB,iBAAP/e,EAAkB,SAAW,QACzC+e,EAAKrI,G,CAUX,SAAS+T,GAAa3V,GAIpB,IAHA,IAAI1B,EAAStT,GAAKgV,GACdzS,EAAS+Q,EAAO/Q,OAEbA,KAAU,CACf,IAAIrC,EAAMoT,EAAO/Q,GACbvB,EAAQgU,EAAO9U,GAEnBoT,EAAO/Q,GAAU,CAACrC,EAAKc,EAAO8pB,GAAmB9pB,G,CAEnD,OAAOsS,C,CAWT,SAASgH,GAAUtF,EAAQ9U,GACzB,IAAIc,EAlxJR,SAAkBgU,EAAQ9U,GACxB,OAAiB,MAAV8U,EAAiBnP,EAAYmP,EAAO9U,E,CAixJ7Bm3B,CAASriB,EAAQ9U,GAC7B,OAAO2pB,GAAa7oB,GAASA,EAAQ6E,C,CAqCvC,IAAI4c,GAAc1H,GAA+B,SAAS/F,GACxD,OAAc,MAAVA,EACK,IAETA,EAASsD,GAAOtD,GACT5B,GAAY2H,GAAiB/F,IAAS,SAASqO,GACpD,OAAOxJ,GAAqBxZ,KAAK2U,EAAQqO,E,MANRiU,GAiBjCjV,GAAgBtH,GAA+B,SAAS/F,GAE1D,IADA,IAAI1B,EAAS,GACN0B,GACLpB,GAAUN,EAAQmP,GAAWzN,IAC7BA,EAASyE,GAAazE,GAExB,OAAO1B,C,EAN8BgkB,GAgBnCrV,GAASsE,GA2Eb,SAASgR,GAAQviB,EAAQ1V,EAAMk4B,GAO7B,IAJA,IAAIzkB,GAAQ,EACRxQ,GAHJjD,EAAO4mB,GAAS5mB,EAAM0V,IAGJzS,OACd+Q,GAAS,IAEJP,EAAQxQ,GAAQ,CACvB,IAAIrC,EAAMimB,GAAM7mB,EAAKyT,IACrB,KAAMO,EAAmB,MAAV0B,GAAkBwiB,EAAQxiB,EAAQ9U,IAC/C,MAEF8U,EAASA,EAAO9U,E,CAElB,OAAIoT,KAAYP,GAASxQ,EAChB+Q,KAET/Q,EAAmB,MAAVyS,EAAiB,EAAIA,EAAOzS,SAClBk1B,GAASl1B,IAAWmd,GAAQxf,EAAKqC,KACjDtE,GAAQ+W,IAAWsK,GAAYtK,G,CA6BpC,SAASoN,GAAgBpN,GACvB,MAAqC,mBAAtBA,EAAO6M,aAA8BuI,GAAYpV,GAE5D,GADAwI,GAAW/D,GAAazE,G,CA8E9B,SAAS2Q,GAAc3kB,GACrB,OAAO/C,GAAQ+C,IAAUse,GAAYte,OAChC+Y,IAAoB/Y,GAASA,EAAM+Y,I,CAW1C,SAAS2F,GAAQ1e,EAAOuB,GACtB,IAAI60B,SAAcp2B,EAGlB,SAFAuB,EAAmB,MAAVA,EAAiByH,EAAmBzH,KAGlC,UAAR60B,GACU,UAARA,GAAoBtpB,GAAS4I,KAAK1V,KAChCA,GAAQ,GAAMA,EAAQ,GAAK,GAAKA,EAAQuB,C,CAajD,SAASuvB,GAAe9wB,EAAO+R,EAAOiC,GACpC,IAAK0I,GAAS1I,GACZ,OAAO,EAET,IAAIoiB,SAAcrkB,EAClB,SAAY,UAARqkB,EACK1M,GAAY1V,IAAW0K,GAAQ3M,EAAOiC,EAAOzS,QACrC,UAAR60B,GAAoBrkB,KAASiC,IAE7BmL,GAAGnL,EAAOjC,GAAQ/R,E,CAa7B,SAAS6pB,GAAM7pB,EAAOgU,GACpB,GAAI/W,GAAQ+C,GACV,OAAO,EAET,IAAIo2B,SAAcp2B,EAClB,QAAY,UAARo2B,GAA4B,UAARA,GAA4B,WAARA,GAC/B,MAATp2B,IAAiBskB,GAAStkB,MAGvB4L,GAAc8J,KAAK1V,KAAW2L,GAAa+J,KAAK1V,IAC1C,MAAVgU,GAAkBhU,KAASsX,GAAOtD,G,CAyBvC,SAASoe,GAAW3gB,GAClB,IAAIygB,EAAWD,GAAYxgB,GACvBoU,EAAQ1J,GAAO+V,GAEnB,GAAoB,mBAATrM,KAAyBqM,KAAY7V,GAAYld,WAC1D,OAAO,EAET,GAAIsS,IAASoU,EACX,OAAO,EAET,IAAI5H,EAAOkU,GAAQtM,GACnB,QAAS5H,GAAQxM,IAASwM,EAAK,E,EA7S7BhD,IAAagG,GAAO,IAAIhG,GAAS,IAAIyb,YAAY,MAAQrsB,GACxD6Q,IAAO+F,GAAO,IAAI/F,KAAQvR,GAC1BwR,IAAW8F,GAAO9F,GAAQpd,YAAc+L,GACxCsR,IAAO6F,GAAO,IAAI7F,KAAQpR,GAC1BqR,IAAW4F,GAAO,IAAI5F,KAAYlR,KACrC8W,GAAS,SAASjhB,GAChB,IAAIsS,EAASiT,GAAWvlB,GACpB2hB,EAAOrP,GAAUzI,EAAY7J,EAAM6gB,YAAchc,EACjD8xB,EAAahV,EAAOjG,GAASiG,GAAQ,GAEzC,GAAIgV,EACF,OAAQA,GACN,KAAKlb,GAAoB,OAAOpR,EAChC,KAAKsR,GAAe,OAAOhS,EAC3B,KAAKiS,GAAmB,OAAO9R,EAC/B,KAAK+R,GAAe,OAAO7R,EAC3B,KAAK8R,GAAmB,OAAO3R,EAGnC,OAAOmI,C,GA+SX,IAAIskB,GAAahf,GAAaoN,GAAa6R,GAS3C,SAASzN,GAAYppB,GACnB,IAAI2hB,EAAO3hB,GAASA,EAAM6gB,YAG1B,OAAO7gB,KAFqB,mBAAR2hB,GAAsBA,EAAKxiB,WAAcwY,G,CAa/D,SAASmS,GAAmB9pB,GAC1B,OAAOA,GAAUA,IAAU0c,GAAS1c,E,CAYtC,SAAS4pB,GAAwB1qB,EAAKypB,GACpC,OAAO,SAAS3U,GACd,OAAc,MAAVA,IAGGA,EAAO9U,KAASypB,IACpBA,IAAa9jB,GAAc3F,KAAOoY,GAAOtD,I,EAsIhD,SAASmY,GAAS1a,EAAMnL,EAAOyP,GAE7B,OADAzP,EAAQiU,GAAUjU,IAAUzB,EAAa4M,EAAKlQ,OAAS,EAAK+E,EAAO,GAC5D,WAML,IALA,IAAInE,EAAOC,UACP2P,GAAQ,EACRxQ,EAASgZ,GAAUpY,EAAKZ,OAAS+E,EAAO,GACxCtE,EAAQgV,GAAMzV,KAETwQ,EAAQxQ,GACfS,EAAM+P,GAAS5P,EAAKmE,EAAQyL,GAE9BA,GAAQ,EAER,IADA,IAAI+kB,EAAY9f,GAAM1Q,EAAQ,KACrByL,EAAQzL,GACfwwB,EAAU/kB,GAAS5P,EAAK4P,GAG1B,OADA+kB,EAAUxwB,GAASyP,EAAU/T,GACtBO,GAAMkP,EAAMzQ,KAAM81B,E,EAY7B,SAASrQ,GAAOzS,EAAQ1V,GACtB,OAAOA,EAAKiD,OAAS,EAAIyS,EAASiR,GAAQjR,EAAQ2Y,GAAUruB,EAAM,GAAG,G,CAavE,SAAS+0B,GAAQrxB,EAAO6pB,GAKtB,IAJA,IAAIkK,EAAY/zB,EAAMT,OAClBA,EAASkZ,GAAUoR,EAAQtqB,OAAQw0B,GACnCgB,EAAWhY,GAAU/c,GAElBT,KAAU,CACf,IAAIwQ,EAAQ8Z,EAAQtqB,GACpBS,EAAMT,GAAUmd,GAAQ3M,EAAOgkB,GAAagB,EAAShlB,GAASlN,C,CAEhE,OAAO7C,C,CAWT,SAASmoB,GAAQnW,EAAQ9U,GACvB,IAAY,gBAARA,GAAgD,mBAAhB8U,EAAO9U,KAIhC,aAAPA,EAIJ,OAAO8U,EAAO9U,E,CAiBhB,IAAIw1B,GAAUsC,GAASzK,IAUnBzrB,GAAa4Y,IAAiB,SAASjI,EAAMoR,GAC/C,OAAO7b,GAAKlG,WAAW2Q,EAAMoR,E,EAW3BqJ,GAAc8K,GAASxK,IAY3B,SAASmI,GAAgB3C,EAASiF,EAAW1W,GAC3C,IAAIjV,EAAU2rB,EAAY,GAC1B,OAAO/K,GAAY8F,EA1brB,SAA2B1mB,EAAQ4rB,GACjC,IAAI31B,EAAS21B,EAAQ31B,OACrB,IAAKA,EACH,OAAO+J,EAET,IAAI8K,EAAY7U,EAAS,EAGzB,OAFA21B,EAAQ9gB,IAAc7U,EAAS,EAAI,KAAO,IAAM21B,EAAQ9gB,GACxD8gB,EAAUA,EAAQ34B,KAAKgD,EAAS,EAAI,KAAO,KACpC+J,EAAOxL,QAAQoM,GAAe,uBAAyBgrB,EAAU,S,CAkb5CC,CAAkB7rB,EAqHhD,SAA2B4rB,EAAS3W,GAOlC,OANAvO,GAAU7I,GAAW,SAAS4rB,GAC5B,IAAI/0B,EAAQ,KAAO+0B,EAAK,GACpBxU,EAAWwU,EAAK,KAAQxiB,GAAc2kB,EAASl3B,IACjDk3B,EAAQ50B,KAAKtC,E,IAGVk3B,EAAQjM,M,CA5HuCmM,CAtjBxD,SAAwB9rB,GACtB,IAAI3L,EAAQ2L,EAAO3L,MAAMwM,IACzB,OAAOxM,EAAQA,EAAM,GAAG6W,MAAMpK,IAAkB,E,CAojBwBirB,CAAe/rB,GAASiV,I,CAYlG,SAASyW,GAASvlB,GAChB,IAAI6lB,EAAQ,EACRC,EAAa,EAEjB,OAAO,WACL,IAAIC,EAAQ7c,KACR8c,EApiNK,IAoiNmBD,EAAQD,GAGpC,GADAA,EAAaC,EACTC,EAAY,GACd,KAAMH,GAziNE,IA0iNN,OAAOl1B,UAAU,QAGnBk1B,EAAQ,EAEV,OAAO7lB,EAAKlP,MAAMsC,EAAWzC,U,EAYjC,SAAS0c,GAAY9c,EAAO6T,GAC1B,IAAI9D,GAAQ,EACRxQ,EAASS,EAAMT,OACf6U,EAAY7U,EAAS,EAGzB,IADAsU,EAAOA,IAAShR,EAAYtD,EAASsU,IAC5B9D,EAAQ8D,GAAM,CACrB,IAAI6hB,EAAO9Y,GAAW7M,EAAOqE,GACzBpW,EAAQgC,EAAM01B,GAElB11B,EAAM01B,GAAQ11B,EAAM+P,GACpB/P,EAAM+P,GAAS/R,C,CAGjB,OADAgC,EAAMT,OAASsU,EACR7T,C,CAUT,IAAI+sB,GAvTJ,SAAuBtd,GACrB,IAAIa,EAASqlB,GAAQlmB,GAAM,SAASvS,GAIlC,OAh0MiB,MA6zMb2V,EAAMgB,MACRhB,EAAM4I,QAEDve,C,IAGL2V,EAAQvC,EAAOuC,MACnB,OAAOvC,C,CA8SUslB,EAAc,SAASrjB,GACxC,IAAIjC,EAAS,GAOb,OAN6B,KAAzBiC,EAAOhQ,WAAW,IACpB+N,EAAOhQ,KAAK,IAEdiS,EAAOzU,QAAQ+L,IAAY,SAASlM,EAAOwgB,EAAQ0X,EAAOC,GACxDxlB,EAAOhQ,KAAKu1B,EAAQC,EAAUh4B,QAAQyM,GAAc,MAAS4T,GAAUxgB,E,IAElE2S,C,IAUT,SAAS6S,GAAMnlB,GACb,GAAoB,iBAATA,GAAqBskB,GAAStkB,GACvC,OAAOA,EAET,IAAIsS,EAAUtS,EAAQ,GACtB,MAAkB,KAAXsS,GAAkB,EAAKtS,IAAU,IAAa,KAAOsS,C,CAU9D,SAASoJ,GAASjK,GAChB,GAAY,MAARA,EAAc,CAChB,IACE,OAAOoG,GAAaxY,KAAKoS,EACf,CAAV,MAAOlS,GAAG,CACZ,IACE,OAAQkS,EAAO,EACL,CAAV,MAAO1Q,GAAG,C,CAEd,MAAO,E,CA4BT,SAASwb,GAAayV,GACpB,GAAIA,aAAmB3V,GACrB,OAAO2V,EAAQ+F,QAEjB,IAAIzlB,EAAS,IAAIgK,GAAc0V,EAAQnV,YAAamV,EAAQjV,WAI5D,OAHAzK,EAAOwK,YAAciC,GAAUiT,EAAQlV,aACvCxK,EAAO0K,UAAagV,EAAQhV,UAC5B1K,EAAO2K,WAAa+U,EAAQ/U,WACrB3K,C,CAsIT,IAAI0lB,GAAa/L,IAAS,SAASjqB,EAAO6Q,GACxC,OAAOyX,GAAkBtoB,GACrB8gB,GAAe9gB,EAAOwiB,GAAY3R,EAAQ,EAAGyX,IAAmB,IAChE,E,IA6BF2N,GAAehM,IAAS,SAASjqB,EAAO6Q,GAC1C,IAAIhB,EAAW6U,GAAK7T,GAIpB,OAHIyX,GAAkBzY,KACpBA,EAAWhN,GAENylB,GAAkBtoB,GACrB8gB,GAAe9gB,EAAOwiB,GAAY3R,EAAQ,EAAGyX,IAAmB,GAAOQ,GAAYjZ,EAAU,IAC7F,E,IA0BFqmB,GAAiBjM,IAAS,SAASjqB,EAAO6Q,GAC5C,IAAIH,EAAagU,GAAK7T,GAItB,OAHIyX,GAAkB5X,KACpBA,EAAa7N,GAERylB,GAAkBtoB,GACrB8gB,GAAe9gB,EAAOwiB,GAAY3R,EAAQ,EAAGyX,IAAmB,GAAOzlB,EAAW6N,GAClF,E,IAsON,SAASylB,GAAUn2B,EAAOmQ,EAAWsB,GACnC,IAAIlS,EAAkB,MAATS,EAAgB,EAAIA,EAAMT,OACvC,IAAKA,EACH,OAAO,EAET,IAAIwQ,EAAqB,MAAb0B,EAAoB,EAAIqhB,GAAUrhB,GAI9C,OAHI1B,EAAQ,IACVA,EAAQwI,GAAUhZ,EAASwQ,EAAO,IAE7ByB,GAAcxR,EAAO8oB,GAAY3Y,EAAW,GAAIJ,E,CAsCzD,SAASqmB,GAAcp2B,EAAOmQ,EAAWsB,GACvC,IAAIlS,EAAkB,MAATS,EAAgB,EAAIA,EAAMT,OACvC,IAAKA,EACH,OAAO,EAET,IAAIwQ,EAAQxQ,EAAS,EAOrB,OANIkS,IAAc5O,IAChBkN,EAAQ+iB,GAAUrhB,GAClB1B,EAAQ0B,EAAY,EAChB8G,GAAUhZ,EAASwQ,EAAO,GAC1B0I,GAAU1I,EAAOxQ,EAAS,IAEzBiS,GAAcxR,EAAO8oB,GAAY3Y,EAAW,GAAIJ,GAAO,E,CAiBhE,SAASmkB,GAAQl0B,GAEf,OADsB,MAATA,EAAgB,EAAIA,EAAMT,QACvBijB,GAAYxiB,EAAO,GAAK,E,CAgG1C,SAASq2B,GAAKr2B,GACZ,OAAOA,GAAUA,EAAMT,OAAUS,EAAM,GAAK6C,C,CA0E9C,IAAIyzB,GAAerM,IAAS,SAAShG,GACnC,IAAIsS,EAAS5lB,GAASsT,EAAQ4I,IAC9B,OAAO0J,EAAQh3B,QAAUg3B,EAAO,KAAOtS,EAAO,GAC1CD,GAAiBuS,GACjB,E,IA0BFC,GAAiBvM,IAAS,SAAShG,GACrC,IAAIpU,EAAW6U,GAAKT,GAChBsS,EAAS5lB,GAASsT,EAAQ4I,IAO9B,OALIhd,IAAa6U,GAAK6R,GACpB1mB,EAAWhN,EAEX0zB,EAAO5U,MAEF4U,EAAQh3B,QAAUg3B,EAAO,KAAOtS,EAAO,GAC1CD,GAAiBuS,EAAQzN,GAAYjZ,EAAU,IAC/C,E,IAwBF4mB,GAAmBxM,IAAS,SAAShG,GACvC,IAAIvT,EAAagU,GAAKT,GAClBsS,EAAS5lB,GAASsT,EAAQ4I,IAM9B,OAJAnc,EAAkC,mBAAdA,EAA2BA,EAAa7N,IAE1D0zB,EAAO5U,MAEF4U,EAAQh3B,QAAUg3B,EAAO,KAAOtS,EAAO,GAC1CD,GAAiBuS,EAAQ1zB,EAAW6N,GACpC,E,IAoCN,SAASgU,GAAK1kB,GACZ,IAAIT,EAAkB,MAATS,EAAgB,EAAIA,EAAMT,OACvC,OAAOA,EAASS,EAAMT,EAAS,GAAKsD,C,CAuFtC,IAAI6zB,GAAOzM,GAAS0M,IAsBpB,SAASA,GAAQ32B,EAAO6Q,GACtB,OAAO7Q,GAAUA,EAAMT,QAAUsR,GAAUA,EAAOtR,OAC9CmqB,GAAY1pB,EAAO6Q,GACnB7Q,C,CAqFN,IAAI42B,GAAShH,IAAS,SAAS5vB,EAAO6pB,GACpC,IAAItqB,EAAkB,MAATS,EAAgB,EAAIA,EAAMT,OACnC+Q,EAASyN,GAAO/d,EAAO6pB,GAM3B,OAJAD,GAAW5pB,EAAO2Q,GAASkZ,GAAS,SAAS9Z,GAC3C,OAAO2M,GAAQ3M,EAAOxQ,IAAWwQ,EAAQA,C,IACxCkZ,KAAKK,KAEDhZ,C,IA2ET,SAAS0I,GAAQhZ,GACf,OAAgB,MAATA,EAAgBA,EAAQ+Y,GAAc1b,KAAK2C,E,CAkapD,IAAI62B,GAAQ5M,IAAS,SAAShG,GAC5B,OAAO8H,GAASvJ,GAAYyB,EAAQ,EAAGqE,IAAmB,G,IA0BxDwO,GAAU7M,IAAS,SAAShG,GAC9B,IAAIpU,EAAW6U,GAAKT,GAIpB,OAHIqE,GAAkBzY,KACpBA,EAAWhN,GAENkpB,GAASvJ,GAAYyB,EAAQ,EAAGqE,IAAmB,GAAOQ,GAAYjZ,EAAU,G,IAwBrFknB,GAAY9M,IAAS,SAAShG,GAChC,IAAIvT,EAAagU,GAAKT,GAEtB,OADAvT,EAAkC,mBAAdA,EAA2BA,EAAa7N,EACrDkpB,GAASvJ,GAAYyB,EAAQ,EAAGqE,IAAmB,GAAOzlB,EAAW6N,E,IAgG9E,SAASsmB,GAAMh3B,GACb,IAAMA,IAASA,EAAMT,OACnB,MAAO,GAET,IAAIA,EAAS,EAOb,OANAS,EAAQoQ,GAAYpQ,GAAO,SAASi3B,GAClC,GAAI3O,GAAkB2O,GAEpB,OADA13B,EAASgZ,GAAU0e,EAAM13B,OAAQA,IAC1B,C,IAGJ6S,GAAU7S,GAAQ,SAASwQ,GAChC,OAAOY,GAAS3Q,EAAOoR,GAAarB,G,IAyBxC,SAASmnB,GAAUl3B,EAAO6P,GACxB,IAAM7P,IAASA,EAAMT,OACnB,MAAO,GAET,IAAI+Q,EAAS0mB,GAAMh3B,GACnB,OAAgB,MAAZ6P,EACKS,EAEFK,GAASL,GAAQ,SAAS2mB,GAC/B,OAAO12B,GAAMsP,EAAUhN,EAAWo0B,E,IAwBtC,IAAIE,GAAUlN,IAAS,SAASjqB,EAAO6Q,GACrC,OAAOyX,GAAkBtoB,GACrB8gB,GAAe9gB,EAAO6Q,GACtB,E,IAqBFumB,GAAMnN,IAAS,SAAShG,GAC1B,OAAOwI,GAAQrc,GAAY6T,EAAQqE,I,IA0BjC+O,GAAQpN,IAAS,SAAShG,GAC5B,IAAIpU,EAAW6U,GAAKT,GAIpB,OAHIqE,GAAkBzY,KACpBA,EAAWhN,GAEN4pB,GAAQrc,GAAY6T,EAAQqE,IAAoBQ,GAAYjZ,EAAU,G,IAwB3EynB,GAAUrN,IAAS,SAAShG,GAC9B,IAAIvT,EAAagU,GAAKT,GAEtB,OADAvT,EAAkC,mBAAdA,EAA2BA,EAAa7N,EACrD4pB,GAAQrc,GAAY6T,EAAQqE,IAAoBzlB,EAAW6N,E,IAmBhE6mB,GAAMtN,GAAS+M,IA6DnB,IAAIQ,GAAUvN,IAAS,SAAShG,GAC9B,IAAI1kB,EAAS0kB,EAAO1kB,OAChBsQ,EAAWtQ,EAAS,EAAI0kB,EAAO1kB,EAAS,GAAKsD,EAGjD,OADAgN,EAA8B,mBAAZA,GAA0BoU,EAAOtC,MAAO9R,GAAYhN,EAC/Dq0B,GAAUjT,EAAQpU,E,IAkC3B,SAAS4nB,GAAMz5B,GACb,IAAIsS,EAAS6J,GAAOnc,GAEpB,OADAsS,EAAOyK,WAAY,EACZzK,C,CAsDT,SAASyf,GAAK/xB,EAAO05B,GACnB,OAAOA,EAAY15B,E,CAmBrB,IAAI25B,GAAY/H,IAAS,SAAS5R,GAChC,IAAIze,EAASye,EAAMze,OACf+E,EAAQ/E,EAASye,EAAM,GAAK,EAC5BhgB,EAAQgB,KAAK6b,YACb6c,EAAc,SAAS1lB,GAAU,OAAO+L,GAAO/L,EAAQgM,E,EAE3D,QAAIze,EAAS,GAAKP,KAAK8b,YAAYvb,SAC7BvB,aAAiBqc,IAAiBqC,GAAQpY,KAGhDtG,EAAQA,EAAMtB,MAAM4H,GAAQA,GAAS/E,EAAS,EAAI,KAC5Cub,YAAYxa,KAAK,CACrBmP,KAAQsgB,GACR5vB,KAAQ,CAACu3B,GACThoB,QAAW7M,IAEN,IAAIyX,GAActc,EAAOgB,KAAK+b,WAAWgV,MAAK,SAAS/vB,GAI5D,OAHIT,IAAWS,EAAMT,QACnBS,EAAMM,KAAKuC,GAEN7C,C,KAZAhB,KAAK+wB,KAAK2H,E,IA+PrB,IAAIE,GAAUpJ,IAAiB,SAASle,EAAQtS,EAAOd,GACjDE,GAAeC,KAAKiT,EAAQpT,KAC5BoT,EAAOpT,GAETkgB,GAAgB9M,EAAQpT,EAAK,E,IAuIjC,IAAI26B,GAAOpI,GAAW0G,IAqBlB2B,GAAWrI,GAAW2G,IA2G1B,SAASn5B,GAAQqU,EAAYzB,GAE3B,OADW5U,GAAQqW,GAActB,GAAYyN,IACjCnM,EAAYwX,GAAYjZ,EAAU,G,CAuBhD,SAASkoB,GAAazmB,EAAYzB,GAEhC,OADW5U,GAAQqW,GAAcrB,GAAiBiS,IACtC5Q,EAAYwX,GAAYjZ,EAAU,G,CA0BhD,IAAImoB,GAAUxJ,IAAiB,SAASle,EAAQtS,EAAOd,GACjDE,GAAeC,KAAKiT,EAAQpT,GAC9BoT,EAAOpT,GAAKoD,KAAKtC,GAEjBof,GAAgB9M,EAAQpT,EAAK,CAACc,G,IAsElC,IAAIi6B,GAAYhO,IAAS,SAAS3Y,EAAYhV,EAAM6D,GAClD,IAAI4P,GAAQ,EACRmP,EAAwB,mBAAR5iB,EAChBgU,EAASoX,GAAYpW,GAAc0D,GAAM1D,EAAW/R,QAAU,GAKlE,OAHAke,GAASnM,GAAY,SAAStT,GAC5BsS,IAASP,GAASmP,EAAS3e,GAAMjE,EAAM0B,EAAOmC,GAAQqkB,GAAWxmB,EAAO1B,EAAM6D,E,IAEzEmQ,C,IA+BL4nB,GAAQ1J,IAAiB,SAASle,EAAQtS,EAAOd,GACnDkgB,GAAgB9M,EAAQpT,EAAKc,E,IA6C/B,SAAS4V,GAAItC,EAAYzB,GAEvB,OADW5U,GAAQqW,GAAcX,GAAW8W,IAChCnW,EAAYwX,GAAYjZ,EAAU,G,CAkFhD,IAAIsoB,GAAY3J,IAAiB,SAASle,EAAQtS,EAAOd,GACvDoT,EAAOpT,EAAM,EAAI,GAAGoD,KAAKtC,E,IACxB,WAAa,MAAO,CAAC,GAAI,G,IAmS5B,IAAIo6B,GAASnO,IAAS,SAAS3Y,EAAYsX,GACzC,GAAkB,MAAdtX,EACF,MAAO,GAET,IAAI/R,EAASqpB,EAAUrpB,OAMvB,OALIA,EAAS,GAAKuvB,GAAexd,EAAYsX,EAAU,GAAIA,EAAU,IACnEA,EAAY,GACHrpB,EAAS,GAAKuvB,GAAelG,EAAU,GAAIA,EAAU,GAAIA,EAAU,MAC5EA,EAAY,CAACA,EAAU,KAElBD,GAAYrX,EAAYkR,GAAYoG,EAAW,GAAI,G,IAqBxDnR,GAAMD,IAAU,WAClB,OAAOxS,GAAKmQ,KAAKsC,K,EA0DnB,SAASiZ,GAAIjhB,EAAM4C,EAAGwc,GAGpB,OAFAxc,EAAIwc,EAAQhsB,EAAYwP,EACxBA,EAAI5C,GAAc,MAAL4C,EAAa5C,EAAKlQ,OAAS8S,EACjC+gB,GAAW3jB,EAAM5I,EAAehE,EAAWA,EAAWA,EAAWA,EAAWwP,E,CAoBrF,SAASgmB,GAAOhmB,EAAG5C,GACjB,IAAIa,EACJ,GAAmB,mBAARb,EACT,MAAM,IAAI5N,GAAU0E,GAGtB,OADA8L,EAAIygB,GAAUzgB,GACP,WAOL,QANMA,EAAI,IACR/B,EAASb,EAAKlP,MAAMvB,KAAMoB,YAExBiS,GAAK,IACP5C,EAAO5M,GAEFyN,C,EAuCX,IAAIgoB,GAAOrO,IAAS,SAASxa,EAAMC,EAAS+d,GAC1C,IAAIlP,EAv4Ta,EAw4TjB,GAAIkP,EAASluB,OAAQ,CACnB,IAAImuB,EAAU1Z,GAAeyZ,EAAUuD,GAAUsH,KACjD/Z,GAAW5X,C,CAEb,OAAOysB,GAAW3jB,EAAM8O,EAAS7O,EAAS+d,EAAUC,E,IAgDlD6K,GAAUtO,IAAS,SAASjY,EAAQ9U,EAAKuwB,GAC3C,IAAIlP,EAAUia,EACd,GAAI/K,EAASluB,OAAQ,CACnB,IAAImuB,EAAU1Z,GAAeyZ,EAAUuD,GAAUuH,KACjDha,GAAW5X,C,CAEb,OAAOysB,GAAWl2B,EAAKqhB,EAASvM,EAAQyb,EAAUC,E,IAsJpD,SAAS+K,GAAShpB,EAAMoR,EAAMjlB,GAC5B,IAAI88B,EACAC,EACAC,EACAtoB,EACAuoB,EACAC,EACAC,EAAiB,EACjBC,GAAU,EACVC,GAAS,EACT/J,GAAW,EAEf,GAAmB,mBAARzf,EACT,MAAM,IAAI5N,GAAU0E,GAUtB,SAAS2yB,EAAWC,GAClB,IAAIh5B,EAAOu4B,EACPhpB,EAAUipB,EAKd,OAHAD,EAAWC,EAAW91B,EACtBk2B,EAAiBI,EACjB7oB,EAASb,EAAKlP,MAAMmP,EAASvP,E,CAI/B,SAASi5B,EAAYD,GAMnB,OAJAJ,EAAiBI,EAEjBN,EAAU/5B,GAAWu6B,EAAcxY,GAE5BmY,EAAUE,EAAWC,GAAQ7oB,C,CAatC,SAASgpB,EAAaH,GACpB,IAAII,EAAoBJ,EAAOL,EAM/B,OAAQA,IAAiBj2B,GAAc02B,GAAqB1Y,GACzD0Y,EAAoB,GAAON,GANJE,EAAOJ,GAM8BH,C,CAGjE,SAASS,IACP,IAAIF,EAAO1hB,KACX,GAAI6hB,EAAaH,GACf,OAAOK,EAAaL,GAGtBN,EAAU/5B,GAAWu6B,EA3BvB,SAAuBF,GACrB,IAEIM,EAAc5Y,GAFMsY,EAAOL,GAI/B,OAAOG,EACHxgB,GAAUghB,EAAab,GAJDO,EAAOJ,IAK7BU,C,CAoB+BC,CAAcP,G,CAGnD,SAASK,EAAaL,GAKpB,OAJAN,EAAUh2B,EAINqsB,GAAYwJ,EACPQ,EAAWC,IAEpBT,EAAWC,EAAW91B,EACfyN,E,CAeT,SAASqpB,IACP,IAAIR,EAAO1hB,KACPmiB,EAAaN,EAAaH,GAM9B,GAJAT,EAAWt4B,UACXu4B,EAAW35B,KACX85B,EAAeK,EAEXS,EAAY,CACd,GAAIf,IAAYh2B,EACd,OAAOu2B,EAAYN,GAErB,GAAIG,EAIF,OAFAh6B,GAAa45B,GACbA,EAAU/5B,GAAWu6B,EAAcxY,GAC5BqY,EAAWJ,E,CAMtB,OAHID,IAAYh2B,IACdg2B,EAAU/5B,GAAWu6B,EAAcxY,IAE9BvQ,C,CAIT,OA3GAuQ,EAAOyR,GAASzR,IAAS,EACrBnG,GAAS9e,KACXo9B,IAAYp9B,EAAQo9B,QAEpBJ,GADAK,EAAS,YAAar9B,GACH2c,GAAU+Z,GAAS12B,EAAQg9B,UAAY,EAAG/X,GAAQ+X,EACrE1J,EAAW,aAActzB,IAAYA,EAAQszB,SAAWA,GAoG1DyK,EAAUE,OApCV,WACMhB,IAAYh2B,GACd5D,GAAa45B,GAEfE,EAAiB,EACjBL,EAAWI,EAAeH,EAAWE,EAAUh2B,C,EAgCjD82B,EAAUG,MA7BV,WACE,OAAOjB,IAAYh2B,EAAYyN,EAASkpB,EAAa/hB,K,EA6BhDkiB,C,CAqBT,IAAII,GAAQ9P,IAAS,SAASxa,EAAMtP,GAClC,OAAOygB,GAAUnR,EAAM,EAAGtP,E,IAsBxB65B,GAAQ/P,IAAS,SAASxa,EAAMoR,EAAM1gB,GACxC,OAAOygB,GAAUnR,EAAM6iB,GAASzR,IAAS,EAAG1gB,E,IAqE9C,SAASw1B,GAAQlmB,EAAMwqB,GACrB,GAAmB,mBAARxqB,GAAmC,MAAZwqB,GAAuC,mBAAZA,EAC3D,MAAM,IAAIp4B,GAAU0E,GAEtB,IAAI2zB,EAAW,WACb,IAAI/5B,EAAOC,UACPlD,EAAM+8B,EAAWA,EAAS15B,MAAMvB,KAAMmB,GAAQA,EAAK,GACnD0S,EAAQqnB,EAASrnB,MAErB,GAAIA,EAAMC,IAAI5V,GACZ,OAAO2V,EAAMqL,IAAIhhB,GAEnB,IAAIoT,EAASb,EAAKlP,MAAMvB,KAAMmB,GAE9B,OADA+5B,EAASrnB,MAAQA,EAAMqB,IAAIhX,EAAKoT,IAAWuC,EACpCvC,C,EAGT,OADA4pB,EAASrnB,MAAQ,IAAK8iB,GAAQwE,OAASve,IAChCse,C,CA0BT,SAASE,GAAOjqB,GACd,GAAwB,mBAAbA,EACT,MAAM,IAAItO,GAAU0E,GAEtB,OAAO,WACL,IAAIpG,EAAOC,UACX,OAAQD,EAAKZ,QACX,KAAK,EAAG,OAAQ4Q,EAAU9S,KAAK2B,MAC/B,KAAK,EAAG,OAAQmR,EAAU9S,KAAK2B,KAAMmB,EAAK,IAC1C,KAAK,EAAG,OAAQgQ,EAAU9S,KAAK2B,KAAMmB,EAAK,GAAIA,EAAK,IACnD,KAAK,EAAG,OAAQgQ,EAAU9S,KAAK2B,KAAMmB,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAE9D,OAAQgQ,EAAU5P,MAAMvB,KAAMmB,E,EAlClCw1B,GAAQwE,MAAQve,GA2FhB,IAAIye,GAAWrN,IAAS,SAASvd,EAAM6qB,GAKrC,IAAIC,GAJJD,EAAmC,GAAtBA,EAAY/6B,QAAetE,GAAQq/B,EAAW,IACvD3pB,GAAS2pB,EAAW,GAAI7nB,GAAUqW,OAClCnY,GAAS6R,GAAY8X,EAAY,GAAI7nB,GAAUqW,QAEtBvpB,OAC7B,OAAO0qB,IAAS,SAAS9pB,GAIvB,IAHA,IAAI4P,GAAQ,EACRxQ,EAASkZ,GAAUtY,EAAKZ,OAAQg7B,KAE3BxqB,EAAQxQ,GACfY,EAAK4P,GAASuqB,EAAWvqB,GAAO1S,KAAK2B,KAAMmB,EAAK4P,IAElD,OAAOxP,GAAMkP,EAAMzQ,KAAMmB,E,OAqCzBq6B,GAAUvQ,IAAS,SAASxa,EAAMge,GACpC,IAAIC,EAAU1Z,GAAeyZ,EAAUuD,GAAUwJ,KACjD,OAAOpH,GAAW3jB,EAAM9I,EAAmB9D,EAAW4qB,EAAUC,E,IAmC9D+M,GAAexQ,IAAS,SAASxa,EAAMge,GACzC,IAAIC,EAAU1Z,GAAeyZ,EAAUuD,GAAUyJ,KACjD,OAAOrH,GAAW3jB,EAAM7I,EAAyB/D,EAAW4qB,EAAUC,E,IAyBpEgN,GAAQ9K,IAAS,SAASngB,EAAMoa,GAClC,OAAOuJ,GAAW3jB,EAAM3I,EAAiBjE,EAAWA,EAAWA,EAAWgnB,E,IAia5E,SAAS1M,GAAGnf,EAAO6lB,GACjB,OAAO7lB,IAAU6lB,GAAU7lB,GAAUA,GAAS6lB,GAAUA,C,CA0B1D,IAAI8W,GAAKtI,GAA0BzO,IAyB/BgX,GAAMvI,IAA0B,SAASr0B,EAAO6lB,GAClD,OAAO7lB,GAAS6lB,C,IAqBdvH,GAAcqI,GAAgB,WAAa,OAAOvkB,S,CAApB,IAAsCukB,GAAkB,SAAS3mB,GACjG,OAAOoc,GAAapc,IAAUZ,GAAeC,KAAKW,EAAO,YACtD6Y,GAAqBxZ,KAAKW,EAAO,S,EA0BlC/C,GAAU+Z,GAAM/Z,QAmBhB6T,GAAgBD,GAAoB4D,GAAU5D,IA75PlD,SAA2B7Q,GACzB,OAAOoc,GAAapc,IAAUulB,GAAWvlB,IAAUoK,C,EAu7PrD,SAASsf,GAAY1pB,GACnB,OAAgB,MAATA,GAAiBy2B,GAASz2B,EAAMuB,UAAYyjB,GAAWhlB,E,CA4BhE,SAASsqB,GAAkBtqB,GACzB,OAAOoc,GAAapc,IAAU0pB,GAAY1pB,E,CA0C5C,IAAIka,GAAWD,IAAkB4c,GAmB7B7lB,GAASD,GAAa0D,GAAU1D,IAxgQpC,SAAoB/Q,GAClB,OAAOoc,GAAapc,IAAUulB,GAAWvlB,IAAUuJ,C,EA+qQrD,SAASszB,GAAQ78B,GACf,IAAKoc,GAAapc,GAChB,OAAO,EAET,IAAIghB,EAAMuE,GAAWvlB,GACrB,OAAOghB,GAAOxX,GA9yWF,yBA8yWcwX,GACC,iBAAjBhhB,EAAMxC,SAA4C,iBAAdwC,EAAMuD,OAAqBgnB,GAAcvqB,E,CAkDzF,SAASglB,GAAWhlB,GAClB,IAAK0c,GAAS1c,GACZ,OAAO,EAIT,IAAIghB,EAAMuE,GAAWvlB,GACrB,OAAOghB,GAAOvX,GAAWuX,GAAOtX,GA32WrB,0BA22W+BsX,GA/1W/B,kBA+1WkDA,C,CA6B/D,SAAS8b,GAAU98B,GACjB,MAAuB,iBAATA,GAAqBA,GAAS80B,GAAU90B,E,CA6BxD,SAASy2B,GAASz2B,GAChB,MAAuB,iBAATA,GACZA,GAAQ,GAAMA,EAAQ,GAAK,GAAKA,GAASgJ,C,CA4B7C,SAAS0T,GAAS1c,GAChB,IAAIo2B,SAAcp2B,EAClB,OAAgB,MAATA,IAA0B,UAARo2B,GAA4B,YAARA,E,CA2B/C,SAASha,GAAapc,GACpB,OAAgB,MAATA,GAAiC,iBAATA,C,CAoBjC,IAAIkR,GAAQD,GAAYwD,GAAUxD,IA5xQlC,SAAmBjR,GACjB,OAAOoc,GAAapc,IAAUihB,GAAOjhB,IAAU2J,C,EA6+QjD,SAASozB,GAAS/8B,GAChB,MAAuB,iBAATA,GACXoc,GAAapc,IAAUulB,GAAWvlB,IAAU4J,C,CA+BjD,SAAS2gB,GAAcvqB,GACrB,IAAKoc,GAAapc,IAAUulB,GAAWvlB,IAAU6J,EAC/C,OAAO,EAET,IAAI4S,EAAQhE,GAAazY,GACzB,GAAc,OAAVyc,EACF,OAAO,EAET,IAAIkF,EAAOviB,GAAeC,KAAKod,EAAO,gBAAkBA,EAAMoE,YAC9D,MAAsB,mBAARc,GAAsBA,aAAgBA,GAClD9J,GAAaxY,KAAKsiB,IAASzJ,E,CAoB/B,IAAI9G,GAAWD,GAAesD,GAAUtD,IA59QxC,SAAsBnR,GACpB,OAAOoc,GAAapc,IAAUulB,GAAWvlB,IAAU+J,C,EA6gRrD,IAAIuH,GAAQD,GAAYoD,GAAUpD,IAngRlC,SAAmBrR,GACjB,OAAOoc,GAAapc,IAAUihB,GAAOjhB,IAAUgK,C,EAqhRjD,SAASgzB,GAASh9B,GAChB,MAAuB,iBAATA,IACV/C,GAAQ+C,IAAUoc,GAAapc,IAAUulB,GAAWvlB,IAAUiK,C,CAoBpE,SAASqa,GAAStkB,GAChB,MAAuB,iBAATA,GACXoc,GAAapc,IAAUulB,GAAWvlB,IAAUkK,C,CAoBjD,IAAIsH,GAAeD,GAAmBkD,GAAUlD,IAvjRhD,SAA0BvR,GACxB,OAAOoc,GAAapc,IAClBy2B,GAASz2B,EAAMuB,WAAaiO,GAAe+V,GAAWvlB,G,EA6oR1D,IAAIi9B,GAAK5I,GAA0B7K,IAyB/B0T,GAAM7I,IAA0B,SAASr0B,EAAO6lB,GAClD,OAAO7lB,GAAS6lB,C,IA0BlB,SAASsX,GAAQn9B,GACf,IAAKA,EACH,MAAO,GAET,GAAI0pB,GAAY1pB,GACd,OAAOg9B,GAASh9B,GAASsW,GAActW,GAAS+e,GAAU/e,GAE5D,GAAIiZ,IAAejZ,EAAMiZ,IACvB,OAv8VN,SAAyBC,GAIvB,IAHA,IAAI+E,EACA3L,EAAS,KAEJ2L,EAAO/E,EAASkkB,QAAQC,MAC/B/qB,EAAOhQ,KAAK2b,EAAKje,OAEnB,OAAOsS,C,CAg8VIgrB,CAAgBt9B,EAAMiZ,OAE/B,IAAI+H,EAAMC,GAAOjhB,GAGjB,OAFWghB,GAAOrX,EAASgM,GAAcqL,GAAOhX,EAASiM,GAAapD,IAE1D7S,E,CA0Bd,SAASm0B,GAASn0B,GAChB,OAAKA,GAGLA,EAAQs0B,GAASt0B,MACH+I,GAAY/I,KAAU,IAxkYtB,uBAykYAA,EAAQ,GAAI,EAAK,GAGxBA,GAAUA,EAAQA,EAAQ,EAPd,IAAVA,EAAcA,EAAQ,C,CAoCjC,SAAS80B,GAAU90B,GACjB,IAAIsS,EAAS6hB,GAASn0B,GAClBu9B,EAAYjrB,EAAS,EAEzB,OAAOA,GAAWA,EAAUirB,EAAYjrB,EAASirB,EAAYjrB,EAAU,C,CA8BzE,SAASkrB,GAASx9B,GAChB,OAAOA,EAAQgf,GAAU8V,GAAU90B,GAAQ,EAAGkJ,GAAoB,C,CA0BpE,SAASorB,GAASt0B,GAChB,GAAoB,iBAATA,EACT,OAAOA,EAET,GAAIskB,GAAStkB,GACX,OAAOiJ,EAET,GAAIyT,GAAS1c,GAAQ,CACnB,IAAI6lB,EAAgC,mBAAjB7lB,EAAMic,QAAwBjc,EAAMic,UAAYjc,EACnEA,EAAQ0c,GAASmJ,GAAUA,EAAQ,GAAMA,C,CAE3C,GAAoB,iBAAT7lB,EACT,OAAiB,IAAVA,EAAcA,GAASA,EAEhCA,EAAQsU,GAAStU,GACjB,IAAIy9B,EAAW9wB,GAAW+I,KAAK1V,GAC/B,OAAOy9B,GAAa5wB,GAAU6I,KAAK1V,GAC/B6P,GAAa7P,EAAMtB,MAAM,GAAI++B,EAAW,EAAI,GAC3C/wB,GAAWgJ,KAAK1V,GAASiJ,GAAOjJ,C,CA2BvC,SAASwqB,GAAcxqB,GACrB,OAAO2f,GAAW3f,EAAOuhB,GAAOvhB,G,CAsDlC,SAASH,GAASG,GAChB,OAAgB,MAATA,EAAgB,GAAK8tB,GAAa9tB,E,CAqC3C,IAAI09B,GAAShN,IAAe,SAAS1c,EAAQ1I,GAC3C,GAAI8d,GAAY9d,IAAWoe,GAAYpe,GACrCqU,GAAWrU,EAAQtM,GAAKsM,GAAS0I,QAGnC,IAAK,IAAI9U,KAAOoM,EACVlM,GAAeC,KAAKiM,EAAQpM,IAC9BmgB,GAAYrL,EAAQ9U,EAAKoM,EAAOpM,G,IAoClCy+B,GAAWjN,IAAe,SAAS1c,EAAQ1I,GAC7CqU,GAAWrU,EAAQiW,GAAOjW,GAAS0I,E,IAgCjC4pB,GAAelN,IAAe,SAAS1c,EAAQ1I,EAAQ2e,EAAUzJ,GACnEb,GAAWrU,EAAQiW,GAAOjW,GAAS0I,EAAQwM,E,IA+BzCqd,GAAanN,IAAe,SAAS1c,EAAQ1I,EAAQ2e,EAAUzJ,GACjEb,GAAWrU,EAAQtM,GAAKsM,GAAS0I,EAAQwM,E,IAoBvCsd,GAAKlM,GAAS7R,IA8DlB,IAAI9I,GAAWgV,IAAS,SAASjY,EAAQ4c,GACvC5c,EAASsD,GAAOtD,GAEhB,IAAIjC,GAAQ,EACRxQ,EAASqvB,EAAQrvB,OACjBsvB,EAAQtvB,EAAS,EAAIqvB,EAAQ,GAAK/rB,EAMtC,IAJIgsB,GAASC,GAAeF,EAAQ,GAAIA,EAAQ,GAAIC,KAClDtvB,EAAS,KAGFwQ,EAAQxQ,GAMf,IALA,IAAI+J,EAASslB,EAAQ7e,GACjB4C,EAAQ4M,GAAOjW,GACfyyB,GAAa,EACbC,EAAcrpB,EAAMpT,SAEfw8B,EAAaC,GAAa,CACjC,IAAI9+B,EAAMyV,EAAMopB,GACZ/9B,EAAQgU,EAAO9U,IAEfc,IAAU6E,GACTsa,GAAGnf,EAAO2X,GAAYzY,MAAUE,GAAeC,KAAK2U,EAAQ9U,MAC/D8U,EAAO9U,GAAOoM,EAAOpM,G,CAK3B,OAAO8U,C,IAsBLiqB,GAAehS,IAAS,SAAS9pB,GAEnC,OADAA,EAAKG,KAAKuC,EAAWgxB,IACdtzB,GAAM27B,GAAWr5B,EAAW1C,E,IAgSrC,SAAS+d,GAAIlM,EAAQ1V,EAAMq1B,GACzB,IAAIrhB,EAAmB,MAAV0B,EAAiBnP,EAAYogB,GAAQjR,EAAQ1V,GAC1D,OAAOgU,IAAWzN,EAAY8uB,EAAerhB,C,CA4D/C,SAASyX,GAAM/V,EAAQ1V,GACrB,OAAiB,MAAV0V,GAAkBuiB,GAAQviB,EAAQ1V,EAAMynB,G,CAqBjD,IAAIoY,GAAS7K,IAAe,SAAShhB,EAAQtS,EAAOd,GACrC,MAATc,GACyB,mBAAlBA,EAAMH,WACfG,EAAQiY,GAAqB5Y,KAAKW,IAGpCsS,EAAOtS,GAASd,C,GACfutB,GAAS1D,KA4BRqV,GAAW9K,IAAe,SAAShhB,EAAQtS,EAAOd,GACvC,MAATc,GACyB,mBAAlBA,EAAMH,WACfG,EAAQiY,GAAqB5Y,KAAKW,IAGhCZ,GAAeC,KAAKiT,EAAQtS,GAC9BsS,EAAOtS,GAAOsC,KAAKpD,GAEnBoT,EAAOtS,GAAS,CAACd,E,GAElB4rB,IAoBCuT,GAASpS,GAASzF,IA8BtB,SAASxnB,GAAKgV,GACZ,OAAO0V,GAAY1V,GAAUkK,GAAclK,GAAUmV,GAASnV,E,CA0BhE,SAASuN,GAAOvN,GACd,OAAO0V,GAAY1V,GAAUkK,GAAclK,GAAQ,GAAQqV,GAAWrV,E,CAuGxE,IAAIsqB,GAAQ5N,IAAe,SAAS1c,EAAQ1I,EAAQ2e,GAClDD,GAAUhW,EAAQ1I,EAAQ2e,E,IAkCxBiU,GAAYxN,IAAe,SAAS1c,EAAQ1I,EAAQ2e,EAAUzJ,GAChEwJ,GAAUhW,EAAQ1I,EAAQ2e,EAAUzJ,E,IAuBlC+d,GAAO3M,IAAS,SAAS5d,EAAQgM,GACnC,IAAI1N,EAAS,GACb,GAAc,MAAV0B,EACF,OAAO1B,EAET,IAAIoO,GAAS,EACbV,EAAQrN,GAASqN,GAAO,SAAS1hB,GAG/B,OAFAA,EAAO4mB,GAAS5mB,EAAM0V,GACtB0M,IAAWA,EAASpiB,EAAKiD,OAAS,GAC3BjD,C,IAETqhB,GAAW3L,EAAQyO,GAAazO,GAAS1B,GACrCoO,IACFpO,EAASgO,GAAUhO,EAAQksB,EAAwD1I,KAGrF,IADA,IAAIv0B,EAASye,EAAMze,OACZA,KACLwqB,GAAUzZ,EAAQ0N,EAAMze,IAE1B,OAAO+Q,C,IA4CT,IAAI4E,GAAO0a,IAAS,SAAS5d,EAAQgM,GACnC,OAAiB,MAAVhM,EAAiB,GAnmT1B,SAAkBA,EAAQgM,GACxB,OAAOwL,GAAWxX,EAAQgM,GAAO,SAAShgB,EAAO1B,GAC/C,OAAOyrB,GAAM/V,EAAQ1V,E,IAimTMmgC,CAASzqB,EAAQgM,E,IAqBhD,SAAS0e,GAAO1qB,EAAQ7B,GACtB,GAAc,MAAV6B,EACF,MAAO,GAET,IAAIW,EAAQhC,GAAS8P,GAAazO,IAAS,SAAS2qB,GAClD,MAAO,CAACA,E,IAGV,OADAxsB,EAAY2Y,GAAY3Y,GACjBqZ,GAAWxX,EAAQW,GAAO,SAAS3U,EAAO1B,GAC/C,OAAO6T,EAAUnS,EAAO1B,EAAK,G,IA4IjC,IAAIsgC,GAAU3J,GAAcj2B,IA0BxB6/B,GAAY5J,GAAc1T,IA4K9B,SAAS1O,GAAOmB,GACd,OAAiB,MAAVA,EAAiB,GAAKU,GAAWV,EAAQhV,GAAKgV,G,CAkNvD,IAAI8qB,GAAY3N,IAAiB,SAAS7e,EAAQysB,EAAMhtB,GAEtD,OADAgtB,EAAOA,EAAKC,cACL1sB,GAAUP,EAAQktB,GAAWF,GAAQA,E,IAkB9C,SAASE,GAAW1qB,GAClB,OAAO2qB,GAAWr/B,GAAS0U,GAAQyqB,c,CAqBrC,SAAS1N,GAAO/c,GAEd,OADAA,EAAS1U,GAAS0U,KACDA,EAAOzU,QAAQiN,GAASsI,IAAcvV,QAAQkP,GAAa,G,CAsH9E,IAAImwB,GAAYhO,IAAiB,SAAS7e,EAAQysB,EAAMhtB,GACtD,OAAOO,GAAUP,EAAQ,IAAM,IAAMgtB,EAAKC,a,IAuBxCI,GAAYjO,IAAiB,SAAS7e,EAAQysB,EAAMhtB,GACtD,OAAOO,GAAUP,EAAQ,IAAM,IAAMgtB,EAAKC,a,IAoBxCK,GAAarO,GAAgB,eA0NjC,IAAIsO,GAAYnO,IAAiB,SAAS7e,EAAQysB,EAAMhtB,GACtD,OAAOO,GAAUP,EAAQ,IAAM,IAAMgtB,EAAKC,a,IAgE5C,IAAIO,GAAYpO,IAAiB,SAAS7e,EAAQysB,EAAMhtB,GACtD,OAAOO,GAAUP,EAAQ,IAAM,IAAMmtB,GAAWH,E,IAsiBlD,IAAIS,GAAYrO,IAAiB,SAAS7e,EAAQysB,EAAMhtB,GACtD,OAAOO,GAAUP,EAAQ,IAAM,IAAMgtB,EAAKU,a,IAoBxCP,GAAalO,GAAgB,eAqBjC,SAASK,GAAM9c,EAAQmrB,EAAS7O,GAI9B,OAHAtc,EAAS1U,GAAS0U,IAClBmrB,EAAU7O,EAAQhsB,EAAY66B,KAEd76B,EArybpB,SAAwB0P,GACtB,OAAOlF,GAAiBqG,KAAKnB,E,CAqyblBorB,CAAeprB,GA1jb5B,SAAsBA,GACpB,OAAOA,EAAO5U,MAAMwP,KAAkB,E,CAyjbFywB,CAAarrB,GAzrcnD,SAAoBA,GAClB,OAAOA,EAAO5U,MAAM0M,KAAgB,E,CAwrcuBwzB,CAAWtrB,GAE7DA,EAAO5U,MAAM+/B,IAAY,E,CA2BlC,IAAII,GAAU7T,IAAS,SAASxa,EAAMtP,GACpC,IACE,OAAOI,GAAMkP,EAAM5M,EAAW1C,E,CAC9B,MAAO5C,GACP,OAAOs9B,GAAQt9B,GAAKA,EAAI,IAAImB,GAAMnB,E,KA8BlCwgC,GAAUnO,IAAS,SAAS5d,EAAQgsB,GAKtC,OAJAhuB,GAAUguB,GAAa,SAAS9gC,GAC9BA,EAAMimB,GAAMjmB,GACZkgB,GAAgBpL,EAAQ9U,EAAKo7B,GAAKtmB,EAAO9U,GAAM8U,G,IAE1CA,C,IAqGT,SAASyY,GAASzsB,GAChB,OAAO,WACL,OAAOA,C,EAkDX,IAAIigC,GAAOtO,KAuBPuO,GAAYvO,IAAW,GAkB3B,SAAS5I,GAAS/oB,GAChB,OAAOA,C,CA6CT,SAAS6R,GAASJ,GAChB,OAAOqX,GAA4B,mBAARrX,EAAqBA,EAAO6O,GAAU7O,EAjte/C,G,CAwzepB,IAAI0uB,GAASlU,IAAS,SAAS3tB,EAAM6D,GACnC,OAAO,SAAS6R,GACd,OAAOwS,GAAWxS,EAAQ1V,EAAM6D,E,KA2BhCi+B,GAAWnU,IAAS,SAASjY,EAAQ7R,GACvC,OAAO,SAAS7D,GACd,OAAOkoB,GAAWxS,EAAQ1V,EAAM6D,E,KAwCpC,SAASk+B,GAAMrsB,EAAQ1I,EAAQ1N,GAC7B,IAAI+W,EAAQ3V,GAAKsM,GACb00B,EAAcjb,GAAczZ,EAAQqJ,GAEzB,MAAX/W,GACE8e,GAASpR,KAAY00B,EAAYz+B,SAAWoT,EAAMpT,UACtD3D,EAAU0N,EACVA,EAAS0I,EACTA,EAAShT,KACTg/B,EAAcjb,GAAczZ,EAAQtM,GAAKsM,KAE3C,IAAImuB,IAAU/c,GAAS9e,IAAY,UAAWA,IAAcA,EAAQ67B,OAChEvY,EAAS8D,GAAWhR,GAqBxB,OAnBAhC,GAAUguB,GAAa,SAAS/O,GAC9B,IAAIxf,EAAOnG,EAAO2lB,GAClBjd,EAAOid,GAAcxf,EACjByP,IACFlN,EAAO7U,UAAU8xB,GAAc,WAC7B,IAAIrU,EAAW5b,KAAK+b,UACpB,GAAI0c,GAAS7c,EAAU,CACrB,IAAItK,EAAS0B,EAAOhT,KAAK6b,aACrB0R,EAAUjc,EAAOwK,YAAciC,GAAU/d,KAAK8b,aAIlD,OAFAyR,EAAQjsB,KAAK,CAAEmP,KAAQA,EAAMtP,KAAQC,UAAWsP,QAAWsC,IAC3D1B,EAAOyK,UAAYH,EACZtK,C,CAET,OAAOb,EAAKlP,MAAMyR,EAAQpB,GAAU,CAAC5R,KAAKhB,SAAUoC,W,MAKnD4R,C,CAmCT,SAASghB,K,CAiDT,IAAIsL,GAAO1M,GAAWjhB,IA8BlB4tB,GAAY3M,GAAW1hB,IAiCvBsuB,GAAW5M,GAAW1gB,IAwB1B,SAASgW,GAAS5qB,GAChB,OAAOurB,GAAMvrB,GAAQ8U,GAAa+R,GAAM7mB,IAh3X1C,SAA0BA,GACxB,OAAO,SAAS0V,GACd,OAAOiR,GAAQjR,EAAQ1V,E,EA82XwBmiC,CAAiBniC,E,CAuEpE,IAAIoiC,GAAQzM,KAsCR0M,GAAa1M,IAAY,GAoB7B,SAASqC,KACP,MAAO,E,CAgBT,SAASO,KACP,OAAO,C,CA+JT,IAAI9Y,GAAM0V,IAAoB,SAASmN,EAAQC,GAC7C,OAAOD,EAASC,C,GACf,GAuBCjnB,GAAOgb,GAAY,QAiBnBkM,GAASrN,IAAoB,SAASsN,EAAUC,GAClD,OAAOD,EAAWC,C,GACjB,GAuBClnB,GAAQ8a,GAAY,SAwKxB,IAgaMtpB,GAhaF21B,GAAWxN,IAAoB,SAASyN,EAAYC,GACtD,OAAOD,EAAaC,C,GACnB,GAuBCC,GAAQxM,GAAY,SAiBpByM,GAAW5N,IAAoB,SAAS6N,EAASC,GACnD,OAAOD,EAAUC,C,GAChB,GAgmBH,OA1iBAplB,GAAOqlB,MAp6MP,SAAentB,EAAG5C,GAChB,GAAmB,mBAARA,EACT,MAAM,IAAI5N,GAAU0E,GAGtB,OADA8L,EAAIygB,GAAUzgB,GACP,WACL,KAAMA,EAAI,EACR,OAAO5C,EAAKlP,MAAMvB,KAAMoB,U,GA85M9B+Z,GAAOuW,IAAMA,GACbvW,GAAOuhB,OAASA,GAChBvhB,GAAOwhB,SAAWA,GAClBxhB,GAAOyhB,aAAeA,GACtBzhB,GAAO0hB,WAAaA,GACpB1hB,GAAO2hB,GAAKA,GACZ3hB,GAAOke,OAASA,GAChBle,GAAOme,KAAOA,GACdne,GAAO4jB,QAAUA,GACjB5jB,GAAOoe,QAAUA,GACjBpe,GAAOslB,UAl8KP,WACE,IAAKr/B,UAAUb,OACb,MAAO,GAET,IAAIvB,EAAQoC,UAAU,GACtB,OAAOnF,GAAQ+C,GAASA,EAAQ,CAACA,E,EA87KnCmc,GAAOsd,MAAQA,GACftd,GAAOulB,MApgTP,SAAe1/B,EAAO6T,EAAMgb,GAExBhb,GADGgb,EAAQC,GAAe9uB,EAAO6T,EAAMgb,GAAShb,IAAShR,GAClD,EAEA0V,GAAUua,GAAUjf,GAAO,GAEpC,IAAItU,EAAkB,MAATS,EAAgB,EAAIA,EAAMT,OACvC,IAAKA,GAAUsU,EAAO,EACpB,MAAO,GAMT,IAJA,IAAI9D,EAAQ,EACRM,EAAW,EACXC,EAAS0E,GAAM2C,GAAWpY,EAASsU,IAEhC9D,EAAQxQ,GACb+Q,EAAOD,KAAcsa,GAAU3qB,EAAO+P,EAAQA,GAAS8D,GAEzD,OAAOvD,C,EAo/ST6J,GAAOwlB,QAl+SP,SAAiB3/B,GAMf,IALA,IAAI+P,GAAQ,EACRxQ,EAAkB,MAATS,EAAgB,EAAIA,EAAMT,OACnC8Q,EAAW,EACXC,EAAS,KAEJP,EAAQxQ,GAAQ,CACvB,IAAIvB,EAAQgC,EAAM+P,GACd/R,IACFsS,EAAOD,KAAcrS,E,CAGzB,OAAOsS,C,EAu9ST6J,GAAO3a,OA97SP,WACE,IAAID,EAASa,UAAUb,OACvB,IAAKA,EACH,MAAO,GAMT,IAJA,IAAIY,EAAO6U,GAAMzV,EAAS,GACtBS,EAAQI,UAAU,GAClB2P,EAAQxQ,EAELwQ,KACL5P,EAAK4P,EAAQ,GAAK3P,UAAU2P,GAE9B,OAAOa,GAAU3V,GAAQ+E,GAAS+c,GAAU/c,GAAS,CAACA,GAAQwiB,GAAYriB,EAAM,G,EAm7SlFga,GAAOylB,KA3tCP,SAAc9d,GACZ,IAAIviB,EAAkB,MAATuiB,EAAgB,EAAIA,EAAMviB,OACnCgyB,EAAazI,KASjB,OAPAhH,EAASviB,EAAcoR,GAASmR,GAAO,SAASiR,GAC9C,GAAsB,mBAAXA,EAAK,GACd,MAAM,IAAIlxB,GAAU0E,GAEtB,MAAO,CAACgrB,EAAWwB,EAAK,IAAKA,EAAK,G,IAJlB,GAOX9I,IAAS,SAAS9pB,GAEvB,IADA,IAAI4P,GAAQ,IACHA,EAAQxQ,GAAQ,CACvB,IAAIwzB,EAAOjR,EAAM/R,GACjB,GAAIxP,GAAMwyB,EAAK,GAAI/zB,KAAMmB,GACvB,OAAOI,GAAMwyB,EAAK,GAAI/zB,KAAMmB,E,MA4sCpCga,GAAO0lB,SA9qCP,SAAkBv2B,GAChB,OAz5YF,SAAsBA,GACpB,IAAIqJ,EAAQ3V,GAAKsM,GACjB,OAAO,SAAS0I,GACd,OAAO2O,GAAe3O,EAAQ1I,EAAQqJ,E,EAs5YjCmtB,CAAaxhB,GAAUhV,EA/ieZ,G,EA6tgBpB6Q,GAAOsQ,SAAWA,GAClBtQ,GAAOyd,QAAUA,GACjBzd,GAAOvD,OAtuHP,SAAgBzZ,EAAW4iC,GACzB,IAAIzvB,EAASkK,GAAWrd,GACxB,OAAqB,MAAd4iC,EAAqBzvB,EAASoN,GAAWpN,EAAQyvB,E,EAquH1D5lB,GAAO6lB,MAzuMP,SAASA,EAAMvwB,EAAMkhB,EAAO9B,GAE1B,IAAIve,EAAS8iB,GAAW3jB,EA7+TN,EA6+T6B5M,EAAWA,EAAWA,EAAWA,EAAWA,EAD3F8tB,EAAQ9B,EAAQhsB,EAAY8tB,GAG5B,OADArgB,EAAO8C,YAAc4sB,EAAM5sB,YACpB9C,C,EAsuMT6J,GAAO8lB,WA7rMP,SAASA,EAAWxwB,EAAMkhB,EAAO9B,GAE/B,IAAIve,EAAS8iB,GAAW3jB,EAAM/I,EAAuB7D,EAAWA,EAAWA,EAAWA,EAAWA,EADjG8tB,EAAQ9B,EAAQhsB,EAAY8tB,GAG5B,OADArgB,EAAO8C,YAAc6sB,EAAW7sB,YACzB9C,C,EA0rMT6J,GAAOse,SAAWA,GAClBte,GAAOlF,SAAWA,GAClBkF,GAAO8hB,aAAeA,GACtB9hB,GAAO4f,MAAQA,GACf5f,GAAO6f,MAAQA,GACf7f,GAAO6b,WAAaA,GACpB7b,GAAO8b,aAAeA,GACtB9b,GAAO+b,eAAiBA,GACxB/b,GAAO+lB,KAt0SP,SAAclgC,EAAOqS,EAAGwc,GACtB,IAAItvB,EAAkB,MAATS,EAAgB,EAAIA,EAAMT,OACvC,OAAKA,EAIEorB,GAAU3qB,GADjBqS,EAAIwc,GAAUxc,IAAMxP,EAAa,EAAIiwB,GAAUzgB,IACnB,EAAI,EAAIA,EAAG9S,GAH9B,E,EAo0SX4a,GAAOgmB,UArySP,SAAmBngC,EAAOqS,EAAGwc,GAC3B,IAAItvB,EAAkB,MAATS,EAAgB,EAAIA,EAAMT,OACvC,OAAKA,EAKEorB,GAAU3qB,EAAO,GADxBqS,EAAI9S,GADJ8S,EAAIwc,GAAUxc,IAAMxP,EAAa,EAAIiwB,GAAUzgB,KAEhB,EAAI,EAAIA,GAJ9B,E,EAmySX8H,GAAOimB,eAzvSP,SAAwBpgC,EAAOmQ,GAC7B,OAAOnQ,GAAUA,EAAMT,OACnB6sB,GAAUpsB,EAAO8oB,GAAY3Y,EAAW,IAAI,GAAM,GAClD,E,EAuvSNgK,GAAOkmB,UAjtSP,SAAmBrgC,EAAOmQ,GACxB,OAAOnQ,GAAUA,EAAMT,OACnB6sB,GAAUpsB,EAAO8oB,GAAY3Y,EAAW,IAAI,GAC5C,E,EA+sSNgK,GAAOmmB,KA/qSP,SAActgC,EAAOhC,EAAOsG,EAAOJ,GACjC,IAAI3E,EAAkB,MAATS,EAAgB,EAAIA,EAAMT,OACvC,OAAKA,GAGD+E,GAAyB,iBAATA,GAAqBwqB,GAAe9uB,EAAOhC,EAAOsG,KACpEA,EAAQ,EACRJ,EAAM3E,GAzvIV,SAAkBS,EAAOhC,EAAOsG,EAAOJ,GACrC,IAAI3E,EAASS,EAAMT,OAWnB,KATA+E,EAAQwuB,GAAUxuB,IACN,IACVA,GAASA,EAAQ/E,EAAS,EAAKA,EAAS+E,IAE1CJ,EAAMA,IAASrB,GAAaqB,EAAM3E,EAAUA,EAASuzB,GAAU5uB,IACrD,IACRA,GAAO3E,GAET2E,EAAMI,EAAQJ,EAAM,EAAIs3B,GAASt3B,GAC1BI,EAAQJ,GACblE,EAAMsE,KAAWtG,EAEnB,OAAOgC,C,CA4uIAugC,CAASvgC,EAAOhC,EAAOsG,EAAOJ,IAN5B,E,EA6qSXiW,GAAOqmB,OA3vOP,SAAgBlvB,EAAYnB,GAE1B,OADWlV,GAAQqW,GAAclB,GAAcmS,IACnCjR,EAAYwX,GAAY3Y,EAAW,G,EA0vOjDgK,GAAOsmB,QAvqOP,SAAiBnvB,EAAYzB,GAC3B,OAAO2S,GAAY5O,GAAItC,EAAYzB,GAAW,E,EAuqOhDsK,GAAOumB,YAhpOP,SAAqBpvB,EAAYzB,GAC/B,OAAO2S,GAAY5O,GAAItC,EAAYzB,GAAW9I,E,EAgpOhDoT,GAAOwmB,aAxnOP,SAAsBrvB,EAAYzB,EAAU4S,GAE1C,OADAA,EAAQA,IAAU5f,EAAY,EAAIiwB,GAAUrQ,GACrCD,GAAY5O,GAAItC,EAAYzB,GAAW4S,E,EAunOhDtI,GAAO+Z,QAAUA,GACjB/Z,GAAOymB,YAviSP,SAAqB5gC,GAEnB,OADsB,MAATA,EAAgB,EAAIA,EAAMT,QACvBijB,GAAYxiB,EAAO+G,GAAY,E,EAsiSjDoT,GAAO0mB,aA/gSP,SAAsB7gC,EAAOyiB,GAE3B,OADsB,MAATziB,EAAgB,EAAIA,EAAMT,QAKhCijB,GAAYxiB,EADnByiB,EAAQA,IAAU5f,EAAY,EAAIiwB,GAAUrQ,IAFnC,E,EA6gSXtI,GAAO2mB,KAz9LP,SAAcrxB,GACZ,OAAO2jB,GAAW3jB,EA5wUD,I,EAqugBnB0K,GAAO8jB,KAAOA,GACd9jB,GAAO+jB,UAAYA,GACnB/jB,GAAO4mB,UA3/RP,SAAmBjf,GAKjB,IAJA,IAAI/R,GAAQ,EACRxQ,EAAkB,MAATuiB,EAAgB,EAAIA,EAAMviB,OACnC+Q,EAAS,KAEJP,EAAQxQ,GAAQ,CACvB,IAAIwzB,EAAOjR,EAAM/R,GACjBO,EAAOyiB,EAAK,IAAMA,EAAK,E,CAEzB,OAAOziB,C,EAm/RT6J,GAAO6mB,UA38GP,SAAmBhvB,GACjB,OAAiB,MAAVA,EAAiB,GAAK+Q,GAAc/Q,EAAQhV,GAAKgV,G,EA28G1DmI,GAAO8mB,YAj7GP,SAAqBjvB,GACnB,OAAiB,MAAVA,EAAiB,GAAK+Q,GAAc/Q,EAAQuN,GAAOvN,G,EAi7G5DmI,GAAO6d,QAAUA,GACjB7d,GAAO+mB,QA56RP,SAAiBlhC,GAEf,OADsB,MAATA,EAAgB,EAAIA,EAAMT,QACvBorB,GAAU3qB,EAAO,GAAG,GAAM,E,EA26R5Cma,GAAOmc,aAAeA,GACtBnc,GAAOqc,eAAiBA,GACxBrc,GAAOsc,iBAAmBA,GAC1Btc,GAAOgiB,OAASA,GAChBhiB,GAAOiiB,SAAWA,GAClBjiB,GAAO8d,UAAYA,GACnB9d,GAAOtK,SAAWA,GAClBsK,GAAO+d,MAAQA,GACf/d,GAAOnd,KAAOA,GACdmd,GAAOoF,OAASA,GAChBpF,GAAOvG,IAAMA,GACbuG,GAAOgnB,QA1rGP,SAAiBnvB,EAAQnC,GACvB,IAAIS,EAAS,GAMb,OALAT,EAAWiZ,GAAYjZ,EAAU,GAEjCoS,GAAWjQ,GAAQ,SAAShU,EAAOd,EAAK8U,GACtCoL,GAAgB9M,EAAQT,EAAS7R,EAAOd,EAAK8U,GAAShU,E,IAEjDsS,C,EAorGT6J,GAAOinB,UArpGP,SAAmBpvB,EAAQnC,GACzB,IAAIS,EAAS,GAMb,OALAT,EAAWiZ,GAAYjZ,EAAU,GAEjCoS,GAAWjQ,GAAQ,SAAShU,EAAOd,EAAK8U,GACtCoL,GAAgB9M,EAAQpT,EAAK2S,EAAS7R,EAAOd,EAAK8U,G,IAE7C1B,C,EA+oGT6J,GAAOknB,QAphCP,SAAiB/3B,GACf,OAAO2d,GAAY3I,GAAUhV,EAxveX,G,EA4wgBpB6Q,GAAOmnB,gBAh/BP,SAAyBhlC,EAAMqqB,GAC7B,OAAOK,GAAoB1qB,EAAMgiB,GAAUqI,EA7xezB,G,EA6wgBpBxM,GAAOwb,QAAUA,GACjBxb,GAAOmiB,MAAQA,GACfniB,GAAO+hB,UAAYA,GACnB/hB,GAAOgkB,OAASA,GAChBhkB,GAAOikB,SAAWA,GAClBjkB,GAAOkkB,MAAQA,GACflkB,GAAOigB,OAASA,GAChBjgB,GAAOonB,OAzzBP,SAAgBlvB,GAEd,OADAA,EAAIygB,GAAUzgB,GACP4X,IAAS,SAAS9pB,GACvB,OAAOuoB,GAAQvoB,EAAMkS,E,KAuzBzB8H,GAAOoiB,KAAOA,GACdpiB,GAAOqnB,OAnhGP,SAAgBxvB,EAAQ7B,GACtB,OAAOusB,GAAO1qB,EAAQooB,GAAOtR,GAAY3Y,I,EAmhG3CgK,GAAOpZ,KA73LP,SAAc0O,GACZ,OAAO4oB,GAAO,EAAG5oB,E,EA63LnB0K,GAAOsnB,QAr4NP,SAAiBnwB,EAAYsX,EAAWC,EAAQgG,GAC9C,OAAkB,MAAdvd,EACK,IAEJrW,GAAQ2tB,KACXA,EAAyB,MAAbA,EAAoB,GAAK,CAACA,IAGnC3tB,GADL4tB,EAASgG,EAAQhsB,EAAYgmB,KAE3BA,EAAmB,MAAVA,EAAiB,GAAK,CAACA,IAE3BF,GAAYrX,EAAYsX,EAAWC,G,EA23N5C1O,GAAOmkB,KAAOA,GACdnkB,GAAOkgB,SAAWA,GAClBlgB,GAAOokB,UAAYA,GACnBpkB,GAAOqkB,SAAWA,GAClBrkB,GAAOqgB,QAAUA,GACjBrgB,GAAOsgB,aAAeA,GACtBtgB,GAAOge,UAAYA,GACnBhe,GAAOjF,KAAOA,GACdiF,GAAOuiB,OAASA,GAChBviB,GAAO+M,SAAWA,GAClB/M,GAAOunB,WA/rBP,SAAoB1vB,GAClB,OAAO,SAAS1V,GACd,OAAiB,MAAV0V,EAAiBnP,EAAYogB,GAAQjR,EAAQ1V,E,GA8rBxD6d,GAAOuc,KAAOA,GACdvc,GAAOwc,QAAUA,GACjBxc,GAAOwnB,UApsRP,SAAmB3hC,EAAO6Q,EAAQhB,GAChC,OAAO7P,GAAUA,EAAMT,QAAUsR,GAAUA,EAAOtR,OAC9CmqB,GAAY1pB,EAAO6Q,EAAQiY,GAAYjZ,EAAU,IACjD7P,C,EAksRNma,GAAOynB,YAxqRP,SAAqB5hC,EAAO6Q,EAAQH,GAClC,OAAO1Q,GAAUA,EAAMT,QAAUsR,GAAUA,EAAOtR,OAC9CmqB,GAAY1pB,EAAO6Q,EAAQhO,EAAW6N,GACtC1Q,C,EAsqRNma,GAAOyc,OAASA,GAChBzc,GAAOukB,MAAQA,GACfvkB,GAAOwkB,WAAaA,GACpBxkB,GAAOugB,MAAQA,GACfvgB,GAAO0nB,OAxvNP,SAAgBvwB,EAAYnB,GAE1B,OADWlV,GAAQqW,GAAclB,GAAcmS,IACnCjR,EAAY8oB,GAAOtR,GAAY3Y,EAAW,I,EAuvNxDgK,GAAO2nB,OAzmRP,SAAgB9hC,EAAOmQ,GACrB,IAAIG,EAAS,GACb,IAAMtQ,IAASA,EAAMT,OACnB,OAAO+Q,EAET,IAAIP,GAAQ,EACR8Z,EAAU,GACVtqB,EAASS,EAAMT,OAGnB,IADA4Q,EAAY2Y,GAAY3Y,EAAW,KAC1BJ,EAAQxQ,GAAQ,CACvB,IAAIvB,EAAQgC,EAAM+P,GACdI,EAAUnS,EAAO+R,EAAO/P,KAC1BsQ,EAAOhQ,KAAKtC,GACZ6rB,EAAQvpB,KAAKyP,G,CAIjB,OADA6Z,GAAW5pB,EAAO6pB,GACXvZ,C,EAwlRT6J,GAAO4nB,KAluLP,SAActyB,EAAMnL,GAClB,GAAmB,mBAARmL,EACT,MAAM,IAAI5N,GAAU0E,GAGtB,OAAO0jB,GAASxa,EADhBnL,EAAQA,IAAUzB,EAAYyB,EAAQwuB,GAAUxuB,G,EA+tLlD6V,GAAOnB,QAAUA,GACjBmB,GAAO6nB,WAhtNP,SAAoB1wB,EAAYe,EAAGwc,GAOjC,OALExc,GADGwc,EAAQC,GAAexd,EAAYe,EAAGwc,GAASxc,IAAMxP,GACpD,EAEAiwB,GAAUzgB,IAELpX,GAAQqW,GAAcuL,GAAkBwN,IACvC/Y,EAAYe,E,EA0sN1B8H,GAAOjG,IAv6FP,SAAalC,EAAQ1V,EAAM0B,GACzB,OAAiB,MAAVgU,EAAiBA,EAASyX,GAAQzX,EAAQ1V,EAAM0B,E,EAu6FzDmc,GAAO8nB,QA54FP,SAAiBjwB,EAAQ1V,EAAM0B,EAAOwgB,GAEpC,OADAA,EAAkC,mBAAdA,EAA2BA,EAAa3b,EAC3C,MAAVmP,EAAiBA,EAASyX,GAAQzX,EAAQ1V,EAAM0B,EAAOwgB,E,EA24FhErE,GAAO+nB,QA1rNP,SAAiB5wB,GAEf,OADWrW,GAAQqW,GAAc2L,GAAeyN,IACpCpZ,E,EAyrNd6I,GAAOzd,MAhjRP,SAAesD,EAAOsE,EAAOJ,GAC3B,IAAI3E,EAAkB,MAATS,EAAgB,EAAIA,EAAMT,OACvC,OAAKA,GAGD2E,GAAqB,iBAAPA,GAAmB4qB,GAAe9uB,EAAOsE,EAAOJ,IAChEI,EAAQ,EACRJ,EAAM3E,IAGN+E,EAAiB,MAATA,EAAgB,EAAIwuB,GAAUxuB,GACtCJ,EAAMA,IAAQrB,EAAYtD,EAASuzB,GAAU5uB,IAExCymB,GAAU3qB,EAAOsE,EAAOJ,IAVtB,E,EA8iRXiW,GAAOie,OAASA,GAChBje,GAAOgoB,WAx3QP,SAAoBniC,GAClB,OAAOA,GAAUA,EAAMT,OACnBqsB,GAAe5rB,GACf,E,EAs3QNma,GAAOioB,aAn2QP,SAAsBpiC,EAAO6P,GAC3B,OAAO7P,GAAUA,EAAMT,OACnBqsB,GAAe5rB,EAAO8oB,GAAYjZ,EAAU,IAC5C,E,EAi2QNsK,GAAO3F,MA5hEP,SAAejC,EAAQ8vB,EAAWC,GAKhC,OAJIA,GAAyB,iBAATA,GAAqBxT,GAAevc,EAAQ8vB,EAAWC,KACzED,EAAYC,EAAQz/B,IAEtBy/B,EAAQA,IAAUz/B,EAAYqE,EAAmBo7B,IAAU,IAI3D/vB,EAAS1U,GAAS0U,MAEQ,iBAAb8vB,GACO,MAAbA,IAAsBjzB,GAASizB,OAEpCA,EAAYvW,GAAauW,KACP5uB,GAAWlB,GACpB0a,GAAU3Y,GAAc/B,GAAS,EAAG+vB,GAGxC/vB,EAAOiC,MAAM6tB,EAAWC,GAZtB,E,EAuhEXnoB,GAAOooB,OAnsLP,SAAgB9yB,EAAMnL,GACpB,GAAmB,mBAARmL,EACT,MAAM,IAAI5N,GAAU0E,GAGtB,OADAjC,EAAiB,MAATA,EAAgB,EAAIiU,GAAUua,GAAUxuB,GAAQ,GACjD2lB,IAAS,SAAS9pB,GACvB,IAAIH,EAAQG,EAAKmE,GACbwwB,EAAY7H,GAAU9sB,EAAM,EAAGmE,GAKnC,OAHItE,GACF4Q,GAAUkkB,EAAW90B,GAEhBO,GAAMkP,EAAMzQ,KAAM81B,E,KAwrL7B3a,GAAOqoB,KAl1QP,SAAcxiC,GACZ,IAAIT,EAAkB,MAATS,EAAgB,EAAIA,EAAMT,OACvC,OAAOA,EAASorB,GAAU3qB,EAAO,EAAGT,GAAU,E,EAi1QhD4a,GAAOsoB,KArzQP,SAAcziC,EAAOqS,EAAGwc,GACtB,OAAM7uB,GAASA,EAAMT,OAIdorB,GAAU3qB,EAAO,GADxBqS,EAAIwc,GAAUxc,IAAMxP,EAAa,EAAIiwB,GAAUzgB,IAChB,EAAI,EAAIA,GAH9B,E,EAozQX8H,GAAOuoB,UArxQP,SAAmB1iC,EAAOqS,EAAGwc,GAC3B,IAAItvB,EAAkB,MAATS,EAAgB,EAAIA,EAAMT,OACvC,OAAKA,EAKEorB,GAAU3qB,GADjBqS,EAAI9S,GADJ8S,EAAIwc,GAAUxc,IAAMxP,EAAa,EAAIiwB,GAAUzgB,KAEnB,EAAI,EAAIA,EAAG9S,GAJ9B,E,EAmxQX4a,GAAOwoB,eAzuQP,SAAwB3iC,EAAOmQ,GAC7B,OAAOnQ,GAAUA,EAAMT,OACnB6sB,GAAUpsB,EAAO8oB,GAAY3Y,EAAW,IAAI,GAAO,GACnD,E,EAuuQNgK,GAAOyoB,UAjsQP,SAAmB5iC,EAAOmQ,GACxB,OAAOnQ,GAAUA,EAAMT,OACnB6sB,GAAUpsB,EAAO8oB,GAAY3Y,EAAW,IACxC,E,EA+rQNgK,GAAO0oB,IApuPP,SAAa7kC,EAAO05B,GAElB,OADAA,EAAY15B,GACLA,C,EAmuPTmc,GAAO2oB,SA9oLP,SAAkBrzB,EAAMoR,EAAMjlB,GAC5B,IAAIo9B,GAAU,EACV9J,GAAW,EAEf,GAAmB,mBAARzf,EACT,MAAM,IAAI5N,GAAU0E,GAMtB,OAJImU,GAAS9e,KACXo9B,EAAU,YAAap9B,IAAYA,EAAQo9B,QAAUA,EACrD9J,EAAW,aAActzB,IAAYA,EAAQszB,SAAWA,GAEnDuJ,GAAShpB,EAAMoR,EAAM,CAC1BmY,QAAWA,EACXJ,QAAW/X,EACXqO,SAAYA,G,EAioLhB/U,GAAO4V,KAAOA,GACd5V,GAAOghB,QAAUA,GACjBhhB,GAAOyiB,QAAUA,GACjBziB,GAAO0iB,UAAYA,GACnB1iB,GAAO4oB,OArfP,SAAgB/kC,GACd,OAAI/C,GAAQ+C,GACH2S,GAAS3S,EAAOmlB,IAElBb,GAAStkB,GAAS,CAACA,GAAS+e,GAAUgQ,GAAalvB,GAASG,I,EAkfrEmc,GAAOqO,cAAgBA,GACvBrO,GAAOpG,UA10FP,SAAmB/B,EAAQnC,EAAUC,GACnC,IAAIsM,EAAQnhB,GAAQ+W,GAChBgxB,EAAY5mB,GAASlE,GAASlG,IAAWxC,GAAawC,GAG1D,GADAnC,EAAWiZ,GAAYjZ,EAAU,GACd,MAAfC,EAAqB,CACvB,IAAI6P,EAAO3N,GAAUA,EAAO6M,YAE1B/O,EADEkzB,EACY5mB,EAAQ,IAAIuD,EAAO,GAE1BjF,GAAS1I,IACFgR,GAAWrD,GAAQnF,GAAW/D,GAAazE,IAG3C,E,CAMlB,OAHCgxB,EAAYhzB,GAAYiS,IAAYjQ,GAAQ,SAAShU,EAAO+R,EAAOiC,GAClE,OAAOnC,EAASC,EAAa9R,EAAO+R,EAAOiC,E,IAEtClC,C,EAuzFTqK,GAAO8oB,MArnLP,SAAexzB,GACb,OAAOihB,GAAIjhB,EAAM,E,EAqnLnB0K,GAAO0c,MAAQA,GACf1c,GAAO2c,QAAUA,GACjB3c,GAAO4c,UAAYA,GACnB5c,GAAO+oB,KAzmQP,SAAcljC,GACZ,OAAOA,GAAUA,EAAMT,OAAUwsB,GAAS/rB,GAAS,E,EAymQrDma,GAAOgpB,OA/kQP,SAAgBnjC,EAAO6P,GACrB,OAAO7P,GAAUA,EAAMT,OAAUwsB,GAAS/rB,EAAO8oB,GAAYjZ,EAAU,IAAM,E,EA+kQ/EsK,GAAOipB,SAxjQP,SAAkBpjC,EAAO0Q,GAEvB,OADAA,EAAkC,mBAAdA,EAA2BA,EAAa7N,EACrD7C,GAAUA,EAAMT,OAAUwsB,GAAS/rB,EAAO6C,EAAW6N,GAAc,E,EAujQ5EyJ,GAAOkpB,MAhyFP,SAAerxB,EAAQ1V,GACrB,OAAiB,MAAV0V,GAAwB+X,GAAU/X,EAAQ1V,E,EAgyFnD6d,GAAO6c,MAAQA,GACf7c,GAAO+c,UAAYA,GACnB/c,GAAOmpB,OApwFP,SAAgBtxB,EAAQ1V,EAAM6vB,GAC5B,OAAiB,MAAVna,EAAiBA,EAASka,GAAWla,EAAQ1V,EAAMwwB,GAAaX,G,EAowFzEhS,GAAOopB,WAzuFP,SAAoBvxB,EAAQ1V,EAAM6vB,EAAS3N,GAEzC,OADAA,EAAkC,mBAAdA,EAA2BA,EAAa3b,EAC3C,MAAVmP,EAAiBA,EAASka,GAAWla,EAAQ1V,EAAMwwB,GAAaX,GAAU3N,E,EAwuFnFrE,GAAOtJ,OAASA,GAChBsJ,GAAOqpB,SAhrFP,SAAkBxxB,GAChB,OAAiB,MAAVA,EAAiB,GAAKU,GAAWV,EAAQuN,GAAOvN,G,EAgrFzDmI,GAAOgd,QAAUA,GACjBhd,GAAOkV,MAAQA,GACflV,GAAOspB,KA3mLP,SAAczlC,EAAOgyB,GACnB,OAAOwK,GAAQ1N,GAAakD,GAAUhyB,E,EA2mLxCmc,GAAOid,IAAMA,GACbjd,GAAOkd,MAAQA,GACfld,GAAOmd,QAAUA,GACjBnd,GAAOod,IAAMA,GACbpd,GAAOupB,UAj3PP,SAAmB/wB,EAAO9B,GACxB,OAAO6b,GAAc/Z,GAAS,GAAI9B,GAAU,GAAIwM,G,EAi3PlDlD,GAAOwpB,cA/1PP,SAAuBhxB,EAAO9B,GAC5B,OAAO6b,GAAc/Z,GAAS,GAAI9B,GAAU,GAAI4Y,G,EA+1PlDtP,GAAOqd,QAAUA,GAGjBrd,GAAOqB,QAAUohB,GACjBziB,GAAOypB,UAAY/G,GACnB1iB,GAAO0pB,OAASlI,GAChBxhB,GAAO2pB,WAAalI,GAGpByC,GAAMlkB,GAAQA,IAKdA,GAAO4B,IAAMA,GACb5B,GAAO2jB,QAAUA,GACjB3jB,GAAO2iB,UAAYA,GACnB3iB,GAAO8iB,WAAaA,GACpB9iB,GAAOvC,KAAOA,GACduC,GAAO4pB,MAprFP,SAAe5lB,EAAQC,EAAOC,GAa5B,OAZIA,IAAUxb,IACZwb,EAAQD,EACRA,EAAQvb,GAENwb,IAAUxb,IAEZwb,GADAA,EAAQiU,GAASjU,KACCA,EAAQA,EAAQ,GAEhCD,IAAUvb,IAEZub,GADAA,EAAQkU,GAASlU,KACCA,EAAQA,EAAQ,GAE7BpB,GAAUsV,GAASnU,GAASC,EAAOC,E,EAwqF5ClE,GAAO4b,MA7jLP,SAAe/3B,GACb,OAAOsgB,GAAUtgB,EArzVI,E,EAk3gBvBmc,GAAO6pB,UApgLP,SAAmBhmC,GACjB,OAAOsgB,GAAUtgB,EAAOw+B,E,EAogL1BriB,GAAO8pB,cAr+KP,SAAuBjmC,EAAOwgB,GAE5B,OAAOF,GAAUtgB,EAAOw+B,EADxBhe,EAAkC,mBAAdA,EAA2BA,EAAa3b,E,EAq+K9DsX,GAAO+pB,UA7hLP,SAAmBlmC,EAAOwgB,GAExB,OAAOF,GAAUtgB,EAz1VI,EAw1VrBwgB,EAAkC,mBAAdA,EAA2BA,EAAa3b,E,EA6hL9DsX,GAAOgqB,WA18KP,SAAoBnyB,EAAQ1I,GAC1B,OAAiB,MAAVA,GAAkBqX,GAAe3O,EAAQ1I,EAAQtM,GAAKsM,G,EA08K/D6Q,GAAOmV,OAASA,GAChBnV,GAAOiqB,UA1xCP,SAAmBpmC,EAAO2zB,GACxB,OAAiB,MAAV3zB,GAAkBA,GAAUA,EAAS2zB,EAAe3zB,C,EA0xC7Dmc,GAAO2kB,OAASA,GAChB3kB,GAAOkqB,SAz9EP,SAAkB9xB,EAAQ+xB,EAAQC,GAChChyB,EAAS1U,GAAS0U,GAClB+xB,EAASxY,GAAawY,GAEtB,IAAI/kC,EAASgT,EAAOhT,OAKhB2E,EAJJqgC,EAAWA,IAAa1hC,EACpBtD,EACAyd,GAAU8V,GAAUyR,GAAW,EAAGhlC,GAItC,OADAglC,GAAYD,EAAO/kC,SACA,GAAKgT,EAAO7V,MAAM6nC,EAAUrgC,IAAQogC,C,EA+8EzDnqB,GAAOgD,GAAKA,GACZhD,GAAOmH,OAj7EP,SAAgB/O,GAEd,OADAA,EAAS1U,GAAS0U,KACAhJ,EAAmBmK,KAAKnB,GACtCA,EAAOzU,QAAQqL,EAAiBmK,IAChCf,C,EA86EN4H,GAAOqqB,aA55EP,SAAsBjyB,GAEpB,OADAA,EAAS1U,GAAS0U,KACAxI,GAAgB2J,KAAKnB,GACnCA,EAAOzU,QAAQgM,GAAc,QAC7ByI,C,EAy5EN4H,GAAOsqB,MA57OP,SAAenzB,EAAYnB,EAAW0e,GACpC,IAAIpf,EAAOxU,GAAQqW,GAAcpB,GAAakS,GAI9C,OAHIyM,GAASC,GAAexd,EAAYnB,EAAW0e,KACjD1e,EAAYtN,GAEP4M,EAAK6B,EAAYwX,GAAY3Y,EAAW,G,EAw7OjDgK,GAAO0d,KAAOA,GACd1d,GAAOgc,UAAYA,GACnBhc,GAAOuqB,QArxHP,SAAiB1yB,EAAQ7B,GACvB,OAAOkB,GAAYW,EAAQ8W,GAAY3Y,EAAW,GAAI8R,G,EAqxHxD9H,GAAO2d,SAAWA,GAClB3d,GAAOic,cAAgBA,GACvBjc,GAAOwqB,YAjvHP,SAAqB3yB,EAAQ7B,GAC3B,OAAOkB,GAAYW,EAAQ8W,GAAY3Y,EAAW,GAAIgS,G,EAivHxDhI,GAAOrC,MAAQA,GACfqC,GAAOld,QAAUA,GACjBkd,GAAO4d,aAAeA,GACtB5d,GAAOyqB,MArtHP,SAAe5yB,EAAQnC,GACrB,OAAiB,MAAVmC,EACHA,EACA4Q,GAAQ5Q,EAAQ8W,GAAYjZ,EAAU,GAAI0P,G,EAmtHhDpF,GAAO0qB,WAtrHP,SAAoB7yB,EAAQnC,GAC1B,OAAiB,MAAVmC,EACHA,EACA8Q,GAAa9Q,EAAQ8W,GAAYjZ,EAAU,GAAI0P,G,EAorHrDpF,GAAO2qB,OArpHP,SAAgB9yB,EAAQnC,GACtB,OAAOmC,GAAUiQ,GAAWjQ,EAAQ8W,GAAYjZ,EAAU,G,EAqpH5DsK,GAAO4qB,YAxnHP,SAAqB/yB,EAAQnC,GAC3B,OAAOmC,GAAUmQ,GAAgBnQ,EAAQ8W,GAAYjZ,EAAU,G,EAwnHjEsK,GAAO+D,IAAMA,GACb/D,GAAOwgB,GAAKA,GACZxgB,GAAOygB,IAAMA,GACbzgB,GAAOrH,IAzgHP,SAAad,EAAQ1V,GACnB,OAAiB,MAAV0V,GAAkBuiB,GAAQviB,EAAQ1V,EAAMwnB,G,EAygHjD3J,GAAO4N,MAAQA,GACf5N,GAAOkc,KAAOA,GACdlc,GAAO4M,SAAWA,GAClB5M,GAAO4G,SA5pOP,SAAkBzP,EAAYtT,EAAOyT,EAAWod,GAC9Cvd,EAAaoW,GAAYpW,GAAcA,EAAaT,GAAOS,GAC3DG,EAAYA,IAAeod,EAASiE,GAAUrhB,GAAa,EAE3D,IAAIlS,EAAS+R,EAAW/R,OAIxB,OAHIkS,EAAY,IACdA,EAAY8G,GAAUhZ,EAASkS,EAAW,IAErCupB,GAAS1pB,GACXG,GAAalS,GAAU+R,EAAWqY,QAAQ3rB,EAAOyT,IAAa,IAC5DlS,GAAUiR,GAAYc,EAAYtT,EAAOyT,IAAa,C,EAmpO/D0I,GAAOwP,QA9lSP,SAAiB3pB,EAAOhC,EAAOyT,GAC7B,IAAIlS,EAAkB,MAATS,EAAgB,EAAIA,EAAMT,OACvC,IAAKA,EACH,OAAO,EAET,IAAIwQ,EAAqB,MAAb0B,EAAoB,EAAIqhB,GAAUrhB,GAI9C,OAHI1B,EAAQ,IACVA,EAAQwI,GAAUhZ,EAASwQ,EAAO,IAE7BS,GAAYxQ,EAAOhC,EAAO+R,E,EAslSnCoK,GAAO6qB,QAlqFP,SAAiB7mB,EAAQ7Z,EAAOJ,GAS9B,OARAI,EAAQ6tB,GAAS7tB,GACbJ,IAAQrB,GACVqB,EAAMI,EACNA,EAAQ,GAERJ,EAAMiuB,GAASjuB,GArsVnB,SAAqBia,EAAQ7Z,EAAOJ,GAClC,OAAOia,GAAU1F,GAAUnU,EAAOJ,IAAQia,EAAS5F,GAAUjU,EAAOJ,E,CAusV7D+gC,CADP9mB,EAASmU,GAASnU,GACS7Z,EAAOJ,E,EA0pFpCiW,GAAOkiB,OAASA,GAChBliB,GAAOmC,YAAcA,GACrBnC,GAAOlf,QAAUA,GACjBkf,GAAOrL,cAAgBA,GACvBqL,GAAOuN,YAAcA,GACrBvN,GAAOmO,kBAAoBA,GAC3BnO,GAAO+qB,UAtwKP,SAAmBlnC,GACjB,OAAiB,IAAVA,IAA4B,IAAVA,GACtBoc,GAAapc,IAAUulB,GAAWvlB,IAAUsJ,C,EAqwKjD6S,GAAOjC,SAAWA,GAClBiC,GAAOnL,OAASA,GAChBmL,GAAOgrB,UA7sKP,SAAmBnnC,GACjB,OAAOoc,GAAapc,IAA6B,IAAnBA,EAAMqQ,WAAmBka,GAAcvqB,E,EA6sKvEmc,GAAOirB,QAzqKP,SAAiBpnC,GACf,GAAa,MAATA,EACF,OAAO,EAET,GAAI0pB,GAAY1pB,KACX/C,GAAQ+C,IAA0B,iBAATA,GAA4C,mBAAhBA,EAAM8Y,QAC1DoB,GAASla,IAAUwR,GAAaxR,IAAUse,GAAYte,IAC1D,OAAQA,EAAMuB,OAEhB,IAAIyf,EAAMC,GAAOjhB,GACjB,GAAIghB,GAAOrX,GAAUqX,GAAOhX,EAC1B,OAAQhK,EAAM6V,KAEhB,GAAIuT,GAAYppB,GACd,OAAQmpB,GAASnpB,GAAOuB,OAE1B,IAAK,IAAIrC,KAAOc,EACd,GAAIZ,GAAeC,KAAKW,EAAOd,GAC7B,OAAO,EAGX,OAAO,C,EAqpKTid,GAAOkrB,QAtnKP,SAAiBrnC,EAAO6lB,GACtB,OAAOe,GAAY5mB,EAAO6lB,E,EAsnK5B1J,GAAOmrB,YAnlKP,SAAqBtnC,EAAO6lB,EAAOrF,GAEjC,IAAIlO,GADJkO,EAAkC,mBAAdA,EAA2BA,EAAa3b,GAClC2b,EAAWxgB,EAAO6lB,GAAShhB,EACrD,OAAOyN,IAAWzN,EAAY+hB,GAAY5mB,EAAO6lB,EAAOhhB,EAAW2b,KAAgBlO,C,EAilKrF6J,GAAO0gB,QAAUA,GACjB1gB,GAAO/B,SA1hKP,SAAkBpa,GAChB,MAAuB,iBAATA,GAAqBma,GAAena,E,EA0hKpDmc,GAAO6I,WAAaA,GACpB7I,GAAO2gB,UAAYA,GACnB3gB,GAAOsa,SAAWA,GAClBta,GAAOjL,MAAQA,GACfiL,GAAOorB,QA11JP,SAAiBvzB,EAAQ1I,GACvB,OAAO0I,IAAW1I,GAAUkd,GAAYxU,EAAQ1I,EAAQqe,GAAare,G,EA01JvE6Q,GAAOqrB,YAvzJP,SAAqBxzB,EAAQ1I,EAAQkV,GAEnC,OADAA,EAAkC,mBAAdA,EAA2BA,EAAa3b,EACrD2jB,GAAYxU,EAAQ1I,EAAQqe,GAAare,GAASkV,E,EAszJ3DrE,GAAOsrB,MAvxJP,SAAeznC,GAIb,OAAO+8B,GAAS/8B,IAAUA,IAAUA,C,EAoxJtCmc,GAAOurB,SAvvJP,SAAkB1nC,GAChB,GAAI42B,GAAW52B,GACb,MAAM,IAAIU,GAtsXM,mEAwsXlB,OAAOmoB,GAAa7oB,E,EAovJtBmc,GAAOwrB,MAxsJP,SAAe3nC,GACb,OAAgB,MAATA,C,EAwsJTmc,GAAOyrB,OAjuJP,SAAgB5nC,GACd,OAAiB,OAAVA,C,EAiuJTmc,GAAO4gB,SAAWA,GAClB5gB,GAAOO,SAAWA,GAClBP,GAAOC,aAAeA,GACtBD,GAAOoO,cAAgBA,GACvBpO,GAAO/K,SAAWA,GAClB+K,GAAO0rB,cArlJP,SAAuB7nC,GACrB,OAAO88B,GAAU98B,IAAUA,IAAS,kBAAqBA,GAASgJ,C,EAqlJpEmT,GAAO7K,MAAQA,GACf6K,GAAO6gB,SAAWA,GAClB7gB,GAAOmI,SAAWA,GAClBnI,GAAO3K,aAAeA,GACtB2K,GAAO2rB,YAn/IP,SAAqB9nC,GACnB,OAAOA,IAAU6E,C,EAm/InBsX,GAAO4rB,UA/9IP,SAAmB/nC,GACjB,OAAOoc,GAAapc,IAAUihB,GAAOjhB,IAAUmK,C,EA+9IjDgS,GAAO6rB,UA38IP,SAAmBhoC,GACjB,OAAOoc,GAAapc,IAn6XP,oBAm6XiBulB,GAAWvlB,E,EA28I3Cmc,GAAO5d,KAz/RP,SAAcyD,EAAOqiC,GACnB,OAAgB,MAATriC,EAAgB,GAAKqY,GAAWhb,KAAK2C,EAAOqiC,E,EAy/RrDloB,GAAOgjB,UAAYA,GACnBhjB,GAAOuK,KAAOA,GACdvK,GAAO1X,YAh9RP,SAAqBzC,EAAOhC,EAAOyT,GACjC,IAAIlS,EAAkB,MAATS,EAAgB,EAAIA,EAAMT,OACvC,IAAKA,EACH,OAAO,EAET,IAAIwQ,EAAQxQ,EAKZ,OAJIkS,IAAc5O,IAEhBkN,GADAA,EAAQ+iB,GAAUrhB,IACF,EAAI8G,GAAUhZ,EAASwQ,EAAO,GAAK0I,GAAU1I,EAAOxQ,EAAS,IAExEvB,GAAUA,EArvMrB,SAA2BgC,EAAOhC,EAAOyT,GAEvC,IADA,IAAI1B,EAAQ0B,EAAY,EACjB1B,KACL,GAAI/P,EAAM+P,KAAW/R,EACnB,OAAO+R,EAGX,OAAOA,C,CA+uMDk2B,CAAkBjmC,EAAOhC,EAAO+R,GAChCyB,GAAcxR,EAAO4R,GAAW7B,GAAO,E,EAq8R7CoK,GAAOijB,UAAYA,GACnBjjB,GAAOkjB,WAAaA,GACpBljB,GAAO8gB,GAAKA,GACZ9gB,GAAO+gB,IAAMA,GACb/gB,GAAO3B,IAhfP,SAAaxY,GACX,OAAOA,GAAUA,EAAMT,OACnB8iB,GAAariB,EAAO+mB,GAAUnD,IAC9B/gB,C,EA8eNsX,GAAO+rB,MApdP,SAAelmC,EAAO6P,GACpB,OAAO7P,GAAUA,EAAMT,OACnB8iB,GAAariB,EAAO8oB,GAAYjZ,EAAU,GAAI+T,IAC9C/gB,C,EAkdNsX,GAAOgsB,KAjcP,SAAcnmC,GACZ,OAAO8R,GAAS9R,EAAO+mB,G,EAiczB5M,GAAOisB,OAvaP,SAAgBpmC,EAAO6P,GACrB,OAAOiC,GAAS9R,EAAO8oB,GAAYjZ,EAAU,G,EAua/CsK,GAAOzB,IAlZP,SAAa1Y,GACX,OAAOA,GAAUA,EAAMT,OACnB8iB,GAAariB,EAAO+mB,GAAUS,IAC9B3kB,C,EAgZNsX,GAAOksB,MAtXP,SAAermC,EAAO6P,GACpB,OAAO7P,GAAUA,EAAMT,OACnB8iB,GAAariB,EAAO8oB,GAAYjZ,EAAU,GAAI2X,IAC9C3kB,C,EAoXNsX,GAAOma,UAAYA,GACnBna,GAAO0a,UAAYA,GACnB1a,GAAOmsB,WAztBP,WACE,MAAO,E,EAytBTnsB,GAAOosB,WAzsBP,WACE,MAAO,E,EAysBTpsB,GAAOqsB,SAzrBP,WACE,OAAO,C,EAyrBTrsB,GAAO8kB,SAAWA,GAClB9kB,GAAOssB,IA77RP,SAAazmC,EAAOqS,GAClB,OAAOrS,GAAUA,EAAMT,OAAUmpB,GAAQ1oB,EAAO8yB,GAAUzgB,IAAMxP,C,EA67RlEsX,GAAOusB,WAliCP,WAIE,OAHI1hC,GAAK4P,IAAM5V,OACbgG,GAAK4P,EAAIuB,IAEJnX,I,EA+hCTmb,GAAO6Y,KAAOA,GACd7Y,GAAO1C,IAAMA,GACb0C,GAAOwsB,IAj5EP,SAAap0B,EAAQhT,EAAQwyB,GAC3Bxf,EAAS1U,GAAS0U,GAGlB,IAAIq0B,GAFJrnC,EAASuzB,GAAUvzB,IAEM4U,GAAW5B,GAAU,EAC9C,IAAKhT,GAAUqnC,GAAarnC,EAC1B,OAAOgT,EAET,IAAI0Y,GAAO1rB,EAASqnC,GAAa,EACjC,OACE9U,GAAcja,GAAYoT,GAAM8G,GAChCxf,EACAuf,GAAcna,GAAWsT,GAAM8G,E,EAs4EnC5X,GAAO0sB,OA32EP,SAAgBt0B,EAAQhT,EAAQwyB,GAC9Bxf,EAAS1U,GAAS0U,GAGlB,IAAIq0B,GAFJrnC,EAASuzB,GAAUvzB,IAEM4U,GAAW5B,GAAU,EAC9C,OAAOhT,GAAWqnC,EAAYrnC,EACzBgT,EAASuf,GAAcvyB,EAASqnC,EAAW7U,GAC5Cxf,C,EAq2EN4H,GAAO2sB,SA30EP,SAAkBv0B,EAAQhT,EAAQwyB,GAChCxf,EAAS1U,GAAS0U,GAGlB,IAAIq0B,GAFJrnC,EAASuzB,GAAUvzB,IAEM4U,GAAW5B,GAAU,EAC9C,OAAOhT,GAAWqnC,EAAYrnC,EACzBuyB,GAAcvyB,EAASqnC,EAAW7U,GAASxf,EAC5CA,C,EAq0EN4H,GAAOrM,SA1yEP,SAAkByE,EAAQw0B,EAAOlY,GAM/B,OALIA,GAAkB,MAATkY,EACXA,EAAQ,EACCA,IACTA,GAASA,GAEJnuB,GAAe/a,GAAS0U,GAAQzU,QAAQkM,GAAa,IAAK+8B,GAAS,E,EAqyE5E5sB,GAAOrB,OA1rFP,SAAgBsF,EAAOC,EAAO2oB,GA2B5B,GA1BIA,GAA+B,kBAAZA,GAAyBlY,GAAe1Q,EAAOC,EAAO2oB,KAC3E3oB,EAAQ2oB,EAAWnkC,GAEjBmkC,IAAankC,IACK,kBAATwb,GACT2oB,EAAW3oB,EACXA,EAAQxb,GAEe,kBAATub,IACd4oB,EAAW5oB,EACXA,EAAQvb,IAGRub,IAAUvb,GAAawb,IAAUxb,GACnCub,EAAQ,EACRC,EAAQ,IAGRD,EAAQ+T,GAAS/T,GACbC,IAAUxb,GACZwb,EAAQD,EACRA,EAAQ,GAERC,EAAQ8T,GAAS9T,IAGjBD,EAAQC,EAAO,CACjB,IAAI4oB,EAAO7oB,EACXA,EAAQC,EACRA,EAAQ4oB,C,CAEV,GAAID,GAAY5oB,EAAQ,GAAKC,EAAQ,EAAG,CACtC,IAAIqX,EAAO7c,KACX,OAAOJ,GAAU2F,EAASsX,GAAQrX,EAAQD,EAAQzQ,GAAe,QAAU+nB,EAAO,IAAIn2B,OAAS,KAAO8e,E,CAExG,OAAOzB,GAAWwB,EAAOC,E,EAupF3BlE,GAAO+sB,OA5+NP,SAAgB51B,EAAYzB,EAAUC,GACpC,IAAIL,EAAOxU,GAAQqW,GAAcP,GAAcmB,GAC3ClB,EAAY5Q,UAAUb,OAAS,EAEnC,OAAOkQ,EAAK6B,EAAYwX,GAAYjZ,EAAU,GAAIC,EAAakB,EAAWyM,G,EAy+N5EtD,GAAOgtB,YAh9NP,SAAqB71B,EAAYzB,EAAUC,GACzC,IAAIL,EAAOxU,GAAQqW,GAAcL,GAAmBiB,GAChDlB,EAAY5Q,UAAUb,OAAS,EAEnC,OAAOkQ,EAAK6B,EAAYwX,GAAYjZ,EAAU,GAAIC,EAAakB,EAAWkR,G,EA68N5E/H,GAAOitB,OA/wEP,SAAgB70B,EAAQF,EAAGwc,GAMzB,OAJExc,GADGwc,EAAQC,GAAevc,EAAQF,EAAGwc,GAASxc,IAAMxP,GAChD,EAEAiwB,GAAUzgB,GAET2X,GAAWnsB,GAAS0U,GAASF,E,EA0wEtC8H,GAAOrc,QApvEP,WACE,IAAIqC,EAAOC,UACPmS,EAAS1U,GAASsC,EAAK,IAE3B,OAAOA,EAAKZ,OAAS,EAAIgT,EAASA,EAAOzU,QAAQqC,EAAK,GAAIA,EAAK,G,EAivEjEga,GAAO7J,OAtoGP,SAAgB0B,EAAQ1V,EAAMq1B,GAG5B,IAAI5hB,GAAQ,EACRxQ,GAHJjD,EAAO4mB,GAAS5mB,EAAM0V,IAGJzS,OAOlB,IAJKA,IACHA,EAAS,EACTyS,EAASnP,KAEFkN,EAAQxQ,GAAQ,CACvB,IAAIvB,EAAkB,MAAVgU,EAAiBnP,EAAYmP,EAAOmR,GAAM7mB,EAAKyT,KACvD/R,IAAU6E,IACZkN,EAAQxQ,EACRvB,EAAQ2zB,GAEV3f,EAASgR,GAAWhlB,GAASA,EAAMX,KAAK2U,GAAUhU,C,CAEpD,OAAOgU,C,EAonGTmI,GAAOilB,MAAQA,GACfjlB,GAAOtF,aAAeA,EACtBsF,GAAOktB,OA15NP,SAAgB/1B,GAEd,OADWrW,GAAQqW,GAAcqL,GAAcyN,IACnC9Y,E,EAy5Nd6I,GAAOtG,KA/0NP,SAAcvC,GACZ,GAAkB,MAAdA,EACF,OAAO,EAET,GAAIoW,GAAYpW,GACd,OAAO0pB,GAAS1pB,GAAc6C,GAAW7C,GAAcA,EAAW/R,OAEpE,IAAIyf,EAAMC,GAAO3N,GACjB,OAAI0N,GAAOrX,GAAUqX,GAAOhX,EACnBsJ,EAAWuC,KAEbsT,GAAS7V,GAAY/R,M,EAq0N9B4a,GAAOmjB,UAAYA,GACnBnjB,GAAOmtB,KA/xNP,SAAch2B,EAAYnB,EAAW0e,GACnC,IAAIpf,EAAOxU,GAAQqW,GAAcJ,GAAY0Z,GAI7C,OAHIiE,GAASC,GAAexd,EAAYnB,EAAW0e,KACjD1e,EAAYtN,GAEP4M,EAAK6B,EAAYwX,GAAY3Y,EAAW,G,EA2xNjDgK,GAAOotB,YAhsRP,SAAqBvnC,EAAOhC,GAC1B,OAAO6sB,GAAgB7qB,EAAOhC,E,EAgsRhCmc,GAAOqtB,cApqRP,SAAuBxnC,EAAOhC,EAAO6R,GACnC,OAAOqb,GAAkBlrB,EAAOhC,EAAO8qB,GAAYjZ,EAAU,G,EAoqR/DsK,GAAOstB,cAjpRP,SAAuBznC,EAAOhC,GAC5B,IAAIuB,EAAkB,MAATS,EAAgB,EAAIA,EAAMT,OACvC,GAAIA,EAAQ,CACV,IAAIwQ,EAAQ8a,GAAgB7qB,EAAOhC,GACnC,GAAI+R,EAAQxQ,GAAU4d,GAAGnd,EAAM+P,GAAQ/R,GACrC,OAAO+R,C,CAGX,OAAO,C,EA0oRToK,GAAOutB,gBArnRP,SAAyB1nC,EAAOhC,GAC9B,OAAO6sB,GAAgB7qB,EAAOhC,GAAO,E,EAqnRvCmc,GAAOwtB,kBAzlRP,SAA2B3nC,EAAOhC,EAAO6R,GACvC,OAAOqb,GAAkBlrB,EAAOhC,EAAO8qB,GAAYjZ,EAAU,IAAI,E,EAylRnEsK,GAAOytB,kBAtkRP,SAA2B5nC,EAAOhC,GAEhC,GADsB,MAATgC,EAAgB,EAAIA,EAAMT,OAC3B,CACV,IAAIwQ,EAAQ8a,GAAgB7qB,EAAOhC,GAAO,GAAQ,EAClD,GAAImf,GAAGnd,EAAM+P,GAAQ/R,GACnB,OAAO+R,C,CAGX,OAAO,C,EA+jRToK,GAAOojB,UAAYA,GACnBpjB,GAAO0tB,WA3oEP,SAAoBt1B,EAAQ+xB,EAAQC,GAOlC,OANAhyB,EAAS1U,GAAS0U,GAClBgyB,EAAuB,MAAZA,EACP,EACAvnB,GAAU8V,GAAUyR,GAAW,EAAGhyB,EAAOhT,QAE7C+kC,EAASxY,GAAawY,GACf/xB,EAAO7V,MAAM6nC,EAAUA,EAAWD,EAAO/kC,SAAW+kC,C,EAqoE7DnqB,GAAOklB,SAAWA,GAClBllB,GAAO2tB,IAzUP,SAAa9nC,GACX,OAAOA,GAAUA,EAAMT,OACnBwS,GAAQ/R,EAAO+mB,IACf,C,EAuUN5M,GAAO4tB,MA7SP,SAAe/nC,EAAO6P,GACpB,OAAO7P,GAAUA,EAAMT,OACnBwS,GAAQ/R,EAAO8oB,GAAYjZ,EAAU,IACrC,C,EA2SNsK,GAAO6tB,SA7hEP,SAAkBz1B,EAAQ3W,EAASizB,GAIjC,IAAIoZ,EAAW9tB,GAAOkH,iBAElBwN,GAASC,GAAevc,EAAQ3W,EAASizB,KAC3CjzB,EAAUiH,GAEZ0P,EAAS1U,GAAS0U,GAClB3W,EAAUggC,GAAa,GAAIhgC,EAASqsC,EAAUrU,IAE9C,IAIIsU,EACAC,EALAzmB,EAAUka,GAAa,GAAIhgC,EAAQ8lB,QAASumB,EAASvmB,QAASkS,IAC9DwU,EAAcprC,GAAK0kB,GACnB2mB,EAAgB31B,GAAWgP,EAAS0mB,GAIpCr4B,EAAQ,EACRyR,EAAc5lB,EAAQ4lB,aAAexW,GACrC1B,EAAS,WAGTg/B,EAAe/yB,IAChB3Z,EAAQ0lB,QAAUtW,IAAW1B,OAAS,IACvCkY,EAAYlY,OAAS,KACpBkY,IAAgB9X,EAAgBc,GAAeQ,IAAW1B,OAAS,KACnE1N,EAAQ2lB,UAAYvW,IAAW1B,OAAS,KACzC,KAMEi/B,EAAY,kBACbnrC,GAAeC,KAAKzB,EAAS,cACzBA,EAAQ2sC,UAAY,IAAIzqC,QAAO,MAAQ,KACvC,6BAA+ByP,GAAmB,KACnD,KAENgF,EAAOzU,QAAQwqC,GAAc,SAAS3qC,EAAO6qC,EAAaC,EAAkBC,EAAiBC,EAAe73B,GAsB1G,OArBA23B,IAAqBA,EAAmBC,GAGxCp/B,GAAUiJ,EAAO7V,MAAMqT,EAAOe,GAAQhT,QAAQmN,GAAmBsI,IAG7Di1B,IACFN,GAAa,EACb5+B,GAAU,YAAck/B,EAAc,UAEpCG,IACFR,GAAe,EACf7+B,GAAU,OAASq/B,EAAgB,eAEjCF,IACFn/B,GAAU,iBAAmBm/B,EAAmB,+BAElD14B,EAAQe,EAASnT,EAAM4B,OAIhB5B,C,IAGT2L,GAAU,OAIV,IAAImY,EAAWrkB,GAAeC,KAAKzB,EAAS,aAAeA,EAAQ6lB,SACnE,GAAKA,GAKA,GAAInX,GAA2BoJ,KAAK+N,GACvC,MAAM,IAAI/iB,GA3idmB,2DAsid7B4K,EAAS,iBAAmBA,EAAS,QASvCA,GAAU6+B,EAAe7+B,EAAOxL,QAAQiL,EAAsB,IAAMO,GACjExL,QAAQkL,EAAqB,MAC7BlL,QAAQmL,EAAuB,OAGlCK,EAAS,aAAemY,GAAY,OAAS,SAC1CA,EACG,GACA,wBAEJ,qBACCymB,EACI,mBACA,KAEJC,EACG,uFAEA,OAEJ7+B,EACA,gBAEF,IAAIgH,EAASwtB,IAAQ,WACnB,OAAO1oB,GAASgzB,EAAaG,EAAY,UAAYj/B,GAClD/I,MAAMsC,EAAWwlC,E,IAMtB,GADA/3B,EAAOhH,OAASA,EACZuxB,GAAQvqB,GACV,MAAMA,EAER,OAAOA,C,EA46DT6J,GAAOyuB,MApsBP,SAAev2B,EAAGxC,GAEhB,IADAwC,EAAIygB,GAAUzgB,IACN,GAAKA,EAAIrL,EACf,MAAO,GAET,IAAI+I,EAAQ7I,EACR3H,EAASkZ,GAAUpG,EAAGnL,GAE1B2I,EAAWiZ,GAAYjZ,GACvBwC,GAAKnL,EAGL,IADA,IAAIoJ,EAAS8B,GAAU7S,EAAQsQ,KACtBE,EAAQsC,GACfxC,EAASE,GAEX,OAAOO,C,EAsrBT6J,GAAOgY,SAAWA,GAClBhY,GAAO2Y,UAAYA,GACnB3Y,GAAOqhB,SAAWA,GAClBrhB,GAAO0uB,QAx5DP,SAAiB7qC,GACf,OAAOH,GAASG,GAAOg/B,a,EAw5DzB7iB,GAAOmY,SAAWA,GAClBnY,GAAO2uB,cApuIP,SAAuB9qC,GACrB,OAAOA,EACHgf,GAAU8V,GAAU90B,IAAQ,iBAAmBgJ,GACpC,IAAVhJ,EAAcA,EAAQ,C,EAkuI7Bmc,GAAOtc,SAAWA,GAClBsc,GAAO4uB,QAn4DP,SAAiB/qC,GACf,OAAOH,GAASG,GAAOy/B,a,EAm4DzBtjB,GAAOlc,KA12DP,SAAcsU,EAAQwf,EAAOlD,GAE3B,IADAtc,EAAS1U,GAAS0U,MACHsc,GAASkD,IAAUlvB,GAChC,OAAOyP,GAASC,GAElB,IAAKA,KAAYwf,EAAQjG,GAAaiG,IACpC,OAAOxf,EAET,IAAIS,EAAasB,GAAc/B,GAC3BU,EAAaqB,GAAcyd,GAI/B,OAAO9E,GAAUja,EAHLD,GAAgBC,EAAYC,GAC9BC,GAAcF,EAAYC,GAAc,GAET1W,KAAK,G,EA81DhD4d,GAAO6uB,QAx0DP,SAAiBz2B,EAAQwf,EAAOlD,GAE9B,IADAtc,EAAS1U,GAAS0U,MACHsc,GAASkD,IAAUlvB,GAChC,OAAO0P,EAAO7V,MAAM,EAAG8V,GAAgBD,GAAU,GAEnD,IAAKA,KAAYwf,EAAQjG,GAAaiG,IACpC,OAAOxf,EAET,IAAIS,EAAasB,GAAc/B,GAG/B,OAAO0a,GAAUja,EAAY,EAFnBE,GAAcF,EAAYsB,GAAcyd,IAAU,GAEvBx1B,KAAK,G,EA8zD5C4d,GAAO8uB,UAxyDP,SAAmB12B,EAAQwf,EAAOlD,GAEhC,IADAtc,EAAS1U,GAAS0U,MACHsc,GAASkD,IAAUlvB,GAChC,OAAO0P,EAAOzU,QAAQkM,GAAa,IAErC,IAAKuI,KAAYwf,EAAQjG,GAAaiG,IACpC,OAAOxf,EAET,IAAIS,EAAasB,GAAc/B,GAG/B,OAAO0a,GAAUja,EAFLD,GAAgBC,EAAYsB,GAAcyd,KAElBx1B,KAAK,G,EA8xD3C4d,GAAO+uB,SAtvDP,SAAkB32B,EAAQ3W,GACxB,IAAI2D,EAnvdmB,GAovdnB4pC,EAnvdqB,MAqvdzB,GAAIzuB,GAAS9e,GAAU,CACrB,IAAIymC,EAAY,cAAezmC,EAAUA,EAAQymC,UAAYA,EAC7D9iC,EAAS,WAAY3D,EAAUk3B,GAAUl3B,EAAQ2D,QAAUA,EAC3D4pC,EAAW,aAAcvtC,EAAUkwB,GAAalwB,EAAQutC,UAAYA,C,CAItE,IAAIvC,GAFJr0B,EAAS1U,GAAS0U,IAEKhT,OACvB,GAAIkU,GAAWlB,GAAS,CACtB,IAAIS,EAAasB,GAAc/B,GAC/Bq0B,EAAY5zB,EAAWzT,M,CAEzB,GAAIA,GAAUqnC,EACZ,OAAOr0B,EAET,IAAIrO,EAAM3E,EAAS4U,GAAWg1B,GAC9B,GAAIjlC,EAAM,EACR,OAAOilC,EAET,IAAI74B,EAAS0C,EACTia,GAAUja,EAAY,EAAG9O,GAAK3H,KAAK,IACnCgW,EAAO7V,MAAM,EAAGwH,GAEpB,GAAIm+B,IAAcx/B,EAChB,OAAOyN,EAAS64B,EAKlB,GAHIn2B,IACF9O,GAAQoM,EAAO/Q,OAAS2E,GAEtBkL,GAASizB,IACX,GAAI9vB,EAAO7V,MAAMwH,GAAKklC,OAAO/G,GAAY,CACvC,IAAI1kC,EACA0rC,EAAY/4B,EAMhB,IAJK+xB,EAAUiH,SACbjH,EAAY9sB,GAAO8sB,EAAU/4B,OAAQzL,GAAS4M,GAAQ1M,KAAKskC,IAAc,MAE3EA,EAAUjuB,UAAY,EACdzW,EAAQ0kC,EAAUtkC,KAAKsrC,IAC7B,IAAIE,EAAS5rC,EAAMoS,MAErBO,EAASA,EAAO5T,MAAM,EAAG6sC,IAAW1mC,EAAYqB,EAAMqlC,E,OAEnD,GAAIh3B,EAAOoX,QAAQmC,GAAauW,GAAYn+B,IAAQA,EAAK,CAC9D,IAAI6L,EAAQO,EAAO7N,YAAY4/B,GAC3BtyB,GAAQ,IACVO,EAASA,EAAO5T,MAAM,EAAGqT,G,CAG7B,OAAOO,EAAS64B,C,EAksDlBhvB,GAAOqvB,SA5qDP,SAAkBj3B,GAEhB,OADAA,EAAS1U,GAAS0U,KACAnJ,EAAiBsK,KAAKnB,GACpCA,EAAOzU,QAAQoL,EAAeyL,IAC9BpC,C,EAyqDN4H,GAAOsvB,SAvpBP,SAAkBC,GAChB,IAAIxc,IAAOpX,GACX,OAAOjY,GAAS6rC,GAAUxc,C,EAspB5B/S,GAAOqjB,UAAYA,GACnBrjB,GAAO+iB,WAAaA,GAGpB/iB,GAAOwvB,KAAO1sC,GACdkd,GAAOyvB,UAAY7R,GACnB5d,GAAO0vB,MAAQxT,GAEfgI,GAAMlkB,IACA7Q,GAAS,GACb2Y,GAAW9H,IAAQ,SAAS1K,EAAMwf,GAC3B7xB,GAAeC,KAAK8c,GAAOhd,UAAW8xB,KACzC3lB,GAAO2lB,GAAcxf,E,IAGlBnG,IACH,CAAEmuB,OAAS,IAWjBtd,GAAO2vB,QA/ihBK,UAkjhBZ95B,GAAU,CAAC,OAAQ,UAAW,QAAS,aAAc,UAAW,iBAAiB,SAASif,GACxF9U,GAAO8U,GAAY7b,YAAc+G,E,IAInCnK,GAAU,CAAC,OAAQ,SAAS,SAASif,EAAYlf,GAC/CsK,GAAYld,UAAU8xB,GAAc,SAAS5c,GAC3CA,EAAIA,IAAMxP,EAAY,EAAI0V,GAAUua,GAAUzgB,GAAI,GAElD,IAAI/B,EAAStR,KAAMmc,eAAiBpL,EAChC,IAAIsK,GAAYrb,MAChBA,KAAK+2B,QAUT,OARIzlB,EAAO6K,aACT7K,EAAO+K,cAAgB5C,GAAUpG,EAAG/B,EAAO+K,eAE3C/K,EAAOgL,UAAUhb,KAAK,CACpBuT,KAAQ4E,GAAUpG,EAAGnL,GACrBktB,KAAQnF,GAAc3e,EAAO4K,QAAU,EAAI,QAAU,MAGlD5K,C,EAGT+J,GAAYld,UAAU8xB,EAAa,SAAW,SAAS5c,GACrD,OAAOrT,KAAKga,UAAUiW,GAAY5c,GAAG2G,S,KAKzChJ,GAAU,CAAC,SAAU,MAAO,cAAc,SAASif,EAAYlf,GAC7D,IAAIqkB,EAAOrkB,EAAQ,EACfg6B,EAjihBe,GAiihBJ3V,GA/hhBG,GA+hhByBA,EAE3C/Z,GAAYld,UAAU8xB,GAAc,SAASpf,GAC3C,IAAIS,EAAStR,KAAK+2B,QAMlB,OALAzlB,EAAO8K,cAAc9a,KAAK,CACxBuP,SAAYiZ,GAAYjZ,EAAU,GAClCukB,KAAQA,IAEV9jB,EAAO6K,aAAe7K,EAAO6K,cAAgB4uB,EACtCz5B,C,KAKXN,GAAU,CAAC,OAAQ,SAAS,SAASif,EAAYlf,GAC/C,IAAIi6B,EAAW,QAAUj6B,EAAQ,QAAU,IAE3CsK,GAAYld,UAAU8xB,GAAc,WAClC,OAAOjwB,KAAKgrC,GAAU,GAAGhsC,QAAQ,E,KAKrCgS,GAAU,CAAC,UAAW,SAAS,SAASif,EAAYlf,GAClD,IAAIk6B,EAAW,QAAUl6B,EAAQ,GAAK,SAEtCsK,GAAYld,UAAU8xB,GAAc,WAClC,OAAOjwB,KAAKmc,aAAe,IAAId,GAAYrb,MAAQA,KAAKirC,GAAU,E,KAItE5vB,GAAYld,UAAUwiC,QAAU,WAC9B,OAAO3gC,KAAKwhC,OAAOzZ,G,EAGrB1M,GAAYld,UAAU06B,KAAO,SAAS1nB,GACpC,OAAOnR,KAAKwhC,OAAOrwB,GAAWkmB,M,EAGhChc,GAAYld,UAAU26B,SAAW,SAAS3nB,GACxC,OAAOnR,KAAKga,UAAU6e,KAAK1nB,E,EAG7BkK,GAAYld,UAAU86B,UAAYhO,IAAS,SAAS3tB,EAAM6D,GACxD,MAAmB,mBAAR7D,EACF,IAAI+d,GAAYrb,MAElBA,KAAK4U,KAAI,SAAS5V,GACvB,OAAOwmB,GAAWxmB,EAAO1B,EAAM6D,E,OAInCka,GAAYld,UAAU0kC,OAAS,SAAS1xB,GACtC,OAAOnR,KAAKwhC,OAAOpG,GAAOtR,GAAY3Y,I,EAGxCkK,GAAYld,UAAUT,MAAQ,SAAS4H,EAAOJ,GAC5CI,EAAQwuB,GAAUxuB,GAElB,IAAIgM,EAAStR,KACb,OAAIsR,EAAO6K,eAAiB7W,EAAQ,GAAKJ,EAAM,GACtC,IAAImW,GAAY/J,IAErBhM,EAAQ,EACVgM,EAASA,EAAOoyB,WAAWp+B,GAClBA,IACTgM,EAASA,EAAO4vB,KAAK57B,IAEnBJ,IAAQrB,IAEVyN,GADApM,EAAM4uB,GAAU5uB,IACD,EAAIoM,EAAO6vB,WAAWj8B,GAAOoM,EAAOmyB,KAAKv+B,EAAMI,IAEzDgM,E,EAGT+J,GAAYld,UAAUwlC,eAAiB,SAASxyB,GAC9C,OAAOnR,KAAKga,UAAU4pB,UAAUzyB,GAAW6I,S,EAG7CqB,GAAYld,UAAUg+B,QAAU,WAC9B,OAAOn8B,KAAKyjC,KAAKv7B,E,EAInB+a,GAAW5H,GAAYld,WAAW,SAASsS,EAAMwf,GAC/C,IAAIib,EAAgB,qCAAqCx2B,KAAKub,GAC1Dkb,EAAU,kBAAkBz2B,KAAKub,GACjCmb,EAAajwB,GAAOgwB,EAAW,QAAwB,QAAdlb,EAAuB,QAAU,IAAOA,GACjFob,EAAeF,GAAW,QAAQz2B,KAAKub,GAEtCmb,IAGLjwB,GAAOhd,UAAU8xB,GAAc,WAC7B,IAAIjxB,EAAQgB,KAAK6b,YACb1a,EAAOgqC,EAAU,CAAC,GAAK/pC,UACvBkqC,EAAStsC,aAAiBqc,GAC1BxK,EAAW1P,EAAK,GAChBoqC,EAAUD,GAAUrvC,GAAQ+C,GAE5B05B,EAAc,SAAS15B,GACzB,IAAIsS,EAAS85B,EAAW7pC,MAAM4Z,GAAQvJ,GAAU,CAAC5S,GAAQmC,IACzD,OAAOgqC,GAAYvvB,EAAYtK,EAAO,GAAKA,C,EAGzCi6B,GAAWL,GAAoC,mBAAZr6B,GAA6C,GAAnBA,EAAStQ,SAExE+qC,EAASC,GAAU,GAErB,IAAI3vB,EAAW5b,KAAK+b,UAChByvB,IAAaxrC,KAAK8b,YAAYvb,OAC9BkrC,EAAcJ,IAAiBzvB,EAC/B8vB,EAAWJ,IAAWE,EAE1B,IAAKH,GAAgBE,EAAS,CAC5BvsC,EAAQ0sC,EAAW1sC,EAAQ,IAAIqc,GAAYrb,MAC3C,IAAIsR,EAASb,EAAKlP,MAAMvC,EAAOmC,GAE/B,OADAmQ,EAAOwK,YAAYxa,KAAK,CAAEmP,KAAQsgB,GAAM5vB,KAAQ,CAACu3B,GAAchoB,QAAW7M,IACnE,IAAIyX,GAAchK,EAAQsK,E,CAEnC,OAAI6vB,GAAeC,EACVj7B,EAAKlP,MAAMvB,KAAMmB,IAE1BmQ,EAAStR,KAAK+wB,KAAK2H,GACZ+S,EAAeN,EAAU75B,EAAOtS,QAAQ,GAAKsS,EAAOtS,QAAWsS,E,MAK1EN,GAAU,CAAC,MAAO,OAAQ,QAAS,OAAQ,SAAU,YAAY,SAASif,GACxE,IAAIxf,EAAOgG,GAAWwZ,GAClB0b,EAAY,0BAA0Bj3B,KAAKub,GAAc,MAAQ,OACjEob,EAAe,kBAAkB32B,KAAKub,GAE1C9U,GAAOhd,UAAU8xB,GAAc,WAC7B,IAAI9uB,EAAOC,UACX,GAAIiqC,IAAiBrrC,KAAK+b,UAAW,CACnC,IAAI/c,EAAQgB,KAAKhB,QACjB,OAAOyR,EAAKlP,MAAMtF,GAAQ+C,GAASA,EAAQ,GAAImC,E,CAEjD,OAAOnB,KAAK2rC,IAAW,SAAS3sC,GAC9B,OAAOyR,EAAKlP,MAAMtF,GAAQ+C,GAASA,EAAQ,GAAImC,E,QAMrD8hB,GAAW5H,GAAYld,WAAW,SAASsS,EAAMwf,GAC/C,IAAImb,EAAajwB,GAAO8U,GACxB,GAAImb,EAAY,CACd,IAAIltC,EAAMktC,EAAW7oC,KAAO,GACvBnE,GAAeC,KAAKmc,GAAWtc,KAClCsc,GAAUtc,GAAO,IAEnBsc,GAAUtc,GAAKoD,KAAK,CAAEiB,KAAQ0tB,EAAYxf,KAAQ26B,G,KAItD5wB,GAAU8W,GAAaztB,EAlthBA,GAkthB+BtB,MAAQ,CAAC,CAC7DA,KAAQ,UACRkO,KAAQ5M,IAIVwX,GAAYld,UAAU44B,MAh9dtB,WACE,IAAIzlB,EAAS,IAAI+J,GAAYrb,KAAK6b,aAOlC,OANAvK,EAAOwK,YAAciC,GAAU/d,KAAK8b,aACpCxK,EAAO4K,QAAUlc,KAAKkc,QACtB5K,EAAO6K,aAAenc,KAAKmc,aAC3B7K,EAAO8K,cAAgB2B,GAAU/d,KAAKoc,eACtC9K,EAAO+K,cAAgBrc,KAAKqc,cAC5B/K,EAAOgL,UAAYyB,GAAU/d,KAAKsc,WAC3BhL,C,EAy8dT+J,GAAYld,UAAU6b,QA97dtB,WACE,GAAIha,KAAKmc,aAAc,CACrB,IAAI7K,EAAS,IAAI+J,GAAYrb,MAC7BsR,EAAO4K,SAAU,EACjB5K,EAAO6K,cAAe,C,MAEtB7K,EAAStR,KAAK+2B,SACP7a,UAAW,EAEpB,OAAO5K,C,EAs7dT+J,GAAYld,UAAUa,MA36dtB,WACE,IAAIgC,EAAQhB,KAAK6b,YAAY7c,QACzB0D,EAAM1C,KAAKkc,QACXkB,EAAQnhB,GAAQ+E,GAChB4qC,EAAUlpC,EAAM,EAChBqyB,EAAY3X,EAAQpc,EAAMT,OAAS,EACnCsrC,EA8pIN,SAAiBvmC,EAAOJ,EAAKo2B,GAC3B,IAAIvqB,GAAQ,EACRxQ,EAAS+6B,EAAW/6B,OAExB,OAASwQ,EAAQxQ,GAAQ,CACvB,IAAI0c,EAAOqe,EAAWvqB,GAClB8D,EAAOoI,EAAKpI,KAEhB,OAAQoI,EAAKmY,MACX,IAAK,OAAa9vB,GAASuP,EAAM,MACjC,IAAK,YAAa3P,GAAO2P,EAAM,MAC/B,IAAK,OAAa3P,EAAMuU,GAAUvU,EAAKI,EAAQuP,GAAO,MACtD,IAAK,YAAavP,EAAQiU,GAAUjU,EAAOJ,EAAM2P,G,CAGrD,MAAO,CAAEvP,MAASA,EAAOJ,IAAOA,E,CA7qIrB4mC,CAAQ,EAAG/W,EAAW/0B,KAAKsc,WAClChX,EAAQumC,EAAKvmC,MACbJ,EAAM2mC,EAAK3mC,IACX3E,EAAS2E,EAAMI,EACfyL,EAAQ66B,EAAU1mC,EAAOI,EAAQ,EACjCskB,EAAY5pB,KAAKoc,cACjB2vB,EAAaniB,EAAUrpB,OACvB8Q,EAAW,EACX26B,EAAYvyB,GAAUlZ,EAAQP,KAAKqc,eAEvC,IAAKe,IAAWwuB,GAAW7W,GAAax0B,GAAUyrC,GAAazrC,EAC7D,OAAO+sB,GAAiBtsB,EAAOhB,KAAK8b,aAEtC,IAAIxK,EAAS,GAEb4Q,EACA,KAAO3hB,KAAY8Q,EAAW26B,GAAW,CAMvC,IAHA,IAAIC,GAAY,EACZjtC,EAAQgC,EAHZ+P,GAASrO,KAKAupC,EAAYF,GAAY,CAC/B,IAAI9uB,EAAO2M,EAAUqiB,GACjBp7B,EAAWoM,EAAKpM,SAChBukB,EAAOnY,EAAKmY,KACZjT,EAAWtR,EAAS7R,GAExB,GA7zDY,GA6zDRo2B,EACFp2B,EAAQmjB,OACH,IAAKA,EAAU,CACpB,GAj0Da,GAi0DTiT,EACF,SAASlT,EAET,MAAMA,C,EAIZ5Q,EAAOD,KAAcrS,C,CAEvB,OAAOsS,C,EAg4dT6J,GAAOhd,UAAU2+B,GAAKnE,GACtBxd,GAAOhd,UAAUs6B,MA1iQjB,WACE,OAAOA,GAAMz4B,K,EA0iQfmb,GAAOhd,UAAU+tC,OA7gQjB,WACE,OAAO,IAAI5wB,GAActb,KAAKhB,QAASgB,KAAK+b,U,EA6gQ9CZ,GAAOhd,UAAUi+B,KAp/PjB,WACMp8B,KAAKic,aAAepY,IACtB7D,KAAKic,WAAakgB,GAAQn8B,KAAKhB,UAEjC,IAAIq9B,EAAOr8B,KAAKgc,WAAahc,KAAKic,WAAW1b,OAG7C,MAAO,CAAE87B,KAAQA,EAAMr9B,MAFXq9B,EAAOx4B,EAAY7D,KAAKic,WAAWjc,KAAKgc,a,EAg/PtDb,GAAOhd,UAAUkzB,MA77PjB,SAAsBryB,GAIpB,IAHA,IAAIsS,EACAmU,EAASzlB,KAENylB,aAAkB9J,IAAY,CACnC,IAAIob,EAAQxb,GAAakK,GACzBsR,EAAM/a,UAAY,EAClB+a,EAAM9a,WAAapY,EACfyN,EACFwZ,EAASjP,YAAckb,EAEvBzlB,EAASylB,EAEX,IAAIjM,EAAWiM,EACftR,EAASA,EAAO5J,W,CAGlB,OADAiP,EAASjP,YAAc7c,EAChBsS,C,EA66PT6J,GAAOhd,UAAU6b,QAt5PjB,WACE,IAAIhb,EAAQgB,KAAK6b,YACjB,GAAI7c,aAAiBqc,GAAa,CAChC,IAAI8wB,EAAUntC,EAUd,OATIgB,KAAK8b,YAAYvb,SACnB4rC,EAAU,IAAI9wB,GAAYrb,QAE5BmsC,EAAUA,EAAQnyB,WACV8B,YAAYxa,KAAK,CACvBmP,KAAQsgB,GACR5vB,KAAQ,CAAC6Y,IACTtJ,QAAW7M,IAEN,IAAIyX,GAAc6wB,EAASnsC,KAAK+b,U,CAEzC,OAAO/b,KAAK+wB,KAAK/W,G,EAw4PnBmB,GAAOhd,UAAUiuC,OAASjxB,GAAOhd,UAAU8c,QAAUE,GAAOhd,UAAUa,MAv3PtE,WACE,OAAOsuB,GAAiBttB,KAAK6b,YAAa7b,KAAK8b,Y,EAy3PjDX,GAAOhd,UAAU0sC,MAAQ1vB,GAAOhd,UAAUk5B,KAEtCpf,KACFkD,GAAOhd,UAAU8Z,IAj+PnB,WACE,OAAOjY,I,GAk+PFmb,E,CAMDtF,GAGa,mBAAVw2B,QAA6C,iBAAdA,OAAOC,KAAmBD,OAAOC,KAKzEtmC,GAAK4P,EAAIA,GAITy2B,QAAO,WACL,OAAOz2B,E,KAIFtG,KAENA,GAAWlQ,QAAUwW,IAAGA,EAAIA,GAE7BxG,GAAYwG,EAAIA,IAIhB5P,GAAK4P,EAAIA,EAEZ,GAACvX,KAAK2B,K,INlyhBP,MAEMusC,EAAa,CAFJ,SACE,YAGjB,SAASC,EAAa/tC,GACpB,IAAKA,EAAIE,MAAK,eACZ,MAAM,IAAIe,MACRxD,EAAI,gCAAgCuC,6B,CAKnC,SAASguC,EAAYC,GAC1B,IAAKA,IAAUC,EAASD,EAAMpvC,MAC5B,MAAM,IAAIoC,MACRxD,EAAI,qGAIR,MAAM0wC,EAASF,EAAME,OAEfC,EAAa,CAAC,YAAa,WAAY,UAC7C,KACGC,EAAWJ,EAAMlf,SACjBxxB,MAAMC,QAAQywC,EAAMK,WACpBD,EAAWJ,EAAMK,WACjBC,EAASJ,IACTC,EAAWvE,MAAKpqC,GAAOyuC,EAASD,EAAMxuC,OAEvC,MAAM,IAAIwB,MACRxD,EACE,0BAA0BwwC,EAAMpvC,4BAA4BuvC,EAAWtvC,KAAK,kDAMlF,GAAIqvC,EACF,GAAID,EAASC,GACXJ,EAAaI,OACR,KAAKL,EAAWjE,MAAKpqC,GAAOA,KAAO0uC,IACxC,MAAM,IAAIltC,MACRxD,EAAI,iFAGNqwC,EAAWtuC,SAAQC,GAAOA,KAAO0uC,GAAUJ,EAAaI,EAAO1uC,KAAM,CAIrEwuC,EAAMO,UACR,CAAC,SAAU,aAAahvC,SAAQivC,IAC1BA,KAAkBR,GACpBjwC,QAAQ0wC,KACNjxC,EACE,iBAAiBwwC,EAAMpvC,kCAAkC4vC,4FACoBA,OAEhF,G,CAMF,SAASE,EAAaC,GAC3BvxC,EAAQuxC,GAAQpvC,SAAQyuC,GAASD,EAAYC,I,CAG/C,SAASY,EAAW7uC,EAAKP,GACvB,IAAIqvC,EAASC,SAASnW,KAAKoW,cAAc,eAAiBhvC,EAAM,aAWhE,OAVK8uC,IACHA,EAASC,SAASE,cAAc,UAChCH,EAAOI,aAAa,MAAOlvC,GAvEhB,WAwEPP,EACFqvC,EAAOI,aAAa,OAzEX,UACE,aAyEFzvC,GACTqvC,EAAOI,aA1EI,WA0EmB,IAEhCJ,EAAOK,OAAQ,GAEV,IAAIzzB,SAAQ,CAACpd,EAAS8lC,KAC3B0K,EAAOM,mBAAqBN,EAAOO,OAASvvC,IAC1CgvC,EAAOQ,uBAAwB,EAC/BhxC,EAAQwB,EAAE,EAEZgvC,EAAOS,QAAUzvC,IACXgvC,EAAOU,YACTV,EAAOU,WAAWC,YAAYX,GAEhC1K,EAAOtkC,EAAE,EAEe,OAAtBgvC,EAAOU,WACTT,SAASnW,KAAK8W,YAAYZ,GACjBA,EAAOQ,uBAChBhxC,GAAS,G,CAiBR,SAASqxC,EAAgBhZ,EAAMiZ,GACpC,OAAQC,OAAOC,cAAc,IAAIC,YAC/B,iBAAiBpZ,IACjB,CAACqZ,WAAqB,OAATrZ,E,OAAeiZ,I,CAIzB,SAASrB,EAAS0B,GAEvB,MAAoB,iBAANA,KAAoBA,C,CAG7B,SAAS5B,EAAW6B,GACzB,MAAoB,mBAANA,C,CAGT,SAAShC,EAASiC,GACvB,MAAoB,iBAANA,C,CAGT,SAASC,EAAiB/4B,GAC/B,MAAMtX,EAAQ,IAAIkB,MAAMxD,EAAI,mBAAmB4Z,EAAQg5B,cAGvD,OAFAtwC,EAAMsX,QAAUA,EAChBtX,EAAM0E,KAAO,IACN1E,C,CAGF,MAAMuwC,EAAiB,IAAK,QO5InC,SAASC,EAA+BC,GAEtC,GAAIA,EAAMC,iBACR,OAIF,GAAqB,IAAjBD,EAAME,OACR,OAIF,GAAIF,EAAMG,UAAYH,EAAMI,SAAWJ,EAAMK,QAAUL,EAAMM,QAC3D,OAIF,IAAIC,EAASP,EAAM3J,OACnB,MAAMhoC,EAAO2xC,EAAMQ,aACfR,EAAMQ,eACLR,EAAM3xC,MAAQ,GAInB,IAAK,IAAI+D,EAAI,EAAGA,EAAI/D,EAAKiD,OAAQc,IAAK,CACpC,MAAMikC,EAAShoC,EAAK+D,GACpB,GAAIikC,EAAOoK,UAA8C,MAAlCpK,EAAOoK,SAAS1R,cAAuB,CAC5DwR,EAASlK,EACT,K,EAIJ,KAAOkK,GAA4C,MAAlCA,EAAOE,SAAS1R,eAC/BwR,EAASA,EAAOvB,WAIlB,IAAKuB,GAA4C,MAAlCA,EAAOE,SAAS1R,cAC7B,OAIF,GAAIwR,EAAOlK,QAA0C,UAAhCkK,EAAOlK,OAAOtH,cACjC,OAIF,GAAIwR,EAAOG,aAAa,YACtB,OAIF,GAAIH,EAAOG,aAAa,iBACtB,OAIF,GAAIH,EAAOV,WAAaR,OAAOsB,SAASd,UAA4B,KAAhBU,EAAO5sB,KACzD,OAKF,MAAMitB,EAASL,EAAOK,QA/ExB,SAAyBL,GAGvB,MAAMM,EAAON,EAAOM,KACdC,EAAWP,EAAOO,SAMxB,MAAO,GAAGA,MALuB,UAAbA,GAAiC,OAATD,GACV,WAAbC,GAAkC,QAATD,EAE1CN,EAAOQ,SACPR,EAAOS,M,CAsEqBC,CAAgBV,GAChD,GAAIK,IAAWvB,OAAOsB,SAASC,OAC7B,OAIF,MAAMf,SAACA,EAAQ1E,OAAEA,EAAMxnB,KAAEA,GAAQ4sB,EAC7BpB,EAAgB,KAAM,C,SAACU,E,OAAU1E,E,KAAQxnB,MAC3CqsB,EAAMkB,iBAEFlB,GAAwB,UAAfA,EAAM7Z,MACjBkZ,OAAO8B,SAAS,EAAG,G,CAezB,MAAMC,EAAQ,CACZC,WACEhC,OAAOd,SAAS+C,iBAAiB,QAASvB,E,EAG5CwB,aACElC,OAAOd,SAASiD,oBAAoB,QAASzB,E,GCjGjD,SAAS0B,EAAkCzB,GACzC,GAAoB,yBAAhBA,EAAM0B,MACR,OAEF,MAAM7B,SAACA,EAAQ1E,OAAEA,EAAMxnB,KAAEA,GAAQ0rB,OAAOsB,SACxCxB,EAAgB,KAAM,C,SAACU,E,OAAU1E,E,KAAQxnB,G,CAnB9B,UAAUlO,KAAKk8B,UAAUC,aAGzB/D,EAAWwB,OAAOwC,iBAC7BxC,OAAOwC,cAAgB,SAASC,EAAQC,GACtCA,EAASA,GAAU,GACnB,IAAIzyC,EAAIivC,SAASyD,YAAY,SAG7B,OAFA1yC,EAAE2yC,UAAUH,EAAQ5zC,QAAQ6zC,EAAOG,SAAUh0C,QAAQ6zC,EAAOvC,aAC5DlwC,EAAEoyC,MAAQK,EAAOL,OAAS,KACnBpyC,C,EAET+vC,OAAOwC,cAAc3yC,UAAYmwC,OAAO8C,MAAMjzC,WAkBhD,MAAMkzC,EAAW,CACff,WACEhC,OAAOiC,iBAAiB,WAAYG,E,EAGtCF,aACElC,OAAOmC,oBAAoB,WAAYC,E,GCnC3C,IAAAY,EAAiBC,EACjBC,EAAuBC,EACvBC,EAiHA,SAAkBC,EAAK/0C,GACrB,OAAOg1C,EAAiBH,EAAME,EAAK/0C,G,EAjHrCi1C,EAAkCD,EAClCE,EAAgCC,EAa5BC,EAAc,IAAI3nC,OAAO,CAG3B,UAMA,uFACA9M,KAAK,KAAM,KASb,SAASk0C,EAAOE,EAAK/0C,GAUnB,IATA,IAOIuG,EAPA8uC,EAAS,GACT/zC,EAAM,EACN6S,EAAQ,EACRzT,EAAO,GACP40C,EAAmBt1C,GAAYA,EAAQwJ,WAhCrB,IAiClB+rC,EAAav1C,GAAYA,EAAQu1C,YAhCd,KAiCnBC,GAAc,EAGuB,QAAjCjvC,EAAM6uC,EAAYjzC,KAAK4yC,KAAgB,CAC7C,IAAIU,EAAIlvC,EAAI,GACRmvC,EAAUnvC,EAAI,GACd2O,EAAS3O,EAAI4N,MAKjB,GAJAzT,GAAQq0C,EAAIj0C,MAAMqT,EAAOe,GACzBf,EAAQe,EAASugC,EAAE9xC,OAGf+xC,EACFh1C,GAAQg1C,EAAQ,GAChBF,GAAc,MAFhB,CAMA,IAAIG,EAAO,GACPnW,EAAOuV,EAAI5gC,GACXxO,EAAOY,EAAI,GACXqvC,EAAUrvC,EAAI,GACd80B,EAAQ90B,EAAI,GACZsvC,EAAWtvC,EAAI,GAEnB,IAAKivC,GAAe90C,EAAKiD,OAAQ,CAC/B,IAAImyC,EAAIp1C,EAAKiD,OAAS,EAElB4xC,EAAWxnB,QAAQrtB,EAAKo1C,KAAM,IAChCH,EAAOj1C,EAAKo1C,GACZp1C,EAAOA,EAAKI,MAAM,EAAGg1C,G,CAKrBp1C,IACF20C,EAAO3wC,KAAKhE,GACZA,EAAO,GACP80C,GAAc,GAGhB,IAAI5W,EAAmB,KAAT+W,QAAwB1uC,IAATu4B,GAAsBA,IAASmW,EACxDnK,EAAsB,MAAbqK,GAAiC,MAAbA,EAC7BE,EAAwB,MAAbF,GAAiC,MAAbA,EAC/BrsC,EAAYmsC,GAAQL,EACpBxT,EAAU8T,GAAWva,EAEzBga,EAAO3wC,KAAK,CACViB,KAAMA,GAAQrE,IACdwsC,OAAQ6H,EACRnsC,UAAWA,EACXusC,SAAUA,EACVvK,OAAQA,EACR5M,QAASA,EACTkD,QAASA,EAAUkU,EAAYlU,GAAW,KAAOmU,EAAazsC,GAAa,O,EAS/E,OAJI9I,GAAQyT,EAAQ4gC,EAAIpxC,SACtB0xC,EAAO3wC,KAAKhE,EAAOq0C,EAAImB,OAAO/hC,IAGzBkhC,C,CAiBT,SAASL,EAAkBK,GAKzB,IAHA,IAAI5P,EAAU,IAAIrmC,MAAMi2C,EAAO1xC,QAGtBc,EAAI,EAAGA,EAAI4wC,EAAO1xC,OAAQc,IACR,iBAAd4wC,EAAO5wC,KAChBghC,EAAQhhC,GAAK,IAAIgJ,OAAO,OAAS4nC,EAAO5wC,GAAGq9B,QAAU,OAIzD,OAAO,SAAUzhB,EAAMrgB,GAIrB,IAHA,IAAIU,EAAO,GACPy1C,EAASn2C,GAAYA,EAAQm2C,QAAWC,mBAEnC3xC,EAAI,EAAGA,EAAI4wC,EAAO1xC,OAAQc,IAAK,CACtC,IAAI4xC,EAAQhB,EAAO5wC,GAEnB,GAAqB,iBAAV4xC,EAAX,CAKA,IACIC,EADAl0C,EAAQie,EAAOA,EAAKg2B,EAAM1wC,WAAQsB,EAGtC,GAAI7H,MAAMC,QAAQ+C,GAAlB,CACE,IAAKi0C,EAAM7K,OACT,MAAM,IAAIvlC,UAAU,aAAeowC,EAAM1wC,KAAO,kCAGlD,GAAqB,IAAjBvD,EAAMuB,OAAc,CACtB,GAAI0yC,EAAMN,SAAU,SAEpB,MAAM,IAAI9vC,UAAU,aAAeowC,EAAM1wC,KAAO,oB,CAGlD,IAAK,IAAI4wC,EAAI,EAAGA,EAAIn0C,EAAMuB,OAAQ4yC,IAAK,CAGrC,GAFAD,EAAUH,EAAO/zC,EAAMm0C,GAAIF,IAEtB5Q,EAAQhhC,GAAGqT,KAAKw+B,GACnB,MAAM,IAAIrwC,UAAU,iBAAmBowC,EAAM1wC,KAAO,eAAiB0wC,EAAMvU,QAAU,KAGvFphC,IAAe,IAAN61C,EAAUF,EAAMvI,OAASuI,EAAM7sC,WAAa8sC,C,OAMzD,GAAqB,iBAAVl0C,GAAuC,iBAAVA,GAAuC,kBAAVA,EAArE,CAWA,IAAIi0C,EAAMN,SAOV,MAAM,IAAI9vC,UAAU,aAAeowC,EAAM1wC,KAAO,YAAc0wC,EAAM7K,OAAS,WAAa,aALpF6K,EAAMzX,UAASl+B,GAAQ21C,EAAMvI,O,KAbnC,CAGE,GAFAwI,EAAUH,EAAOv8B,OAAOxX,GAAQi0C,IAE3B5Q,EAAQhhC,GAAGqT,KAAKw+B,GACnB,MAAM,IAAIrwC,UAAU,aAAeowC,EAAM1wC,KAAO,eAAiB0wC,EAAMvU,QAAU,eAAiBwU,EAAU,KAG9G51C,GAAQ21C,EAAMvI,OAASwI,C,OAtCvB51C,GAAQ21C,C,CAoDZ,OAAO31C,C,EAUX,SAASu1C,EAAclB,GACrB,OAAOA,EAAI7yC,QAAO,4BAA8B,O,CASlD,SAAS8zC,EAAa3a,GACpB,OAAOA,EAAMn5B,QAAO,eAAiB,O,CASvC,SAASs0C,EAAOx2C,GACd,OAAOA,GAAWA,EAAQy2C,UAAY,GAAK,G,CAuE7C,SAAStB,EAAgBE,EAAQj0C,EAAMpB,GAarC,IAVA,IAAI02C,GAFJ12C,EAAUA,GAAW,IAEA02C,OACjBhuC,GAA0B,IAAlB1I,EAAQ0I,MAChBJ,GAAsB,IAAhBtI,EAAQsI,IACdkB,EAAYysC,EAAaj2C,EAAQwJ,WApSf,KAqSlB+rC,EAAav1C,EAAQu1C,YApSF,KAqSnB9M,EAAW,GAAG7kC,OAAO5D,EAAQyoC,UAAY,IAAIzwB,IAAIi+B,GAAcryC,OAAO,KAAKjD,KAAK,KAChFmvC,EAAQpnC,EAAQ,IAAM,GACtBiuC,EAAmC,IAAlBtB,EAAO1xC,OAGnBc,EAAI,EAAGA,EAAI4wC,EAAO1xC,OAAQc,IAAK,CACtC,IAAI4xC,EAAQhB,EAAO5wC,GAEnB,GAAqB,iBAAV4xC,EACTvG,GAASmG,EAAaI,GACtBM,EAAiBlyC,IAAM4wC,EAAO1xC,OAAS,GAAK4xC,EAAWxnB,QAAQsoB,EAAMA,EAAM1yC,OAAS,KAAM,MACrF,CACL,IAAIiyC,EAAUS,EAAM7K,OAChB,MAAQ6K,EAAMvU,QAAU,OAASmU,EAAaI,EAAM7sC,WAAa,MAAQ6sC,EAAMvU,QAAU,MACzFuU,EAAMvU,QAEN1gC,GAAMA,EAAKsD,KAAK2xC,GAEhBA,EAAMN,SACJM,EAAMzX,QACRkR,GAASmG,EAAaI,EAAMvI,QAAU,IAAM8H,EAAU,KAEtD9F,GAAS,MAAQmG,EAAaI,EAAMvI,QAAU,IAAM8H,EAAU,MAGhE9F,GAASmG,EAAaI,EAAMvI,QAAU,IAAM8H,EAAU,G,EAc5D,OATIttC,GACGouC,IAAQ5G,GAAS,MAAQtmC,EAAY,MAE1CsmC,GAAsB,MAAbrH,EAAmB,IAAM,MAAQA,EAAW,MAEhDiO,IAAQ5G,GAAS,MAAQtmC,EAAY,MAAQi/B,EAAW,OACxDkO,IAAgB7G,GAAS,MAAQtmC,EAAY,IAAMi/B,EAAW,MAG9D,IAAIh7B,OAAOqiC,EAAO0G,EAAMx2C,G,CAejC,SAAS20C,EAAcj0C,EAAMU,EAAMpB,GACjC,OAAIU,aAAgB+M,OA5HtB,SAAyB/M,EAAMU,GAC7B,IAAKA,EAAM,OAAOV,EAGlB,IAAIk2C,EAASl2C,EAAKgN,OAAO3L,MAAK,aAE9B,GAAI60C,EACF,IAAK,IAAInyC,EAAI,EAAGA,EAAImyC,EAAOjzC,OAAQc,IACjCrD,EAAKsD,KAAK,CACRiB,KAAMlB,EACNqpC,OAAQ,KACRtkC,UAAW,KACXusC,UAAU,EACVvK,QAAQ,EACR5M,SAAS,EACTkD,QAAS,OAKf,OAAOphC,C,CAyGEm2C,CAAen2C,EAAMU,GAG1BhC,MAAMC,QAAQqB,GAjGpB,SAAwBA,EAAMU,EAAMpB,GAGlC,IAFA,IAAI82C,EAAQ,GAEHryC,EAAI,EAAGA,EAAI/D,EAAKiD,OAAQc,IAC/BqyC,EAAMpyC,KAAKiwC,EAAaj0C,EAAK+D,GAAIrD,EAAMpB,GAAS0N,QAGlD,OAAO,IAAID,OAAO,MAAQqpC,EAAMn2C,KAAK,KAAO,IAAK61C,EAAMx2C,G,CA2F9C+2C,CAAqCr2C,EAAOU,EAAMpB,GAhF7D,SAAyBU,EAAMU,EAAMpB,GACnC,OAAOm1C,EAAeN,EAAMn0C,EAAMV,GAAUoB,EAAMpB,E,CAkF3Cg3C,CAAsCt2C,EAAOU,EAAMpB,E,+DCtW5D,MAAMwB,eAACy1C,GAAkB91C,OAAOI,UAC1B21C,EAAQ,IAAI55B,IAOlB,SAAS65B,EAAYC,GACnB,IACE,OAAOC,mBAAmBD,E,CAC1B,MAAOE,GACP,OAAOF,C,ECiCX,SAASG,EAAWzH,EAAOoC,EAAUsF,EAAoBC,EAAYC,GACnE,IAAI31C,EACA41C,EACAC,EAAa,EACbC,EAAY/H,EAAMpvC,MAAQ,GAQ9B,MAP4B,MAAxBm3C,EAAU/+B,OAAO,KACf0+B,IACFK,EAAYA,EAAU3B,OAAO,IAE/BsB,GAAqB,GAGhB,CACLhY,KAAKsY,GACH,GAAIhI,IAAUgI,EACZ,MAAO,CAACrY,MAAM,GAGhB,MAAM0Q,EAAWL,EAAMiI,WAAajI,EAAMiI,YAAcjI,EAAMK,SAE9D,IAAKpuC,IACHA,EDlDR,SAAmB81C,EAAWn3C,EAAMs3C,EAAOP,EAAYC,GAErD,MAAMO,EAAW,GAAGJ,KADpBG,IAAUA,IAEV,IAAIzzB,EAAS2yB,EAAM50B,IAAI21B,GAEvB,IAAK1zB,EAAQ,CACX,MAAMnjB,EAAO,GACbmjB,EAAS,C,KACPnjB,EACA0gC,QAASoW,EAAaL,EAAWz2C,EAAM,CACrCkH,IAAK0vC,EACLtB,OAAsB,KAAdmB,KAGZX,EAAM5+B,IAAI2/B,EAAU1zB,E,CAGtB,MAAMkxB,EAAIlxB,EAAOud,QAAQ3/B,KAAKzB,GAC9B,IAAK+0C,EACH,OAAO,KAGT,MAAMrB,EAASjzC,OAAO2+B,OAAO,GAAI4X,GAEjC,IAAK,IAAIjzC,EAAI,EAAGA,EAAIgxC,EAAE9xC,OAAQc,IAAK,CACjC,MAAMnD,EAAMijB,EAAOnjB,KAAKqD,EAAI,GACtBs8B,EAAOz/B,EAAIqE,KACXvD,EAAQqzC,EAAEhxC,QACFwC,IAAV7E,GAAwB60C,EAAex1C,KAAK2yC,EAAQrT,KAClDz/B,EAAIkqC,OACN4I,EAAOrT,GAAQ3+B,EAAQA,EAAMwW,MAAMtX,EAAIkI,WAAWwO,IAAIm/B,GAAe,GAErE/C,EAAOrT,GAAQ3+B,EAAQ+0C,EAAY/0C,GAASA,E,CAKlD,MAAO,CACL1B,KAAM+0C,EAAE,GACRr0C,MAAOq2C,GAAc,IAAI7zC,OAAO2gB,EAAOnjB,M,OACvCgzC,E,CCUY+D,CAAUN,EAAW3F,GAAW/B,EAAUsH,EAAYC,GAE1D31C,GACF,MAAO,CACL09B,MAAM,EACNr9B,MAAO,C,MACL0tC,EACA1uC,KAAMW,EAAMX,KACZgzC,OAAQryC,EAAMqyC,OACd1zC,KAAMqB,EAAMrB,OAMpB,GAAIqB,GAASouC,EACX,KAAOyH,EAAazH,EAASxsC,QAAQ,CACnC,IAAKg0C,EAAc,CACjB,MAAMS,EAAajI,EAASyH,GAC5BQ,EAAWvvB,OAASinB,EAEpB,IAAIuI,EAAgBt2C,EAAMrB,KAAKiD,OAC3B00C,EAAgB,GAAwC,MAAnCnG,EAASp5B,OAAOu/B,KACvCA,GAAiB,GAGnBV,EAAeJ,EACba,EACAlG,EAASgE,OAAOmC,GAChBb,EACAz1C,EAAMX,KACNW,EAAMqyC,O,CAIV,MAAMkE,EAAaX,EAAanY,KAAKsY,GACrC,IAAKQ,EAAW7Y,KACd,MAAO,CACLA,MAAM,EACNr9B,MAAOk2C,EAAWl2C,OAItBu1C,EAAe,KACfC,G,CAIJ,MAAO,CAACnY,MAAM,E,GClHpB,SAAS8Y,EAAar/B,GACpB,GAAIg3B,EAAWh3B,EAAQ42B,MAAMlf,QAC3B,OAAO1X,EAAQ42B,MAAMlf,OAAO1X,E,CFChCg+B,EAAM5+B,IAAI,SAAU,CAClBlX,KAAM,GACN0gC,QAAO,SGwCT,MAAM0W,EACJv1B,YAAYwtB,EAAQzwC,EAAU,IAC5B,GAAImB,OAAOsvC,KAAYA,EACrB,MAAM,IAAIxqC,UAAU,kBAGtB7C,KAAKq1C,QAAUz4C,EAAQy4C,SAAW,GAClCr1C,KAAKs1C,aAAe14C,EAAQ04C,aAC5Bt1C,KAAKu1C,aAAe34C,EAAQ24C,cAAgBJ,EAC5Cn1C,KAAK8V,QAAU/X,OAAO2+B,OAAO,CAACzB,SAAUj7B,MAAOpD,EAAQkZ,SACvD9V,KAAKgG,KAAOhK,MAAMC,QAAQoxC,GAAU,CAAC/vC,KAAM,GAAIq3C,WAAYtH,EAAQ5nB,OAAQ,KAAM+vB,aAAa,GAAQnI,EACtGrtC,KAAKgG,KAAKyf,OAAS,I,CAUrBgwB,YACE,MAAO,IAAIz1C,KAAKgG,KAAK2uC,W,CASvBe,UAAUrI,GACRD,EAAaC,GACb,MAAMsI,EAAY,IAAI75C,EAAQuxC,IAC9BrtC,KAAKgG,KAAK2uC,WAAagB,C,CAYzBC,UAAUvI,GAGR,OAFAD,EAAaC,GACbrtC,KAAKgG,KAAK2uC,WAAWrzC,QAAQxF,EAAQuxC,IAC9BrtC,KAAKy1C,W,CAMdI,eACE71C,KAAK01C,UAAU,G,CAoBjB34C,QAAQ+4C,GACN,MAAMhgC,EAAU/X,OAAO2+B,OACrB,GACA18B,KAAK8V,QACL62B,EAASmJ,GAAqB,CAAChH,SAAUgH,GAAqBA,GAE1Dn3C,EAAQw1C,EACZn0C,KAAKgG,KACLhG,KAAK+1C,oBAAoBjgC,EAAQg5B,UACjC9uC,KAAKq1C,SAEDt4C,EAAUiD,KAAKu1C,aACrB,IAAIlT,EAAU,KACV2T,EAAc,KACdC,EAAiBngC,EAErB,SAASsmB,EAAK8Z,EAAQzwB,EAAS4c,EAAQrjC,MAAM0tC,MAAOyJ,GAClD,MAAMzB,EAA6B,OAAfyB,GAAuB9T,EAAQrjC,MAAM0tC,MAIzD,OAHArK,EAAU2T,GAAer3C,EAAMy9B,KAAKsY,GACpCsB,EAAc,KAETE,IACC7T,EAAQhG,MA5IpB,SAAsB+Z,EAAapB,GACjC,IAAItI,EAAQsI,EACZ,KAAOtI,GAEL,GADAA,EAAQA,EAAMjnB,OACVinB,IAAU0J,EACZ,OAAO,EAGX,OAAO,C,CAoIoBC,CAAa5wB,EAAQ4c,EAAQrjC,MAAM0tC,OAMtDrK,EAAQhG,KACHliB,QAAQ0oB,OAAOgM,EAAiB/4B,KAGzCmgC,EAAiBl4C,OAAO2+B,OACtBuZ,EACI,CAACxd,MAAQwd,EAAexd,MAAQwd,EAAexd,MAAM/6B,MAAM,GAAK,IAChE,GACJoY,EACAusB,EAAQrjC,OAvIhB,SAA6B8W,EAASnX,GACpC,MAAM+tC,MAACA,EAAKpvC,KAAEA,GAAQqB,EAEtB,GAAI+tC,IAAUA,EAAM8I,YAAa,CAC/B,MAAMc,EAAO,C,KAACh5C,E,MAAMovC,GACpB,GAAK52B,EAAQ2iB,OAIX,GAAIiU,EAAMjnB,OAAQ,CAChB,IAAIpkB,EAAIyU,EAAQ2iB,MAAMl4B,OACtB,KAAOc,KAAOyU,EAAQ2iB,MAAMp3B,GAAGqrC,OAAS52B,EAAQ2iB,MAAMp3B,GAAGqrC,QAAUA,EAAMjnB,QACvE3P,EAAQ2iB,MAAM9V,K,OANlB7M,EAAQ2iB,MAAQ,GAUlB3iB,EAAQ2iB,MAAMn3B,KAAKg1C,E,EAyHjBC,CAAoBN,EAAgB5T,EAAQrjC,OAErCmb,QAAQpd,QAAQA,EAAQk5C,IAAiBO,MAAKC,GAC/CA,SAAmDA,IAAe1H,GACpEkH,EAAe3kC,OAASmlC,EAAWnlC,QAAUmlC,EACtCR,GAEF7Z,EAAK8Z,EAAQzwB,EAAQgxB,OAvB1BT,EAAc3T,EACPloB,QAAQpd,QAAQgyC,G,CA4B7B,OAFAj5B,EAAQsmB,KAAOA,EAERjiB,QAAQpd,UACZy5C,MAAK,IAAMpa,GAAK,EAAMp8B,KAAKgG,QAC3B0wC,OAAOl4C,IACN,MAAMm4C,EAlKd,SAA8BV,GAC5B,IAAIU,EAAe,SAASV,EAAenH,sDAC3C,MAAM8H,GAAaX,EAAevJ,OAAS,IAAIpvC,KAI/C,OAHIs5C,IACFD,GAAgB,qCAAqCC,MAEhDD,C,CA4JoBE,CAAqBZ,GAW1C,GAVKz3C,EAGH/B,QAAQ0wC,KAAKwJ,GAFbn4C,EAAQ,IAAIkB,MAAMi3C,GAIpBn4C,EAAMsX,QAAUtX,EAAMsX,SAAWmgC,EAE3Bz3C,aAAiBs4C,eACrBt4C,EAAM0E,KAAO1E,EAAM0E,MAAQ,KAEzBlD,KAAKs1C,aAEP,OADAW,EAAe3kC,OAAStR,KAAKs1C,aAAa92C,GACnCy3C,EAET,MAAMz3C,CAAK,G,CAOjBu4C,mBAAmBC,EAAK/wC,GACtB,OAAO,IAAIgxC,IAAID,EAAK/wC,E,CAUlBixC,yBACF,OAAOl3C,KAAKq1C,QACRr1C,KAAK6f,YAAYs3B,YACjBn3C,KAAKq1C,QACL7H,SAAS4J,SAAW5J,SAASyJ,KAC7BI,KAAKv4C,QAAO,UAAY,IACxB,E,CAWNi3C,oBAAoBjH,GAClB,IAAK9uC,KAAKq1C,QAER,OAAOvG,EAGT,MAAM7oC,EAAOjG,KAAKk3C,mBACZI,EAAgBt3C,KAAK6f,YAAYs3B,YAAYrI,EAAU7oC,GAAMoxC,KACnE,OAAIC,EAAc55C,MAAM,EAAGuI,EAAK1F,UAAY0F,EACnCqxC,EAAc55C,MAAMuI,EAAK1F,aADlC,C,EAMJ60C,EAASN,aAAeA,EC/OxB,MAAMA,aAACA,GAAgBM,EACjBvhC,EAAQ,IAAIqG,IAElB,SAASq9B,EAAYC,EAAc9K,EAAOW,GACxC,MAAM9qC,EAAOmqC,EAAMnqC,MAAQmqC,EAAM+K,UASjC,GARIl1C,IACEi1C,EAAa1jC,IAAIvR,GACnBi1C,EAAat4B,IAAI3c,GAAMjB,KAAKorC,GAE5B8K,EAAatiC,IAAI3S,EAAM,CAACmqC,KAIxB1wC,MAAMC,QAAQoxC,GAChB,IAAK,IAAIhsC,EAAI,EAAGA,EAAIgsC,EAAO9sC,OAAQc,IAAK,CACtC,MAAM2zC,EAAa3H,EAAOhsC,GAC1B2zC,EAAWvvB,OAASinB,EACpB6K,EAAYC,EAAcxC,EAAYA,EAAWL,YAAcK,EAAWjI,S,EAKhF,SAAS2K,EAAeF,EAAcG,GACpC,MAAMtK,EAASmK,EAAat4B,IAAIy4B,GAChC,GAAItK,GAAUA,EAAO9sC,OAAS,EAC5B,MAAM,IAAIb,MACR,8BAA8Bi4C,kDAIlC,OAAOtK,GAAUA,EAAO,E,CAG1B,SAASuK,EAAalL,GACpB,IAAIpvC,EAAOovC,EAAMpvC,KAEjB,OADAA,EAAOtB,MAAMC,QAAQqB,GAAQA,EAAK,GAAKA,OACvBuG,IAATvG,EAAqBA,EAAO,E,CAGrC,SAASu6C,EAAaC,EAAQl7C,EAAU,IACtC,KAAMk7C,aAAkB1C,GACtB,MAAM,IAAIvyC,UAAU,uCAGtB,MAAM20C,EAAe,IAAIt9B,IAEzB,MAAO,CAACy9B,EAAW3G,KACjB,IAAItE,EAAQgL,EAAeF,EAAcG,GACzC,IAAKjL,IACH8K,EAAa/6B,QACb86B,EAAYC,EAAcM,EAAO9xC,KAAM8xC,EAAO9xC,KAAK2uC,YAEnDjI,EAAQgL,EAAeF,EAAcG,IAChCjL,GACH,MAAM,IAAIhtC,MAAM,UAAUi4C,gBAI9B,IAAIx2B,EAAStN,EAAMqL,IAAIwtB,EAAMqL,UAC7B,IAAK52B,EAAQ,CACX,IAAI42B,EAAWH,EAAalL,GACxBsL,EAAKtL,EAAMjnB,OACf,KAAOuyB,GAAI,CACT,MAAM16C,EAAOs6C,EAAaI,GACtB16C,IACFy6C,EAAWz6C,EAAKwB,QAAO,MAAQ,IAAM,IAAMi5C,EAASj5C,QAAO,MAAQ,KAErEk5C,EAAKA,EAAGvyB,M,CAEV,MAAMwsB,EAAS6C,EAAal3C,MAAMm6C,GAC5BhU,EAAS+Q,EAAamD,iBAAiBhG,GACvCj0C,EAAOD,OAAO6Z,OAAO,MAC3B,IAAK,IAAIvW,EAAI,EAAGA,EAAI4wC,EAAO1xC,OAAQc,IAC5BsrC,EAASsF,EAAO5wC,MACnBrD,EAAKi0C,EAAO5wC,GAAGkB,OAAQ,GAG3B4e,EAAS,C,OAAC4iB,E,KAAQ/lC,GAClB6V,EAAMqB,IAAI6iC,EAAU52B,GACpBurB,EAAMqL,SAAWA,C,CAGnB,IAAIf,EAAM71B,EAAO4iB,OAAOiN,EAAQp0C,IAAY,IAE5C,GAAIA,EAAQs7C,sBAAwBlH,EAAQ,CAC1C,MAAMmH,EAAc,GACdC,EAAOr6C,OAAOC,KAAKgzC,GACzB,IAAK,IAAIqH,EAAI,EAAGA,EAAID,EAAK73C,OAAQ83C,IAAK,CACpC,MAAMn6C,EAAMk6C,EAAKC,GACZl3B,EAAOnjB,KAAKE,KACfi6C,EAAYj6C,GAAO8yC,EAAO9yC,G,CAG9B,MAAMo6C,EAAQ17C,EAAQs7C,qBAAqBC,GACvCG,IACFtB,GAA2B,MAApBsB,EAAM5iC,OAAO,GAAa4iC,EAAQ,IAAIA,I,CAIjD,OAAOtB,CAAG,C,CCvGd,IAAIuB,EAAW,GCKf,SAASC,EAAQC,EAAMC,GAGrB,OAFAD,EAAKE,UAAU57B,IAAI27B,GAEZ,IAAIv+B,SAAQpd,IACjB,GAjBgB,CAAA07C,IAClB,MAAMl2C,EAAOq2C,iBAAiBH,GAAMI,iBAAiB,kBACrD,OAAOt2C,GAAiB,SAATA,CAAe,EAexBu2C,CAAYL,GAAO,CACrB,MAAMM,EAAON,EAAKO,wBACZnkC,EAAO,WAAWkkC,EAAKE,OAASF,EAAKG,iBAAiBH,EAAKI,MAAQJ,EAAKK,SAC9EX,EAAK9K,aAAa,QAAS,uBAAuB94B,KAf/B,EAAC4jC,EAAMY,KAC9B,MAAMC,EAAW,KACfb,EAAKhI,oBAAoB,eAAgB6I,GACzCD,GAAI,EAENZ,EAAKlI,iBAAiB,eAAgB+I,EAAS,EAW3CC,CAAiBd,GAAM,KACrBA,EAAKE,UAAU7V,OAAO4V,GACtBD,EAAKe,gBAAgB,SACrBz8C,GAAS,G,MAGX07C,EAAKE,UAAU7V,OAAO4V,GACtB37C,G,ICRN,SAAS08C,EAAiBnoC,GACxB,OAAOA,O,CAST,SAASooC,GAAe5K,SAACA,EAAW,GAAE1E,OAAEA,EAAS,GAAExnB,KAAEA,EAAO,GAAE6V,MAAEA,EAAQ,GAAEuY,OAAEA,EAAS,GAAE2I,aAAEA,EAAY1e,SAAEA,GAAWyR,GAChH,MAAMW,EAAS5U,EAAM7jB,KAAI0hC,GAAQA,EAAK5J,QACtC,MAAO,CACL2I,QAASpa,GAAYA,EAASoa,SAAW,G,SACzCvG,E,OACA1E,E,KACAxnB,E,OACAyqB,EACAX,MAAOA,GAASW,EAAO9sC,QAAU8sC,EAAOA,EAAO9sC,OAAS,IAAM,K,OAC9DywC,E,aACA2I,EACAC,OAAQ,CAACC,EAAa,KAAOC,GAC3BC,GAAOjF,aAAakF,QAClBC,GAAe5M,GADjB0M,CAEEh8C,OAAO2+B,OAAO,GAAIsU,EAAQ6I,IAC5B5e,G,CAKN,SAASif,EAAepkC,EAASg5B,GAC/B,MAAMkC,EAASjzC,OAAO2+B,OAAO,GAAI5mB,EAAQk7B,QACzC,MAAO,CACL/D,SAAU,C,SACR6B,EACAzqC,KAAMyR,EAAQg5B,S,OACdkC,G,CAYN,SAASmJ,EAAsB/pB,EAAUjvB,EAAMuP,GAC7C,GAAIo8B,EAAW1c,GACb,OAAOA,EAAS7uB,MAAMmP,EAASvP,E,CAInC,SAASi5C,EAAMC,EAAmBl5C,EAAMm5C,GACtC,OAAOC,GACDA,IAAoBA,EAAgB1f,QAAU0f,EAAgBtN,UACzDsN,EAGLD,EACKH,EAAsBG,EAAQD,GAAoBl5C,EAAMm5C,QADjE,C,CAuBJ,SAASE,EAAeC,GACtB,GAAIA,GAASA,EAAMl6C,OAAQ,CACzB,MAAMklB,EAASg1B,EAAM,GAAGxM,WACxB,IAAK,IAAI5sC,EAAI,EAAGA,EAAIo5C,EAAMl6C,OAAQc,IAChCokB,EAAOyoB,YAAYuM,EAAMp5C,G,EAK/B,SAASy4C,GAAqBhL,EAAUgJ,GACtC,MAAM7xC,EAAO6xC,EAAOZ,mBACpB,OAAOjxC,EACH6xC,EAAOj4B,YAAYs3B,YAAYrI,EAAShwC,QAAO,MAAQ,IAAKmH,GAAM6oC,SAClEA,C,CAGN,SAASmL,GAAexhB,GACtB,OAAOA,EAAM7jB,KAAI0hC,GAAQA,EAAKh5C,OAAM4qC,QAAO,CAACwS,EAAGC,IACzCA,EAAEp6C,OACGm6C,EAAE57C,QAAO,MAAQ,IAAM,IAAM67C,EAAE77C,QAAO,MAAQ,IAEhD47C,GACN,G,CAsCE,MAAMX,WAAe3E,EAc1Bv1B,YAAY+6B,EAAQh+C,GAClB,MAAMi+C,EAAcrN,SAASnW,KAAKoW,cAAc,QAC1CqN,EAAWD,GAAeA,EAAYE,aAAa,QACzDC,MAAM,GAAIj9C,OAAO2+B,OAAO,CAEtB2Y,QAASyF,GAAY1F,EAAS+B,YAAY2D,EAAUtN,SAASyJ,KAAKnI,SAAShwC,QAAO,UAAY,KAC7FlC,IAEHoD,KAAKu1C,aAAez/B,GAAW9V,KAAKi7C,eAAenlC,GAEnD,MAAMolC,EAAWnB,GAAOoB,kBACxBpB,GAAOqB,YAAY75C,MAAMw4C,GAAQh8C,OAAOC,KAAKk9C,GAAUtmC,KAAI1W,GAAOg9C,EAASh9C,MAW3E8B,KAAKq1C,QAULr1C,KAAKq7C,MACLr7C,KAAKq7C,MAAQlhC,QAAQpd,QAAQ69C,GAW7B56C,KAAK4vC,SACL5vC,KAAK4vC,SAAW8J,EAAe,CAACze,SAAUj7B,OAE1CA,KAAKs7C,sBAAwB,EAC7Bt7C,KAAKu7C,yBAA2Bv7C,KAAKw7C,oBAAoBliB,KAAKt5B,MAC9DA,KAAKy7C,UAAUb,GACf56C,KAAK07C,YAEL17C,KAAK27C,kBAAoB,IAAIthC,QAC7Bra,KAAK47C,gBAAkB,IAAIvhC,O,CAG7B4gC,eAAenlC,GACb,MAAM42B,EAAQ52B,EAAQ42B,MAEtB,IAAImP,EAAY1hC,QAAQpd,UAEpB+vC,EAAWJ,EAAMK,YACnB8O,EAAYA,EACTrF,MAAK,IAAM9J,EAAMK,SAxN1B,SAAgCj3B,GAC9B,MAAMqY,EAAOpwB,OAAO2+B,OAAO,GAAI5mB,GAE/B,cADOqY,EAAKiO,KACLjO,C,CAqN0B2tB,CAAuBhmC,MACjD0gC,MAAKzJ,IAGC0M,EAAiB1M,IAAcD,EAAWJ,EAAMK,YACnDA,EAAWL,EAAMK,UA/J7B,SAA4BgP,EAAarP,GACvC,IAAK1wC,MAAMC,QAAQ8/C,KAAiB/O,EAAS+O,GAC3C,MAAM,IAAIr8C,MACRxD,EACE,4CAA4CwwC,EAAMpvC,2CAA2Cy+C,MAKnGrP,EAAMiI,WAAa,GACnB,MAAMqH,EAAclgD,EAAQigD,GAC5B,IAAK,IAAI16C,EAAI,EAAGA,EAAI26C,EAAYz7C,OAAQc,IACtCorC,EAAYuP,EAAY36C,IACxBqrC,EAAMiI,WAAWrzC,KAAK06C,EAAY36C,G,CAoJ5B46C,CAAmBlP,EAAUL,EAAM,KAIzC,MAAMwP,EAAW,CACfjP,SAAU3vC,GAAQ48C,EAAepkC,EAASxY,GAC1Cm6C,UAAYA,IACV,MAAM6C,EAAU9M,SAASE,cAAc+J,GAEvC,OADAz3C,KAAK27C,kBAAkBzmC,IAAIolC,GAAS,GAC7BA,CAAO,GAIlB,OAAOuB,EACJrF,MAAK,KACJ,GAAIx2C,KAAKm8C,iBAAiBrmC,GACxB,OAAOqkC,EAAsBzN,EAAMlf,OAAQ,CAAC1X,EAASomC,GAAWxP,EAAM,IAGzE8J,MAAKllC,IACJ,OAAImoC,EAAiBnoC,KAIfA,aAAkB8qC,aAClB9qC,EAAO27B,UACP37B,IAAWy9B,GACNz9B,EAIPq7B,EAASD,EAAMO,UACViP,EAASjP,SAASP,EAAMO,UAG7BP,EAAME,QjBlKSA,EiBmKCF,EAAME,OjBlK5BD,EAASC,GACJU,EAAWV,GAEXzyB,QAAQkiC,KACb9P,EACG/K,QAAOtjC,GAAOA,KAAO0uC,IACrBh4B,KAAI1W,GAAOovC,EAAWV,EAAO1uC,GAAMA,OiB6J/Bs4C,MAAK,SAAU,KACd,MAAM,IAAI92C,MAAMxD,EAAI,qBAAqBwwC,EAAME,6CAA6C,SAHlG,EjBlKD,IAAoBA,CiBsKb,IAGP4J,MAAKllC,GACAmoC,EAAiBnoC,GACZA,EAELq7B,EAASD,EAAM+K,WACVyE,EAASzE,UAAU/K,EAAM+K,gBADlC,G,CAgBNgE,UAAUb,GACJA,GACF56C,KAAKs8C,eAAe1B,GAEtB56C,KAAKu8C,SAAW3B,C,CAQlB4B,YACE,OAAOx8C,KAAKu8C,Q,CA2Fd7G,UAAUrI,EAAQoP,GAAa,GAO7B,OANAz8C,KAAK08C,uBAAoB74C,EACzB7D,KAAK28C,kBAAe94C,EACpBm3C,MAAMtF,UAAUrI,GACXoP,GACHz8C,KAAKw7C,sBAEAx7C,KAAKq7C,K,CAwBduB,OAAO9G,EAAmB+G,GACxB,MAAMC,IAAa98C,KAAKs7C,sBAClBxlC,EAAU/X,OAAO2+B,OACrB,CACE0N,OAAQ,GACRxnB,KAAM,IAER+pB,EAASmJ,GACL,CAAChH,SAAUgH,GACXA,EACJ,CACEiH,WAAYD,IAwEhB,OAnEA98C,KAAKq7C,MAAQr7C,KAAKjD,QAAQ+Y,GAMvB0gC,MAAK1gC,GAAW9V,KAAKg9C,oBAAoBlnC,KAEzC0gC,MAAK1gC,IACJ,GAAI9V,KAAKm8C,iBAAiBrmC,GAAU,CAClC,MAAMmnC,EAAkBj9C,KAAK08C,kBAG7B,GAAI5mC,IAAYmnC,EAId,OADAj9C,KAAKk9C,uBAAuBD,GAAiB,GACtCj9C,KAAK4vC,SAcd,GAXA5vC,KAAK4vC,SAAW8J,EAAe5jC,GAE3B+mC,GAGF78C,KAAKk9C,uBAAuBpnC,EAAsB,IAAbgnC,GAGvC1O,EAAgB,mBAAoB,CAAC0J,OAAQ93C,KAAM4vC,SAAU5vC,KAAK4vC,WAG9D95B,EAAQqnC,aAGV,OAFAn9C,KAAKo9C,wBAAwBtnC,EAASmnC,GACtCj9C,KAAK08C,kBAAoB5mC,EAClB9V,KAAK4vC,SAGd5vC,KAAKq9C,sBAAsBvnC,EAASmnC,GACpC,MAAMK,EAAgBt9C,KAAKu9C,kBAAkBznC,GAK7C,OAHA9V,KAAKw9C,2BAA2B1nC,GAChC9V,KAAKy9C,2BAA2B3nC,EAASmnC,GAElCK,EAAc9G,MAAK,KACxB,GAAIx2C,KAAKm8C,iBAAiBrmC,GAOxB,OAHA9V,KAAK09C,8BAEL19C,KAAK08C,kBAAoB5mC,EAClB9V,KAAK4vC,Q,QAKnB8G,OAAMl4C,IACL,GAAIs+C,IAAa98C,KAAKs7C,sBAOpB,MANIuB,GACF78C,KAAKk9C,uBAAuBpnC,GAE9B0kC,EAAex6C,KAAKu8C,UAAYv8C,KAAKu8C,SAASxP,UAC9C/sC,KAAK4vC,SAAW8J,EAAe37C,OAAO2+B,OAAO5mB,EAAS,CAACmlB,SAAUj7B,QACjEouC,EAAgB,QAASrwC,OAAO2+B,OAAO,CAACob,OAAQ93C,K,MAAMxB,GAAQsX,IACxDtX,C,IAGLwB,KAAKq7C,K,CAcd2B,oBAAoBW,EAClBC,EAAyBD,GACzB,OAAO39C,KAAK69C,wCAAwCD,GAGjDpH,MAAKsH,IACJ,MACMC,EADoBD,IAA0BF,EAE9BE,EAAwBH,EAMxCK,EAJclE,GAClBG,GAAe6D,EAAsBrlB,OACrCqlB,EAAsB7iB,YAES6iB,EAAsBhP,SAGjDmP,EAAuB,CAACnoC,EAAS2P,EAAS3P,EAAQ42B,MAAOyJ,IACtDrgC,EAAQsmB,UAAKv4B,EAAW4hB,EAAQ0wB,GAAYK,MAAK0H,GAClC,OAAhBA,GAAwBA,IAAgBnP,EAEtCiP,EAEKloC,EACoB,OAAlB2P,EAAOA,OAETw4B,EAAqBnoC,EAAS2P,EAAOA,OAAQy4B,GAE7CA,EAIJA,IAIX,OAAOD,EAAqBH,GAAuBtH,MAAK0H,IACtD,GAAoB,OAAhBA,GAAwBA,IAAgBnP,EAC1C,MAAMF,EAAiBkP,GAGzB,OAAOG,GACJA,IAAgBnP,GAChBmP,IAAgBJ,EACf99C,KAAKg9C,oBAAoBe,EAAoCG,GAC7Dl+C,KAAKm+C,6BAA6BL,EAAsB,GAC5D,G,CAIRD,wCAAwC/nC,GACtC,MAAMxE,EAASwE,EAAQxE,OACvB,OAAIA,aAAkB8qC,aAphB1B,SAAuBtmC,EAASwkC,GAC9BA,EAAQ1K,SAAW8J,EAAe5jC,GAClC,MAAM/E,EAAQ+E,EAAQ2iB,MAAM7jB,KAAI0hC,GAAQA,EAAK5J,QAAO/hB,QAAQ7U,EAAQ42B,OACpE52B,EAAQ2iB,MAAM1nB,GAAOupC,QAAUA,C,CAkhB3B8D,CAActoC,EAASxE,GAChB6I,QAAQpd,QAAQ+Y,IACdxE,EAAO27B,SACTjtC,KAAKq+C,WAAW/sC,EAAO27B,SAAUn3B,EAAQwoC,gBAAiBxoC,EAAQinC,YACtEvG,MAAK1gC,GAAW9V,KAAK69C,wCAAwC/nC,KACvDxE,aAAkB5R,MACpBya,QAAQ0oB,OAAOvxB,GAEf6I,QAAQ0oB,OACb,IAAInjC,MACFxD,EACE,6CAA6C4Z,EAAQg5B,kEjBplB1D,SAAkB9vC,GACvB,GAAqB,iBAAVA,EACT,OAAOwX,OAAOxX,GAGhB,MAAMu/C,EAAaxgD,OAAOI,UAAUU,SAASR,KAAKW,GAAOL,MAAK,YAAa,GAC3E,MAAmB,WAAf4/C,GAA0C,UAAfA,EACtB,GAAGA,KAAcz7C,KAAKC,UAAU/D,KAEhCu/C,C,CiB4kBwDC,CAASltC,6D,CAO1E6sC,6BAA6BM,GAC3B,OAAOz+C,KAAK0+C,uBAAuBD,GAAsBjI,MAAKmI,GACxDA,IAAmB3+C,KAAK08C,mBAAqBiC,IAAmBF,EAC3DE,EAEF3+C,KAAKg9C,oBAAoB2B,I,CAIpCD,uBAAuBE,GACrB,MAAM3B,EAAkBj9C,KAAK08C,mBAAqB,GAC5CmC,EAAgB5B,EAAgBxkB,OAAS,GACzCqmB,EAAWF,EAAWnmB,MAE5B,IAAIojB,EAAY1hC,QAAQpd,UACxB,MAAMgiD,EAAU,KAAO,CAAClkB,QAAQ,IAC1BoS,EAAY6B,GAAaoL,EAAe0E,EAAY9P,GAI1D,GAFA8P,EAAWI,qBAAuB,EAClCJ,EAAWzB,cAAe,EACtB0B,EAAct+C,OAAQ,CACxB,IAAK,IAAIc,EAAI,EAAGA,EAAIgV,KAAKqD,IAAImlC,EAAct+C,OAAQu+C,EAASv+C,UACtDs+C,EAAcx9C,GAAGqrC,QAAUoS,EAASz9C,GAAGqrC,QACtCmS,EAAcx9C,GAAG/D,OAASwhD,EAASz9C,GAAG/D,MAAQuhD,EAAcx9C,GAAGi5C,UAAYwE,EAASz9C,GAAGi5C,UACtFt6C,KAAKi/C,oBAAoBJ,EAAcx9C,GAAGi5C,QAASwE,EAASz9C,GAAGi5C,UAHFj5C,IAAMu9C,EAAWI,sBAetF,GANAJ,EAAWzB,aAET2B,EAASv+C,SAAWs+C,EAAct+C,QAAUq+C,EAAWI,sBAAwBF,EAASv+C,QAExFP,KAAKi/C,oBAAoBL,EAAWttC,OAAQ2rC,EAAgB3rC,QAE1DstC,EAAWzB,aAAc,CAE3B,IAAK,IAAI9E,EAAIyG,EAASv+C,OAAS,EAAG83C,GAAK,EAAGA,IACxCwD,EAAY77C,KAAKk/C,4BAA4BrD,EAAW+C,EAAY,C,QAACG,GAAUF,EAAcxG,IAG/F,IAAK,IAAI8G,EAAI,EAAGA,EAAIL,EAASv+C,OAAQ4+C,IACnCtD,EAAY77C,KAAKo/C,4BAA4BvD,EAAW+C,EAAY,C,QAACG,E,SAAS9R,GAAW6R,EAASK,IAClGN,EAAcM,GAAG7E,QAAQ1K,SAAW8J,EAAekF,EAAYC,EAAcM,GAAGzS,M,MAKlF,IAAK,IAAI2S,EAAIR,EAAct+C,OAAS,EAAG8+C,GAAKT,EAAWI,qBAAsBK,IAC3ExD,EAAY77C,KAAKk/C,4BAA4BrD,EAAW+C,EAAY,C,QAACG,GAAUF,EAAcQ,G,CAKnG,IAAKT,EAAWzB,aACd,IAAK,IAAImC,EAAI,EAAGA,EAAIR,EAASv+C,OAAQ++C,IAC/BA,EAAIV,EAAWI,qBACbM,EAAIT,EAAct+C,QAAUs+C,EAAcS,GAAGhF,UAC/CuE,EAAcS,GAAGhF,QAAQ1K,SAAW8J,EAAekF,EAAYC,EAAcS,GAAG5S,SAGlFmP,EAAY77C,KAAKo/C,4BAA4BvD,EAAW+C,EAAY,C,QAACG,E,SAAS9R,GAAW6R,EAASQ,IAC9FR,EAASQ,GAAGhF,UACdwE,EAASQ,GAAGhF,QAAQ1K,SAAW8J,EAAekF,EAAYE,EAASQ,GAAG5S,SAK9E,OAAOmP,EAAUrF,MAAK+D,IACpB,GAAIA,EAAiB,CACnB,GAAIA,EAAgB1f,OAElB,OADA76B,KAAK08C,kBAAkBK,WAAa6B,EAAW7B,WACxC/8C,KAAK08C,kBAEd,GAAInC,EAAgBtN,SAClB,OAAOjtC,KAAKq+C,WAAW9D,EAAgBtN,SAAU2R,EAAWN,gBAAiBM,EAAW7B,W,CAG5F,OAAO6B,CAAU,G,CAIrBM,4BAA4BrD,EAAW+C,EAAY1C,EAAUqD,GAC3D,MAAM3P,EAAW8J,EAAekF,GAChC,OAAO/C,EAAUrF,MAAKllC,IACpB,GAAItR,KAAKm8C,iBAAiByC,GAAa,CAErC,OAD2BxE,EAAM,gBAAiB,CAACxK,EAAUsM,EAAUl8C,MAAOu/C,EAAajF,QACpFkF,CAAmBluC,E,KAE3BklC,MAAKllC,IACN,KAAMA,GAAU,IAAI27B,SAClB,OAAO37B,CAAM,G,CAKnB8tC,4BAA4BvD,EAAW+C,EAAY1C,EAAUqD,GAC3D,MAAM3P,EAAW8J,EAAekF,EAAYW,EAAa7S,OACzD,OAAOmP,EAAUrF,MAAKllC,IACpB,GAAItR,KAAKm8C,iBAAiByC,GAAa,CAErC,OAD4BxE,EAAM,gBAAiB,CAACxK,EAAUsM,EAAUl8C,MAAOu/C,EAAajF,QACrFmF,CAAoBnuC,E,KAKjC2tC,oBAAoB3E,EAASoF,GAC3B,SAAIpF,IAAWoF,KACN1/C,KAAK27C,kBAAkBz8B,IAAIo7B,IAAYt6C,KAAK27C,kBAAkBz8B,IAAIwgC,GACrEpF,EAAQqF,YAAcD,EAAaC,UACnCrF,IAAYoF,E,CAKpBvD,iBAAiBrmC,GACf,OAAOA,EAAQinC,aAAe/8C,KAAKs7C,qB,CAGrC+C,WAAWuB,EAAcC,EAAS/C,GAChC,GAAI+C,EA5sBmB,IA6sBrB,MAAM,IAAIngD,MAAMxD,EAAI,qCAAqC0jD,EAAav7C,SAGxE,OAAOrE,KAAKjD,QAAQ,CAClB+xC,SAAU9uC,KAAK8/C,WACbF,EAAa9Q,SACb8Q,EAAa5O,QAEf2I,aAAciG,EAAav7C,KAC3Bi6C,iBAAkBuB,GAAW,GAAK,EAClC9C,WAAYD,G,CAIhBR,eAAe1B,EAAS56C,KAAKu8C,UAC3B,KAAM3B,aAAkBmF,MACtB,MAAM,IAAIl9C,UAAU3G,EAAI,0DAA0D0+C,M,CAItFsC,wBAAuBpO,SAACA,EAAQ1E,OAAEA,EAAS,GAAExnB,KAAEA,EAAO,IAAK9jB,GACzD,GAAIwvC,OAAOsB,SAASd,WAAaA,GAC1BR,OAAOsB,SAASxF,SAAWA,GAC3BkE,OAAOsB,SAAShtB,OAASA,EAC9B,CACA,MAAMo9B,EAAclhD,EAAU,eAAiB,YAC/CwvC,OAAO2R,QAAQD,GAAa,KAAMxS,SAAShsC,MAAOstC,EAAW1E,EAASxnB,GACtE0rB,OAAOC,cAAc,IAAIuC,cAAc,WAAY,CAACH,MAAO,yB,EAI/DyM,wBAAwBtnC,EAASmnC,GAG/B,IAAIiD,EAAsBlgD,KAAKu8C,SAC/B,IAAK,IAAIl7C,EAAI,EAAGA,EAAIyU,EAAQkpC,qBAAsB39C,IAAK,CACrD,MAAM8+C,EAAmBlD,GAAmBA,EAAgBxkB,MAAMp3B,GAAGi5C,QACrE,GAAI6F,EAAkB,CACpB,GAAIA,EAAiBlS,aAAeiS,EAIlC,MAHApqC,EAAQ2iB,MAAMp3B,GAAGi5C,QAAU6F,EAC3BD,EAAsBC,C,EAM5B,OAAOD,C,CAGT7C,sBAAsBvnC,EAASmnC,GAC7Bj9C,KAAKs8C,iBAILt8C,KAAKogD,2BAGL,MAAMF,EAAsBlgD,KAAKo9C,wBAAwBtnC,EAASmnC,GAKlEj9C,KAAKqgD,mBAAqB,GAC1BrgD,KAAKsgD,sBAAwBtkD,MAC1BqI,KAAK67C,EAAoBnT,UACzBvL,QAECjjC,GAAKyB,KAAK47C,gBAAgB18B,IAAI3gB,IAE9BA,IAAMuX,EAAQxE,SAMlB,IAAIivC,EAAgBL,EACpB,IAAK,IAAI7+C,EAAIyU,EAAQkpC,qBAAsB39C,EAAIyU,EAAQ2iB,MAAMl4B,OAAQc,IAAK,CACxE,MAAMm/C,EAAe1qC,EAAQ2iB,MAAMp3B,GAAGi5C,QAClCkG,IACFD,EAAcpS,YAAYqS,GAC1BxgD,KAAK47C,gBAAgB1mC,IAAIsrC,GAAc,GACnCD,IAAkBL,GACpBlgD,KAAKqgD,mBAAmB/+C,KAAKk/C,GAE/BD,EAAgBC,E,EAKtB9C,8BACM19C,KAAKsgD,uBACP9F,EAAex6C,KAAKsgD,uBAEtBtgD,KAAKsgD,sBAAwB,KAC7BtgD,KAAKqgD,mBAAqB,I,CAG5BD,2BACMpgD,KAAKsgD,uBAAyBtgD,KAAKqgD,qBACrC7F,EAAex6C,KAAKqgD,oBACpBrgD,KAAKsgD,sBAAwB,KAC7BtgD,KAAKqgD,mBAAqB,K,CAI9B5C,2BAA2BxH,EAAgBwK,GACzC,GAAKA,EAKL,IAAK,IAAIp/C,EAAIo/C,EAAchoB,MAAMl4B,OAAS,EAAGc,GAAK40C,EAAe+I,sBAC1Dh/C,KAAKm8C,iBAAiBlG,GAD0D50C,IAAK,CAI1F,MAAMq/C,EAAmBD,EAAchoB,MAAMp3B,GAAGi5C,QAChD,GAAKoG,EAGL,IACE,MAAM9Q,EAAW8J,EAAezD,GAChCkE,EACEuG,EAAiBC,aACjB,CAAC/Q,EAAU,GAAI6Q,EAAcxlB,UAC7BylB,E,CACH,QACK1gD,KAAKsgD,sBAAsB31B,QAAQ+1B,IAAoB,GACzDlG,EAAekG,EAAiB3T,S,GAMxCyQ,2BAA2BvH,GAEzB,IAAK,IAAI50C,EAAI40C,EAAe+I,qBAAsB39C,EAAI40C,EAAexd,MAAMl4B,QACpEP,KAAKm8C,iBAAiBlG,GADsD50C,IAAK,CAItF,MAAMq/C,EAAmBzK,EAAexd,MAAMp3B,GAAGi5C,SAAW,GACtD1K,EAAW8J,EAAezD,EAAgBA,EAAexd,MAAMp3B,GAAGqrC,OACxEyN,EACEuG,EAAiBE,aACjB,CAAChR,EAAU,GAAIqG,EAAehb,UAC9BylB,E,EAINnD,kBAAkBznC,GAChB,MAAMzR,GAAQrE,KAAKsgD,uBAAyB,IAAI,GAC1Ch8C,GAAMtE,KAAKqgD,oBAAsB,IAAI,GACrCQ,EAAW,GAEXpoB,EAAQ3iB,EAAQ2iB,MACtB,IAAIp5B,EACJ,IAAK,IAAIgC,EAAIo3B,EAAMl4B,OAAQc,EAAI,EAAGA,IAChC,GAAIo3B,EAAMp3B,EAAI,GAAGqrC,MAAMoU,QAAS,CAC9BzhD,EAASo5B,EAAMp3B,EAAI,GAAGqrC,MAAMoU,QAC5B,K,CAIJ,GAAIz8C,GAAQC,GAAMjF,EAAQ,CACxB,MAAM0hD,EAAQ/T,EAAS3tC,IAAWA,EAAO0hD,OAAS,UAC5CC,EAAQhU,EAAS3tC,IAAWA,EAAO2hD,OAAS,WAClDH,EAASv/C,KAAKk3C,EAAQn0C,EAAM08C,IAC5BF,EAASv/C,KAAKk3C,EAAQl0C,EAAI08C,G,CAG5B,OAAO7mC,QAAQ8mC,IAAIJ,GAAUrK,MAAK,IAAM1gC,G,CAS1C4lC,YACEpN,OAAOiC,iBAAiB,mBAAoBvwC,KAAKu7C,yB,CAOnD2F,cACE5S,OAAOmC,oBAAoB,mBAAoBzwC,KAAKu7C,yB,CAGtDC,oBAAoBvM,GAClB,MAAMH,SAACA,EAAQ1E,OAAEA,EAAMxnB,KAAEA,GAAQqsB,EAAQA,EAAMZ,OAASC,OAAOsB,SAC3DjD,EAAS3sC,KAAK+1C,oBAAoBjH,MAChCG,GAASA,EAAMkB,gBACjBlB,EAAMkB,iBAERnwC,KAAK48C,OAAO,C,SAAC9N,E,OAAU1E,E,KAAQxnB,IAAO,G,CAoB1Cm0B,sBAAsBmE,GF76BT,IAA+BiG,IE86BpBjG,EF76BxB3C,EAASt6C,SAAQmjD,GAAWA,EAAQ5Q,eAEpC2Q,EAAYljD,SAAQmjD,GAAWA,EAAQ9Q,aAEvCiI,EAAW4I,C,CE+7BXE,WAAW9+C,EAAMyuC,GAIf,OAHKhxC,KAAK28C,eACR38C,KAAK28C,aAAe9E,EAAa73C,OAE5B85C,GACL95C,KAAK28C,aAAap6C,EAAMyuC,GACxBhxC,K,CAeJ8/C,WAAWxiD,EAAM0zC,GACf,OAAO8I,GACLC,GAAOjF,aAAakF,QAAQ18C,EAA5By8C,CAAkC/I,GAClChxC,K,CAeJ+2C,UAAUz5C,GACR,MAAMwxC,SAACA,EAAQ1E,OAAEA,EAAMxnB,KAAEA,GAAQ+pB,EAASrvC,GACtC0C,KAAKm3C,YAAY75C,EAAM,YACvBA,EACJ,OAAO8wC,EAAgB,KAAM,C,SAACU,E,OAAU1E,E,KAAQxnB,G,ECz/BpD,MAAM0+B,GAAoB,uEAGpBC,GAAcjT,OAAOkT,QAAUlT,OAAOkT,OAAOC,MAAQnT,OAAOkT,OAAOC,KAAKC,QAqD9E,SAASC,GAAgBvxB,EAAUjvB,GACjC,GAAwB,mBAAbivB,EACT,OAGF,MAAMzxB,EAAQ2iD,GAAqBviD,KAAKqxB,EAASvxB,YACjD,GAAIF,EACF,IAEEyxB,EAAW,IAAIjhB,SAASxQ,EAAM,G,CAC9B,MAAOJ,GAEP9B,QAAQC,IAAI,6DAA8D6B,E,CAI9E,OAAO6xB,EAASjvB,E,CAKlBmtC,OAAe,OAAIA,OAAe,QAAK,GAchC,MAAMsT,GAAuB,SAASxxB,EAAUjvB,GACrD,GAAImtC,OAAOkT,OAAOK,gBAChB,OAAOF,GAAgBvxB,EAAUjvB,E,EC5ErC,SAAS2gD,KA+dT,MD/YsCj+C,IAAlCyqC,OAAOkT,OAAOK,kBAChBvT,OAAOkT,OAAOK,gBAnFhB,WACE,IACE,QAoBKE,aAAaC,QAAQ,iCAIpB,CAAC,YAAY,aAAar3B,QAAQ2jB,OAAOsB,SAASI,WAAa,IAhBjEuR,IAmBR,WACE,GAAIA,GAAa,CAIf,GAH2BxjD,OAAOC,KAAKujD,IACpC3sC,KAAI1W,GAAOqjD,GAAYrjD,KACvBsjC,QAAOygB,GAAUA,EAAOC,iBACJ3hD,OAAS,EAC9B,OAAO,C,CAGX,OAAO,C,CA3BK4hD,IAdLR,IANP,WAIE,OAAO,C,KAoBP,MAAOpjD,GAEP,OAAO,C,EAkEuB6jD,IEhGlC9T,OAAOkT,OAASlT,OAAOkT,QAAU,GACjClT,OAAOkT,OAAOa,cAAgB/T,OAAOkT,OAAOa,eAAiB,GAE7D/T,OAAOkT,OAAOa,cAAc/gD,KAAK,CAC/BghD,GAAI,iBACJ3gD,QAAS,UD8eAigD,GAAqBE,IEjfhC/H,GAAOoB,kBAAoB,C,SAAC9J,E,MAAUhB;;;;;;;;;;;;;;;;;MCmBlCkS,IAIU,EAJVA,IAWM,EAXNA,GAcU,oB,GA4BgC,SAAaC,EAAQhmD,G,IAC9DgmD,EAAU,MAAKC,GAAiBjmD,E,KAIP,SAAAA,G,WACxBkD,MAAO,sBACmB6iD,GAChB,6BAAA/lD,E,EA4CdkmD,GAAA,SAAA/Q,GAYA,MAAA7sC,EAAA,GAOA,IAAA69C,EAAA,E,IAIE,IAAAthD,EAAO,EAAIA,EAACswC,EAAApxC,OAAAc,IAAiB,CAC9B,IAAAuhD,EAAAjR,EAAApuC,WAAAlC,GAEDuhD,EAAA,IAAA99C,EAAA69C,KAAAC,EAISA,EAAK,MACb99C,EAAA69C,KAAAC,GAAA,MAED99C,EAAA69C,KAAA,GAAAC,EAAA,KASA,cAAAA,IAAAvhD,EAAA,EAAAswC,EAAApxC,QAAA,cAAAoxC,EAAApuC,WAAAlC,EAAA,KAcMuhD,EAAC,QAAQ,KAAAA,IAAA,UAAAjR,EAAApuC,aAAAlC,IAEbyD,EAAM69C,KAAAC,GAAa,GAAG,IAItB99C,EAAM69C,KAASC,GAAG,UAEb99C,EAAI69C,KAAOC,GAAI,EAAK,GAAC,IACxB99C,EAAA69C,KAAc,GAAHC,EAAS,MAEpB99C,EAAA69C,KAAWC,GAAG,OACd99C,EAAA69C,KAAMC,GAAS,EAAI,GAAI,IACvB99C,EAAA69C,KAAc,GAAHC,EAAG,I,cAiGV,C,eAOQ,K,eAIH,K,sBAKN,KAKNC,sBAAA,K,kBAUQ,iE,0BAKL7iD,KAAS8iD,kBAAgB,K,kEAc7BC,mBAAA,mBAAAC,KAmBFC,gBAAAnjC,EAAAojC,GAUM,IAAAlnD,MAAAC,QAAA6jB,GAAA,MAAApgB,MAAA,iDACFM,KAAAmjD,QACA,MAAQC,EAAEF,EAAAljD,KAAAqjD,sBAAArjD,KAAAsjD,eACVC,EAAc,GACf,QAAAliD,EAAA,EAAAA,EAAAye,EAAAvf,OAAAc,GAAA,GACM,MAAKmiD,EAAA1jC,EAAAze,GACdoiD,EAAApiD,EAAA,EAAAye,EAAAvf,OChXAmjD,EAAAD,EAAA3jC,EAAAze,EAAA,KAqBSsiD,EAAAtiD,EAAA,EAAAye,EAAAvf,OACRqjD,EAAAD,EAAA7jC,EAAAze,EAAA,KAEDwiD,EAAAL,GAAA,EAecM,GACV,EADsBN,IACf,EAAOE,GAAA,EAGR,IAAAK,GAAkB,GAAXL,IAAW,EAAAE,GAAA,EACnBI,EAAI,GAAAJ,E,SAGDH,IAAYM,EAAe,KAGnCR,EAAWjiD,KAAA8hD,EAAAS,GAAAT,EAAAU,GAAAV,EAAAW,GAAAX,EAAAY,G,QAITT,EAAMhmD,KAAA,G,EAWL0mD,aAAcnkC,EAAQojC,GAKxB,OAAAljD,KAAmC+iD,qBAAQG,EAAAgB,KAAApkC,GAI7C9f,KAAAijD,gBAAAP,GAAA5iC,GAAAojC,EAED,ECxDAiB,aAAOrkC,EAAsCojC,G,OAIzCljD,KAAK+iD,qBAA6CG,EAAAF,KAAAljC,GFuLnD,SAAAskC,G,MAGFt/C,EAAA,GAED,IAAAu/C,EAAA,EAAAzB,EAAA,E,iCAWE,GAAI0B,EAAK,IAAAx/C,EAAA89C,KAAApsC,OAAuB+tC,aAC9BD,QAEF,GAAOA,EAAK,KAAAA,EAAA,IAAgBE,CAC7B,MAAAC,EAAAL,EAAAC,KAEDv/C,EAAA89C,KAAApsC,OAAA+tC,cAAA,GAAAD,IAAA,KAAAG,E,uBAWM,MAMNC,IAAA,EAAAJ,IAAA,OANWF,EAAAC,OAMX,OAHSD,EAAAC,OAGT,KAFCD,EAAAC,MAED,MAgBMv/C,EAAC89C,KAAQpsC,OAAA+tC,aAAA,OAAAG,GAAA,KAEb5/C,EAAM89C,KAAApsC,OAAgB+tC,aAClB,OAAK,KAAAG,GAGT,KAAM,CAED,MAAKC,EAAOP,EAAGC,KACZO,EAAKR,EAAGC,KAEdv/C,EAAA89C,KAAMpsC,OAAY+tC,cAAiB,GAAPD,IAAO,OAAAK,IAAA,KAAAC,E,WAInCrnD,KAAM,G,CE5PLsnD,CAAA7kD,KAAA8kD,wBAAAhlC,EAAAojC,G,EA+BJ4B,wBAAAhlC,EAAAojC,GACFljD,KAAAmjD,QCzDD,MAAA4B,EAAA7B,EAAAljD,KAAA6iD,sBAAA7iD,KAAAglD,eAkGYzB,EACR,G,yBAKI,MAAMC,EAAGuB,EAAAjlC,EAAApK,OAAArU,MAEPqiD,EADKriD,EAAAye,EAAAvf,OACAwkD,EAAAjlC,EAAApK,OAAArU,IAAA,IACXA,EAEI,MACMuiD,EADaviD,EAAIye,EAAAvf,OACFwkD,EAAAjlC,EAAApK,OAAArU,IAAA,KAClBA,EACD,MAIK4jD,EAHK5jD,EAAAye,EAAAvf,OAGLwkD,EAAAjlC,EAAApK,OAAArU,IAAA,GAER,K,EAAE,MAAAmiD,GAAA,MAAAE,GAA2C,MAATE,GAAS,MAAAqB,EAAA,MAAAvlD,QAC7C,MAAEmkD,EAAOL,GAAA,EAAAE,GAAA,EAET,G,EADApiD,KAAAuiD,GACY,KAAPD,EAAO,CACf,MAAcE,EAAAJ,GAAA,MAAAE,GAAA,EAEP,GADJL,EAAAjiD,KAAAwiD,GACS,KAAAmB,EAAA,CACF,MAAAlB,EAAAH,GAAA,MAAAqB,EACR1B,EAAAjiD,KAAkByiD,EAClB,CACD,CAGE,C,QAIL,EAKEZ,QACJ,IAAAnjD,KAAAsjD,eAAA,CC7IAtjD,KAAAsjD,eAAA,GAyBItjD,KAAOglD,eAAc,GAKrBhlD,KAAOqjD,sBAAG,GAEbrjD,KAAA6iD,sBAAA,GAWG,QAAOxhD,EAAM,EAAAA,EAAKrB,KAAAklD,a,8DAGRllD,KAAAglD,eAAqBhlD,KAAAsjD,eAAqBjiD,IAACA,EAGxDrB,KAAAqjD,sBAAAhiD,GAAArB,KAAAmlD,qBAAAzvC,OAAArU,GAEDrB,KAAA6iD,sBAAA7iD,KAAAqjD,sBAAAhiD,MAOMA,GAAArB,KAAA8iD,kBAAAviD,SAEAP,KAAOglD,eAAkBhlD,KAAKmlD,qBAAQzvC,OAAQrU,IAAKA,EAE3CrB,KAAA6iD,sBAAA7iD,KAAAklD,aAAAxvC,OAAArU,MAGb,CAED,GAgBQ+jD,GAEA,SAAOzT,GAIb,MAAA0T,EAAc3C,GAAuC/Q,GACtD,OAAA2T,GAAArC,gBAAAoC,GAAA,EAED,EAaEE,GAAY,SAAU5T,GAGxB,OAAAyT,GACgBzT,GAAA7yC,QAAA,S,EAmBhB0mD,GACgB,SAAA7T,GACd,IAKD,OAAA2T,GAAAnB,aAAAxS,GAAA,EAQA,CAND,MAAApzC,GAKE9B,QAAO+B,MAAO,wBAAuBD,EACtC,CAED,W;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SA6BMknD,GAAczmD,G,eACA6E,EAAA7E,E,CCxGpB,SAAA0mD,GAAApgB,EAAAh7B,GACA,KAAAA,aAAAvM,QAAA,OAAAuM,EACM,OAAOA,EAAAuV,aAIX,KAAA1J,K,gBAKS7L,E,0CAMP,M,WAIIg7B,EAAM,GAGX,MACF,QAMC,OACmBh7B,E,IACA,MAAWqzB,KAAArzB,EAE1BA,EAAAlM,eAAAu/B,I,cAAAA,IAEJ2H,EACS3H,GACJ+nB,GAAyDpgB,EAAA3H,GAAArzB,EAAAqzB,K,OAG5D2H,C;;;;;;;;;;;;;;;;;AChFF,MAAAqgB,GACF9lC,cClCA7f,KAAA6iC,OAAA,OAuCM7iC,KAAAjD,QACF,OAIEiD,KAAA4lD,QAAA,IAAAzrC,SAAA,CAAApd,EAAA8lC,KACF7iC,KAAMjD,QAAaA,EACnBiD,KAAS6iC,QAAA,G,cAQTzS,G,OACA5xB,EAAMQ,KACNR,EAAIwB,KAAA6iC,OAAArkC,G,KACJzB,QAASiC,GACT,mBAAAoxB,IAmBUpwB,KAAW4lD,QAAAlP,OAAA,SAKS,IAArBtmB,EAAW7vB,OAAU6vB,EAAA5xB,GACnB4xB,EAAA5xB,EAAeQ,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9C5B,SAAO6mD,KACR,0BAAAjV,WAAA,iBAAAA,UAAA,UAAAA,UAAA,UAED,E,UAaKkV,KACH,MAAW,oBAAAxX,WAGbA,OAAA,SAAAA,OAAA,UAAAA,OAAA,+DAGgB55B,KAAAmxC,K,UC0EVE,K,OAIS,I,KACW,IADFxD,E,kBC9DI7iD,M,mBAElBs7C,MAAAx+C,GACAwD,KAASkD,OASflD,KAAKgmD,WAAaA,E,UANpB,gBAUEjoD,OAAKkoD,eACQjmD,KAAAkmD,GAAA/nD,WAITuB,MAAKymD,mBAASzmD,MAAAymD,kBAAAnmD,KAAAomD,GAAAjoD,UAAAyZ,O,QAIpBwuC,G,YACOC,EAAAC,EAAsCC,G,KACzCF,QAASA,E,KACRC,cACJtmD,KAAAumD,QAED,C,OACErjD,KAAK+Z,G,MACH+oC,EAAe/oC,EAAK,IAAE,GACrBupC,EAAA,GAAAxmD,KAAAqmD,WAAAnjD,IACE8lC,EAAYhpC,KAACumD,OAAArjD,GACnB1G,EAAAwsC,E,SASDA,EAAA/rB,G,OAWE+rB,EAAyBlqC,QAAC2nD,IAAA,CAAA7wC,EAAA1X,KAE1B,MACEc,EAAAie,EAAc/e,G,sCAvBjBwoD,CAAA1d,EAAAgd,GAAA,QAGMW,EAAe,GAAE3mD,KAAAsmD,gBAAyB9pD,MAAAgqD,M,OACpC,IAAAN,GAAWM,EAAAG,EAAAX,E,WA8BX;;;;;;;;;;;;;;;;8BAuCNpoD,MAAA+zC,E;;;;;;;;;;;;;;;;YAgDW,SAAAsB,G,mDAIV2T,GAAsCpB,GACnB9R,EAAA,S,EAEpBkT,GAAApB,GAAA9R,EAAA,S,EAEFA,EAAA,GACJz2B,EAAA4pC,EAAA,aAEwBA,EAAA,CACd,C,MAALtoD,GAAK,C,MAGT,CACAuoD,OAAOA,E,gBAKPC,UAAUA,E,ECnLRC,G,YAEF,MACsBH,EAApBI,GAAYhU,GAAuB4T,OAGxC,QAAAA,GAAA,iBAAAA,KAAAzoD,eAAA,MAEe,EA0BV8oD,GAA2C,SACvCjU,GAIV,MAAA4T,EAAAI,GAAAhU,GAAA4T,OCnHA,uBAAAA,IAAA,IAAAA,EAAA,KAoBA;;;;;;;;;;;;;;;;;SAuBOM,GAAGzoD,EAAAR,G,cACJC,UAAAC,eAAAC,KAAAK,EAAMR,E,aAE2BQ,EAAAR,G,cAClCC,UAAAC,eAAAC,KAAAK,EAAAR,GAAAQ,EAAAR,QAED,C,aAG4BQ,G,UAC1BR,KAAQQ,E,GACTX,OAAUI,UAASC,eAAEC,KAAAK,EAAAR,GAAA,S,kBAIrBkpD,GAAM1oD,EAAA0zB,EAAAi1B,G,QACD,CAAC,E,UACLnpD,KAAQQ,EAAUX,OAAQI,UAAQC,eAAAC,KAAAK,EAAAR,KAAAiF,EAAAjF,GAAAk0B,EAAA/zB,KAAAgpD,EAAA3oD,EAAAR,KAAAQ,I,SAKtC,SAAO4oD,GAAI5M,EAAAC,GACX,GAAAD,IAAAC,EAAA,SAEF,MAAA4M,EAAAxpD,OAAAC,KAAA08C,GAMO8M,EAAKzpD,OAAAC,KAAA28C,GACV,IAAK,MAAKjI,KAAO6U,EAAM,CACrB,IAAAC,EAAUzlC,SAAI2wB,GAAU,OAAI,EAC5B,MAAK+U,EACF/M,EAAEhI,GACEgV,EAAQ/M,EAAAjI,G,MAEsB+U,IAAEE,GAAAD,I,0BAEpC,GAAMD,IAAAC,EAAA,Q,KAER,MACCE,KAAMJ,EAET,IAAAD,EAAAxlC,SAAA6lC,GAAA,SAEH,QC1FA,C,SAuBED,GAAOE,G,OACM,OAAXA,GACM,iBADuBA,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yDCsBpBC,GATXjoC,YAAiBtd,EAAAwlD,EAA6C3yB,GAY1Dp1B,KAAAuC,OAEJvC,KAAA+nD,gBAA4CA,EAC1C/nD,KAAKo1B,OACLp1B,KAAAgoD,mBAAY,EAIRhoD,KAACioD,aAAiB,CAAG,EACzBjoD,KAAAkoD,kBAAY,OACbloD,KAAAmoD,kBAAA,IAED,C,qBACmBC,GAElB,OADCpoD,KAAAkoD,kBAAYE,EACbpoD,IAED,C,qBACOgoD,GAEN,OADChoD,KAAAgoD,kBAAYA,EACbhoD,IACF,CCtEDqoD,gBAAA10C,GC4CE,OA5CF3T,KAAAioD,aAAAt0C,EA4CE3T,I,4BAEmBowB,GAXF,OADTpwB,KAASmoD,kBAA6B/3B,EAC7BpwB,I;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+BA2FbuC,KAAIA,E,eAGI+lD,E,KAET7Q,UAAA,KACFz3C,KAAAuoD,UAAA,IAAAruC,IAEDla,KAAAwoD,kBAAY,IAAAtuC,IACVla,KAAAyoD,iBAAsB,IAAAvuC,IACvBla,KAAA0oD,gBAAA,IAAAxuC,GAED,C,mDAmBE,IAAIla,KAAAwoD,kBAAA10C,IAAA60C,GACF,CACE,MAAKC,EAAA,IAAAjD,G,QAAyB6C,kBAAkBtzC,IAAEyzC,EAAAC,GAAsB5oD,KAAA6oD,cAAAF,IAAA3oD,KAAA8oD,uBACxE,I,4EAKD,MAAAvqD,G,CAMH,C,OAIEyB,KAAMwoD,kBAAoBtpC,IACxBypC,GAAK/C,O,+BAMD5lD,KAAA+oD,4BAAAnsD,aAAA,EAAAA,EAAAosD,Y,EAC+B,QAAnCC,EAAArsD,aAAmC,EAAAA,EAAA+1C,gBAAA,IAAAsW,K,SACnCJ,cAAUF,KAAA3oD,KAAA8oD,uBAST,CAEN,GAAAnW,EAAA,Y,qDAXe,I,0DAQd,CAJC,MAAAp0C,GACF,GAAAo0C,EAAA,YAEY,MAACp0C,CACZ,CAOF,C,eAGE,OAAMyB,KAAAy3C,S,sBAIGl1C,OAAYvC,KAAgBuC,KAAA,MAAU7C,MAAS,yBAAA+3C,EAAAl1C,qBAAAvC,KAAAuC,S,QACnDk1C,UACA,MAAO/3C,MAAO,iBAAiBM,KAAOuC,kC,oBAGxCvC,KAAA8oD,uB,CAGL,G;;;;;;;;;;;;;;;;GAAAI,CAAczR,GAAA,IACZz3C,KAAOmpD,uBAAuB,CAC/BC,mB,aAUD,CAPE,MAAO7qD,GAOT,CAWE,IAAK,MAAK6qD,EACRC,KAAyBrpD,KAAKwoD,kBAAIhsC,UAAA,CAGpC,MAAMmsC,EAAgB3oD,KAAA+oD,4BAAuBK,GAC3C,IAEE,MAAAE,EAAAtpD,KAAAmpD,uBAAA,C,uBAOFE,EAAMtsD,QAAAusD,EAQT,CANG,MAAIvpD,GAMP,CAED,CAlDK,C,eA2DGipD,E,aACNhpD,KAAAwoD,kBAAuBe,OACrBP,GAEFhpD,KAAAyoD,iBAAsBc,OAAAP,GACtBhpD,KAAKuoD,UAAAgB,OAAgBP,E,sBASnBQ,EAAAxtD,MAAAqI,KAAArE,KAAAuoD,UAAA12C,gBACHsI,QAAA8mC,IAAA,IAEDuI,EAAAhoB,QAAA6kB,GAAA,aAAAA,IASOzxC,KAAAyxC,GACHA,EAAOoD,SAAAF,cAEJC,EAAMhoB,QAAY6kB,GACrB,YAAIA,IAEFzxC,KAAMyxC,KAAAqD,a,kBAMJ,OAAuB,MAAvB1pD,KAAAy3C,S,eAQDuR,E,oBACHhpD,KAAQuoD,UAAQz0C,IAAAk1C,E,kCAGbhpD,KAAAyoD,iBAAAvpC,IAAA8pC,IAAA,E,YAEHW,EAAK,I,MAEL/sD,UAAA,IAAA+sD,EAOAhB,EAAA3oD,KAAA+oD,4BAAAY,EAAAP,oB,QAOIP,cAAeF,GACR,MAAAjpD,MACL,GAAAM,KAAAuC,QAAAomD,mC,IAGH3oD,KAAC4pD,iBAAM,MAAAlqD,MAAA,aAAAM,KAAAuC,oC,wDAEPomD,EAEJ/rD,YAKK,UAAAwsD,EACNC,KAAqBrpD,KAAAwoD,kBAAAhsC,UAAkB,CAKrCmsC,IAFqB3oD,KAAC+oD,4BAA8BK,IAEpDC,EAAAtsD,QAAAusD,EAEH,CAEO,OAAAA,C,CAcRO,OAAOz5B,EAAU44B,GACnB,IAAAC,ECzXA,MAAAN,EAAA3oD,KAAA+oD,4BAAAC,GA2BEc,EAAyC,QAAAb,EAAAjpD,KAAA0oD,gBAAAxpC,IAAAypC,UAAA,IAAAM,IAAA,IAAA7uC,IAAZ0vC,EAAY/sC,IAAAqT,GAFxBpwB,KAAA0oD,gBAAgBxzC,IAAGyzC,EAA2BmB,GAElB,MAAAC,EAAA/pD,KAAAuoD,UAAArpC,IAAAypC,GAY3C,OAVFoB,GAAA35B,EAAA25B,EAAApB,GAUQ,KACFmB,EAASP,OAAgBn5B,EACrB,C,CAYN45B,sBAAsBV,EAAUN,GAGlC,MAAKnN,EAAa77C,KAAA0oD,gBAAWxpC,IAAA8pC,GAC9B,GAAAnN,EAED,UAAAzrB,KAAAyrB,EAAA,IAQMzrB,EAAKk5B,EAAcN,EAMvB,C,SAAA,C,yBAGDI,qBAAAxsD,UAAA,KAED,IAAA0sD,EAAYtpD,KAAAuoD,UAAArpC,IAAAkqC,GACV,IAAAE,GAAiBtpD,KAAKy3C,YACvB6R,EAAAtpD,KAAAy3C,UAAAsQ,gBAAA/nD,KAAAsoD,UAAA,CACFc,oB,EAAAA,E;;;;;;;;;;;;;;;;GCXC,MAAAa,GAAA,GAyCA,IAAAC,GACMC,O,KA2BND,GAGiB,KA7BbC,GACM,MACN,GAAI,Q,GAINA,GACE,qBAGJA,MAAA,eAEWA,MAAA,eACXA,MAAA,iB,GAMuBA,GAAQ,mB,SA4B/B,C,MAeAD,GAAAE,M,QA1CEF,GAAAG,Q,KAIDH,GAAAI,KAODnd,KAAI+c,GAAQK,K,MACVL,GAAsBM,M,OACvBN,GAAAO,QAOAC,GAAAR,GAAAI,KAaCK,GAAwB,C,CACzBT,GAAAE,OAAA,MACD,CAAAF,GAA8BG,SAAA,M,IAEpBC,MAAI,O,IAEWC,MAAA,O,CACxBL,GAAAM,OAAA,SAWAI,GAAA,CAAAtB,EAAAuB,KAAA1pD,KAED,GAAA0pD,EAAAvB,EAAAwB,SAAA,O,MAKEryC,GAAK,IAAAtC,MAAA40C,cACL5rB,EAAKwrB,GAAkBE,G,IACxB1rB,EACG,MAAkB,IAAAz/B,MAAA,8DAAAmrD,MADrBpuD,QAAA0iC,GAAA,IAAA1mB,OAAA6wC,EAAA/mD,WAAApB,EACqB,E,SASlB0e,YAAmBtd,GACrBvC,KAAKuC,OAGDvC,KAAkBgrD,UAAAN,GAIzB1qD,KAAAirD,YAAAL,GAIO5qD,KAACkrD,gBAAmB,KAIZjB,GAAA3oD,KAAAtB,KAId,CACE8qD,eACA,OAAI9qD,KAAOgrD,S,cAMThX,G,KAKEA,KAAMkW,IACO,UAAArnD,UAAA,kBAAAmxC,+B,eACFA,C,+BASD,iBAAAA,EAAAmX,GAAAnX,I,8BAGFiX,W,gBAILjX,G,GAEW,mBAAVA,EAAU,UAAAnxC,UAAA,qD,iBAEHmxC,C,kCAGHkX,e,oBAGRlX,GAELh0C,KAAAkrD,gBAAAlX,CACH,C,6iBCzQA,IAAIoX,GACAC,GAqBJ,MAAMC,GAAmB,IAAIjxC,QACvBkxC,GAAqB,IAAIlxC,QACzBmxC,GAA2B,IAAInxC,QAC/BoxC,GAAiB,IAAIpxC,QACrBqxC,GAAwB,IAAIrxC,QA0DlC,IAAIsxC,GAAgB,CAChBzsC,IAAIomB,EAAQ3H,EAAMiuB,GACd,GAAItmB,aAAkBumB,eAAgB,CAElC,GAAa,SAATluB,EACA,OAAO4tB,GAAmBrsC,IAAIomB,GAElC,GAAa,qBAAT3H,EACA,OAAO2H,EAAOwmB,kBAAoBN,GAAyBtsC,IAAIomB,GAGnE,GAAa,UAAT3H,EACA,OAAOiuB,EAASE,iBAAiB,QAC3BjoD,EACA+nD,EAASG,YAAYH,EAASE,iBAAiB,G,CAI7D,OAAOE,GAAK1mB,EAAO3H,G,EAEvBzoB,IAAG,CAACowB,EAAQ3H,EAAM3+B,KACdsmC,EAAO3H,GAAQ3+B,GACR,GAEX8U,IAAG,CAACwxB,EAAQ3H,IACJ2H,aAAkBumB,iBACR,SAATluB,GAA4B,UAATA,IAGjBA,KAAQ2H,GAMvB,SAAS2mB,GAAax7C,GAIlB,OAAIA,IAASy7C,YAAY/tD,UAAUguD,aAC7B,qBAAsBN,eAAe1tD,WA7GnCktD,KACHA,GAAuB,CACpBe,UAAUjuD,UAAUkuD,QACpBD,UAAUjuD,UAAUmuD,SACpBF,UAAUjuD,UAAUouD,sBAqHExqC,SAAStR,GAC5B,YAAatP,GAIhB,OADAsP,EAAKlP,MAAMirD,GAAOxsD,MAAOmB,GAClB6qD,GAAKV,GAAiBpsC,IAAIlf,M,EAGlC,YAAamB,GAGhB,OAAO6qD,GAAKv7C,EAAKlP,MAAMirD,GAAOxsD,MAAOmB,G,EAtB9B,SAAUsrD,KAAetrD,GAC5B,MAAMurD,EAAKj8C,EAAKpS,KAAKmuD,GAAOxsD,MAAOysD,KAAetrD,GAElD,OADAqqD,GAAyBt2C,IAAIw3C,EAAID,EAAWxiC,KAAOwiC,EAAWxiC,OAAS,CAACwiC,IACjET,GAAKU,E,EAsBxB,SAASC,GAAuB3tD,GAC5B,MAAqB,mBAAVA,EACAitD,GAAajtD,IAGpBA,aAAiB6sD,gBAhGzB,SAAwCa,GAEpC,GAAInB,GAAmBz3C,IAAI44C,GACvB,OACJ,MAAMrwB,EAAO,IAAIliB,SAAQ,CAACpd,EAAS8lC,KAC/B,MAAM+pB,EAAW,KACbF,EAAGjc,oBAAoB,WAAYoc,GACnCH,EAAGjc,oBAAoB,QAASjyC,GAChCkuD,EAAGjc,oBAAoB,QAASjyC,EAAM,EAEpCquD,EAAW,KACb9vD,IACA6vD,GAAU,EAERpuD,EAAQ,KACVqkC,EAAO6pB,EAAGluD,OAAS,IAAIs4C,aAAa,aAAc,eAClD8V,GAAU,EAEdF,EAAGnc,iBAAiB,WAAYsc,GAChCH,EAAGnc,iBAAiB,QAAS/xC,GAC7BkuD,EAAGnc,iBAAiB,QAAS/xC,EAAM,IAGvC+sD,GAAmBr2C,IAAIw3C,EAAIrwB,E,CA0EvBywB,CAA+B9tD,GA9JhBgU,EA+JDhU,GAzJVosD,KACHA,GAAoB,CACjBc,YACAa,eACAC,SACAZ,UACAP,kBAZiDvjB,MAAMsa,GAAM5vC,aAAkB4vC,IAgK5E,IAAIqK,MAAMjuD,EAAO2sD,IAErB3sD,GAlKW,IAACgU,C,CAoKvB,SAASg5C,GAAKhtD,GAGV,GAAIA,aAAiBkuD,WACjB,OA3IR,SAA0BC,GACtB,MAAMvH,EAAU,IAAIzrC,SAAQ,CAACpd,EAAS8lC,KAClC,MAAM+pB,EAAW,KACbO,EAAQ1c,oBAAoB,UAAW2c,GACvCD,EAAQ1c,oBAAoB,QAASjyC,EAAM,EAEzC4uD,EAAU,KACZrwD,EAAQivD,GAAKmB,EAAQ77C,SACrBs7C,GAAU,EAERpuD,EAAQ,KACVqkC,EAAOsqB,EAAQ3uD,OACfouD,GAAU,EAEdO,EAAQ5c,iBAAiB,UAAW6c,GACpCD,EAAQ5c,iBAAiB,QAAS/xC,EAAM,IAe5C,OAbAonD,EACKpP,MAAMx3C,IAGHA,aAAiBotD,WACjBd,GAAiBp2C,IAAIlW,EAAOmuD,EAAQ,IAIvCzW,OAAM,SAGXgV,GAAsBx2C,IAAI0wC,EAASuH,GAC5BvH,C,CA6GIyH,CAAiBruD,GAG5B,GAAIysD,GAAe33C,IAAI9U,GACnB,OAAOysD,GAAevsC,IAAIlgB,GAC9B,MAAMoqB,EAAWujC,GAAuB3tD,GAOxC,OAJIoqB,IAAapqB,IACbysD,GAAev2C,IAAIlW,EAAOoqB,GAC1BsiC,GAAsBx2C,IAAIkU,EAAUpqB,IAEjCoqB,C,CAEX,MAAMojC,GAAUxtD,GAAU0sD,GAAsBxsC,IAAIlgB,GC5KpD,SAASsuD,GAAO/qD,EAAMZ,GAAS4rD,QAAEA,EAAOC,QAAEA,EAAOC,SAAEA,EAAQC,WAAEA,GAAe,IACxE,MAAMP,EAAUQ,UAAUC,KAAKrrD,EAAMZ,GAC/BksD,EAAc7B,GAAKmB,GAgBzB,OAfIK,GACAL,EAAQ5c,iBAAiB,iBAAkBtB,IACvCue,EAAQxB,GAAKmB,EAAQ77C,QAAS29B,EAAM6e,WAAY7e,EAAM8e,WAAY/B,GAAKmB,EAAQhB,aAAa,IAGhGoB,GACAJ,EAAQ5c,iBAAiB,WAAW,IAAMgd,MAC9CM,EACKrX,MAAMwX,IACHN,GACAM,EAAGzd,iBAAiB,SAAS,IAAMmd,MACnCD,GACAO,EAAGzd,iBAAiB,iBAAiB,IAAMkd,KAAW,IAEzD/W,OAAM,SACJmX,C,CAcX,MAAMI,GAAc,CAAC,MAAO,SAAU,SAAU,aAAc,SACxDC,GAAe,CAAC,MAAO,MAAO,SAAU,SACxCC,GAAgB,IAAIj0C,IAC1B,SAASk0C,GAAU9oB,EAAQ3H,GACvB,KAAM2H,aAAkB4mB,cAClBvuB,KAAQ2H,GACM,iBAAT3H,EACP,OAEJ,GAAIwwB,GAAcjvC,IAAIye,GAClB,OAAOwwB,GAAcjvC,IAAIye,GAC7B,MAAM0wB,EAAiB1wB,EAAK7+B,QAAO,aAAe,IAC5CwvD,EAAW3wB,IAAS0wB,EACpBE,EAAUL,GAAansC,SAASssC,GACtC,KAEEA,KAAmBC,EAAWtB,SAAWD,gBAAgB5uD,aACrDowD,IAAWN,GAAYlsC,SAASssC,GAClC,OAEJ,MAAMlvB,EAASyO,eAAgB4gB,KAAcrtD,GAEzC,MAAMurD,EAAK1sD,KAAKmsD,YAAYqC,EAAWD,EAAU,YAAc,YAC/D,IAAIjpB,EAASonB,EAAG+B,MAQhB,OAPIH,IACAhpB,EAASA,EAAOv0B,MAAM5P,EAAKutD,iBAMjBv0C,QAAQ8mC,IAAI,CACtB3b,EAAO+oB,MAAmBltD,GAC1BotD,GAAW7B,EAAGrwB,QACd,E,EAGR,OADA8xB,GAAcj5C,IAAIyoB,EAAMwB,GACjBA,C,CDwCPwsB,GCtCS,CAACgD,IAAc,IACrBA,EACHzvC,IAAK,CAAComB,EAAQ3H,EAAMiuB,IAAawC,GAAU9oB,EAAQ3H,IAASgxB,EAASzvC,IAAIomB,EAAQ3H,EAAMiuB,GACvF93C,IAAK,CAACwxB,EAAQ3H,MAAWywB,GAAU9oB,EAAQ3H,IAASgxB,EAAS76C,IAAIwxB,EAAQ3H,KDmCzDvN,CAASu7B;;;;;;;;;;;;;;;;;ME9ErBiD,G,YAGLtG,GACFtoD,KAAAsoD,WACD,CAWAuG,wB,+OCGGC,GAAqB,IAAAC,GAAkB,iBCmDxCC,GAC2B,CAE3B,gBAAqD,YACtD,0CAED,uCAaE,qDACD,uCAED,qDAME,6BACF,2CC5IA,iCAiCE,4BACE,mBAEF,gCACA,8CAEA,qCACA,mDAGA,iCAEA,6BACE,kBACF,wBACE,YACF,+BACE,mBACF,oCAEA,kDAcK,oBAAM,WCnEb,6CA2CE,sBAGE,W,6BANyB,kB,UAQpB,U,SACe,eA0BpBC,GAAsB,IAAA/0C,IAOvBg1C,GAAA,IAAAh1C,I,SAOCi1C,GAAuBC,EAAA3X,G,IAGrB2X,EAAA9G,UAAsB+G,aAAA5X,EAI1B,C,MAHOl5C,GACN+wD,GAAApyD,MAAA,aAAAu6C,EAAAl1C,4CAAA6sD,EAAA7sD,OAAAhE,EAED,C,CCyBA,SAAMgxD,GAAM9X,G,MACV+X,EAAM/X,EAAAl1C,K,GACN2sD,GAAqCp7C,IAAA07C,GAGvC,OAFKF,GACHpyD,MAAA,sDAAAsyD,OACQ,E,GAIet6C,IAAAs6C,EAAA/X,GAIzB,UAAM2X,KAAWH,GAAGp9C,SAAUs9C,GAAyBC,EAAA3X,GACvD,OAAI,C,CAmBJ,SAAAgY,GAAcL,EAAE7sD,GAEhB,MAAAmtD,EAAcN,EAAA9G,UAAAqH,YAAA,aAAAC,aAAA,CACfjd,UAAA,IAiCC,OADA+c,GAAYA,EAAAG,mBACPT,EACH9G,UAAMqH,YAAAptD,E;;;;;;;;;;;;;;;;;AAqFR,MCpRFutD,GAAA,IAAA1J,GAAA,iBDoRE,C,SAGoB,oF,eAAS,gC,gBAG3B,kFACH,gEAED,oGAWE,uBAAmD,wDAGnD,2FACD,+FAED,6FAUE2J;;;;;;;;;;;;;;;;;MCvQKC,G,YACOpzD,EAAGyC,EAAAipD,GACXtoD,KAAAiwD,YAAM,E,KACJC,SAAAnyD,OAAA2+B,OAAwB,GAAA9/B,G,KACvBuzD,QAAApyD,OAAA2+B,OAAA,GAAAr9B,GACFW,KAAAowD,MAAA/wD,EAAAkD,KAELvC,KAAOqwD,gCAAUhxD,EAAAixD,+BAClBtwD,KAAAuwD,WAAAjI,EAEMtoD,KAAAsoD,UAAe+G,aAAA,IAAAvH,GACJ,WAAA9nD,MAAA,U,CAEZswD,qCAEF,OADAtwD,KAAAwwD,iBACOxwD,KACJqwD,+B,CAIHC,mCAAiBtc,G,KAEVwc,iB,KACLH,gCAAoBrc,C,wBAGpBwc,iBACDxwD,KAAAowD,K,CAEJxzD,c,OAEMoD,KAAAwwD,iB,aAIL,CACEnxD,aAEA,OADAW,KAAAwwD,iBACMxwD,KAAAmwD,O,CAEN7H,gBACA,OAAQtoD,KAAEuwD,U,wBAIRvwD,KAAMiwD,U,eAEHjc,G,KACHic,WAAAjc,C,CAMJwc,iBACF,GAAAxwD,KAAAywD,UAAA,MAAAX,GAAAl4C,OAAA,eCxGA84C,QAAA1wD,KAAAowD,OAsCA;;;;;;;;;;;;;;;;eAqJwC7tD,EL7EF,a,QK8E9B0sD,GAAO/vC,IAAA3c,G,YAACutD,GAAwBl4C,OAAA,U,QAACrV,I,kBAiDnCouD,GAAiCC,EAAAjvD,EAAAkvD,G,YAElC,QAAA5H,EAAA+F,GAAA4B,UAAA,IAAA3H,IAAA2H,EACFC,IAAAC,GAAA,IAAAD,K,yBAEKE,EAAUpvD,EAAuChD,MAAA,S,SACrD,MAAMqyD,EAAA,CACF,+BACKF,oBAAAnvD,O,OAEPsvD,GAAMD,EAAA1vD,KAAwB,iBAAcwvD,sDAC5CG,GAAOF,GAAAC,EAAA1vD,KAAA,O,GACL0vD,EAAqB1vD,KACnB,iBAAAK,2D,GAEUwrC,KAAA6jB,EAAiBzzD,KAAU,K,IAG5C,IAAAuqD,GAAA,GAAAgJ,aAAA,M,UAEKnvD,QAAIA,K;;;;;;;;;;;;;;;;u0DnB1Ge,iBAAfgsD,W,aAUD,CAAG5wD,EAAU8lC,K,WAET,E,QACS,0D,EACV3zB,KAAAy+C,UAAWC,KAAAsD,G,EAChBC,UAAA,K,EAEG7/C,OAAM8/C,QAEJC,GAAWniD,KAAAy+C,UAAA2D,eAAAJ,GAChBn0D,GAAM,I,EAEDw0D,gBAAW,KAChBF,GAAA,GAIHlE,EAAMnf,QAAA,KACF,IAAEib,EACFpmB,GAAqC,QAA5BomB,EAAMkE,EAAW3uD,aAAW,IAAAyqD,OAAA,EAAAA,EAAAzsD,UAAA,IAK3C,C,MAHMgC,GACLqkC,EAAArkC,EAED,K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GoBpIgD,IAAAgzD,GAAoB;;;;;;;;;;;;;;;;;ACPvE,MAAAC,G,+DCAIvzD,EAAAc,GACW,MAAZA,EAAYgB,KAAA0xD,YAAAC,WAAA3xD,KAAA4xD,cAAA1zD,I,sDAOhBghB,IAAAhhB,GAGA,MAAA2zD,EAAA7xD,KAAA0xD,YAAA1P,QAAAhiD,KACO4xD,cAAM1zD,IC1Db,aAAA2zD,EAAA,KAoCAjL,GAAAiL,EAIE,CACA/uB,OAAO5kC,GACL8B,KAAA0xD,YAAYC,WAAA3xD,KAAA4xD,cAAA1zD,G,CAEX0zD,cAAArvD,GAEL,OAAAvC,KAAA8xD,QAAAvvD,CAME,CACA1D,WACI,OAAOmB,KAAC0xD,YAAW7yD,UACvB;;;;;;;;;;;;;;;;SAmDEkzD,G,cAEA/xD,KAAIgyD,OAAU,GAGfhyD,KAAMiyD,mBAAkB,C,KAGvB/zD,EAAAc,GACA,MAAAA,SAAAgB,KAAAgyD,OAAe9zD,GAChB8B,KAAAgyD,OAAA9zD,GAAAc,CACD,CAEKkgB,IAAMhhB,GACP,OAAAipD,GAAoBnnD,KAAAgyD,OAAA9zD,GAAA8B,KAAAgyD,OAAA9zD,GACtB,I,QAIDA,UAEG8B,KAAAgyD,OAAA9zD,E;;;;;;;;;;;;;;;;GA+CJ,MAAAg0D,GAAA,SAAAC,GAUF,IAYa,uBAAA7jB,aAA8C,IAAxBA,OAAU6jB,GAAc,CAGlD,MAAAC,EAAA9jB,OAAA6jB,GAID,O,yEAAM,IAAGV,GAAMW,EACnB,CACO,C,MAAL7zD,GAAK,C,WAGJwzD,E,EAGeM,GAAAH,GAAA,gBACTI,GAAAJ,GAAA,kB,GAmB+B,IAAWnD,GAAA,sB,oBAKlD,E,OACF,WACD,OAAA7gC,GAEF,CAKA,C,GAeSqkC,GAAA,SAAA5gB,G,MACL0T,EAAemN,GACb7gB,GAEF8gB,EAAI,IAAWC,G,SACTrN,G,QAGFoN,EAAUE,S,OAEPrN,GACIrC,gBAAA2P,E,EAIZC,GAAA,YAAAC,GACD,IAAAt2D,EAAA,GAEF,QAAA6E,EAAA,EAAAA,EAAAyxD,EAAAvyD,OAAAc,IAAA,CAIM,MAAM8C,EACR2uD,EAASzxD,GACJrF,MAASC,QACdkI,IAAUA,GAAA,iBAAAA,GAED,iBAATA,EAAS5D,OAAA/D,GAAAq2D,GAAAtxD,MAAA,KAAA4C,GAEX3H,GAAA,iBAAA2H,EAAA4uD,GAAA5uD,GAEWA,EAIP3H,GAAU,G,CAOd,OAAAA,CAEK,E,YAYDw2D,IAAQ,E,MAOVC,GAAW,SAAAC,EAAAC,GACXC,IAAuCD,IAAA,IAAAD,IAAA,IAAAA,EAAA,+CACxC,IAAAA,GAEEG,GAAQvI,SAAAZ,GAAAG,QACXiJ,GAAWD,GAAA32D,IAAA48B,KAAA+5B,IACXF,GAAAb,GAAAp9C,IAAA,uBAEF,mBAAAg+C,EAAAI,GAAAJ,GAYMI,GACK,KAAChB,GAAGxvB,OAAA,mB,EAIbywB,GAA8B,YACvBT,GAgBP,IAbuC,I,KAGvCE,IAAgB,EAChB,OAAAM,KAAA,IAAAhB,GAAApzC,IAAA,oBAAA+zC,IAAA,IASKK,GACK,CAIX,MAAA92D,EAAAq2D,GAAAtxD,MAAA,KAAAuxD,GAeDQ,GAAA92D,EAQE,C,EAIAg3D,GAAoC,SAAA9oB,GACpC,OAAO,YAAYooB,G,gBAKX,YAAAA,G,MACLt2D,EAAK,4BAAAq2D,MAAAC,G,GACqBt0D,MAAKhC,E,KAEtB,YAAAs2D,G,MACTt2D,EAAW,yBAAIq2D,MAAAC,K,SAESt0D,MAAOhC,G,iBAGhB,YAAAs2D,G,QACN,qBAAuBD,MAAkCC,G,GAC5D3lB,KAAA3wC,E,EAYRi3D,GAAA,SAAAx2C,GACD,MAAwB,iBAAVA,IAAaA,UAAAy2C,OAAAC,mBAAA12C,IAAAy2C,OAAAE,kB,EAgHzBC,GAAU,SAAAnZ,EAAAC,G,kBAEV,GA1BD,eA0BCD,GAtBJ,eAsBoBC,EAAA,S,GA1BjB,e,GAIH,e,kDA2BqB,OAAfmZ,EAA4BC,EAAAD,GAAA,EAAApZ,EAAAn6C,OAAAo6C,EAAAp6C,OAAAwzD,EAAAD,GAC5B,EACQ,OAADA,EAAC,EACFpZ,EAAQC,GAAE,G,6CA2CpBqZ,GAAA,SAAA91D,EAAAQ,GAaF,GAAAA,GAAAR,KAAAQ,EAAA,OAAAA,EAAAR,GAaE,MAAM,IAAOwB,MAAoB,yBAAqBxB,EAAA,gBAAA60D,GAAAr0D,G,EAEtDu1D,G,YAGE,GAAgB,iBAALv1D,G,sBAEX,MAAKV,EAAA,G,UAKI00C,KAAAh0C,EAAOV,EAAOsD,KAAKoxC,GAK9B10C,EAAAisB,OACF,IAAA/rB,EAAA,IC7nBA,QAAAmD,EAAA,EAAAA,EAAArD,EAAAuC,OAAAc,IAiCY,IADVA,IACUnD,GACA,KADAA,GAAQ60D,GAAQ/0D,EAAAqD,IAChBnD,GAAgB,IAExBA,GAAK+1D,GAAWv1D,EAAAV,EAAAqD,K,UAAmD,IACnEnD,C,2BAYIyzC,EAAApxC,O,QACU,MAAC,C,SAMX2zD,EAAC,G,IAEL,IAAAtR,EAAO,EAAIA,EAACjiD,EAAQiiD,GAACuR,EAASvR,EAAAuR,EAAcxzD,EAAAuzD,EAAA5yD,KAAAqwC,EAAAtH,UAAAuY,EAAAjiD,IAC7CuzD,EAAA5yD,KAAAqwC,EAAAtH,UAAAuY,IAAAuR,IAED,OAAAD,C,EAYD,SAAAE,GAAA11D,EAAA0zB,GCzED,UAAAl0B,KAAAQ,IAAAN,eAAAF,IAAAk0B,EAAAl0B,EAAAQ,EAAAR,G,OA4C+Dm2D,GAAC,SAAAC,GAC5DlB,IAC6CK,GAAOa,GAAA,uB,MAItDC,EAAS,K,IACP3lB,EAAArwC,EAAKowC,EAAI6lB,EAACnzD,E,aAMN,E,IACEizD,IAAIhvC,IACF,EAAK,I,IAIL,G,EACHjP,KAAAo+C,IAAAH,KAGEj+C,KAAKq+C,IAAM,U,+CAGhBn2D,EAAIi2D,EAAKD,E,EACPl+C,KAAA+pB,MAAAk0B,EAAAj+C,KAAAq+C,IAAA,EAvBL,GAuBSF,GAAAn+C,KAAAq+C,IAAA,EAvBT,OA4BIn2D,EAAA,EACJowC,EAAAt4B,KAAA+pB,MAAAk0B,EAAAj+C,KAAAq+C,IAAA,Y,MAKCC,EAAS,G,MAlCV,GAqCQtzD,KAAA,EAIRszD,EAAArzD,KAAAqtC,EAAA,OAEDA,EAAAt4B,KAAAyC,MAAA61B,EAAA,G,IAICttC,EA/CA,GA+CAA,KAAA,EAEDszD,EAAArzD,KAAA/C,EAAA,EAAqB,KACnBA,EAAI8X,KAAAyC,MAAAva,EACF,G,OASKqwC,EAAI,K,kBAWX+C,EAAAgjB,EAAAp3D,KAAA,IAEH,IAAAq3D,EAAA,GAED,IAAAvzD,EAAA,EAAAA,EAAA,GAAAA,GAAA,GAKE,IAAAwzD,EAAoB/lD,SAAmB6iC,EAAAmB,OAAAzxC,EAAA,MAAAxC,SAAA,IAAnB,IAAWg2D,EAAAt0D,SAAXs0D,EAAmB,IAAAA,GAAID,GAAAC,CAE3C,C,OACED,EAAe52B,a,QCzFC82B,GAAe,IAAAzqD,OAAA,qBAWhC0qD,GAAA,SAAApjB,GAED,GAAAmjB,GAAepgD,KAAAi9B,GAAA,CACb,MAAAqjB,EAAYtB,OAAA/hB,GACb,GAAAqjB,IAZ2C,YAY3CA,GARiC,WAQjC,OAAAA,CAED,C,OACE,I,EA6BAC,GAAmB,SAA6B7iC,G,IAIjDA,GAsCD,CArCD,MAAA7zB,GAGCuB,YACU,KAqBN,MAAgB2f,EAAAlhB,EAAAkhB,OAAA,GAIb,MAHCy1C,GAAK,yCAEUz1C,GACRlhB,CAAA,GAMb8X,KAAMyC,MAAI,GAEZ,C,EC7GIq8C,GAAyC,SAAA/iC,EAAA+H,GAEzC,MAAUz5B,EAAAZ,WAAAsyB,EAAA+H,GAoBd,MAjBK,iBAAAz5B,GAIE,oBAAA00D,MACRA,KAAA,WAEeA,KAAAC,WAAA30D,GAIc,iBAAZA,GAAuBA,EAAA,OAEvCA,EAAK,QAIEA,C;;;;;;;;;;;;;;;;;MCKL40D,G,YACOC,EAAKC,G,KACVD,SAAMA,E,KAGNC,iBAAYA,E,KACZC,SAAaD,aAET,EAAAA,EAAe5F,aAAK,C,UACb,IAIX5vD,KAAIy1D,UAAKD,SAAgDA,EAAAt2C,MAAAs3B,MAAAif,GAAAz1D,KAAAy1D,Y,kCCblDz1D,KAAAy1D,SAAAC,SAAAC,GDgBY,IAAIx7C,SAAC,CAAApd,EAAA8lC,KAKzB/iC,YAAA,KACFE,KAAAy1D,SAAAz1D,KAAA01D,SAAAC,GAAAnf,KAAAz5C,EAAA8lC,GACF9lC,EAAA,QCxED,KAkDO,CACA64D,uBAAMtc,GACA,IAAA2P,EACA,QAAAA,EAAAjpD,KAAAw1D,wBAA0B,IAA1BvM,GAAkCA,EAAA/pC,MAAAs3B,MAAAif,KAAAI,iBAAAvc,IACxC,CACAwc,wBACMZ,GAAA,oDAA4Cl1D,KAAAu1D,wFAClD;;;;;;;;;;;;;;;;SA8DIQ,G,YAlCAR,EAAIS,EAACC,GACdj2D,KAAau1D,WAULv1D,KAAcg2D,iBAAGA,EAyBvBh2D,KAAKi2D,cAAOA,EACZj2D,KAAKk2D,MAAM,KACXl2D,KAAKk2D,MAAQD,EAAoCrG,aAAA,C,cAK/C5vD,KAAAk2D,OAAOD,EAAApM,QAAAsM,GAAAn2D,KAAAk2D,MAAsBC,G,UAEhCR,GAED,OAAA31D,KAAAk2D,M,iCAmBE13D,GAAA,+BAAAA,EAAA0E,MACMqwD,GACK,kE,MAIJp5C,QAAe0oB,OAAOrkC,KAzB/B,IAAA2b,SAAA,CAAApd,EAAA8lC,KAUM/iC,YAAC,KACEE,KAAKk2D,MAAAl2D,KAAA01D,SAAAC,GAAgCnf,KAAAz5C,EAAA8lC,G,UAE1C,EAAK,G,wBAgBSyW,G,WAMJt5C,KAACk2D,MAAAE,qBAA4B9c,G,KAClC2c,cAAA/2C,MAAAs3B,MAAA2f,KAAAC,qBAAA9c,I,2BAEUA,G,mBACFp6B,MAAGs3B,MAAe2f,KAAAE,wBAAA/c,I,uMAIjBt5C,KAAEg2D,iBAAArf,GAAA,uJ,+WAGHA,E,EAIgD,MAAA2f,G,gCAElDC,C,oBAQTp8C,QAAQpd,QAAI,C,YACDiD,KAAEu2D,a,wBAIRjd,G,8CAQ6CA,GAAG,C,wBAC7C,EAKEgd,GACHE,MAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAoGVC,G,YAaOxmB,EAACymB,EAAaC,EAAQC,EAAAC,GAAA,EAAAC,EAAA,GAAAC,GAAA,G,KAC3BL,S,KACFC,YACF32D,KAAA42D,gBAED52D,KAAA62D,YAKE72D,KAAK82D,eAAgBA,E,KACnBC,8BAAUA,E,KACVC,MAAK/mB,EAASjS,c,KACfi5B,QAAAj3D,KAAAg3D,MAAAlkB,OAAA9yC,KAAAg3D,MAAArsC,QAAA,QACF3qB,KAAAk3D,aAAA7E,GAAAnzC,IAAA,QAAA+wB,IAAAjwC,KAAAg3D,KAED,C,kBAOE,MAAiC,OAA5Bh3D,KAAAk3D,aAAoBpkB,OAAO,EAAC,E,gBAIjC,MAAmB,mBAAb9yC,KAAAi3D,SAAa,wBAAAj3D,KAAAi3D,O,YAInB,OAAMj3D,KAAAg3D,K,aAIDG,IAAYn3D,KAAGk3D,eAClBl3D,KAAKk3D,aAAeC,EAKhBn3D,KAACo3D,mBAAgB/E,GAAAn9C,IAAA,QAAAlV,KAAAg3D,MAAAh3D,KAAAk3D,c,CAIzBr4D,WAME,IAAI8yC,EAAA3xC,KAAAq3D,cAIJ,OADIr3D,KAAC82D,iBAAiBnlB,GAAS,IAAA3xC,KAAA82D,eAAwB,KACjDnlB,C,eAGN,MAAA5B,EAAU/vC,KAAA02D,OAAA,qBACLpe,EAAAt4C,KAAc+2D,8BAA6B,OAAA/2D,KAAA22D,YAAA,GAChD,MAAK,GAAA5mB,IAAe/vC,KAAMiwC,QAAOqI,G,WA4Ddgf,GAAYC,EAAAniC,EAAA4b,G,SACxBoiB,GAA4B,iBAAAh+B,EAAA,8B,oEAlCrCA,EAAwCoiC,GAAAD,EAAAb,OAAA,kBAAAa,EAAAL,aAAA,Y,uBAGxC,MAAW,IAAAx3D,MAAA,4BAAsD01B,G,wDAAA,E,SAzBjEmiC,G,8JAgCAC,EAAA10C,EAAavlB,KAAG,I;;;;;;;;;;;;;;;;+BAmDXk6D,UAAA,E,kBAEGl1D,EAAAm1D,EAAA,GACFvQ,GAAyBnnD,KAAAy3D,UAAAl1D,KAAAvC,KAAAy3D,UAAAl1D,GAAA,G,eACpBA,IAASm1D,C,cAGdjS,GAAIzlD,KAAAy3D,U;;;;;;;;;;;;;;;;kBA2Ba,G,uBAGfF,EAAA14D,W,UAEQ84D,KAAAC,GAAAD,GAAA,IAAAE,I,GACcF,E;;;;;;;;;;;;;;;;;wBA+C5B33D,KAAA83D,WAAkBA,EAClB93D,KAAI+3D,iBAAc,G,KAChBC,mBAAoB,E,KACpBC,oBAAe,E,KAChBC,QAAA,I,CAGHC,WAAAC,EAAAhoC,GAMEpwB,KAAKi4D,mBAAUG,EACfp4D,KAAKk4D,QAAU9nC,EACXpwB,KAACi4D,mBAAaj4D,KAAAg4D,qB,eAGlBh4D,KAAOk4D,QAAK,KAGd,C,6BAiBIH,iBAAkBM,GAAGp7C,EACrBjd,KAAM+3D,iBAAiD/3D,KAAAg4D,qBAAA,CACvD,MAAAM,EAAUt4D,KAAA+3D,iBAAA/3D,KAAAg4D,2BACVh4D,KAAU+3D,iBAAA/3D,KAAAg4D,oBACV,QAAA32D,EAAU,EAAAA,EAAAi3D,EAAA/3D,SAAAc,EAAAi3D,EAAAj3D,IAAA4zD,IAAqD,KAC3Dj1D,KAAA83D,WAAcQ,EAAMj3D,GAAS,IAEjC,GAAIrB,KAAAg4D,qBAAmBh4D,KAAAi4D,mBAAA,CACfj4D,KAAEk4D,UAEHl4D,KAAKk4D,U,mBAGV,K;;;;;;;;;;;;;;;;0BAyHOX,EAAAgB,EAAAC,EAAAC,EAAAC,EAAAC,G,YACDC,E,cACJrB,E,mBACEgB,E,mBACKC,E,eACAC,E,wBACLC,E,mBACWC,E,KACdE,UAAW,E,0BAEXC,gBAAA,E,KACAC,KAAKvF,GAAUoF,GAErB54D,KAAAg5D,OAAAC,GAAA1B,GACFv3D,KAAAk5D,MAAAloB,IC9rBKhxC,KAAAw4D,gBAAAxnB,EAAqC,GAAAhxC,KAAAw4D,eAEvClB,GAAqBC,E,eAAAvmB,G,CA4Cb4c,KAAauL,EAAAC,GACbp5D,KAAaq5D,cAAb,EACAr5D,KAASs5D,cAATF,EA/BVp5D,KAAcu5D,gBAAkB,IAAKC,GAAAL,GACrCn5D,KAAMy5D,WAAoB,EAC1Bz5D,KAAW05D,qBAAK55D,YAAA,KACPE,KAAA+4D,KAAA,gCAgCH/4D,KAAK25D,YACL35D,KAAC05D,qBAAS,OAQdrjD,KAAKyC,MDimBU,MN5RO,SAAAsZ,G,GACvB2zB,MAAA,aAAAvY,SAAAosB,WAAAxnC,QACI,C,SAKD,MAAAynC,EAAkB,WACTrsB,SAAQssB,KAMpBC,IACMA,GAAc,EACrB3nC,KAPMtyB,WAAU+5D,EAAaxjD,KAAQyC,MAAM,IAc3C,EAMA00B,SAAA+C,kBAEF/C,SAAA+C,iBAAA,mBAAAspB,GAGa,GAEJvrB,OAAOiC,iBAAY,OAAYspB,GAAO,IAG/CrsB,SAAAwsB,cASSxsB,SAAQwsB,YAAK,sBACT,KAEH,aADOxsB,SAAKosB,YACTC,GAAA,IAQJvrB,OAAM0rB,YAAA,SAAAH,GAkBf,C,CO/YEI,EAAA,KAcE,GAAMj6D,KAAAy5D,UAAwC,OAI5Cz5D,KAACk6D,gBAAA,IAAAC,IACD,IAAOh5D,KAML,MAAAi5D,EACFC,EAAAC,EAAUC,EAAAC,GAAAr5D,EAKR,GAHAnB,KAAAy6D,wBACQt5D,GAERnB,KAAak6D,gBAgBZ,GAbDl6D,KAAa05D,uBAIVz5D,aAAAD,KAAA05D,sBACR15D,KAAA05D,qBAAA,MAOM15D,KAAA84D,gBAAe,EDggBrB,UC/fMsB,EAEKp6D,KAAAkuB,GAAAmsC,EAELr6D,KAAA06D,SAAuBJ,M,ID6f9B,U,EC/eQ,UAAA56D,MAAA,kCAAA06D,GAVFC,GAGMr6D,KAAMk6D,gBAAiBS,cAAc,EAGzC36D,KAASu5D,gBAAApB,WAAAkC,GAAA,KACPr6D,KAAA25D,WAA0B,KAE3B35D,KAAA25D,WACD,K,uGAOF35D,KAAI25D,WAAK,G,KAGLT,O,MAMJ0B,EACE,C,MAKmB,K,EAAe,IAAAvkD,KAAAyC,MAAA,IAAAzC,KAAAyD,U,KAAGogD,gBAAAW,2BAAAD,EAAA,GAAA56D,KAAAk6D,gBAAAW,0B,EAExC,EDmDJ,IClDO76D,KAAC04D,qBAAakC,EAAyC,EAAA56D,KAAA04D,oBAC3D14D,KAAU24D,gBAAAiC,EAAA,GAAA56D,KAAA24D,eACN34D,KAAKu4D,gBAACqC,EAAkC,EAAA56D,KAAAu4D,eAC5Cv4D,KAAMw4D,gBAAiBoC,EAAW,GAAA56D,KAAAw4D,eAEtB,oBAAV5oB,UAAiBA,SAAAI,UAAA8qB,GAAApmD,KAAAk7B,SAAAI,YAAA4qB,EAAA,ED0DvB,KCxDI,MAAKG,EAAY/6D,KAAAk5D,MAAA0B,GACjB56D,KAAA+4D,KAAO,+BAAAgC,GACR/6D,KAAAk6D,gBAAAc,OAAAD,GAAA,QAEoB,G,cAOnBb,gBAAce,cAAKj7D,KAAAkuB,GAAAluB,KAAA06D,U,KACnBQ,uBAAiBl7D,KAAAkuB,GAAAluB,KAAA06D,S,qBAOnBS,GAA0BC,aAAA,C,2BAOPC,gBAAA,C,CAIrBtkB,qBAOA,OAAOgP,SACLoV,GAAoBC,eAIhBD,GAAqBE,gBAAA,oBAAA7tB,UAAA,MAAAA,SAAAE,e,wGL1H3B,iBAAA4tB,SAAA,iBAAAA,QAAAC,I,yBK8HuB,C,YAOrBv7D,KAAAy5D,WACG,EAIJz5D,KAAAk6D,kBAYDl6D,KAAAk6D,gBAAA9I,Q,2BAUCpxD,KAAAw7D,iBAEDhuB,SAAAssB,KAAqB5rB,YAAAluC,KAAAw7D,gBACnBx7D,KAAAw7D,eAAA,MAGMx7D,KAAa05D,uBACfz5D,aAAaD,KAAK05D,sBAClB15D,KAAK05D,qBAAuB,K,aAO/B15D,KAAAy5D,YACFz5D,KAAA+4D,KAAA,8BAED/4D,KAAAy7D,YAIOz7D,KAAAs5D,gBACAt5D,KAAMs5D,cAAMt5D,KAAA84D,gBAClB94D,KAAAs5D,cAAA,M,cAaKG,Y,KACAV,KAAA,6B,KACD0C,Y,CAcHC,KAAAz+C,GACA,MAAK0+C,EAAa5I,GAAgB91C,GAClCjd,KAAK64D,WAAO8C,EAAAp7D,OAEZP,KAAKg5D,OAAA4C,iBAAiB,aAAAD,EAAAp7D,QAIpB,MAAKs7D,EAAkBzW,GAACuW,GAGxBzH,EAAM4H,GAA8CD,ED4VvBE,MCvVhC,QAAA16D,EAAA,EAAAA,EAAA6yD,EAAA3zD,OAAAc,IAEDrB,KAAAk6D,gBAAA8B,eAAAh8D,KAAAq5D,cAAAnF,EAAA3zD,OAAA2zD,EAAA7yD,IAKMrB,KAACq5D,e,6BAYL,GAAItT,KACwC,O,qDAI5C,MAAK6U,EAAY,CAGlBA,OAAA,KAEOA,EAAS,GAAA1sC,EACf0sC,EAAsB,GAAAqB,EACtBj8D,KAAIw7D,eAAK/8D,IAAgBuB,KAAAk5D,MAAA0B,G,KACvBY,eAAcU,MAAKC,QAAA,O,SACdrC,KAAA3rB,YAAiBnuC,KAAKw7D,e,yBAKRr6D,GAEtB,MAAAi7D,EAAArJ,GAAA5xD,GAAAZ,OAEOP,KAASo8D,iBACfp8D,KAAKg5D,OAAK4C,iBAAW,iBAAAQ,E,EAMsB,MAAAjC,GAW3Ct6C,YAAUw8C,EAAWC,EAAAlD,EAAAF,G,QACnBE,aAAUA,E,KACVF,MAAKA,EAITl5D,KAAAu8D,oBAAA,IAAAniD,IAMEpa,KAAKw8D,YAAc,GAQpBx8D,KAAAy8D,cAAApmD,KAAAyC,MAAA,IAAAzC,KAAAyD,U,0BC7WG9Z,KAAAq8D,YACDr8D,KAAAs8D,kB,CD+XCt8D,KAAA66D,yBAA+B6B,KAChCpuB,O,aAAAtuC,KAAA66D,0BAAAwB,EACF/tB,OD4NsC,UC5NtCtuC,KAAA66D,0BAAAyB,EA9LDt8D,KAAA28D,SAAAxC,GAGOyC,gBC5QT,IAAArvB,EAAA,GAsDG,GAAAvtC,KAAA28D,SAAAl+D,KAAA,gBAAAuB,KAAA28D,SAAAl+D,IAAAq0C,OAAA,OAhBQvF,EAAA,4BADgBC,SAAAqvB,OAChB,cAAC,CAAuB,MAAAC,EAAA,eAAAvvB,EAAmB,iBAAE,IACrDvtC,KAAA28D,SAAAI,IAAAnP,OAED5tD,KAAA28D,SAAAI,IAAAC,MAAAF,GAKS98D,KAAK28D,SAAAI,IAAA3L,OAgBR,CAfL,MAAA7yD,GASOg1D,GAAkC,2BAClCh1D,EAAAkhB,OAAA8zC,GACJh1D,EAAAkhB,OACE8zC,GACFh1D,EAEE,C,+BAmBF0+D,EAAAzvB,SAAAE,cAAA,UAIJ,G,EAHGwuB,MAAAC,QAAA,QAGH3uB,SAAAssB,KChDI,yGDoDEtsB,SAAKssB,KAAA3rB,YAAqB8uB,G,IAchBA,EAAAC,cAAA1vB,U,mCCtEZ,CDCJ,MAAAjvC,GACO,MAAAs+D,EAAArvB,SAA2BqvB,OCnCpCI,EAAAx+D,IAAA,gEAAAo+D,EAAA,0BAiCM,CAkBA,OAXNI,EAAAE,gBAAAF,EAAAF,IAAAE,EAAAE,gBACAF,EAAAC,cAAAD,EAAAF,IAAAE,EAAAC,cAAA1vB,SACMyvB,EAAAzvB,WACAyvB,EAAAF,IAAAE,EAAAzvB,UAQAyvB,CACN,CAGM7L,QAEApxD,KAAAo9D,OAAA,EACAp9D,KAAA28D,WA0BJ38D,KAAA28D,SAAAI,IAAAjD,KAAAuD,UAAA,GAaWv9D,YAAQ,KACU,OAAVE,KAAT28D,WACcnvB,SAAAssB,KAAd5rB,YAAkCluC,KAAA28D,UACpB38D,KAAA28D,SAAd,KACU,GACAtmD,KAAAyC,MAAV,KAGA,MAAOsgD,EAAPp5D,KAA4Bo5D,aAChBA,IAtCPp5D,KAAAo5D,aAAI,KACAA,I,CA6CnB6B,cAAA/sC,EAAA+tC,GAiBE,IAbAj8D,KAAAs9D,KAAUpvC,EACVluB,KAAKu9D,KAAKtB,E,cAYLj8D,KAAAw9D,gB,eAqBL,GAAIx9D,KAAAo9D,OAAAp9D,KAAmB26D,cAChB36D,KAAAu8D,oBAAkB1nD,MAAA7U,KAAAw8D,YAAAj8D,OAA2B,QAEhDP,KAAKy8D,gB,MACH7B,EACY,G,EAIR,GAAA56D,KAAAs9D,K,EAIqB,GAAAt9D,KAAAu9D,K,EACY,IAAAv9D,KAAAy8D,c,MAC9Bz8D,KACLk5D,MAAK0B,G,EAWK,G,EACV,E,KACD56D,KAAAw8D,YAAAj8D,OAAA,IAGG,K,oBAAMk9D,EAAAl9D,OH+fd,GG/fwCm9D,EAAAn9D,QH8fzB,MGtfM,MARmB,CAIpB,MAAAo9D,EAAA39D,KAAAw8D,YAAA9N,QACXgP,EAAgBA,SAA0Br8D,EAAA,IAAAs8D,EAAAC,IAA1BF,MAA0Br8D,EAAA,IAAAs8D,EAAAE,GAA1BH,KAA0Br8D,EAAA,IAAAs8D,EAAAF,EACtDp8D,GAEO,CACN,C,OACEy8D,GAAkBJ,E,KAEXK,gBAAaD,EAAK99D,KAAAy8D,gBACvB,C,QACK,C,gBAUDuB,EAASC,EACXhhD,G,iBAII3b,KAAK,C,IAEZ08D,EACDH,GAAAI,EACHR,EAAAxgD,IAOejd,KAAGo9D,OAAGp9D,KAAAw9D,a,CAKpBO,gBAAY/mB,EAASknB,G,KAInB3B,oBAAkBx/C,IAAAmhD,G,MAClBC,EAAK,K,mCAENn+D,KAAAw9D,aAAA,EAKCY,EAAYt+D,WAAYq+D,EAAA9nD,KAAAyC,MHqdR,O,YG5cZk+B,GARQ,K,mBAKL,G,QAaRA,EAAAqnB,GACFtY,KAEO/lD,KAAAs+D,eAAAtnB,EAA4BqnB,GAClCv+D,YAAsB,KACtB,IAGO,IAAIE,KAAK26D,a,OAET,MAAA4D,EAAoBv+D,KAAK28D,SAAMI,IAAArvB,cAAA,UAEpC6wB,EAAUnpC,KAAM,kBAEnBmpC,EAAA3wB,OAAA,EAEO2wB,EAAA9/D,IAA0Bu4C,EAE1BunB,EAAMzwB,OAAAywB,EAAA1wB,mBAAoC,WAEzC,MAAA2wB,EAAeD,EAAA3E,WACf4E,GAAsB,WAAtBA,GAAsB,aAAAA,I,mCAGjBD,EAAAtwB,YAA4BswB,EAAEtwB,WAAAC,YAAAqwB,GACnCF,IAA8B,E,EAAQrwB,QAAA,KAAMulB,GAAK,oCAAAvc,GAAEh3C,KAAA26D,cAAA,EAAI36D,KAAAoxD,OAAA,EAE/DpxD,KAAA28D,SAAAI,IAAAjD,KAAA3rB,YAAAowB,EAIK,CAFE,MAAAhgE,GAEF,I;;;;;;;;;;;;;;;;UAWwB,KAC7B,oBAAAkgE,aAAAC,GAAAD,aAEiC,oBAA1BE,YAA8DD,GAAAC,W,MAGpEC,G,YAiBOhG,EAAArB,EAAAgB,EAA4BC,EAAAC,EAAAC,EAAAC,G,KACjCC,OAASA,E,mBACGL,E,mBACLC,E,eACAC,E,KACNoG,eAAA,K,KACFC,OAAA,KACF9+D,KAAA++D,YAAA,EAEO/+D,KAAA64D,UAAW,EACjB74D,KAAAo8D,cAAoB,EACpBp8D,KAAI+4D,KAAAvF,GAAgBxzD,KAAA44D,Q,KAClBI,OAAMC,GAAsB1B,G,KAC5BC,QAAOoH,GACAI,eACHzH,EAMAmB,EAAAC,EAAAH,EAAAD,G,eACUhB,EAAKV,S,uBAWZU,EAAsBmB,EAAmBC,EAAAH,EAAAD,G,QAClC,C,EH/GjB,K,OGkHUxS,MACC,oBADWnW,UACQA,SAASI,UAAA8qB,GAAApmD,KAAAk7B,SAAAI,YAAA4qB,EAAA,EHtGxC,K,IGuGuBA,EAAc,EAAAlC,G,IACrBkC,EAAwB,GAAAjC,G,IAC7BiC,EAAqB,GAAApC,G,IACrBoC,EAAgC,EAAArC,GACtCjB,GACOC,E,YAA0CqD,E,CAepDhN,KAAAuL,EAAgBC,GAChBp5D,KAAAo5D,aAAaA,EACbp5D,KAAKm5D,UAAYA,EACjBn5D,KAAK+4D,KAAA,2BAAsB/4D,KAAAw3D,S,0BAGNtiD,IAAA,iC,IAEnB,IAAItY,E,SAIA,MAACqiE,EAAAj/D,KAAmB62D,UAAA,mBAE3Bj6D,EAAA,CAEuBsiE,QAAA,CACT,aAAK,cAAqC1N,MAAAp1D,GAAA+iE,YAAAF,IAEhD,mBAAoBj/D,KAAAu4D,eAAA,KAmBrBv4D,KAAAy4D,YAAoB77D,EAAAsiE,QAAsB,cAAe,UAACl/D,KAAAy4D,aAC3Dz4D,KAAAw4D,gBAAoB57D,EAAWsiE,QAAY,uBAAEl/D,KAAAw4D,eAGlD,MAAAl6D,EAAA,GACW8gE,EAAgB,IAAhBp/D,KAAcw3D,QAAE7sC,QAAA,UAAArsB,EAAA,aAAAA,EAAA,YAAAA,EAAA,YAAAA,EAAA,WACnB8gE,IAAMxiE,EAAA,OACNizC,OAACuvB,GAEN,CACJp/D,KAAAq/D,OAAA,IAAAX,GAAA1+D,KAAAw3D,QAAA,GAAA56D,E,CAEO,MAAqB2B,GACvByB,KAAK+4D,KAAC,kCACN,MAACv6D,EAAUD,EAAI/B,SAAQ+B,EAAA0e,KAGvB,O,8DAIFjd,KAAK+4D,KAAA,wBACL/4D,KAAK84D,gBAAS,GAEjB94D,KAAAq/D,OAAAC,QAAA,KAEOt/D,KAAA+4D,KAAA,0CACF/4D,KAAKq/D,OAAC,KACNr/D,KAAC25D,WAAa,EAGlB35D,KAAIq/D,OAAKE,UAAUltB,IACjBryC,KAAKw/D,oBAAoBntB,EAAA,E,KAE1BgtB,OAAArxB,QAAAzvC,I,mDAIG,MAAKC,EAAAD,EAAA/B,SAAA+B,EAAA0e,KACHze,GAAMwB,KAAA+4D,KAAAv6D,GACVwB,KAAK25D,WAAU,C,CAQXr0D,QAAA,C,uBAENs5D,GAAmCvD,gBAAA,C,6BAEV,E,GAAK,oBAAAzqB,qBAAAC,UAAA,C,QAAK,iC,EAAWD,UAAAC,UAAAlyC,MAAA8gE,G,GAAEC,EAAAn/D,OAAA,GAAIqO,WAAA8wD,EAAA,UAAAC,GAAA,EAErD,CAEO,OAAAA,GAA0B,OAAAjB,KAAAE,GAAAvD,c,CAK9BtkB,0BASF,OAAKsb,GAAaJ,oBAAA,IAAAI,GAAAnzC,IAAA,6B,yBAIlBmzC,GAAiCvvB,OAAA,6B,yBAG/Bg8B,OAAQx9D,KAAC2b,G,KACP6hD,OAAAv+D,SAAAP,KAAA++D,YAAA,C,kCAEAD,OAAK,K,MACNc,EAAAhZ,GAAAiZ,GAKC7/D,KAACm5D,UAAQyG,EACd,CAEO,C,qBAISE,G,KACbf,YAAee,E,KAChBhB,OAAA,E,CAOFiB,mBAAA9iD,GAQA,GANOm2C,GAAsB,OAAApzD,KAAA8+D,OAAA,kCAM7B7hD,EAAA1c,QAAA,GAED,MAAAu/D,EAAApM,OAAAz2C,GAIM,IAAKwpB,MAAMq5B,GAET,OADA9/D,KAAKggE,qBAACF,GACC,I,kCAKS,G,EAOtBN,oBAAUS,GACV,GAAgB,OAAZjgE,KAAKq/D,OAAO,O,MACdpiD,EAAKgjD,EAAc,K,QACnB7D,eAAkBn/C,EAAA1c,O,KACnBy4D,OAAA4C,iBAAA,iBAAA3+C,EAAA1c,QAEDP,KAAIkgE,iBACG,OAALlgE,KAAK8+D,O,KACLqB,aAAKljD,OACN,CAGC,MAAAmjD,EAAkBpgE,KAAA+/D,mBAAiB9iD,GACf,OAAhBmjD,GAAwBpgE,KAAAmgE,aAAAC,E,ECngBhC1E,KACEz+C,GAMFjd,KAAAkgE,iBAMA,MAAAvE,EAAA5I,GAAA91C,GAMAjd,KAAA64D,WACE8C,EACAp7D,OAIFP,KAAAg5D,OAAA4C,iBAEE,aAC2CD,EACzCp7D,QAQL,MAAA2zD,EAAA4H,GAAAH,EDoNkE,OE5QjEzH,EAAoB3zD,OAAwB,GAAAP,KAAAqgE,YAAA7pD,OAAA09C,EAAA3zD,SAPpC,IAAU,IAAAc,EAAA,EAAAA,EAKd6yD,EAAG3zD,OAAAc,IAAArB,KAAAqgE,YAAAnM,EAAA7yD,G,aAiBPrB,KAAAy5D,WAAA,EAIMz5D,KAAK6+D,iB,mCAEP7+D,KAAA6+D,eAAkB,M,KAAgCQ,SAElDr/D,KAAKq/D,OAAQjO,QAGdpxD,KAAAq/D,OAAA,KAGH,C,YAEOr/D,KAAAy5D,YACDz5D,KAAC+4D,KAAA,+B,iBAAkD/4D,KAAAo5D,eAEjDp5D,KAAAo5D,aAAiBp5D,KAAA84D,gBACnB94D,KAASo5D,aACF,M,SAcRp5D,KAAAy5D,YAEJz5D,KAAA+4D,KAAA,6BAEO/4D,KAAAy7D,Y,CCrFVyE,iBAmCEI,cAAAtgE,KAAA6+D,gBACE7+D,KAAK6+D,eAAC0B,aAAA,KAAYvgE,KAAAq/D,QAAAr/D,KAAAqgE,YAAA,KAPLrgE,KAAAkgE,gBAAQ,G,WH+QU,M,aGzPvBvuB,G,SAUF0tB,OAAQ3D,KAAC/pB,E,oBAEP,0CAA8BpzC,EAAA/B,SAAA+B,EAAA0e,KAAA,uB,WAC/Bjd,KAAA25D,UAAArgC,KAAAt5B,MAAA,E,MA/BRwgE,6BAAA,E,GAwCQC,eAAA;;;;;;;;;;;;;;;;;MCjBNC,G,YAGAnJ,GACFv3D,KAAA2gE,gBAAApJ,EAED,CACMqJ,4BACJ,MAAK,CAMLzF,GACDyD,GAGa,CAKLiC,sCAIT,OAAW7gE,KAAC8gE,2BACb,CAEDH,gBAAApJ,GAIE,MAAOwJ,EAA2BnC,IAAUA,GAAA,cAC7C,IAAAoC,EAAAD,IAAAnC,GAAAqC,mBAQA,GANe1J,EAAAX,gBACFmK,GAAkB7L,GAAA,mFAC1B8L,GAAwB,GAI7BA,EAAAhhE,KAAAkhE,YAAA,CAEetC,QAKP,CACR,MAAAuC,EAAAnhE,KAAAkhE,YAAA,GAEe,UAAAE,KAAAV,GAAiCE,eAAAQ,KAAA,eAAAD,EAAA7/D,KAAA8/D,GAC3CV,GAAgBI,6BAAA,CACf,CAML,CAQAO,mBACD,GAAArhE,KAAAkhE,YAAA3gE,OAAA,SAAAP,KAAAkhE,YAAA,GAEe,UAAAxhE,MAAA,0BACd,CASA4hE,mBACD,OAAAthE,KAAAkhE,YAAA3gE,OAAA,EAAAP,KAAAkhE,YAAA,GAEe,IACd,E,GASOJ,6BAAA,E,MA8FHS,GAkCL1hD,YAAAqO,EAAAszC,EAAAC,EAAAC,EAAAC,EAAA7J,EAAA8J,EAAAtI,EAAAuI,EAAAlJ,GAEe34D,KAAAkuB,K,iBAKVluB,KAAAyhE,eAAsBA,EAG1BzhE,KAAA0hE,eAA0BA,EAC1B1hE,KAAA2hE,WAAeA,EACf3hE,KAAA83D,aACD93D,KAAA4hE,WAEK5hE,KAAUs5D,gBACdt5D,KAAM6hE,QAAOA,EACb7hE,KAAA24D,cAAeA,E,uBAEX34D,KAAA8hE,oBAAsB,GAG3B9hE,KAAA+hE,OAAA,EAED/hE,KAAS+4D,KAAAvF,GAAA,KAAyBxzD,KAAAkuB,GAA8B,KAC1DluB,KAAAgiE,kBAAe,IAActB,GAAAc,GAU7BxhE,KAAA+4D,KAAA,sBASL/4D,KAAAiiE,QAED,CAUAA,SC/UA,MAAAC,EAAAliE,KAAAgiE,kBAAAX,mBA8BErhE,KAAAmiE,MAAA,IAAAD,EAAAliE,KAAAoiE,mBAAApiE,KAAAwhE,UAAAxhE,KAAAyhE,eAAAzhE,KAAA0hE,eAAA1hE,KAAA2hE,WAAA,KAAA3hE,KAAA24D,e,KACqB0J,0BAAAH,EAAA,gCACnB,MAAII,EAAetiE,KAAAuiE,cAAAviE,KAAAmiE,OACfK,EAAyBxiE,KAAAyiE,iBAAAziE,KAAAmiE,OAC7BniE,KACE0iE,IAAO1iE,KAAAmiE,M,KAGPQ,IAAI3iE,KAAOmiE,M,0CAET,E,YAMA,K,KAEDA,OAAUniE,KAAOmiE,MAAAvU,KAAS0U,EAAoBE,EAAa,G,KAC1D1pD,MAAA,I,QACSopD,EAAe,kB,EACzB,IAAAliE,KAAA4iE,gBAAAzN,IAAA,KACFn1D,KAAA4iE,gBAAA,K,uDDiKW,Q,sJC3JP5iE,KAAWmiE,MAAKU,yBAEjB7iE,KACFmiE,OAASniE,KAAAmiE,MAAAtJ,UDmJd,MCjJY74D,KAAA+4D,KAAA,oDAAA/4D,KAAAmiE,MAAAtJ,UAAA,uCAEC74D,KAAO+4D,KAAK,+CACV/4D,KAACoxD,S,GAOd/6C,KAAAyC,MAAAgqD,IA/CD,C,mBAEC,WAAA9iE,KAAAkuB,GAAA,IAAAluB,KAAA+iE,iBA+CD,C,iBACEb,GACA,OAAOc,IAAKd,IAASliE,KAAAmiE,MAAAniE,KAAAijE,kBAAAD,GAAEd,IAAAliE,KAAAkjE,gBACxBljE,KAAA+4D,KAAA,8BACF/4D,KAAAmjE,8BC/EDnjE,KAAA+4D,KAAA,6BA8CA,CACAwJ,cAAML,GACA,OAAA1lE,IACA,IAAAwD,KAAA+hE,SAENG,IAAAliE,KAAA2iE,IAAA3iE,KAAAojE,0BAAA5mE,GACM0lE,IAAAliE,KAAAkjE,eAA2BljE,KAACqjE,4BAAA7mE,GA8BlCwD,KAAA+4D,KAAA,6BAyDE,C,CAcUuK,YAAgBC,GAEhB,MAAkBpnE,EAAA,CACIqnE,EAAA,IACT/F,EAAA8F,GAnEvBvjE,KAAAyjE,UAAKtnE,E,wBAIY6D,KAAA0iE,MAGb1iE,KAAOkjE,gBAAGljE,KAAA2iE,MAAA3iE,KAAAkjE,iBACUljE,KAAA+4D,KAAA,2CAAwB/4D,KAAAkjE,eAAAtK,QACxB54D,KAAAmiE,MAAAniE,KAAAkjE,eACIljE,KAAAkjE,eAAA,K,qBAILQ,GACf,GF6GS,ME7GYA,EAAA,CACC,MAAAC,EAAAD,EAAsC,EF6HtE,ME5HeC,EAAuB3jE,KAAA4jE,6BFuHnC,MErHgCD,G,kDAKX3jE,KAAAkjE,eAA6C9R,QAGlDpxD,KAGN0iE,MAAK1iE,KAAAkjE,gBAAAljE,KAAA2iE,MAAA3iE,KAAAkjE,gBAAAljE,KAAAoxD,SF6GjB,ME3GmBuS,IACI3jE,KAAA+4D,KAAA,0BACI/4D,KAAA6jE,8BACI7jE,KAAA4jE,6BAGtB,C,6BAE8BE,GA+BpC,MAAIC,EAAA/P,GAAkB,IAAA8P,GAMtB7mD,EAAA+2C,GAAkB,IAAW8P,GAE7B,GAAc,MAAVC,EAAe/jE,KAAAgkE,oBAAyB/mD,OAG7C,UAAA8mD,EAOC,MAAM,IAASrkE,MAAK,2BAAoBqkE,GALhC/jE,KAAA8hE,oBAGRxgE,KAAA2b,EAEwC,C,8BAEZjd,KAAG6jE,6BAAM,GAAE7jE,KAAG+4D,KAAI,oCAAG/4D,KAAAikE,YAAA,EAC7CjkE,KAAKkjE,eAACL,wBACV7iE,KAAAkkE,wBAQDlkE,KAAA+4D,KAAA,8BAEG/4D,KAAmBkjE,eAAAxH,KAAA,CAChB8H,EAAA,IAEC/F,EAAA,CACA+F,EFuCgB,IEtCZ/F,EAAC,M,2CAODn4D,Q,kDAMP49D,eAAAxH,KAAA,CACD8H,EAAA,IACE/F,EAAC,CACA+F,EFiBT,IEhBU/F,EAAK,MAeXz9D,KAAK+4D,KAAA,kCAEL/4D,KAAAmiE,MAAMzG,KAAU,CAChB8H,EAAM,IACF/F,EAAC,CACA+F,EFAgB,IEGrB/F,EAAA,M,cASEyF,e,KACAiB,sB,2BAEGL,GAEL,MAAKC,EAAQ/P,GAA8B,IAAU8P,GAEjD7mD,EAAK+2C,GACU,IAAY8P,GAEhC,MAAAC,EAAA/jE,KAAAokE,WAAAnnD,GAE6B,MAAb8mD,GAAa/jE,KAAAqkE,eAAApnD,E,gBAEvBzgB,G,KACH8nE,qB,KAEAxM,WAASt7D,E,sBAOZwD,KAAAikE,aAEOjkE,KAAYqiE,4BACZriE,KAAKqiE,2BAAoB,IACzBriE,KAAA+4D,KAAU,kCACV/4D,KAAOikE,YAAS,EACjBjkE,KAAKmiE,MAAAU,yB,YAGJa,G,WFlES,I,GEqEf,GFhEkC,MEgEdA,EAAA,CAClB,MAAIa,EAAYb,EAAc,EAC9B,GFhDa,MEgDTC,EAAsB3jE,KAAAwkE,aAAAD,QAC3B,GFnDoB,MEmDpBZ,EAAA,CAEE3jE,KAAU+4D,KAAI,qCAEZ/4D,KAAA2iE,IAAY3iE,KAAMkjE,eACrB,IAAM,IAAA7hE,EAAmB,EAAAA,EAAOrB,KAAA8hE,oBAAevhE,SAAAc,EAAArB,KAAAqkE,eAAArkE,KAAA8hE,oBAAAzgE,IAC/CrB,KAAM8hE,oBAAgB,G,2BAGtB,KFxEqC,MEwErC6B,E,8BFrEH,ME2EOA,E,KACFc,SAAUF,GF1EJ,ME4EFZ,EAC2Be,GAAW,iBAAAH,GF5EjD,ME+EWZ,GAGL3jE,KAAA+4D,KAAA,wBACA/4D,KAAAskE,qBACJtkE,KAAA2kE,iCAEcD,GAA2D,mCAAAf,EACxE,C,cAIIiB,G,QAEMA,EAAY/G,G,EAClB+G,EAAAtQ,EAKDrkB,EAAA20B,EAAAC,E,KACFC,UAAAF,EAAAh2B,EACF5uC,KAAAwhE,UAAAvxB,OAGmB,IAAdjwC,KAAC+hE,SACD/hE,KAAKmiE,MAAC78D,QACNtF,KAAK+kE,yBACK/kE,KAAGmiE,MAAA6C,GTxFlB,M,4CS4FOhlE,KAAKilE,mB,CAQLA,mB,yFAIF/C,G,KACFgB,eACE,IAAAhB,EAAAliE,KAAAoiE,mBAAApiE,KAAAwhE,UAAAxhE,KAA+DyhE,eAC/DzhE,KAAA0hE,eAAA1hE,KAAA2hE,WAAA3hE,KAAA8kE,WAGL9kE,KAAA6jE,4BAAA3B,EAAA,gCAED,MAAA/I,EAAqBn5D,KAAoBuiE,cAAAviE,KAAAkjE,gBAClC9J,EAAcp5D,KAAGyiE,iBAAMziE,KAAAkjE,gBAC5BljE,KAAKkjE,eAAKtV,KAAAuL,EAAAC,G,yEAOAp5D,KAACkjE,eACF9R,QAGV,GAED/6C,KAAAyC,MFlLkB,K,UEwLdm3B,G,KACA8oB,KAAM,qCAAa9oB,G,KACnBuxB,UAAMvxB,KAAWA,EACR,IAATjwC,KAAI+hE,OACF/hE,KAAAoxD,S,KAQE8T,oB,KACAjD,S,wFASCC,E,KACFH,OACD,EACH/hE,KAAA4hE,WACF5hE,KAAA4hE,SAAAoD,EAAAhlE,KAAA8kE,WAED9kE,KAAA4hE,SAAA,MAWqD,IAA7C5hE,KAAAqiE,2BACAriE,KAAA+4D,KAAU,kCACV/4D,KAAIikE,YAAW,G,IAGyB,KAG1CjkE,KAAA2kE,+BAAA,GAELtuD,KAAAyC,MFrOc,KEuOf,C,gCAOO9Y,KAAKikE,YAAyB,IAAzBjkE,KAAA+hE,SAEV/hE,KAAA+4D,KAAA,4BAIA/4D,KAAMyjE,UAAa,CACfD,EAAM,IAGX/F,EAAA,CAGC+F,EFxNsB,IE6NZ/F,EAAA,M,8BAKV,MAAIyE,EAAKliE,KAAAkjE,e,KACPA,eAAW,KACXljE,KAAI0iE,MAAOR,GAAIliE,KAAA2iE,MAAAT,G,KAChB9Q,O,CAYD6R,kBAASD,G,KAGPb,MAAK,K,GAGC,IAAAniE,KAAA+hE,OAiBM,I,KAAVA,QAAU/hE,KAAA+4D,KAAA,8B,yCAbf/4D,KAAAwhE,UAAApK,oBAED/E,GAG6CvvB,OAAA,QAAA9iC,KAAAwhE,UAAAvxB,MAInCjwC,KAACwhE,UACPtK,aAAKl3D,KAAiBwhE,UAAOvxB,O,KAI3BmhB,O,uBAEA+T,G,KACCpM,KAAA,0DAEN/4D,KAAA6hE,UAED7hE,KAAA6hE,QACEsD,GAGInlE,KAAC6hE,QAAA,M,KAODvI,cAAY,K,KACZlI,O,WAECn0C,GAEN,OAAAjd,KAAA+hE,OAAA,mCAEO/hE,KAAA0iE,IACNhH,KAAAz+C,E,SAMU,IAANjd,KAAK+hE,SACL/hE,KAAC+4D,KAAA,gCACH/4D,KAAI+hE,OAAU,E,KAEVmD,oBAICllE,KAAKs5D,gBAETt5D,KAAAs5D,gBACJt5D,KAAAs5D,cAAA,M,CAWD4L,oBAMEllE,KAAK+4D,KAAA,iCACN/4D,KAAAmiE,QAEDniE,KACEmiE,MAAc/Q,QAMVpxD,KAACmiE,MAAA,MAGMniE,KAAAkjE,iBACAljE,KAAAkjE,eAAO9R,QAChBpxD,KAAAkjE,eAAA,M,uBAOEjjE,aAACD,KAAiB4iE,iB,qBACd,K;;;;;;;;;;;;;;;;gBA2CRwC,EAASnoD,EAAAooD,EAAYziD,GAAA,C,QACb3F,EAAUooD,EAAAziD,GAAA,C,iBAGXqwB,GAAW,C,qBAIHA,GAAC,C,gBACXmyB,EAAAnoD,EAAAooD,GAAA,C,kBACAD,EAAAnoD,EAAAooD,GAAA,C,mBACJD,EAAAC,GAAA,C,YACFC,GAAA;;;;;;;;;;;;;;;;wBA8CQC,G,KAKAA,eAAeA,E,KAGpBC,WAAA,GAMHpS,GAAAp3D,MAAAC,QAAAspE,MAAAhlE,OAAA,+BAEO,CAGN6gD,QAAKqkB,KAAA3S,GACL,GAAI92D,MAACC,QAAA+D,KAAiBwlE,WAAWC,IAAA,CAE7B,MAAKnjE,EAAA,IAGJtC,KAAAwlE,WAAgBC,IAEjB,IAAC,IAAApkE,EAAA,EAAAA,EAAiBiB,EAAM/B,OAAAc,IAAAiB,EAAAjB,GAAA+uB,SAAA7uB,MAAAe,EAAAjB,GAAAyU,QAAAg9C,EAC7B,CAEO,C,KACN1iC,EAAAta,GAKA9V,KAAI0lE,mBAAKD,G,mEAOLr1C,SAACA,EACHta,QAAKA,I,gCAGJ6vD,GAAWv1C,EAAiB7uB,MAAAuU,EAAA6vD,E,CAGzB3jE,IAAAyjE,EAAer1C,EAAAta,GACrB9V,KAAK0lE,mBAAkBD,GAGxB,MAAAnjE,EAAAtC,KAAAwlE,WAAAC,IAAA,GAEO,QAAWpkE,EAAA,EAAgBA,EAAAiB,EAAA/B,OAAAc,IAAA,GAAAiB,EAAAjB,GAAA+uB,gBAAAta,OAAAxT,EAAAjB,GAAAyU,SAG/B,Y,iCAOU2vD,GAGXrS,GAAApzD,KAAAulE,eAAA1sC,MAAA+sC,GACIA,IAAWH,IACjB,kBAAAA,EAEO;;;;;;;;;;;;;;;;oBA+BYI,G,qCAQfC,SAAA,EAWI,oBAAAx3B,aAAiC,IAAAA,OAAAiC,kBAAAuV,O,uCAGjC9lD,KAAA8lE,UAIN9lE,KAAA8lE,SAAA,EACI9lE,KAAAohD,QAAiB,UAAO,GAC9B,IAEa,GACR9S,OAAKiC,iBAAkB,WAAE,KACtBvwC,KAAK8lE,UACL9lE,KAAA8lE,SAAA,EACA9lE,KAAAohD,QAAA,aACL,IACA,G,6BAIA,IAAI2kB,E,iBAEEN,G,UAEiB,WAAAA,EAAA,uBAAAA,G,wCAMvBzlE,KAAM8lE,O;;;;;;;;;;;;;;;;wBAgDAE,EAAWC,G,QACT,I,EAAK,C,gCAIP,E,QAEF5kE,EAAA,EAAOA,EAAGrB,KAAAkmE,QAAA3lE,OAAAc,IAAArB,KAAAkmE,QAAA7kE,GAAAd,OAAA,I,KACX2lE,QAAAC,GAAAnmE,KAAAkmE,QAAA7kE,GACF8kE,KAEJnmE,KAAAkmE,QAAA3lE,OAAA4lE,EAEDnmE,KAAUomE,UAAc,CACtB,MACIpmE,KAACkmE,QAAAF,EACDhmE,KAAKomE,UACPH,C,kBAIO,G,QACN5kE,EAAArB,KAAAomE,UAAA/kE,EAAArB,KAAAkmE,QAAA3lE,OAAAc,IAAA,KAAArB,KAAAkmE,QAAA7kE,KAAA+jE,GAAA,IAAAplE,KAAAkmE,QAAA7kE,I,OACD+jE,GAAS,G,WAMbiB,K,OACE,IAAAC,GAAI,G,UAEJC,GAAIjpE,G,SACF8oE,WAAK9oE,EAAA4oE,QAAkB3lE,OAAA,K,EACnB2lE,QAAM5oE,EAAA8oE,U,UAOZI,GAAqClpE,G,OACrCA,EAAK4oE,QAAA3lE,OAAoBjD,EAAA8oE,S,UAA2BK,GAAEnpE,G,IACvD2oE,EAAA3oE,EAAA8oE,U,OAEOH,EAAA3oE,EAAA4oE,QAAuB3lE,QAAA0lE,IAC7B,IAAKK,GAAoBhpE,EAAA4oE,QAAuBD,E,aAEf3oE,G,mBACrBA,EAAA4oE,QACN3lE,OAAejD,EAAA4oE,QAAc5oE,EAAA4oE,QAAA3lE,OAAA,G,cAiB9BmmE,GACiBppE,EAAAqpE,EAAA,G,SAEpBT,QAAUxoE,MAAMJ,EAAK8oE,UAAIO,E,UAG3BC,GACEtpE,G,GAEHA,EAAA8oE,WAAA9oE,EAAA4oE,QAAA3lE,OAAA,YAEO,MAAAsmE,EAAc,G,IACpB,IAAAxlE,EAAM/D,EAAA8oE,UAAA/kE,EAAoB/D,EAAO4oE,QAAA3lE,OAAA,EAAAc,IAAAwlE,EAAKvlE,KAAAhE,EAAY4oE,QAAU7kE,I,OAC5D,IAAIilE,GAAOO,EAAA,E,aAEoBvpE,EAAAwpE,G,QACvB,G,QACNzlE,EAAI/D,EAAA8oE,UAAgB/kE,EAAA/D,EAAA4oE,QAAA3lE,OAAAc,IAAAwlE,EAAAvlE,KAAAhE,EAAA4oE,QAAA7kE,I,gBAElBilE,GAAoB,QAAAjuB,EAAqByuB,EAACV,UAAA/tB,EAAAyuB,EAAAZ,QAAA3lE,OAAA83C,IAAAwuB,EAAAvlE,KAAAwlE,EAAAZ,QAAA7tB,QAE7C,CAEC,MAAM0uB,EAAaD,EAAAtxD,MAAA,KAErB,QAAO2pC,EAAM,EAACA,EAAA4nB,EAAAxmE,OAAA4+C,IAAA4nB,EAAA5nB,GAAA5+C,OAAA,GAAAsmE,EAAAvlE,KAAAylE,EAAA5nB,G,CAGR,WAAAmnB,GAAsDO,EAAA,E,UAIvDG,GAAkB1pE,G,OACvBA,EAAI8oE,WAAe9oE,EAAA4oE,QAAe3lE,M,UAIhC0mE,GAA8BC,EAAAC,G,QAC1BZ,GAA+BW,GAAAE,EAAAb,GAAyBY,G,4BAErDC,EAAA,OAAeH,GAAGR,GAA+BS,GAAAT,GAAAU,I,8FAmBxDE,GAAkC/pE,EAAAunB,G,MACzBvnB,KAA8BkpE,GAAA3hD,GACrC,OAAK,E,QAERxjB,EAAA/D,EAAA8oE,UAAAjzB,EAAAtuB,EAAAuhD,UAAA/kE,GAAA/D,EAAA4oE,QAAA3lE,OAAAc,IAAA8xC,IACF,GAAA71C,EAAA4oE,QAAA7kE,KAAAwjB,EAAAqhD,QAAA/yB,GAAA,S,OAGC,C,sBAaA9xC,EAAI/D,EAAC8oE,UACLjzB,EAAItuB,EAACuhD,U,kDAIL,GAAA9oE,EAAK4oE,QAAM7kE,KAAWwjB,EAAKqhD,QAAQ/yB,GAAM,OAClC,IAKP9xC,IAMA8xC,C,gBAgCAm0B,GAQDznD,YAAAviB,EAAAiqE,GAEOvnE,KAAAunE,aAAgBA,EACtBvnE,KAAAwnE,OAAYd,GAAGppE,EAAc,GACtB0C,KAAAynE,YAAapxD,KAAAmD,IAAA,EAAAxZ,KAAiBwnE,OAAKjnE,QAC3C,QAAAc,EAAA,EAAAA,EAAArB,KAAAwnE,OAAAjnE,OAAAc,IAAArB,KAAAynE,aAAAC,GAAA1nE,KAAAwnE,OAAAnmE,I,QAp8Bc,E,SClGfsmE,GAAAC,G,GAQEA,EAAMH,YDuzBqD,ICvzB1B,UAAA/nE,MAAUkoE,EAASL,aAATK,yCAASA,EAAAH,YAAA,M,GACpDG,EAAMJ,OAAajnE,ODqzBT,GCrzBuB,UAAAb,MAAQkoE,EAAWL,aAAXK,gGAAWC,GAAAD,G,uBAU5C,IAARA,EAAQJ,OAAAjnE,OAAsB,GAC/B,gBAAAqnE,EAAAJ,OAAAjqE,KAAA,Q;;;;;;;;;;;;;;;;SCZAuqE,WAAAjC,GACDhmD,c,MAKEkoD,EAJA/sB,MAAA,CACD,YAIA,oBAAAxN,eAAA,IAAAA,SAAA+C,wBACM,IAAA/C,SAAA,Q,qBAGEw6B,EAAI,eACZ,IAAAx6B,SAAA,WAEQu6B,EAAgC,sBACvCC,EAAA,kB,uBAKOD,EAAI,qBACZC,EAAA,iBAED,IAAAx6B,SAAA,eAISu6B,EAAO,yBACfC,EAAA,iBC3BOhoE,KAAUioE,UAAA,EAaZF,GAAQv6B,SAAA+C,iBAAAw3B,GAAA,KACZ,MAAQG,GAAc16B,SAAEw6B,GACOE,IAACloE,KAAAioE,WAC3BjoE,KAAGioE,SAAWC,E,0BAEjB,I,mEAa6B,YAAAzC,EAAA,uBAAAA,G,MAE5BwC,S;;;;;;;;;;;;;;;;GA0CL,MAAAE,WAAOC,GASLvoD,YAAU2hD,EAAQC,EAAgB4G,EAAoBC,EAAGC,EAAAC,EAAAC,EAAAC,GAwIzD,GAvIA1tB,Q,KAGEwmB,UAAOA,E,KAAEC,eAAaA,E,KAAE4G,cAAiBA,E,KAAmBC,mBAE/DtoE,KAAAuoE,sBACFvoE,KAAAwoE,qBAEDxoE,KAAAyoE,yBAQEzoE,KAAA0oE,gBASS1oE,KAAKkuB,GAAAi6C,GAAGQ,8BAKf3oE,KAAK+4D,KAAKvF,GAA2B,KAAAxzD,KAAAkuB,GAAA,KACrCluB,KAAK4oE,kBACS,GACd5oE,KAAK6oE,QACH,IAAK3uD,IACRla,KAAA8oE,iBAAA,GAKD9oE,KAAA+oE,iBAAA,GAiBE/oE,KAAAgpE,qBAAW,EAOZhpE,KAAAipE,qBAAA,EAEDjpE,KAAAkpE,0BAAA,GAIElpE,KAAAmpE,YAAiB,EAClBnpE,KAAAopE,gBAhG2B,IAkG5BppE,KAAAqpE,mBAjGiC,IAqG/BrpE,KAAAspE,uBAAa,KACdtpE,KAAA24D,cAAA,KAED34D,KAAAupE,0BAAA,KAUEvpE,KAAAioE,UACW,EAMbjoE,KAAAwpE,eAAA,GASExpE,KAAAypE,eACa,EAIdzpE,KAAA0pE,UAAA,KAED1pE,KAAA2hE,WAAA,KAIE3hE,KAAI0hE,eAAiB,K,KAGnBiI,oBAAyC,EAE5C3pE,KAAA4pE,uBAAA,EAED5pE,KAAA6pE,2BAAA,EAIE7pE,KAAA8pE,kBAAuB,EACxB9pE,KAAA+pE,2BAAA,KAED/pE,KAAAgqE,+BAAA,KAIMtB,IACF3iB,KAAgB,UAAArmD,MAAA,kF,GAEWuqE,cAAApoE,GAAA,UAAA7B,KAAAkqE,WAAAlqE,OAE9B,IAAAwhE,EAAAvxB,KAAAtlB,QAAA,YAAAo7C,GAAAkE,cAAApoE,GAAA,SAAA7B,KAAAmqE,UAAAnqE,KAED,C,YAO0BwtB,EAAKssC,EAAAsQ,GAC7B,MAAMC,IAAMrqE,KAAWypE,eACnBttE,EAAO,C,EAEJkuE,E,EAGJ78C,EAQHmtB,EAAOmf,GAGT95D,KAAA+4D,KAAAhG,GAAA52D,IAIMi3D,GACepzD,KAAAmpE,WAAkC,0DAErDnpE,KAAK0pE,UAAwBpG,YAAAnnE,GACzBiuE,IAAQpqE,KAAQwpE,eAAgBa,GACjCD,E,KAGH9xB,GACDt4C,KAAAsqE,kBAED,MAAA1hB,EAAA,IAAAjD,GAeK4kB,EAAgB,CAClB/8C,OAAM,IACL2/B,QARc,CACZxK,EAAArK,EAAKkyB,MAAA3rE,WACL4rE,EAAAnyB,EAAAoyB,cASFrF,WAAa7oE,IAGT,MAAA+nE,EAAgB/nE,EAAW,EACR,OAAjBA,EAAQ,EACVosD,EAAO7rD,QAAAwnE,GACF3b,EAAA/lB,OAAA0hC,EAAA,G,sBASNjjE,KAAAipE,G,KACFtB,uB,MACAl4D,EAAS/Q,KAAK+oE,iBAAcxoE,OAAQ,EAEvC,OADCP,KAAAmpE,YAAAnpE,KAAA2qE,SAAA55D,GACM63C,EAAQhD,O,CAGjBglB,OAAAtyB,EAAAuyB,EAAA7qD,EAAAqlD,GAIErlE,KAAAsqE,kBACD,MAAAQ,EAAAxyB,EAAAyyB,iBAED3F,EAAA9sB,EAAAkyB,MAAA3rE,WAIEmB,KAAK+4D,KAAmB,qBAAKqM,EAAA,IAAA0F,GACxB9qE,KAAC6oE,QAAY/0D,IAAEsxD,IAAYplE,KAAQ6oE,QAChC3zD,IAAAkwD,EAAc,IAAAlrD,KAElBk5C,GACgB9a,EAAG0yB,aAAAC,cAAA3yB,EAAA0yB,aAAAE,eAAA,sDAEnB9X,IACDpzD,KAAA6oE,QAAA3pD,IAAAkmD,GAAAtxD,IAAAg3D,GAAA,gDAEH,MAAAK,EAAS,CACV9F,aAED+F,OAAAP,EAIMvyB,MAAIA,EACJt4B,IAAEA,G,KAQH6oD,QAAK3pD,IAAAkmD,GAAclwD,IAAA41D,EAAAK,GACpBnrE,KAAKmpE,YAAWnpE,KAAGqrE,YAAAF,E,UAErBp6D,GACD,MAAAmO,EAAAlf,KAAA+oE,iBAAAh4D,GAED/Q,KAAAsjE,YAAA,IAAApkD,EAAAiuC,SAAA3wD,WAIUwD,KAAK+oE,iBAAah4D,GACtB/Q,KAAEipE,uBACiB,IAAjBjpE,KAAEipE,uBAAejpE,KAAA+oE,iBAAA,IACjB7pD,EAAEmmD,YAAanmD,EAAAmmD,WAAA7oE,EAAA,G,aAGtB2uE,GAED,MAAA7yB,EAAA6yB,EAAA7yB,MAIQ8sB,EAAU9sB,EAASkyB,MAAM3rE,WAC/BisE,EAAYxyB,EAAUyyB,iBACvB/qE,KAAA+4D,KAAA,aAAAqM,EAAA,QAAA0F,GAED,MAAAQ,EAAA,CAIE3oB,EAAMyiB,GAQN+F,EAAanrD,MACbsrD,EAAW,EAAGhzB,EAAKoyB,aACnBY,EAAW,EAACH,EAAWnrD,KAGzBsrD,EAAA,EAAAH,EAAAC,SAMEprE,KAAAsjE,YAjBD,IAiByBgI,GAAM9uE,IAC9B,MAAO+nE,EAAY/nE,EAAqB,EACzC+uE,EAAA/uE,EAAA,EAGK2rE,GACIqD,sBACJjH,EAAAjsB,IAIFt4C,KAAU6oE,QACR3pD,IAAAkmD,IAAqBplE,KAAK6oE,QAAM3pD,IAAMkmD,GAAUlmD,IAAG4rD,MAIzBK,IAG5BnrE,KAAO+4D,KAAA,kBAAyBv8D,GAEnC,OAAA+uE,GAAAvrE,KAAAyrE,cAAArG,EAAA0F,G,gCAtSM,GAyST,CAUE/zB,6BAAAwtB,EAAAjsB,GAYE,GAAAisB,GAAY,iBAAAA,GAAApd,GAAAod,EAAA,MAGd,MAAAmH,EAAAC,GAAApH,EAAA,KASE,GAAOvoE,MAAIC,QAAAyvE,OAAY/gD,QAAO,YAAQ,CACvC,MAAAihD,EAAA,gBAAAtzB,EAAA0yB,aAAAa,WAAAhtE,WAAA,IAEDitE,EAAAxzB,EAAAkyB,MAAA3rE,WAQSq2D,GAAK,wGAAA0W,QAAAE,mDACb,CAED,C,kBAKC74B,GAEDjzC,KAAA2hE,WAAA1uB,EAIEjzC,KAAA+4D,KAAO,wBACR/4D,KAAA2hE,WAAA3hE,KAAA+rE,UAYA/rE,KAAAmpE,YAAAnpE,KAAAsjE,YAAA,sBAEDtjE,KAAAgsE,uCAAA/4B,E,wCAUCg5B,IAIAA,GAAA,KAAAA,EAAA1rE,QAEK2mD,GAAA+kB,MACJjsE,KAAO+4D,KAAK,iEACb/4D,KAAAqpE,mBAjcuB,I,sBAqcvBp2B,GAEDjzC,KAAA0hE,eAAAzuB,EAIEjzC,KAAA+4D,KAAO,6BACR/4D,KAAA0hE,eAAA1hE,KAAAksE,cAkBoBlsE,KAAAmpE,YAAXnpE,KAAAsjE,YAA0B,uB,CAqBnCyI,UAED,GAAA/rE,KAAAmpE,YAAAnpE,KAAA2hE,WAAA,CAOE,MAAO1uB,EAAIjzC,KAAA2hE,WAMZwK,EAAAnlB,GAAA/T,GAAA,eAEDm5B,EAAA,CAQUC,KAAAp5B,GAEgB,OAAhBjzC,KAAK0oE,cAAW0D,EAAA,UACgB,iBAA3BpsE,KAAA0oE,gBAA2B0D,EAAA,QAAApsE,KAAA0oE,eACtC1oE,KAAIsjE,YACF6I,EAAYC,GAAMjpE,I,MACTooE,EACTpoE,EAAiB,EACR8Z,EAAO9Z,EACJ,GAAM,QAErBnD,KAAA2hE,aAAA1uB,IACW,OAAAs4B,EAAAvrE,KAAA4pE,uBAAA,EAGd5pE,KAAAssE,eAAAf,EAAAtuD,GAMS,G,iCAeMjd,KAAP0hE,gBAAA1hE,KAAAsjE,YAAA,Y,MAEGtjE,KAAO0hE,iB,UAGZ6J,EAAWpoE,EAAQ,EACnB8Z,EAAO9Z,EAAW,WACnB,OAAAooE,EAAAvrE,KAAA6pE,2BAAA,EACF7pE,KAAAusE,mBAAAhB,EAAAtuD,EAAA,G,CAYF2vC,SAAAtU,EAAAt4B,GAED,MAAAolD,EAAA9sB,EAAAkyB,MAAA3rE,WAIEisE,EAAYxyB,EAAMyyB,iBACnB/qE,KAAA+4D,KAAA,uBAAAqM,EAAA,IAAA0F,GAED1X,GAGM9a,EAAA0yB,aAAAC,cAAA3yB,EAAA0yB,aAAAE,eAAA,wDACQlrE,KAAMyrE,cAASrG,EAAA0F,IAC5B9qE,KAAAmpE,YAAAnpE,KAAAwsE,cAAApH,EAAA0F,EAAAxyB,EAAAoyB,aAAA1qD,EAED,C,cAISolD,EAAW0F,EAAS2B,EAAAzsD,GAC5BhgB,KAAA+4D,KAAA,eAAAqM,EAAA,QAAA0F,GAED,MAAAQ,EAAA,CAUE3oB,EAAOyiB,GAaRplD,IAEDsrD,EAAA,EAAAmB,EAOEnB,EAAW,EAAAtrD,GASbhgB,KAAAsjE,YA5BA,IA8BEgI,E,iBASDlG,EAAAnoD,EAAAooD,GAEDrlE,KAAAsqE,kBAIEtqE,KAAOmpE,WAAInpE,KAAA0sE,kBAAA,IAAAtH,EACCnoD,EACPooD,GAKNrlE,KAAAkpE,0BAAA5nE,KAAA,CAED8jE,WACEA,EAEA53C,OAAW,IAOZvQ,O,cCjxBH,CAsBE0vD,kBAAOvH,EAAAnoD,EAAAooD,GACRrlE,KAAAsqE,kBAEetqE,KAAAmpE,WAAAnpE,KAAA0sE,kBAA4B,KAAetH,EAAAnoD,EAAAooD,GAClDrlE,KAAAkpE,0BAAW5nE,KAAK,CACzB8jE,aC3BA53C,OAAA,KA0BgBo/C,OACdC,cAGK,CACLC,mBAAmB1H,EAAKC,G,KAGtBiF,kBAEFtqE,KAAAmpE,WAAAnpE,KAAA0sE,kBAAA,KAAAtH,EAAA,KAAAC,GAEFrlE,KAAAkpE,0BAAA5nE,KAAA,CAIM8jE,WAAaA,EACf53C,OAAY,KACZvQ,KAAA,KAOAooD,cAMF,CAIFqH,kBAAAl/C,EAAA43C,EAAAnoD,EAAAooD,GC7DA,MAAAlY,EAAA,CAoCAxK,EAAAyiB,EAsBE3H,EAAAxgD,GAOUjd,KAAa+4D,KAAA,gBAAbvrC,EAAmE2/B,GATrEntD,KAASsjE,YAAkB91C,EAAK2/B,GAAA4f,IAWtC1H,GAAAvlE,YAAA,KAKAulE,EAAA0H,EAAoB,EAACA,EAAoB,KAC1C12D,KAAAyC,MAAA,M,KA7BAssD,EAAAnoD,EAAAooD,EAAAziD,GAED5iB,KAAAgtE,YAAW,IAAA5H,EAAyBnoD,EAAAooD,EAAAziD,E,OAEnCwiD,EAAAnoD,EAAAooD,EAAAziD,G,iBA4BD,IAAAwiD,EAAUnoD,EAAAooD,EAAAziD,E,aAET4K,EAAA43C,EAAAnoD,EAAAooD,EAAAziD,G,uBAIC,MAAAuqC,EAAY,CACbxK,EAAAyiB,E,EAGDnoD,QAECpZ,IAAA+e,IAAAuqC,EAAA,EAAAvqC,G,4BAKK4K,S,QAGK2/B,EAEVkY,eAICrlE,KAAIgpE,uB,MAEGj4D,EAAI/Q,KAAA8oE,iBAAAvoE,OAAa,E,KAGtB4oE,WAAOnpE,KAAAitE,SAAAl8D,GAEV/Q,KAAA+4D,KAAA,kBAAAqM,EACD,C,SACEr0D,GACD,MAAAyc,EAAAxtB,KAAA8oE,iBAAA/3D,GAAAyc,O,EAGDxtB,KAAA8oE,iBAAuB/3D,GAACo8C,QACtBkY,EAAYrlE,KAAA8oE,iBAAA/3D,GAAAs0D,WACbrlE,KAAA8oE,iBAAA/3D,GAAAm8D,OAAAltE,KAAAmpE,W,iBAGD37C,EAAA2/B,GAAoB3wD,IACdwD,KAAA+4D,KAASvrC,EAAK,YAChBhxB,UACSwD,KAAA8oE,iBAAsB/3D,G,KAG/Bi4D,uBAQoB,I,4BAAAhpE,KAAkB8oE,iBAAA,IAClCzD,GAAQA,EAAA7oE,EAAiB,EAAEA,EAAA,K,aAK1B8oE,G,GAMLtlE,KAAAmpE,WAAY,CAOb,MAAAhc,EAAA,CACFvK,EAAA0iB,GAICtlE,KAAO+4D,KAAM,cAAA5L,GACdntD,KAAAsjE,YAAA,IAAAnW,GAAA77C,IAIS,GAAC,OADXA,EAAW,EACA,CACV,MAAA67D,EAAA77D,EAAA,E,KAGDynD,KAAA,cAA2B,wBAAoCoU,EACtD,IAEL,C,gBAGE3wE,G,GACA,MAAAA,EAAa,C,KAGfu8D,KAAO,gBAAgBhG,GAAAv2D,IAE1B,MAAA4wE,EAAA5wE,EAAA,E,EAGGwD,KAAAwpE,eAAA4D,GACMhD,WACIpqE,KAAMwpE,eAAA4D,GACZhD,EAAM5tE,EACR,G,KAOF,IAAM,UAAWA,EAAI,0CAAAA,EAAA,MACjB,MAAIA,G,iBAGAA,EAAS,EAAOA,EAAA,G,aAGzBgxB,EAAAssC,GACD95D,KAAA+4D,KAAO,sBAAevrC,EAAAssC,GACvB,MAAAtsC,EAAAxtB,KAAAqoE,cAAAvO,EAAA,EAAAA,EAAA,KAAAA,EAAA,GAED,MAAAtsC,EAAAxtB,KAAAqoE,cAAAvO,EAAA,EAAAA,EAAA,GAIA,EAAQA,EAAA,GACa,MAAZtsC,EAAYxtB,KAAAqtE,iBAAAvT,EAAA,EAAAA,EAAA,GACpB,OAAAtsC,EAAAxtB,KAAAssE,eAAAxS,EAAA,EAAAA,EAAA,GACoB,QAAXtsC,EAAWxtB,KAAAusE,mBAAAzS,EAAA,EAAAA,EAAA,GACL,OAALtsC,EAAKxtB,KAAAstE,uBAASxT,GAEhB4K,GAAqB,6CAC1B3R,GAAUvlC,GAAA,qC,UAEVw3C,EAAAF,G,KACA/L,KAAA,oB,KACDoQ,YAAA,EACFnpE,KAAAgqE,gCAAA,IAAA7zD,MAAAo3D,UAEDvtE,KAAAwtE,iBAAAxI,GAIEhlE,KAAA24D,cAAmBmM,EACnB9kE,KAAM8pE,kBAAe9pE,KAAWytE,oBAChCztE,KAAA0tE,gBACA1tE,KAAA8pE,kBAAkB,EAClB9pE,KAAAsoE,kBAAA,E,kBAEI5nE,G,6EAEFV,KAAIupE,2B,kGAKFA,0BAA4B,K,2BAEN,G,KAKvBzwD,MAAApY,G,oBAKIV,KAAA0pE,WAAA1pE,KAAA8pE,kBAAA9pE,KAAA2tE,iBAAA,E,YAERzF,GAECA,IAAYloE,KAAAioE,UAAAjoE,KAAAopE,kBAAAppE,KAAAqpE,qBACbrpE,KAAA+4D,KAAA,2CACM/4D,KAAWopE,gBH1JU,IG2JjBppE,KAAK0pE,WACZ1pE,KAAO2tE,iBAAK,I,KAEZ1F,SAAMC,C,WAKP0F,GAGFA,G,kCA3ND5tE,KAAAopE,gBHqD4B,IGjDOppE,KAAA0pE,WAAA1pE,KAAA2tE,iBAAA,KAAqB3tE,KAAA+4D,KAAA,8CAAU/4D,KAAA0pE,WAAA1pE,KAAA0pE,UAAAtY,QCtDpE,CAwBIyb,wBAWF,GATI7sE,KAAU+4D,KAAA,4BACd8U,mBACD7tE,KAAA0pE,UAAA,KAGCmD,+BAGW7sE,KAAAwpE,eAAA,GACHxpE,KAA0B8tE,mBAAA,CAChC,GAAM9tE,KAAAioE,UAMJ,GAAOjoE,KAAQgqE,+BAAC,EAGE,IAAA7zD,MAAAo3D,UAAAvtE,KAAAgqE,+BJ8Db,MI7D8BhqE,KAAAopE,gBJyDX,KIxD3BppE,KAAAgqE,+BAAA,IACD,OAXQhqE,KAAA+4D,KAAY,8CACZ/4D,KAAAopE,gBAAqBppE,KAASqpE,mBAChCrpE,KAAQ+pE,4BACH,IAAA5zD,MAAAo3D,UAST,MAAQQ,GAA6B,IAAO53D,MAACo3D,UAAevtE,KAAA+pE,2BAC7D,IAAAiE,EAAA33D,KAAAmD,IAAA,EAAAxZ,KAAAopE,gBAAA2E,GACMC,EAAA33D,KAAAyD,SAAAk0D,E,4CAELhuE,KAAQ2tE,iBAAAK,GAEHhuE,KAAAopE,gBAAA/yD,KAAAqD,IAAA1Z,KAAAqpE,mBJmDF,IInDErpE,KAAAopE,gBACL,CACDppE,KAAAsoE,kBAAA,EAED,C,6BAEE,GAAAtoE,KAAO8tE,mBAAI,CACZ9tE,KAAA+4D,KAAA,+BAED/4D,KAAA+pE,4BAAA,IAAA5zD,MAAAo3D,UAIEvtE,KAAOgqE,+BAAY,KACpB,MAAAiE,EAAAjuE,KAAAqkE,eAAA/qC,KAAAt5B,MACFkuE,EAAAluE,KAAA4hE,SAAAtoC,KAAAt5B,MAEYo5D,EAAAp5D,KAAAmuE,sBAAqB70C,KAAAt5B,MCxElC44D,EAAA54D,KAAAkuB,GAAA,IAAAi6C,GAAAiG,oBAuBMzV,EAAA34D,KAAS24D,cAKb,IAAY0V,GAAc,EAClBC,EAAuB,KAE3B,MAAAC,EAAe,WACXD,EAA4BA,EAASld,SAEtCid,GAAgB,EACXjV,IAEX,EAEWoV,EAAA,SAAAryE,G,+DAEJmyE,EAAWhL,YAAcnnE,EAC3B,EACJ6D,KAAO0pE,UAAO,CACftY,MAAAmd,EACFjL,YAAAkL,GAqBC,MAAc7Y,EAAM31D,KAAA2pE,mBAEd3pE,KAAA2pE,oBAAoB,EAIxB,IAGI,MAAWlR,EACND,SAAKr+C,QAAA8mC,IAAA,CACHjhD,KAAMwoE,mBAAQ9S,SAAAC,GACvB31D,KAAYyoE,uBAAe/S,SAAAC,KAEpB0Y,EAcI9a,GAAA,0CAPNA,GAAA,8C,iCAECvzD,KAAM0hE,eAAmBlJ,GAAwBA,EAAAvlB,MACjDq7B,EAAO,IAAA/M,GAA+B3I,EAAA54D,KAAAwhE,UAAAxhE,KAAAyhE,eAAAzhE,KAAA0hE,eAAA1hE,KAAA2hE,WAAAsM,EAAAC,EAAA9U,GAAA+L,IACjCjQ,GAA2BiQ,EAAU,KAAEnlE,KAAAwhE,UAAA3iE,WAAA,KACtCmB,KAAAyuE,ULgBM,cKhBY,GACnB9V,GAmBX,CAXD,MAAAn6D,GACDwB,KAAA+4D,KAAA,wBAAAv6D,GAEI6vE,IAC4BruE,KAAAwhE,UAAA3K,WAI1B3B,GAA0C12D,GACxC+vE,IAEN,C,YAGApJ,G,GAEM,uCAEOA,G,KAMbyD,kBAAAzD,IAAA,EAEFnlE,KAAM0pE,UAAa1pE,KAAG0pE,UAAUtY,SAE5BpxD,KAAKupE,4BACLtpE,aAAOD,KAAQupE,2BAChBvpE,KAAMupE,0BAAA,MAELvpE,KAAImpE,YAAWnpE,KAAAmuE,wB,QAInBhJ,G,GACuB,mCAAeA,U,0BAEpCuJ,GAA0C1uE,KAAA4oE,qBAC1C5oE,KAAIopE,gBLtCoB,IKwCjBppE,KAAA0pE,WAAA1pE,KAAA2tE,iBAAA,G,kBAGL3I,G,MACD2J,EAAA3J,GAAA,IAAA7uD,MAAAo3D,U,KACFhF,oBAAA,CACDqG,iBAAYD,GAGd,CACAE,0B,gDAEO,MAAIC,EAAA9uE,KAAA8oE,iBAASznE,GACtBytE,GAAA,MAAAA,EAAA3hB,SAAA2hB,EAAA5B,SC5JA4B,EAAAzJ,YAAAyJ,EAAAzJ,WAAA,qBA6BMrlE,KAAA8oE,iBAAiBznE,GAEVrB,KAAAgpE,uBAmBD,CAIN,IAAAhpE,KAAAgpE,uBAAAhpE,KAAA8oE,iBAAA,GAtBJ,C,iBAIE1D,EAAA9sB,G,IAOMwyB,EACAA,EAAFxyB,EAAaA,EAAE1jC,KAAA61D,GAAAxW,GAAcwW,KAAAltE,KAAA,KAA7B,U,MACAqtE,EAAA5qE,KAAAyrE,cAAArG,EAAA0F,GACJF,GAAOA,EAAAvF,YAAAuF,EAAAvF,WAAiB,oB,CAU1BoG,cAAoBrG,EAAA0F,GAClB,MAAMiE,EAAY,IAAAzI,GAAAlB,GAAAvmE,WAClB,IAAI+rE,EAIJ,GAAI5qE,KAAA6oE,QAAS/0D,IAAAi7D,GAAY,C,uCAKvBn6D,EAAO20C,OAAKuhB,GAEf,IAAAl2D,EAAAC,MAAA7U,KAAA6oE,QAAAtf,OAAAwlB,EAED,MACEnE,OAAO/mE,EACR,OAAA+mE,CAED,C,eAIEoE,EAAAC,GAIA1b,GAAqB,uBAAAyb,EAAA,IAAAC,GACrBjvE,KAAI2hE,WAAA,KACJ3hE,KAAA2pE,oBAAa,EACb3pE,KAAI0pE,UAAWtY,QACF,kBAAb4d,GAAa,sBAAAA,IAKZhvE,KAAA4pE,yBACG5pE,KAAS4pE,wBNiBkB,IMb7B5pE,KAAQopE,gBNQY,IMJtBppE,KAAYwoE,mBAAa1S,yB,oBAI1BkZ,EAAAC,GAED1b,GAAA,4BAAAyb,EAAA,IAAAC,GAOEjvE,KAAA0hE,eAAmB,K,KAGfiI,oBAAc,E,sFAQVE,4BNfuB,GMeG7pE,KAAAyoE,uBAAA3S,wB,wBAKxBgE,G,4BACD95D,KAAAspE,uBAAAxP,G,QACDA,GAAUr9D,QAAKC,IAAS,aAAEo9D,EAAA,IAAAh7D,QAAA,qB,sBAM7BitE,U,6BAQCmD,KAAOlvE,KAAY6oE,QAAOh3D,SAAS,IAAE,MAAUs5D,KAAM+D,EAAAr9D,SAAA7R,KAAAqrE,YAAAF,G,QACtD9pE,EAAA,EAAAA,EAAArB,KAAA8oE,iBAAAvoE,OAAAc,IAAArB,KAAA8oE,iBAAAznE,IAAArB,KAAAitE,SAAA5rE,G,KAEHrB,KAAAkpE,0BAAA3oE,QAAA,CACF,MAAO4sD,EAAIntD,KAAAkpE,0BAASxa,QACrB1uD,KAAA0sE,kBAAAvf,EAAA3/B,OAAA2/B,EAAAiY,WAAAjY,EAAAlwC,KAAAkwC,EAAAkY,WAED,CAOE,QAAMhtB,EAAA,EAAUA,EAAGr4C,KAAA+oE,iBAAAxoE,OAAA83C,IAAAr4C,KAAA+oE,iBAAG1wB,IAChBr4C,KAAC2qE,SACJtyB,E,6BAMO,G,WAMF0N,OAEHopB,EAAAnvE,KAAAwhE,UAAA3K,UAAA,aAEH,QAEHyO,EAAA,OAAA6J,EAAA,IAAA3d,GAAA1yD,QAAA,cACFgnD,KAAAwf,EAAA,uB/C/EC,iBAAA10B,WAAA,gBAAAA,UAAA,UgDtGF00B,EAAA,4BA8CItlE,KAAAovE,YAAA9J,EAEJ,CAmBEwI,mBAKmB,MAASF,EAAA7H,GAAyBkE,cAAAoF,kBAClC,OAAaX,GAAa1uE,KAAA4oE,oBAAAgF,C,KAG3CjF,4BAAA,EApBFR,GAAqBiG,kBAAA;;;;;;;;;;;;;;;;;MA4DnBkB,G,YAEO/sE,EAAAgtE,G,KACLhtE,KAAMA,E,KACNgtE,KAAOA,C,aAEVhtE,EAAAgtE,G,cAGkBhtE,EAAAgtE,E;;;;;;;;;;;;;;;;gCAqChBvvE,KAAAwvE,QAAAl2C,KAAAt5B,K,qBAiBayvE,EAAAC,G,MACbC,EAAA,IAAAL,GzBgVF,ayBhVEG,GACFG,EAAA,IAAAN,GzB+UA,ayB/UAI,G,OAGM,I,aAAPC,EAAOC,E,CAONC,UAMC,OAAIP,GACUQ,G;;;;;;;;;;;;;;;;gBAiCfC,WAAAC,G,0BAIC,OAAIC,E,CAEFC,wBAAUl8B,G,GAOQA,C,qBAKf6f,GAAAnZ,EAAAn4C,KAAAo4C,EAAAp4C,K,aAGJgtE,G,SAQW,kD,qBAGHE,EAAAC,G,OACP,C,WASJ,OAAAJ,GAAwCQ,G,kBAMpC,IAAAR,GzBiPN,ayBjPqCW,G,CAInCE,SAAAC,EAAc7tE,G,OACZ6wD,GAAsC,iBAAAgd,EAAA,gDAIpC,IAAAd,GAAYc,EAAAH,G,CASdpxE,W,MACE,M,QAKHwxE,GAAA,IAAAN;;;;;;;;;;;;;;;;SAmCCO,G,YAQSf,EAAQgB,EAAQ7+D,EAAA8+D,EAAwBC,EAAsB,M,gBAC1DD,E,sBACOC,E,KACjBC,WAAA,G,IACDC,EAAA,E,MACDpB,EAAAnpC,WAYH,GATAuqC,EAAAJ,EACE7+D,EAAsB69D,EAAArxE,IAAAqyE,GAAA,EAMvBC,IAAAG,IAAA,GAEDA,EAAA,EAMepB,EAAXvvE,KAAOwwE,WAAIjB,EAAAn2B,KACEm2B,EAAAp2B,UACV,QAAAw3B,EAAA,CAEH3wE,KAAM0wE,WAAWpvE,KAAKiuE,GAIlB,KACJ,CAEEvvE,KAAI0wE,WAAYpvE,KAAIiuE,GACrBA,EAAAvvE,KAAAwwE,WAAAjB,EAAAp2B,MACeo2B,EAAAn2B,IACjB,CAEH,C,aAGM,IADFp5C,KAAI0wE,WAAMnwE,OACC,Y,IAIZ+Q,E,EAFGtR,KAAO0wE,WAAG/tD,MAYd,GARqBrR,E,KAAVm/D,iBAAUzwE,KAAAywE,iBACZlB,EAAGrxE,IAAAqxE,EAAAvwE,O,CAGVd,IAASqxE,EAAArxE,IAEZc,MAAAuwE,EAAAvwE,OAGGgB,KAAAwwE,WAKA,I,EADKjB,EAAAn2B,MACCm2B,EAAAnpC,WAINpmC,KAAO0wE,WAAIpvE,KAAAiuE,GACZA,IAAAp2B,WAIF,IADCo2B,EAAOA,EAAKp2B,OACbo2B,EAAAnpC,WACiBpmC,KAAA0wE,WAAApvE,KAAAiuE,GACZA,EAAUA,EACZn2B,K,OAIA9nC,C,uBAMEo/D,WAAcnwE,OAAQ,C,WAGH,I,KAAnBmwE,WAAInwE,OAAe,OAAU,K,QAC7BP,KAAO0wE,WAAe1wE,KAAA0wE,WAAcnwE,OAAA,G,6BAEhBP,KAAKywE,iBAAiBlB,EACrCrxE,IAAAqxE,EAAYvwE,OAIf,C,MACAd,I,MACDqxE,EAAAvwE,M,QAgBL4xE,GAUA/wD,YACM3hB,EAAAc,EAAA6xE,EAAAz3B,EAAAD,GAIPn5C,KAAA9B,MAED8B,KAAShB,MAAYA,EACnBgB,KAAI6wE,MACF,MADOA,EACEA,EAAAD,GAAAE,I,KAET13B,KAAS,MAAFA,EAAEA,EAAA23B,GAAAC,WAEZhxE,KAAAm5C,MAAA,MAAAA,IAAA43B,GAAAC,UAED,CAaA7iD,KAAOjwB,EAAAc,EAAA6xE,EAAAz3B,EAAAD,GACL,OAAO,IAAAy3B,GAAM,MAAA1yE,IAAA8B,KAAA9B,IAAA,MAAAc,IAAAgB,KAAAhB,MAAA,MAAA6xE,IAAA7wE,KAAA6wE,MAAA,MAAAz3B,IAAAp5C,KAAAo5C,KAAA,MAAAD,IAAAn5C,KAAAm5C,M,CAmBV7iB,QACF,OAAEt2B,KAAAo5C,KAAA9iB,QAAA,EAAAt2B,KAAAm5C,MAAA7iB,O,CAIH8P,UACD,QACA,CCzdD6qC,iBAAAzjD,GAQI,OAAOxtB,KAAIo5C,KAAK63B,iBAAYzjD,MAAgBA,EAASxtB,KAAA9B,IAAS8B,KAAKhB,QACjEgB,KAAOm5C,MAAC83B,iBAAUzjD,E,CAYtB0jD,iBAAM1jD,GACN,OAAAxtB,KAAAm5C,MAAA+3B,iBAAK1jD,IAAkBA,EAAOxtB,KAAI9B,IAAA8B,KAAAhB,QAAAgB,KAAAo5C,KAAA83B,iBAAA1jD,E,yBAK5B4Y,UAAoBpmC,KAEpBA,KAAAo5C,KAAS+3B,M,CAKfC,SAIA,OAAMpxE,KAAAmxE,OAAWjzE,G,sBAgBXi7C,MAAA/S,UAAApmC,KAAA9B,IAAE8B,KAAAm5C,MAAak4B,Q,UAcbryE,EAAI0S,G,mBAENA,EAAMxT,EAASmV,EAAGnV,K,OAClBmV,E,IAAIA,EAAA8a,KAAA,KAAU,KAAU,KAAM9a,EAAC+lC,KAAAk4B,OAAUpzE,EAAOc,EAC1C0S,GAAQ,MAEf,IAAAi/D,EAAAt9D,EAAA8a,KAAA,KAAAnvB,EAAA,gBACFqU,EAAA8a,KAAA,oBAAA9a,EAAA8lC,MAAAm4B,OAAApzE,EAAAc,EAAA0S,IACA2B,EAAAk+D,Q,CAMPC,aCrIA,GAAAxxE,KAAAo5C,KAAAhT,UAAA,OAAA2qC,GAAAC,WA4BE,IAAA39D,EAAoBrT,KAGlB,OAFKqT,EAAE+lC,KAACq4B,UAAAp+D,EAAA+lC,UAAAq4B,WAAAp+D,IAAAq+D,gBADUr+D,EAAUA,EAAA8a,KAAA,UAAV,KAAgB9a,EAAA+lC,KAAAo4B,aAAA,MAGlCn+D,EAAAk+D,Q,CAUAzuC,OAAO5kC,EAAKwT,GACb,IAAA2B,EAAAs+D,EAEC,GADFt+D,EAAQrT,KACN0R,EAAexT,EAAKmV,EAAAnV,KAAA,EACdmV,EAAA+lC,KAAShT,WAAK/yB,EAAY+lC,KAAGq4B,UAAMp+D,EAAA+lC,UAAAq4B,WAAAp+D,IAAAq+D,gBACzCr+D,EAAMA,EAAA8a,KAAQ,KAAG,KAAO,KAAS9a,EAAC+lC,KAAMtW,OAAE5kC,EAAAwT,GAAA,UACtC,CAME,GAHJ2B,EAAA+lC,KAAOq4B,WAASp+D,IAAAu+D,gBAEnBv+D,EAAA8lC,MAAA/S,WAAA/yB,EAAA8lC,MAAAs4B,UAAAp+D,EAAA8lC,MAAAC,KAAAq4B,WAAAp+D,IAAAw+D,iBACwC,IAAhCngE,EAAoBxT,EAAYmV,EAAAnV,KAAA,CACjC,GAAAmV,EAAA8lC,MAAY/S,UAAA,OAAA2qC,GAAyBC,WAKhCW,EAAAt+D,EAAA8lC,MAAAg4B,OACZ99D,IAAA8a,KAAAwjD,EAAAzzE,IAAAyzE,EAAA3yE,MAAA,UAAAqU,EAAA8lC,MAAAq4B,aAEC,CACAn+D,EAAOA,EAAA8a,KAAI,oBAAA9a,EAAA8lC,MAAUrW,OAAA5kC,EAAAwT,GACtB,CACD,OAAQ2B,EAAAk+D,Q,CCjEVE,SAwBE,OAAsBzxE,KAAY6wE,K,CAOjCU,SACD,IAAAl+D,EAAYrT,KAIV,OAHAqT,EAAA8lC,MAAYs4B,WAAAp+D,EAAA+lC,KAAAq4B,WAAAp+D,IAAAy+D,eACbz+D,EAAA+lC,KAAAq4B,UAAAp+D,EAAA+lC,UAAAq4B,WAAAp+D,IAAAu+D,gBACDv+D,EAAA+lC,KAAAq4B,UAAiCp+D,EAAE8lC,MAAAs4B,WAAap+D,IAAA0+D,cACvC1+D,C,CAIPq+D,eACD,IAAAr+D,EAAArT,KAAA+xE,aAOC,OANK1+D,EAAA8lC,MAAAC,KAAAq4B,W,qDAELp+D,EAAQA,EAAAy+D,cACTz+D,IAAA0+D,cAGO1+D,C,CAQNw+D,gBACD,IAAAx+D,EAAArT,KAAA+xE,aC1BG,OD2BL1+D,EAAA+lC,UAAAq4B,WAEYp+D,IAAAu+D,eC5Dbv+D,IAAA0+D,cA+BM1+D,CAEN,C,uEAqBM,OAAArT,KAAYm5C,MAAKhrB,KAAA,UAAAnuB,KAAA6wE,MAAAmB,EAAA,K,gBAMrB,MAAMC,EAAAjyE,KAAamuB,KAAgB,UAAAyiD,GAAAE,IAAA9wE,KAAAo5C,KAAAD,MAAA,MAEnC,OAAOn5C,KAAUo5C,KAAWjrB,KAAA,UAAAnuB,KAAA6wE,MAAA,KAAAoB,E,CAK1BF,aACA,MAAM34B,EAAOp5C,KAAKo5C,KAAOjrB,KAAA,WAAAnuB,KAAAo5C,KAAAy3B,MAAA,WACvB13B,EAAAn5C,KAAem5C,MAAKhrB,KAAA,WAAAnuB,KAAAm5C,MAAA03B,MAAW,KAAU,M,4CAS3CqB,iB,MAIOC,EAAAnyE,KAAAoyE,S,iDAMLpyE,KAAAyxE,UAAgBzxE,KAAGo5C,KAAAq4B,SAAA,UAAA/xE,MAAA,0BAAAM,KAAA9B,IAAA,IAAA8B,KAAAhB,MAAA,K,GACpBgB,KAAAm5C,MAAAs4B,SAAA,UAAA/xE,MAAA,mBAAAM,KAAA9B,IAAA,IAAA8B,KAAAhB,MAAA,YACD,MAAMmzE,EAAcnyE,KAClBo5C,KAAMg5B,SAER,GAAAD,IAAAnyE,KAAAm5C,MAAAi5B,SAAA,UAAA1yE,MAAA,uBAEA,OAAUyyE,GAAAnyE,KAAAyxE,SAAA,I,EAIPb,GAAME,KAAS,E,GACHuB,OAAA,ECxBH,MAAAtB,G,YAIuCuB,EAASC,EAAAxB,GAAAC,YAAGhxE,KAAAsyE,cACnEtyE,KAAAuyE,OCjFA,CAsDIjB,OACEpzE,EAAQc,G,kHAYTd,GAED,OAAI,IAAA6yE,GAA8B/wE,KAAAsyE,YAAAtyE,KAAAuyE,MAAAzvC,OAAA5kC,EAAA8B,KAAAsyE,aAAAnkD,KAAA,UAAAyiD,GAAAyB,MAAA,W,QAwBhC,IAAA1B,EAEHpB,EAAAvvE,KAAAuyE,MACD,MAAAhD,EACEnpC,WACA,CAIE,GADEuqC,EAAA3wE,KAAAsyE,YAAoBp0E,EAAQqxE,EAAErxE,KACpB,IAARyyE,EAAS,OAAApB,EACXvwE,MACO2xE,EAAA,EAAQpB,EAAQA,EAAKn2B,KAKzBu3B,EAAA,IAAApB,IAAAp2B,M,aAmBPq5B,kBAAet0E,GAChB,IAAAyyE,EAAApB,EAAAvvE,KAAAuyE,MAAAE,EAAA,KACD,MAAAlD,EAAenpC,WAAe,C,GACxBuqC,EAAA3wE,KAAQsyE,YACVp0E,EAAOqxE,EAAArxE,KAEA,IAAPyyE,EAAc,CAEjB,GAAApB,EAAAn2B,KAAAhT,UAIe,OAAAqsC,IAAAv0E,IACF,KAHA,IADFqxE,IAAAn2B,MACGm2B,EAAAp2B,MAAA/S,WAAAmpC,IAAAp2B,MACd,OAAAo2B,EAAArxE,GAGA,CAAAyyE,EAAA,EAAApB,IAAAn2B,KACOu3B,EAAA,IACC8B,EAAYlD,EACpBA,IAAAp2B,MCjJH,CAyCE,UAAYz5C,MAAmB,wE,CAI7B0mC,UACD,OAAApmC,KAAAuyE,MAAAnsC,SAED,CAIA9P,QACE,OAAOt2B,KAAKuyE,MAAAj8C,O,CAQb86C,SACD,OAAWpxE,KACCuyE,MACCnB,Q,CAkBbC,SAKE,OAAIrxE,KAAQuyE,MAAAlB,Q,CAkBbJ,iBAAAzjD,GACD,OAAAxtB,KAAeuyE,MAAatB,iBAAmBzjD,E,CAS9C0jD,iBAAA1jD,GACD,OAAQxtB,KAAAuyE,MAAArB,iBAAA1jD,E,aAMEklD,G,OACN,IAAOpC,GAAkCtwE,KAAAuyE,MAAkB,KAAIvyE,KAAAsyE,aAAW,EAAAI,E,iBAI7Ex0E,EAAAw0E,GAEO,OAAO,IAAApC,GAA+BtwE,KAAAuyE,MAAAr0E,EAAA8B,KAAAsyE,aAAA,EAAAI,E,wBAE7Bx0E,EAAGw0E,G,OAChB,IAAOpC,GAAkCtwE,KAAAuyE,MAAkBr0E,EAAE8B,KAAQsyE,aAAC,EAAAI,E,oBAIzEA,GACF,WAAApC,GAAAtwE,KAAAuyE,MAAA,KAAAvyE,KAAAsyE,aAAA,EAAAI,ECzID;;;;;;;;;;;;;;;;;SAwGQC,GAAWv5B,EAAaD,G,qCAIVC,EAAyBD,G,UAKAC,EAAeD,E;;;;;;;;;;;;;;;;aA9DrC63B,WAAW,IJsDlC,MAWE7iD,KAAAjwB,EAAOc,EAAU6xE,EAAIz3B,EAAAD,GACtB,OAAAn5C,IAED,CAgBAsxE,OAAWpzE,EAACc,EAAU0S,GACtB,WAAAk/D,GAAA1yE,EAAAc,EAAA,KAEF,C,mDAwBM,OAAK,C,CAWLiyE,iBAAiBzjD,GAGrB,OAAW,CACb,CC5HE0jD,iBAAO1jD,GAAE,OAA4B,C,UAA4B,WAClE,CAEe6jD,SAId,OAAO,I,mBAQPI,SACE,OAA8B,C,YG+EP,SAAAmB,G,MACN,iB,EAAS,UAAmBve,GAAaue,GACpD,UAAYA,C,KAIP,SAAAC,G,KACLC,aAAW,C,QACXD,EAAiB7+B,M,GACY,iBAAAA,GAAA,iBAAAA,GAAA,iBAAAA,GAAAmT,GAAAnT,EAAA,8C,SACE6+B,IAAAE,IAAAF,EAAAzsC,UAAA,gC,GAGnBysC,IAAAE,IAAAF,EAAAG,cAAA5sC,UAAA,qD;;;;;;;;;;;;;;;;;AA6BpB,IAAA6sC,GCwDAC,GACDC,G,MDpDEC,G,yDAaCpzE,KAAIqzE,OAAIA,EACRrzE,KAAIszE,cAAeA,E,KACjBC,UAAM,KACNngB,QAAqDvvD,IAAA7D,KAAAqzE,QAAA,OAAArzE,KAAAqzE,OAAA,4D,GAEtBrzE,KAAAszE,c,CAGjCE,qCAAAx/B,GACAi/B,GAA8Bj/B,C,CAIxBw/B,uCACN,OAAIP,E,CAEEH,a,OAKJ,C,sBAOE9yE,KAAAszE,a,CAQIG,eACJC,G,OACF,IAAIN,GAAiBpzE,KAAAqzE,OAAAK,E,CAMZC,kBAAcC,G,MAEjB,c,EAAyB5zE,KAC3BszE,cAIFF,GAAmCI,0BACjCxC,U,CAKE6C,SAAAv2E,G,UACuBA,GACvB0C,KAKA,c,GADmB1C,GAEnB0C,KAASszE,cAEZF,GACsBI,0BAAAxC,U,YAKzB,OAAO,C,CAEC8C,wBAAgBF,EAAsBG,G,YAK1CC,qBAAkBJ,EAChBK,G,MAEH,c,EAAAj0E,KAAAyzE,eAAAQ,GACDA,EAAO7tC,WACgB,cAApBwtC,EAAwC5zE,KAG3CozE,GAAYI,0BAAAxC,WAAAgD,qBAAAJ,EAAAK,GAAAR,eAAAzzE,KAAAszE,c,CAKjBY,YAAA52E,EAAA22E,GACF,MAAAE,EAAA5N,GAAAjpE,GC9SD,cAAA62E,EAAAF,EAoEAA,EAAA7tC,WAAA,cAAA+tC,EAAAn0E,MAEWozD,GAAS,cAAA+gB,GAAA,IAAA3N,GAAAlpE,GAAA,8CACL0C,KAAAg0E,qBAASG,EAAAf,GAAAI,0BAAAxC,WAAAkD,YAAAzN,GAAAnpE,GAAA22E,I,CAGX7tC,UACX,OAAa,C,CAEJguC,cACT,OAAgB,C,CAEFC,aAAwBtjE,EAAAyc,GACtC,OAAa,C,KA2Hd8mD,GAxHC,OAAQA,IAAAt0E,KAAAgzE,cAAA5sC,UAAA,CACN,SAAYpmC,KAAAq1B,WACb,YAAAr1B,KAAAgzE,cAAAh/B,OAGah0C,KAAAq1B,U,CAGFzS,OACV,GAAY,OAAZ5iB,KAAOuzE,UAAmB,CAC3B,IAAAgB,EAAA,GAEDv0E,KAAAszE,cAAAltC,YAAAmuC,GAAA,YAGAC,GAAcx0E,KAAAszE,cAAAt/B,OAAA,KACR,MAAK5e,SAAcp1B,K,4DAKrBA,KAAOuzE,UAAchhB,GAACgiB,E,CAIzB,OAAAv0E,KAAAuzE,SAED,CAQAl+C,WAKE,OAAAr1B,KAAAqzE,M,WAIExuD,GAEH,OAAAA,IAAAuuD,GAAAI,0BAAAxC,WAAA,EAEKnsD,aAAAuuD,GAAAI,2BAAA,GAELpgB,GAAAvuC,EAAAiuD,aAAA,qBAED9yE,KAAAy0E,mBAAA5vD,G,CAaE4vD,mBAAAC,GACA,MAAIC,SACKD,EAAKrB,OAEZuB,SAAO50E,KAAAqzE,OAEVwB,EAAAzB,GAAA0B,iBAAAnqD,QAAAgqD,GAEOI,EAAA3B,GAAA0B,iBAAAnqD,QAAAiqD,GAIR,OAHExhB,GAAsByhB,GAAA,wBAAAF,GACvBvhB,GAAA2hB,GAAA,wBAAAH,GAEDC,IAAAE,EAKC,WAAAH,EAED,EAMC50E,KAAAqzE,OAAAqB,EAAArB,QAAA,EAEOrzE,KAAAqzE,SAAAqB,EAAArB,OAAA,EACa,EAGT0B,EAAAF,C,aAIZ,OAAS70E,I,aAIL,Q,QAEF6kB,GACA,GAAIA,IAAU7kB,KAAK,OAAO,EACrB,GAAA6kB,EAASiuD,aAAQ,CAClB,MAAC4B,EAAgB7vD,EACjB,OAAC7kB,KAAAqzE,SAAqBqB,EAAArB,QAAcrzE,KAAAszE,cAAA0B,OAAAN,EAAApB,cACxC,CAAK,Q,KAMiBwB,iBAAU,C,mBAGnC,SAEK,U,SAuG4B,I,cAhDC9E,G,QAC/Bt1B,EAAAC,GACD,MAAMs6B,EAAAv6B,EAAA60B,KAAAyD,cACLkC,EAAUv6B,EAAA40B,KAAayD,cACvBmC,EAAUF,EAAeG,UAAMF,GAChC,WAAAC,EAAAthB,GAAAnZ,EAAAn4C,KAAAo4C,EAAAp4C,MACe4yE,CACjB,CAEeE,YAAA9F,GAKV,OAAoBA,EAAAyD,cAAA5sC,SACxB,C,oBACaqpC,EAAUC,GAGrB,OAAMD,EAAGuD,cAAAgC,OAAAtF,EAAAsD,c,kBAMP1D,GAAWQ,G,WAIf,OAAO,IAAAR,GlCsOT,akCtO+B,IAAA8D,GAAA,kBAAAD,IAC7B,CACDhD,SAAAC,EAAA7tE,GAEe,MAAAswE,EAAAK,GAEd9C,GAGA,OAAM,IAASd,GAAsB/sE,EAAA,IAAA6wE,GAAA,kBAAAP,GACrC,CAKIh0E,WACF,iB,GA6BIy2E,GAAsBj/D,KAAA3Z,IAAA;;;;;;;;;;;;;;;;SAC5B64E,GACD11D,YAAAtf,GAEe,IAAAi1E,EAMdx1E,KAAOs2B,OANOk/C,EAMGj1E,EAAA,EAFXuO,SAASuH,KAAG3Z,IAAA84E,GAAYF,GAAO,KAGtCt1E,KAAAy1E,SAAAz1E,KAAAs2B,MAAA,EAED,MAAAo/C,GAJqB/gB,EAIrB30D,KAAAs2B,MAJ2BxnB,SAAA9S,MAAA24D,EAAA,GAAAp3D,KAAA,SAAN,IAAAo3D,EAYnB30D,KAAQ21E,MAAuCp1E,EAAA,EAAAm1E,CAE/C,CAIAE,e,MAGWtkE,IAAYtR,KAAA21E,MAAW,GAAA31E,KAAAy1E,U,YAEvBA,WAEJnkE,C,WA0BmC,SAAGukE,EAAYlF,EAAOmF,EAAAC,G,EAE/D9rD,KAAA0mD,GAED,MAAAqF,EAAU,SAAAjqD,EAAAC,GACX,MAAAzrB,EAAAyrB,EAAAD,EAEK,IAAUkqD,EAGR/3E,EACF,GAAY,IAAZqC,EAAY,OAAW,KACqB,OAAAA,EAO5C,OALE01E,EAAYJ,EAAA9pD,GAIjB7tB,EAAA43E,IAAAG,KACc,IAACrF,GAAS1yE,EAAA+3E,EAAA1G,KAAAqB,GAAAyB,MAAA,WACqB,CAI7C,MAAA6D,EAAApnE,SAAAvO,EAAA,MAAAwrB,EACGqtB,EAAY48B,EAAWjqD,EAAAmqD,GACS/8B,EAAA68B,EAAeE,EAAO,EAAAlqD,GAGtD,OAFEiqD,EAAWJ,EAAWK,GACtBh4E,EAAA43E,EAAaA,EAAEG,KACb,IAAArF,GACM1yE,EAAA+3E,EAAA1G,KAAAqB,GAA0CyB,MAAAj5B,EAAAD,E,KAKnD,SAAsCg9B,GAC1C,IAAA5G,EAAA,K,OAEGx+D,EAAY8kE,EAAMt1E,OAGtB,MAAU61E,EAAC,SAAAC,EAAAxF,GACb,MAAA9kD,EAAAhb,EAAAslE,ECrbArqD,EAAAjb,EAgEEA,GAAAslE,EAeE,MAAQC,EAAAN,EAAAjqD,EAAA,EAAAC,GAVSiqD,EAATJ,EAAmB9pD,GACN7tB,EAAA43E,EAAbA,EAAAG,GAKCA,EACiBM,EAAA,IAAA3F,GAAmB1yE,EAAA+3E,EAAA1G,KAAAsB,EAAA,KAAAyF,GACrC,E,cA/BV/G,GAkCCA,EAAAn2B,KAAAo9B,EAzCWjH,EAA+BiH,IAE1CxwE,EAAAwwE,EAWMjH,EAAYiH,E,MAIf,IAAAn1E,EAAA,EAAAA,EAAA80E,EAAA7/C,QAAAj1B,EAAA,CAIA,MAAAo1E,EAAaN,EAAMP,eAEtBS,EAAAhgE,KAAAq+C,IAAA,EAAAyhB,EAAA7/C,OAAAj1B,EAAA,I,EAqBD+0E,EACqBC,EACnBzF,GAE2CyB,Q,cAMrC+D,EAAWC,EAAAzF,GAAmBE,KAEpC,CAEA,OAAM9qE,C,CAUE0wE,CAFA,IAAOnB,GAAOM,EAAAt1E,S,cAIHw1E,GAAApF,EAAA3qE,E;;;;;;;;;;;;;;;;OA8BnB2wE,G,SAI+B,G,qBAI1BC,EACHC,G,KAGED,SAAWA,E,KAEXC,UAASA,C,CAKLC,qB,UAIkBC,IAElBC,GAAA,uC,GAC+BL,IAAA,IAAAM,GAAA,C,YAEjCF,IAGJ,CACF,YAAgBC,K,OAMjBE,GAED,MAAAC,EAAAxL,GAAA3rE,KAAA42E,SAAAM,GASE,IAAAC,EAAA,MAAsB,IAAAz3E,MAAS,wBAAYw3E,GAE3C,OAAAC,aAAmBpG,GAAAoG,EAGZ,I,UAILC,G,OAIMjwB,GAEAnnD,KAAC62E,UAAcO,EAEnBv4E,W,UAMFu4E,EAAgBC,GAChBjkB,GAA8BgkB,IAAA/G,GAAA,uE,QACxB,G,OAEA,E,QAKFgH,EAAeC,YAAAhI,GAAAiI,M,UACXC,U,UAEAC,GAAML,EAAA/B,YAAAj5C,EAAAmzC,M,OACNnzC,G,cASGs7C,E,EAAAC,GAAA9B,EAAAuB,EAAAQ,c,WAELR,EAAcv4E,W,EAQdd,OAAS2+B,OAAI,CAAM,EAAE18B,KAAA62E,W,KACtBO,E,QACDr5E,OAAW2+B,OAAK,GAAA18B,KAAA42E,U,SACjBiB,GAAAH,EACD,IAAAT,GAAAa,EAAAC,E,CAKLC,aAAA/B,EAAAoB,GACF,MAAAS,EAAA1wB,GAAApnD,KAAA42E,UAAA,CAAAqB,EAAAJ,KC7PD,MAAA9mE,EAAA46D,GAAA3rE,KAAA62E,UAAAgB,GAyBU,GADVzkB,GAAAriD,EAAA,oCAAA8mE,GACUI,IAAkBlB,GAAwB,CAEhC,GAAAhmE,EAAAskE,YAAAY,EAAA1G,MAAA,CAEjB,MAAAsG,EAAA,GAE0BqC,EAAAb,EAAqBC,YAAAhI,GAAAiI,MACzC,IAASn7C,EAAQ87C,EAAAV,UACvB,KAAAp7C,GACFA,EAAA75B,OAAA0zE,EAAA1zE,MAAAszE,EAAAv0E,KAAA86B,GClCDA,EAAA87C,EAAAV,UAgCc,OADC3B,EAAAv0E,KAAA20E,GACQ0B,GAAA9B,EAAA9kE,EAAA6mE,aACnB,CACH,OAAAb,EA6BD,EAYM,MAAAoB,EAAAd,EAAmBn4D,IAAA+2D,EAAA1zE,MACrB,IAAAw5C,EAAwBk8B,EAEf,OADTE,IAAmBp8B,EAAiBA,EAAAjZ,OAAA,IAAAwsC,GAAA2G,EAAA1zE,KAAA41E,KAC3Bp8B,EAAmBu1B,OAAK2E,EACjCA,EAAA1G,KACK,KAEL,OAAK,IAAA0H,GAAgCa,EACnC93E,KAAA62E,U,CAMHuB,kBAAAnC,EAAAoB,GACF,MAAAS,EAAA1wB,GAAApnD,KAAA42E,UAAAqB,IAED,GAAAA,IAAAlB,GAUM,OAAAkB,EACF,CACA,MAAAE,EAA4Bd,EAAQn4D,IAAA+2D,EAAA1zE,MAC7B,OAAK41E,EAAAF,EAAAn1C,OAAA,IAAAwsC,GAAA2G,EAAA1zE,KAAA41E,IAERF,CACF,K,WAGOhB,GAAAa,EAAA93E,KAAA62E,U;;;;;;;;;;;;;;;;GA8Bb,IAAAwB,G,MAkBOC,GAeHz4D,YAAU04D,EAAMjF,EAAAkF,GACfx4E,KAAAu4E,YACLv4E,KAAAszE,gBChLAtzE,KAAAw4E,YA6BEx4E,KAAAuzE,UAAoB,KAGZvzE,KAAAszE,eAAgBmF,GAAkBz4E,KAAAszE,eAExCtzE,KAAMu4E,UAAKnyC,WAAQgtB,IAAWpzD,KAAAszE,eAAAtzE,KAAAszE,cAAAltC,UAAA,uC,CAG1B4qC,wB,OACCqH,QAAA,IAAAC,GAAA,IAAAvH,GAAA2H,IAAA,KAAAzB,GAAAH,S,CAIQhE,aACd,QACF,CC5CDE,cA0BA,OAAAhzE,KAAAszE,eAAA+E,EACA,CACM5E,eAAAC,GACA,OAAA1zE,KAAAu4E,UAAAnyC,UAENpmC,KACM,IAAAs4E,GAAsCt4E,KAAAu4E,UAAA7E,EAAA1zE,KAAAw4E,UAE/B,CAIC7E,kBAA2DC,GAFvE,GAAc,cAAAA,EAAgC,OAAA5zE,KAAAgzE,cAGvC,CAEL,MAAM2F,EACJ34E,KAAAu4E,UAAAr5D,IAAA00D,GAEF,cAAA+E,EAAAN,GAAwCM,CACzC,CAEO,CACQ9E,SAAKv2E,GACnB,MAAM62E,EAAA5N,GAAiCjpE,GACvC,OAAI,OAAA62E,EAAoBn0E,KAExBA,KAAA2zE,kBAAKQ,GAAQN,SAA2BpN,GAAInpE,G,CAExCs7E,SAAchF,G,OACW,O,KAAzB2E,UAAAr5D,IAAiB00D,E,CAElBI,qBAAAJ,EAAAK,G,GAEC7gB,GACsC6gB,EAAA,8C,8CAI1C,CAID,MAAAgC,EAAA,IAAA3G,GAAAsE,EAAAK,GACF,IAAAl4B,EAAA88B,ECrED5E,EAAA7tC,WAuBY2V,EAAa/7C,KAAAu4E,UAAAz1C,OAAA8wC,GACvBiF,EAAA74E,KAAAw4E,UAAAJ,kBAASnC,EAAAj2E,KAAAu4E,aAETx8B,EAAA/7C,KAAAu4E,UAAAjH,OAAAsC,EAAAK,GACA4E,EAAA74E,KAAAw4E,UAAAR,aAAA/B,EAAAj2E,KAAAu4E,YAuBc,MAAAO,EAAA/8B,EAAA3V,UAAsBiyC,GAAAr4E,KAAAszE,cAC7B,WAAAgF,GAAAv8B,EAAA+8B,EAAAD,EACL,C,CAEa3E,YAAA52E,EAAA22E,GACb,MAAME,EAAO5N,GAAAjpE,GACb,UAAA62E,EAAA,OAAAF,EACH,CAEe7gB,GAAwB,cAAAmT,GAAAjpE,IAAA,IAAAkpE,GAAAlpE,GAAA,8CAC/B,MAAAy7E,EAAA/4E,KAAA2zE,kBAAAQ,GAAAD,YAAAzN,GAAAnpE,GAAA22E,GACL,OAAUj0E,KAAKg0E,qBAAAG,EAAA4E,EACf,C,CAEa3yC,UACb,OAAApmC,KAAAu4E,UAAAnyC,SACH,CAEeguC,cAGd,OAAOp0E,KAAAu4E,UAAAjiD,O,CAEO0d,IAAIsgC,G,QAChBluC,UAAO,YACP,MAAM1nC,EAAM,GACZ,IAAAs6E,EAAA,EAAA3H,EAAA,EAAA4H,GAAA,E,GACJj5E,KAAAq0E,aAAA2C,IAAA,CAAA94E,EAAA61E,KC7EAr1E,EAAAR,GAAA61E,EAAA//B,IAAAsgC,GAqCE0E,IAIgCC,GAAMX,GAAAY,gBAAAxkE,KAAAxW,GAAAmzE,EAAAh7D,KAAAmD,IAAA63D,EAAA3d,OAAAx1D,IACE+6E,GAAZ,M,GAV5BA,GAAO5H,EAAA,EAAA2H,EAAA,CAYH,MAAAh4E,EAAA,GAEE,IAAC,MAAA9C,KAAAQ,EAAAsC,EAAA9C,GAAWQ,EAACR,GACf,OAAA8C,C,CAUA,OADKszE,IAASt0E,KAAagzE,cAAe5sC,YAAA1nC,EAAA,aAAAsB,KAAAgzE,cAAAh/B,OAC1Ct1C,C,CAMKkkB,O,GACa,OAAlB5iB,KAAAuzE,UAAuB,CACvB,IAAAgB,EAAW,GACZv0E,KAAAgzE,cAAA5sC,YAAAmuC,GAAA,YAAAC,GAAAx0E,KAAAgzE,cAAAh/B,OAAA,KACFh0C,KAAAq0E,aAAA2C,IAAA,CAAA94E,EAAA61E,KACF,MAAAoF,EAAApF,EAAAnxD,OCpED,KAAAu2D,IAAA5E,GAAA,IAAAr2E,EAAA,IAAAi7E,EAAA,IAyB2Bn5E,KAAAuzE,UAAiB,KAAAgB,EAAA,GAAAhiB,GAAAgiB,EAAS,C,sBAEjCT,wBAAiBF,EAAAG,EAAAhjE,GACjC,MAAIqoE,EAAAp5E,KAAAq5E,cAAAtoE,G,KAGF,CAEH,MAAAuoE,EAAAF,EAAA5G,kBAAA,IAAAlD,GAAAsE,EAAAG,IACF,OAAAuF,IAAA/2E,KAAA,IClCD,QAAAvC,KAAAu4E,UAAA/F,kBAAAoB,EA0BE,C,kBACSwD,GACA,MAAIgC,EAAJp5E,KAAUq5E,cAAAjC,GACV,GAAIgC,EAAA,C,QALbA,EAAAhI,SAMI,OAAAA,KAAA7uE,IAEJ,QAAkBvC,KAAAu4E,UAAiBnH,Q,eAQ/BgG,GAEH,MAAAhG,EAAApxE,KAAAu5E,kBAAAnC,GACF,OAAAhG,EAAA,IAAA9B,GAAA8B,EAAApxE,KAAAu4E,UAAAr5D,IAAAkyD,IC3CD,IAoCE,CAG4BoI,iBAAApC,G,2BALrBA,GAMH,GAAAgC,EAAA,CACJ,MAAA/H,EAAkB+H,EAAiB/H,SAC7B,OAAAA,KAAA9uE,I,CACF,OAAMvC,KAASu4E,UAAQlH,Q,cAGrB+F,G,QACSp3E,KAAAw5E,iB,UAETnI,EAAW,IAAA/B,GAAe+B,EAAQrxE,KAAAu4E,UAAAr5D,IAAAmyD,I,kBAK/BtgE,EAAAyc,G,MACL4rD,EAAAp5E,KAAAq5E,cAAAtoE,G,OAIAqoE,EAAWA,EAAAnI,kBAAAwI,GACZjsD,EAAAisD,EAAAl3E,KAAAk3E,EAAAlK,QAEKvvE,KAAAu4E,UAAAtH,iBAAAzjD,E,aAUP4pD,GACF,OAAAp3E,KAAA05E,gBAAAtC,EAAAvH,UAAAuH,ECzED,CA2BEsC,gBACUC,EACAvC,GADA,MAAKgC,EAAAp5E,KAALq5E,cAAWjC,GACX,GAAiBgC,EAAA,OAAAA,EAAAM,gBAAjBC,GAA0Bz7E,OACjB,CACf,MAAAga,EAAAlY,KAAAu4E,UAAAmB,gBAAAC,EAAAp3E,KAAA+sE,GAAAiI,MAEJ,IAAAn7C,EAAAlkB,EAAA0hE,OAIE,KAAY,MAALx9C,GAAKg7C,EAAkB5H,QAAApzC,EAAAu9C,GAAA,GAC/BzhE,EAAAs/D,UAEDp7C,EAAAlkB,EAAA0hE,OAKC,OAAA1hE,CAED,C,oBAKgBk/D,GACd,OAAOp3E,KAAK65E,uBAAmBzC,EAAU0C,UAAA1C,E,CAG3CyC,uBAA8BE,EAAA3C,GAC5B,MAAAgC,EACQp5E,KAAAq5E,cAAkBjC,GAE3B,GAAAgC,EAAA,OAAAA,EAAAS,uBAAAE,GAAA77E,GAEMA,IAEN,CACF,MAAAga,EAAAlY,KAAAu4E,UAAAsB,uBAAAE,EAAAx3E,KAAA+sE,GAAAiI,MCjED,IAAAn7C,EAAAlkB,EAAA0hE,OAmCE,KAAuC,MAApBx9C,GAAoBg7C,EAAA5H,QAAApzC,EAAA29C,GAAA,GAAd7hE,EAANs/D,UACZp7C,EAASlkB,EAAK0hE,OAEtB,OAAA1hE,CAED,CAeE,CACAk9D,UAAMvwD,GAEN,OAAQ7kB,KAAAomC,UAEJvhB,EAAOuhB,UAAiC,GAQzC,EAEHvhB,EAAAiuD,cAAAjuD,EAAAuhB,UACE,EAOFvhB,IAAAm1D,IACE,EAeF,CAQA,CASAC,UAAO7C,GACR,GAAAA,IAAA/G,IAAArwE,KAAAw4E,UAAA0B,SAAA9C,GAAA,OAAAp3E,KAED,CAWQ,MAAA64E,EAAkB74E,KAAQw4E,UAAO2B,SAAU/C,EAAgBp3E,KAASu4E,WAE1E,OAAe,IAACD,GACdt4E,KAAAu4E,UAAAv4E,KAAAszE,cAA6BuF,EAE/B,C,WAME9nE,G,OACEA,IAAIs/D,IACIrwE,KAAKw4E,UACT0B,SAAanpE,E,QAIlB8T,GACJ,GAAAA,IAAA7kB,KAAA,SAEQ,GAAA6kB,EAAAiuD,aAAA,SAKH,CAEG,MAAAsH,EAAAv1D,EACL,GAAO7kB,KAAAgzE,cAAqBgC,OAACoF,EAC3BpH,eAIK,IAAMhzE,KAACu4E,UAAAjiD,UAAA8jD,EAAA7B,UAAAjiD,QAAA,CACf,MAAA+jD,EAAAr6E,KAAAs3E,YAAAN,IACFsD,EAAAF,EAAA9C,YAAAN,IAEQ,IAAAuD,EAAAF,EAAA7C,UAKQgD,EAAcF,EAAS9C,UAGhC,KAAW+C,GAAIC,GAAA,CACP,GAAGD,EAAIh4E,OAAAi4E,EAAWj4E,OAACg4E,EAAahL,KAAYyF,OAAEwF,EAAAjL,MAAA,SACrDgL,EAAsBF,EAAQ7C,UACvCgD,EAAAF,EAAA9C,SC9KA,CAmCS,cAAA+C,GAAA,OAAAC,C,QAAE,CAAU,CDwHC,OAChB,C,EC1GAnB,cAAUjC,GAMd,OAAOA,IAAA/G,GAED,KAEPrwE,KAAAw4E,UAAAt5D,IAAAk4D,EAAAv4E,WAEK,E,GAMLq6E,gBAAA,iB,MCgBGc,GAAmC,IDdjC,cAAU1B,GAGdz4D,cAGFm7B,MAAA,IAAA+1B,GAAA2H,IAAAJ,GAAAtH,WAAAiG,GAAAH,QC5EA,CA8BA1B,UAAAvwD,GAKM,OAACA,IAAA7kB,KAAA,EAKE,CACP,CAEFg1E,OAAAnwD,GAaoB,OAAKA,IAAL7kB,I,eATlB,OAAOA,I,mBAEL4zE,G,OACE0E,GAAoBtH,U,WAGvB,QAUD,G,wBAsBmB1B,GAAc,C,WAAsB,IAAAA,GhD+atD,agD/asDgJ,GAAAtH,a,eAI5C1B,GhD+ab,agD/aa0K,O,GASC9J,aAAyBoI,GAAUtH,W,GAC/BwC,0BAAW8E,G,GAIV0B,G,Sd0JfhmC,GAEFm/B,GAA6Bn/B,C,Ec5JNgmC,I,SAgDdS,GAAAC,EAAA9H,EAAA,M,GACL,O,EAAW,OAAG0F,GAAatH,W,GAChB,iBAAX0J,GAAmB,cAAmBA,IAAI9H,EAAI8H,EAAA,c,GACN,OAAb9H,GAAmC,iBAAAA,GAAA,iBAAAA,GAAA,iBAAAA,GAAA,QAAAA,EAAA,uCAAAA,GACxD,iBAAN8H,GAAwB,WAAUA,GAAwB,OAAjBA,EAAO,YAAUA,IAAA,WAE3D,iBAAAA,GAAA,QAAAA,EAAA,CAGH,WAAAtH,GAFCsH,EAEDD,GAAA7H,G,iBAQa52E,MA+Cb,CAQE,IAAIuzE,EAAA+I,GAAYtH,WAcjB,O,GAZQ0J,GAAA,CAAAx8E,EAAAy8E,KACL,GAAMxzB,GAAoBuzB,EAAAx8E,IACM,MAA1BA,EAAKmsC,UAAQ,KAAkB,CAEjC,MAAA0pC,EAAY0G,GAAAE,IACJ5G,EAAUjB,cACNiB,EAAK3tC,YAAgBmpC,EAAOA,EAAAyE,qBAAA91E,EAAA61E,G,CAI5C,IAEHxE,EAAAkE,eAAAgH,GAAA7H,GAED,CAtEiB,C,QAEJ,G,IAEVgI,GAAM,EAoBR,G,GAnBiBF,GACuB,CAACx8E,EAACy6E,KACvC,GAAW,MAAPz6E,EAAAmsC,UAAO,MAET,MAAI0pC,EAAY0G,GAAA9B,GACZ5E,EAAS3tC,Y,EAGQw0C,IAAuB7G,EAAUf,cAAA5sC,UAElD2G,EAAKzrC,KAAK,IAAKguE,GACjBpxE,EAAO61E,I,KAQd,IAAAhnC,EAAAxsC,OAAA,OAAA+3E,GAAAtH,WAED,MAAA6J,EAAAlD,GAAA5qC,EAAA4lC,IAAAsD,KAAA1zE,MAAAm2E,IAOE,GAAIkC,EAAA,C,MAEGE,EAAAnD,GAAA5qC,EAAAiqC,GAAAY,cACL,OAAM,IAAKU,GAAGuC,EAAaJ,GAAc7H,GAAA,IAAAqE,GAAA,CACzC,YAAc6D,GACd,C,YAGc9D,KAGjB,YAAAsB,GAAAuC,EAAAJ,GAAA7H,GAAAqE,GAAAH,QAED,C,EdkCc,SAAA9iC,GAKdk/B,GAAqCl/B,C,EcRpCymC;;;;;;;;;;;;;;;;;iBAoCUzK,G,YACL+K,G,wBAEIA,E,IAOU/T,GAAA+T,IAAA,cAAAxU,GAAAwU,GAAA,0D,cAGjBC,GACF,OAAAA,EAAAnH,SAAA7zE,KAAA+6E,WAED,C,YAISxL,GACR,OAAAA,EAAAsE,SAAA7zE,KAAA+6E,YAAA30C,SAEO,C,QAKFsU,EAAAC,G,MAEGsgC,EAAAj7E,KAAAk7E,aAAAxgC,EAAA60B,MACL4L,EAASn7E,KACPk7E,aAAEvgC,EAAA40B,MAEJ4F,EAAW8F,EAAG7F,UAAA+F,G,OACR,IAANhG,EAAuBthB,GAAoBnZ,EAAAn4C,KAAAo4C,EAAAp4C,MACvC4yE,C,UASL/E,EAAA7tE,GACF,MAAA64E,EAAAX,GAAArK,GAEDb,EAAA+I,GAAAtH,WAAAkD,YAAAl0E,KAAA+6E,WAAAK,GAOE,OAAK,IAAA9L,GAAS/sE,EAAYgtE,E,CAGpBuK,UAIN,MAAKvK,EAAQ+I,GAA8BtH,WAAakD,YAAAl0E,KAAA+6E,WAAAf,I,OACtD,IAAA1K,GhD+KN,agD/KsDC,E,YAKnD,OAAA7I,GAAA1mE,KAAA+6E,WAAA,GAAAx9E,KAAA,IAED;;;;;;;;;;;;;;;;SCzOD89E,GAAA,I,cAjE6CrL,G,QACtCt1B,EAAAC,G,MACFw6B,EAAMz6B,EAAA60B,KAAY6F,UAAYz6B,EAAA40B,M,OAClB,IAAZ4F,EAAqBthB,GAAMnZ,EAAAn4C,KAAAo4C,EAAAp4C,MACrB4yE,C,aAEN5F,G,OAGK,C,qBAECE,EAAeC,G,OACrBD,EAAWuF,OAAAtF,E,WAKD,OAAAJ,GAAAQ,GAKd,CACAgK,UAEG,OAAAxK,GAAAgM,GACH,CACDnL,SAAAC,EAAA7tE,GAED,MAAA64E,EAAAX,GAAArK,GAYM,WAAAd,GACF/sE,EAAO64E,E,CAORv8E,WACF,cAED,GAmEE08E,GAAgB;;;;;;;;;;;;;;;;mBAiDdC,EAAI,E,QAKA,E;;;;;;;;;;;;;;;;;ACWR,SAAAC,GAAAC,GAIE,OAKItmD,KAAA,Q,aAIQsmD,EAId,C,SAIEC,GAAqB/H,EAAA8H,GACtB,OAEDtmD,KAAA,cASMsmD,aAAaA,EACZ9H,UAAWA,E,yBAKdx+C,KAAI,gB,aACIsmD,E,UACF9H,E,aAGeA,EAAA8H,EAAgBE,G,yCAO/BF,E,oBAMDE,E;;;;;;;;;;;;;;;;;qBAgFCC,G,YAGFA,C,eAKK39E,EAAA49E,EAAAC,EAAAzxE,EAAA0xE,G,GACgBhB,EAAAiB,UAAAj8E,KAAA67E,QAAoC,qD,QAClDb,EAAArH,kBAAAz1E,G,OAEVg+E,EAAArI,SAAAkI,GAAA/G,OAAA8G,EAAAjI,SAAAkI,KAQMG,EAAA91C,YAAA01C,EAAA11C,UAQE40C,GAGM,M,MAMT50C,UACF40C,EAAMpC,SAAW16E,GAAG89E,EAAAG,iBAClBC,GAGAl+E,EAAAg+E,IACI9oB,GAAsC4nB,EAAAlI,aAAa,uEAClDoJ,EAAA91C,UAAA41C,EAAmBG,iBAAaR,GAAcz9E,EAAA49E,IACtDE,EAAAG,iBAAAE,GAAAn+E,EAAA49E,EAAAI,KAEJlB,EAAAlI,cAAAgJ,EAAA11C,UAAA40C,EAGHA,EAAAhH,qBAAA91E,EAAA49E,GAAA7B,UAAAj6E,KAAA67E,QASE,CACAS,eAAMV,EAAcW,EAAAP,G,OAIH,MAAbA,IACGJ,EAAY9I,c,2BAEHyJ,EAAA3D,SAAa16E,IAAA89E,EAAAG,iBAA0BC,GAAel+E,EAAA61E,GAAA,IAK/DwI,EAAAzJ,cAAAyJ,EAAAlI,aAAA2C,IAAA,CAAA94E,EAAA61E,KAEE,GAAA6H,EAAAhD,SAAiB16E,GAAA,CACf,MAAAg+E,EAAsBN,EAAEjI,kBAAAz1E,G,gFAU7Bq+E,EAAUtC,UAAGj6E,KAAA67E,O,gBASfD,EAAA9C,G,iCAEF8C,EAAAnI,eAAAqF,E,gBAMA,OAAO,C,kDASL94E,KAAA67E,M;;;;;;;;;;;;;;;;2BAuDA77E,KAAAw8E,eAAO,IAAAC,GAELzrC,EAAA66B,YAGL7rE,KAAA67E,OAAA7qC,EAAA66B,WACF7rE,KAAA08E,WAAAC,GAAAC,cAAA5rC,GAEDhxC,KAAA68E,SAAAF,GAAAG,YAAA9rC,EAUE,CACA+rC,eAII,OAAA/8E,KAAA08E,U,qBAIA18E,KAAM68E,Q,SAQPtN,GAGF,OAAAvvE,KAAA67E,OAAArM,QAAAxvE,KAAA+8E,eAAAxN,IAAA,GAAAvvE,KAAA67E,OAAArM,QAAAD,EAAAvvE,KAAAg9E,eAAA,CACF,CAED9I,YAAA8G,EAAA98E,EAAA49E,EAAAC,EAAAzxE,EAAA0xE,GAUC,OADQh8E,KAAAqiC,QAAA,IAAAitC,GAA6BpxE,EAAA49E,MAAUA,EAAexD,GAAMtH,YACpEhxE,KAAAw8E,eAAAtI,YAAA8G,EAAA98E,EAAA49E,EAAAC,EAAAzxE,EAAA0xE,EAED,CAaEM,eAAoBV,EAAAW,EAAAP,GACdO,EAAQzJ,eAIdyJ,EAAMjE,GAAgBtH,YAClB,IAAAiM,EAAaV,EACftC,UAASj6E,KAAG67E,Q,kCAKZ,MAAU3sE,EAAAlP,KAKV,OAHFu8E,EAAYlI,aAAU2C,IAAiB,CAAA94E,EAAA61E,KAClC7kE,EAAUmzB,QAAS,IAAKitC,GAAwBpxE,EAAA61E,MAAAkJ,IAAAjJ,qBAAA91E,EAAAo6E,GAAAtH,YAAA,IAE7ChxE,KAAMw8E,eAAMF,eAAaV,EAAAqB,EAAAjB,E,gBAIpBJ,EAAK9C,G,OAEd8C,C,gBAKF,OAAO,C,CAIVsB,mBAEe,OAAAl9E,KAAAw8E,cACd,C,WAEE,OAAAx8E,KAAW67E,M,sBAEX7qC,GACH,GAAAA,EAAAmsC,WAAA,CAwBD,MAAAC,EAAApsC,EAAAqsC,oBAcS,OAAArsC,EAAA66B,WAAAsE,SAAAn/B,EAAAssC,qBACLF,EAMH,QAAApsC,EAAA66B,WAAAgE,SAED,CASE94B,mBAAO/F,GAKR,GAAAA,EAAAusC,SAAA,CAED,MAAAC,EAAAxsC,EAAAysC,kBAsBS,OAAAzsC,EAAA66B,WAAAsE,SAAAn/B,EAAA0sC,mBAAAF,EAOR,QAAAxsC,EAAA66B,WAAAiO,SAED;;;;;;;;;;;;;;;;GC1sBA,MAAA6D,G,YACmB3sC,GA2ElBhxC,KAAA49E,cAAA,IAAAjB,GAAA3rC,GAzEChxC,KAAA67E,OAAiB7qC,EAAc66B,WAC7B7rE,KAAA69E,OAAa7sC,EAAO8sC,WACpB99E,KAAA+9E,UAAiB/sC,EAAOgtC,gB,aAOxBhD,EAAA98E,EAAA49E,EAAAC,EAAAzxE,EAAA0xE,GAKA,OADAh8E,KAAM49E,cAAiBv7C,QAAS,IAAIitC,GAAWpxE,EAAA49E,QAAAxD,GAAAtH,YAC3CgK,EAAArH,kBAAWz1E,GAAA82E,OAAA8G,GACbd,EAEEA,EAAI5G,cAA2Bp0E,KADjC69E,OAAA79E,KAEE49E,cAAOV,mBAAAhJ,YAAA8G,EAEP98E,EAAK49E,EAAaC,EAEhBzxE,EAAA0xE,GAMGh8E,KACDi+E,sBADCjD,EAAA98E,EAAA49E,EAAAxxE,EAEL0xE,E,gBAWKJ,EACDW,EAA6BP,G,WAgBjClJ,cAAMyJ,EAAAn2C,U,EAQJkyC,GAAiCtH,WAAAiJ,UAAAj6E,KAAA67E,aAExC,KAAA77E,KAAA69E,OAAAtB,EAAAnI,eAAAmI,EAAAN,UAAAj8E,KAAA67E,QAAA,CAKF,IAAA3jE,EAFG+kE,EAAa3E,GAA8BtH,WAAAiJ,UAAAj6E,KAAA67E,QCrG/C3jE,EAAAlY,KAAA+9E,SAAAxB,EAAA1C,uBAAA75E,KAAA49E,cAAAZ,aAAAh9E,KAAA67E,QAkDaU,EAAA7C,gBAAsB15E,KAAA49E,cAAAb,eAAA/8E,KAAA67E,QACjC,IAAAvlD,EAAiB,EACf,KAAOpe,EAAKgmE,WAAA5nD,EAAAt2B,KAAA69E,QAAA,CACb,MAAAzhD,EAAAlkB,EAAAs/D,UACD,IAAAxxC,EAOD,GAFeA,EAAAhmC,KAAA+9E,SAAA/9E,KAAA67E,OAAArM,QAAAxvE,KAAA49E,cAAAb,eAAA3gD,IAAA,EACbp8B,KAAA67E,OAAArM,QAAApzC,EAAAp8B,KAAA49E,cAAAZ,eAAA,GACFh3C,EAagC,MAXjCi3C,IAGajJ,qBAAA53C,EAAA75B,KAAA65B,EAAAmzC,MAEbj5C,GAMmB,CACP,KAAU,CAKd,IAAIqjD,EAEDI,EACLpJ,EAIAwN,EACD,GAXClB,EAAAV,EAAAtC,UAAAj6E,KAAA67E,QAEFoB,EAAaA,EAAKxJ,eAAqB6E,GAACtH,YASvChxE,KAAA+9E,SAAA,CACFI,EAAAlB,EAAAmB,mBAAAp+E,KAAA67E,QACDlC,EACc35E,KACZ49E,cACgBZ,aAEVjD,EAAA/5E,KAAA49E,cACCb,eAGD,MAAQsB,EAAAr+E,KAAA67E,OAAAjE,aAQVjH,EAAM,CAAAj2B,EAAMC,IAAM0jC,EACT1jC,EAACD,E,MAIfyjC,EAAAlB,EAAA3F,YAAAt3E,KAAA67E,QACFlC,EAAA35E,KAAA49E,cAAAb,eCjHDhD,EAAA/5E,KAAA49E,cAAAZ,aAyESrM,EAAA3wE,KAAA67E,OAAAjE,aAAW,IAAA0G,EAAA,EACnBC,GAAA,EAEe,KAAAJ,EAAAD,WAAA,CAId,MAAAM,EAAAL,EAAA3G,WAIA+G,GAAA5N,EAAAgJ,EAAA6E,IAAA,IAIDD,GAAA,GAEeA,GAAAD,EACdt+E,KAAA69E,QACAlN,EAAA6N,EAAuBzE,IACH,EAIIuE,IACRrB,EAAEA,EAAiBjJ,qBAAAwK,EAAAj8E,KAAA+1E,GAAAtH,WAC/B,CACF,CACA,OAAIhxE,KAAA49E,cAAiBV,mBACPZ,eAAGV,EAAAqB,EAAAjB,E,gBAUfJ,EAAA9C,G,+BAOA,C,oBAYF,OAAM94E,KAAK49E,cAAsBV,kB,mBAY/Bl9E,KAAA67E,M,uBAEAb,EACEyD,EAAMC,EAAap0E,EAAIq0E,G,IAW1BhO,EACF,GAAM3wE,KAAI+9E,SAAU,CACnB,MAAM5I,EAAen1E,KAAA67E,OAA0BjE,aAC3CjH,EAAC,CAAAj2B,EAAAC,IAAaw6B,EAChBx6B,EAAAD,E,MAUAi2B,EAAA3wE,KAAY67E,OAAGjE,aASlB,MAAMgH,EAAkB5D,EASvB5nB,GAAMwrB,EAAexK,gBAAAp0E,KAA6B69E,OAAS,IAE7D,MAAMgB,EAAsB,IAAAvP,GAAamP,EAAAC,GACzCI,EAAA9+E,KAAA+9E,SAAAa,EAAgCG,cAAc/+E,KAAA67E,QAAc+C,EAASI,aAAAh/E,KAAA67E,QAC9D71C,EAAAhmC,KAAA49E,cAAAv7C,QAAAw8C,GAAE,GAAAD,EAAWhG,SAAY6F,GAAA,C,MAAEQ,EAAOL,EAAAjL,kBAAA8K,GAAG,IAAAS,EAAA50E,EAAA60E,mBAAAn/E,KAAA67E,OAAAiD,EAAA9+E,KAAA+9E,UAC7C,WAAAmB,MAAA38E,OAAAk8E,GAAAG,EAAAhG,SAAAsG,EAAA38E,QAQK28E,EAAU50E,EAAA60E,mBAAsBn/E,KAAA67E,OAAAqD,EAAAl/E,KAAA+9E,UAClC,MAAMqB,EACM,MAAVF,EAAoB,EAAAvO,EAAUuO,EAAML,GAGpC,GAFsB74C,IAAA04C,EAAAt4C,WAAAg5C,GAA8B,EAYzD,OADE,MAAAT,KAAAxC,iBAAAE,GAAAoC,EAAAC,EAAAO,IACFL,EAAA5K,qBAAAyK,EAAAC,GAEQ,CAQwB,MAAzBC,GAAoCA,EAAAxC,iBAAAC,GAAAqC,EAAAQ,IACtC,MAAAI,EAAAT,EAAA5K,qBAAwCyK,EAAWnG,G,YAGhD,OADY,MAAA4G,GAAAl/E,KAAA49E,cAAAv7C,QAAA68C,IAEa,MAA1BP,GAA0BA,EAAAxC,iBAAAR,GAAAuD,EAAA38E,KAAA28E,EAAA3P,OAC1B8P,EAAArL,qBAAyBkL,EAAA38E,KAAA28E,EAAA3P,O,CAE3B,C,CAIA,OAAImP,EAAUt4C,U,gBAIQ,MAApBu4C,IACAA,EAAsBxC,iBACTC,GAAY0C,EACnBv8E,KACAu8E,EAAAvP,OACNoP,EAAMxC,iBAAwBR,GAAA8C,EAAAC,KASzBE,EAAA5K,qBAAAyK,EAAAC,GAAA1K,qBAAA8K,EAAAv8E,KAAA+1E,GAAAtH,aAKLgK,C;;;;;;;;;;;;;;;;0CAuEE,E,KAEHsE,WAAA,E,KACFC,eAAA,EACDv/E,KAAAw/E,gBAAO,EAMRx/E,KAAAy/E,SAAA,EACFz/E,KAAA0/E,aAAA,EAED1/E,KAAS2/E,eAAA,EAUP3/E,KAAM69E,OAAA,EACF79E,KAAA4/E,UAAe,GACnB5/E,KAAM6/E,iBAAe,KAGjB7/E,KAAA8/E,gBAAA,G,KAMOC,eAAa,K,sBAEtB//E,KAAA67E,OAAM7E,E,YASN,OAAMh3E,KAAAs/E,S,iBAQN,OAAMt/E,KAAAw/E,c,gBAGN,OAAIx/E,KAAQ2/E,a,CAsBd3B,iBAKA,MAAO,KAAAh+E,KAAA4/E,UAoBH5/E,KAAYs/E,UACG,MAAJt/E,KAAI4/E,SAKnB,CAYCtC,qBAEC,OADAlqB,GAA0CpzD,KAAAs/E,UAAA,oCACtCt/E,KAAQ6/E,gB,4BAcVzsB,GAAapzD,KAAAs/E,UAAA,oCACbt/E,KAAIu/E,cAAAv/E,KAAA8/E,gBrD6CP,Y,sBqDxCSL,O,kFAaFM,c,mBAsBP,OADE3sB,GAAApzD,KAAAy/E,QAAA,kCACFz/E,KAAA0/E,YAAA1/E,KAAAggF,crDSH,YqDPC,CAEDC,WAIE,OAAOjgF,KAASkgF,SACjB,C,8DAiBKpC,WAEF,OADF1qB,GAAgDpzD,KAAAkgF,UAAA,oCACxClgF,KAAA69E,M,YAcR,OAAA79E,KAAgB67E,M,gBAab,QAAA77E,KAAAs/E,WAAAt/E,KAAAy/E,SAAAz/E,KAAAkgF,UAEH,CACDjV,YAED,OAASjrE,KAAAkrE,gBAAAlrE,KAAA67E,SAAuB7E,EAK9B,C,OAEG,MAAA7oD,EAAA,IAAAgyD,GA6BC,OA5BJhyD,EAAO+xD,UAAKlgF,KAAAkgF,UACb/xD,EAAA0vD,OAAA79E,KAAA69E,OAED1vD,EAASmxD,UAAAt/E,KAAAs/E,U,4EAaLnxD,EAAA2xD,gBAAsB9/E,KAAA8/E,gB,8KAYpB3xD,CACJ,E,SAqQEiyD,GAEEjoC,G,MACFkoC,EAAO,G,GAMRloC,EAAA8yB,YAAA,OAAAoV,EACH,IAAA59C,E,OC/2BA0V,EAAA0jC,SAAA7E,GAAAv0C,EAAA,YAgEE0V,EAA0C0jC,SAAAR,GAA2B54C,EAAA,SAA3C0V,EAAN0jC,SAAoBxL,GAAA5tC,EAAA,QACtC2wB,GAAwCjb,EAAA0jC,kBAAAyE,GAAA,4BAExC79C,EAAM0V,EAAc0jC,OAAIh9E,Y,EAGN,QAAAk0D,GAAyBtwB,GAE3C0V,EAAMmnC,YACNe,EAA0B,QAAAttB,GAA4B5a,EAAA0nC,kB,yDAQtD1nC,EAAMsnC,UAKNY,EAAuB,MAAIttB,GAEN5a,EAAA4nC,gBAGrB5nC,EAAMunC,cAAoBW,EAAA,OACxB,IAASttB,GAEU5a,EACnB6nC,iBAGF7nC,EAAK+nC,YACN/nC,EAAA6lC,iBAAAqC,EAAA,aAAAloC,EAAA0lC,OAEQwC,EAAA,YAAAloC,EAAA0lC,QAERwC,C,CAGG,SAAUE,GAA6BpoC,GAC3C,MAAAz5C,EAAY,G,GACby5C,EAAAmnC,YAEK5gF,EAAU,GAAAy5C,EAA8B0nC,iBACrC1nC,EAAAonC,gBAAA7gF,EAAmC,GAAAy5C,EAAY2nC,kBAGxC3nC,EAAAsnC,UAId/gF,EAAc,GAAAy5C,EAAA4nC,eACV5nC,EAAOunC,cAAAhhF,EAAA,GAAAy5C,EAAA6nC,gB,aAGTthF,EACa,EAAAy5C,EAAa0lC,OAM3B,IAAA2C,EAAAroC,EAAAynC,UACW,KAALY,IACRA,EAAAroC,EAAA6lC,iBAAA,IAEe,KAEft/E,EAAA,GAAA8hF,CAEe,CAOhB,OAFCroC,EAAA0jC,SAAA7E,KAAAt4E,EAAA,EAAAy5C,EAAA0jC,OAAAh9E,YAEDH,C;;;;;;;;;;;;;;;;SAqCI+hF,WAAqCrY,GAOzCvoD,YAAA2hD,EAAA6G,EAAAG,EAAAC,GAUIztB,QAGAh7C,KAAAwhE,YAIAxhE,KAAAqoE,gBAIDroE,KAAAwoE,qBAEDxoE,KAAMyoE,uBAAoBA,EACXzoE,KAAA+4D,KAAAvF,GAEb,WAeKxzD,KAAA0gF,SAAA,EAMR,CAEetR,YAAA9J,GAId,MAAM,IAAA5lE,MAAY,0BAClB,CACAq3C,oBAAeuB,EAAUt4B,GACvB,YAAMnc,IAANmc,EAA4B,OAA0BA,GAEpDozC,GAA0C9a,EAAA0yB,aAAYC,YAAA,kDACrD3yB,EAAAkyB,MAAA3rE,WAEL,CAGO+rE,OAAAtyB,EAAAuyB,EAAA7qD,EAAAqlD,GAMR,MAAAD,EAAA9sB,EAAAkyB,MAAA3rE,WAEDmB,KAAS+4D,KAAA,qBAAAqM,EAAA,IAA6B9sB,EAC1ByyB,kBAML,MAAA4V,EAAiBF,GAAAG,aAAAtoC,EAAAt4B,GACb6gE,EAAA,GACT7gF,KAAO0gF,SAAAC,GAAAE,EAMT,MAAAC,EAAAV,GAAA9nC,EAAA0yB,cCnRAhrE,KAAA+gF,aAAA3b,EAAA,QAAA0b,GAAA,CAAAtiF,EAAA8S,KA8CA,IAAA2L,EAAA3L,EAuBE,GAbF,MAAA9S,IACEye,EAAA,KAODze,EAAA,MAEe,OAAAA,GAAAwB,KAAAqoE,cAAAjD,EAAgCnoD,GACrB,EAAA+C,GAEzB2rD,GAAA3rE,KAAA0gF,SAAAC,KAAAE,EAEE,CAEFG,MAGOzV,EAFR/sE,EAEQ,MAAAA,EAAA,oBACP,cAAAA,EAHD,KAIQwiF,SACR,IAGC,CACDp0B,SAAAtU,EAAAt4B,GAEK,MAAU2gE,EAAAF,GAEdG,aACAtoC,EAAAt4B,UAGMhgB,KAAU0gF,SAASC,EACzB,C,IACEroC,GACA,MAAAwoC,EAAAV,GAAqB9nC,EAAA0yB,cACrB5F,EAAO9sB,EAAAkyB,MAAA3rE,WAMF+pD,EAAA,IAAAjD,GAqCL,OApCA3lD,KAAI+gF,aAAqB3b,EAAA,QAAA0b,GAAA,CAAAtiF,EAAA8S,KAEzB,IAAK2L,EAAM3L,EAMG,MAAP9S,IACRye,EAAA,KACFze,EAAA,MAkBuB,OAAhBA,GACIwB,KAAGqoE,cAAgBjD,EAAanoD,GAAA,QAC/B2rC,EAAA7rD,QAAAkgB,I,0BAML2rC,EAAAhD,O,CAGOq7B,iBAAuBhuC,G,cASjCmyB,EAAA0b,EAAA,GAAA1wD,GAKD,OAJA0wD,EAAkB,gBAIX3mE,QAAI8mC,IAAA,CACZjhD,KAAAwoE,mBAAA9S,UAAA,GACM11D,KAAKyoE,uBAAA/S,UAAA,KACblf,MAAA,EAAAiiB,EAAAD,MAEDC,KAAAlC,cAAAuqB,EAAA,KAAAroB,EAAAlC,aAkBYiC,GAAGA,EAAAvlB,QAAA6tC,EAGX,GAAAtoB,EACWvlB,OAGR,MAAS+D,GAAOh3C,KAAIwhE,UAAM9K,OAAA,WAC7B,WAAoB12D,KAAMwhE,UAAAvxB,KAAgBm1B,EADxB,OACgCplE,KAAAwhE,UAAA7K,UAAAuqB,GAAAJ,G,yCAGpD,MAAAK,EAAA,IAAAC,eACOD,EAAAtzC,mBAAA,KACR,GAAAzd,GAAA,IAAA+wD,EAAAvnB,WAAA,CAED55D,KAAA+4D,KAAA,qBAAA/hB,EAAA,qBAAAmqC,EAAA5V,OAAA,YAAA4V,EAAAE,cAgBkB,IAAAl+E,EAAM,KACU,GAAGg+E,EAAA5V,QAAA,KAAA4V,EAAA5V,OAAA,KACP,IACJpoE,EAAAyjD,GAAyBu6B,EAAAE,aAI9B,CAHH,M,GAESnsB,GAA2B,qCAAWle,EAAA,KAAAmqC,EAAAE,aAC5C,CAGXjxD,EAAA,KAAAjtB,EACF,MAG6B,MAAbg+E,EAAA5V,QACN,MADmB4V,EAAY5V,QAC1BrW,GAAY,sCAAAle,EAAA,YAAAmqC,EAAA5V,QAE5Bn7C,EAAA+wD,EAAA5V,QAEEn7C,EAAA,I,GAGD+wD,EAAAvzB,KAAM,MAAA5W,GAAA,GACRmqC,EAAAzlB,MAAA,G;;;;;;;;;;;;;;;;GA0CJ,MAAI4lB,GACJzhE,cAGA7f,KAAOuhF,UAAYjJ,GAAAtH,UACpB,CAEewQ,QAAAlkF,GAId,OAAM0C,KAASuhF,UAAM1N,SAAav2E,EAClC,C,eAEOA,EAAAmkF,GACLzhF,KAAAuhF,UAAgBvhF,KAAMuhF,UAAArN,YAAiB52E,EAAAmkF,E;;;;;;;;;;;;;;;;GCnNzC,SAAAC,KAIA,OACD1iF,MAAA,KAED+tC,SAAS,IAAA7yB,I,UAgDPynE,GAAAC,EAAAtkF,EAAA2f,G,GAKS+pD,GAA+C1pE,GAC/CskF,EAAa5iF,MAA4Bie,EAMI2kE,EAAA70C,SAAAtwB,aACvD,UAAAmlE,EAAA5iF,MAAA4iF,EAAA5iF,MAAA4iF,EAAA5iF,MAAAk1E,YAAA52E,EAAA2f,OAED,C,cAaE2kE,EAAA70C,SAAAj5B,IAAA2qE,IACUmD,EAAkB70C,SAE1B73B,IAAAupE,EACOiD,MAYVC,GAPGC,EAAU70C,SAAA7tB,IAAAu/D,G,EAEVhY,GAAOnpE,GAKV2f,EAED,C,CAqIA,SAAA4kE,GAAAD,EAAAE,EAAArxE,G,qCA0C2CmxE,EAAAnxE,G,EAElCs8B,SAAmB9uC,SAAA,CAAA8jF,EAAA7jF,K,EACtBA,EAAA6jF,EAAA,G;;;;;;;;;;;;;;;;GAzBJC,CAAyBJ,GAAA,CAAA1jF,EAAA6jF,KAErBF,GAA2BE,EADzB,IAAczb,GAA2Bwb,EAAUjjF,WAAA,IAAAX,GAC1BuS,EAAA,G,iDAoE3BwxE,MAAK,I,eAGCjiF,KAAAkiF,YAAiBhjE,M,yCAEnBk1C,GAAuCp0D,KAAAiiF,OAAA,CAAAE,EAAAnjF,K,KACvC2vE,EAASwT,GAAAnjF,CAAgB,I,WAMvBojF,E;;;;;;;;;;;;;;;;wBAiEF9vE,EAAa+vE,GACnBriF,KAAAqiF,QAAeA,EAKfriF,KAAAsiF,eAAO,GACRtiF,K,yBAEC,MAAUU,EAfK,IAeL,IAAA2V,KAAAyD,SAEbq7C,GAAAn1D,KAAAuiF,aAAAjpD,KAAAt5B,MAAAqW,KAAAyC,MAAApY,GAED,CAWE6hF,eAEI,MAAAjd,EAA2BtlE,KAAKwiF,eAAAtjE,MAChCujE,EAAA,G,uBAGKzjF,EAAA,GAAemoD,GAA4CnnD,KAAAsiF,eAAAH,KAC5DM,EAAeN,GAAAnjF,EACrB0jF,GACa,EACb,IAGEA,GAAqB1iF,KAAAqiF,QAAejT,YAAUqT,GAEhDttB,GAAgBn1D,KAAWuiF,aAACjpD,KAAAt5B,MAAAqW,KAAAyC,MAAA,EAAAzC,KAAAyD,SAzCd,K;;;;;;;;;;;;;;;;OA2Ed6oE,GAIAC,GA4DY,SAAAC,GAEd/X,GAEA,MAAM,CACFgY,UAAA,E,wBAGJC,QAAS,E;;;;;;;;;;;;;;;;IApEPH,G,KAKWD,GAEX,KANSC,GAA0B,UAAE,GAAK,Y,GACjCA,GAAqB,MAAE,GAAQ,Q,GACzCA,GAAA,mCACDA,GAAMA,GAAc,qCAwHtB,MAAAI,GAiBInjE,YAA+BviB,EAAK2lF,EAAgBC,G,YAGpDljF,KAAIijF,aAAeA,EAInBjjF,KAAIkjF,OAAkBA,EACJljF,KAAAo1B,KAAAutD,GAA2BQ,eACvCnjF,KAAiBsK,OAxIvB,CACAw4E,UAAS,EACVM,YAAA,EACDtY,QAAa,KACdiY,QAAA,E,mBAsIgBnP,G,GACX5M,GAAyBhnE,KACrB1C,MAWL,UAAA0C,KAAAijF,aAAAjkF,MASF,OAPKo0D,GAEApzD,KAAAijF,aAAwBl2C,SAAW3G,UAAW,4DAKnDpmC,KACF,CAED,MAAAs2E,EAAAt2E,KAAAijF,aAAAI,QAAA,IAAA/c,GAGSsN,IAMD,OAAS,IAAGoP,GAAkB3c,KAAgBiQ,EAAAt2E,KAAAkjF,O,EA7BhD,OADA9vB,GAA0CmT,GAAyBvmE,KAAA1C,QAAAs2E,EAAA,iDAC7D,IAAGoP,GACPvc,GACEzmE,KAAA1C,MACA0C,KAAAijF,aACAjjF,KAAAkjF,OA4BR;;;;;;;;;;;;;;;;wBA2CG54E,EAAAhN,GACD0C,KAAAsK,OAAaA,E,KACXhN,KAAIA,EAEA0C,KAAOo1B,KAAAutD,GAAAW,e,mBAIJ1P,G;;;;;;;;;;;;;;;;GAkDX,MAAM2P,GACN1jE,YAAAvV,EAAAhN,EAAA09E,GAIAh7E,KAAOsK,SACLtK,KAAA1C,KAASA,EACT0C,KAAIg7E,KAAMA,EACVh7E,KAAAo1B,KAAAutD,GAAAa,SACH,CAEDC,kBAAA7P,GAQE,OAAM5M,GAAoChnE,KAAI1C,MAAW,IAAAimF,GAAAvjF,KAAAsK,OAAA+7D,KAAArmE,KAAAg7E,KAAArH,kBAAAC,IACzD,IAAA2P,GAAAvjF,KAAAsK,OAAOm8D,GAAWzmE,KAAA1C,MAAA0C,KAAAg7E,KAClB;;;;;;;;;;;;;;;;wBA4BG1wE,EAAAhN,EAAAyvC,GACA/sC,KAAAsK,SACJtK,KAAA1C,OAED0C,KAAA+sC,WAMyB/sC,KAAAo1B,KAAYutD,GAAmCe,K,sBAIpE,GAAO1c,GAAKhnE,KAAA1C,MAAA,CAEZ,MAAOg5E,EAAMt2E,KAAA+sC,SAAAs2C,QAAA,IAAA/c,GAAAsN,IAEhB,OAAA0C,EAAAlwC,UAEQ,KACUkwC,EAAWt3E,MACpB,IAAAukF,GAA0BvjF,KAAAsK,OAAA+7D,KAAAiQ,EAAAt3E,O,2BAK9B,OADAo0D,GAAiCmT,GAAmCvmE,KAAA1C,QAAAs2E,EAAA,kEACpE,IAAS+P,GAAqB3jF,KAAAsK,OAAiBm8D,GAAAzmE,KAAA1C,MAAA0C,KAAA+sC,S,YAIpD,mBAAA/sC,KAAA1C,KAAA,KAAA0C,KAAAsK,OAAAzL,WAAA,WAAAmB,KAAA+sC,SAAAluC,WAAA,GAED;;;;;;;;;;;;;;;;0BAyDY+kF,EAAkBC,G,WACjBC,E,uBACYF,E,KAChBC,W,6BASJ7jF,KAAA4jF,iB,CCr+BLG,aA0CE,OAAA/jF,KAAqB6jF,S,mBAAevmF,GAEpC,GAAA0pE,GAAmC1pE,GAAA,OAAA0C,KAAAgkF,uBAAAhkF,KAAA6jF,UACjC,MAAMpF,EAAQlY,GAAsCjpE,GACpD,OAAO0C,KAAIikF,mBAAAxF,E,CAGbwF,mBAAI/lF,GACF,OAAO8B,KAAKgkF,uBAAMhkF,KAAA6jF,WAAA7jF,KAAA8jF,MAAAlL,SAAA16E,E,CAErBsjF,UAEK,OAAAxhF,KAAA8jF,KAIJ;;;;;;;;;;;;;;;;SA+CEI,GAEFrkE,YAAAskE,GAEInkF,KAAAmkF,SAKJnkF,KAAU67E,OAAA77E,KAAAmkF,OAAAnZ,aAAAa,U,EA6EV,SAAAuY,GAAAC,EAAAC,EAAA7e,EAAA8e,EAAAliC,EAAAmiC,GAEF,MAASC,EAAAF,EAAA/iD,QAAAkjD,GACPA,EACAtvD,OAA0BqwC,IAG1Bgf,EAAex6D,MAAK,CAAAywB,EAAAC,I,SA2Cf0pC,EAAA3pC,EAAAC,G,GACY,MAAfD,EAAAk5B,WAAe,MAAAj5B,EAAAi5B,UAAA,MAAAnxB,GAAA,sC,MAChBkiC,EAAA,IAAArV,GAAA50B,EAAAk5B,UAAAl5B,EAAAghC,cACHkJ,EAAA,IAAAtV,GAAA30B,EAAAi5B,UAAAj5B,EAAA+gC,cCpPA,OAAA2I,EAAAxI,OAAArM,QAAAmV,EAAAC,E;;;;;;;;;;;;;;;;GDsMsBC,CAKTR,EAAA3pC,EAAAC,KACX8pC,EAAcxmF,SAAGymF,IAKb,MAAAI,E,SAiBGT,EAAAK,EAAAF,G,MACC,UAANE,EAAMtvD,MAAoC,kBAAAsvD,EAAAtvD,OAE1CsvD,EAAIK,SAAaP,EAAY1Q,wBAC3B4Q,EAAO9Q,UAAW8Q,EAAAhJ,aAAmB2I,EAAAxI,SAHG6I,C,CAlB1BM,CAAAX,EAAAK,EAAAF,GAEdniC,EAAKpkD,SAAcgnF,IACfA,EAA2BC,WAACR,EAAAtvD,OAAAkvD,EAAAhjF,KAAA2jF,EAAAh0C,YAAA6zC,EAAAT,EAAAF,QAAA,GAClC,G,UCpJEgB,GAAaX,EAAAY,G,MACb,CACFZ,WAAYA,EACZY,YAAOA,E,UAITC,GAAaC,EAAAC,EAAA14B,EAAAowB,GACd,OAAAkI,GAAA,IAAAK,GAAAD,EAAA14B,EAAAowB,GAAAqI,EAAAF,YAED,C,SAMEK,GAAuBH,EAAAI,EAAA74B,EAAAowB,GACxB,OAAAkI,GAAAG,EAAAd,WAAA,IAAAgB,GAAAE,EAAA74B,EAAAowB,GAED,C,SAMO0I,GAAmBL,GACxB,OAAAA,EAAAd,WAAAR,qBAAwBsB,EAAAd,WAAAhD,UAAA,I,CAG1B,SAAAoE,GAGMN,GACJ,OAAOA,EAAUF,YAAUpB,qBAAKsB,EAAAF,YAAA5D,UAAA,I;;;;;;;;;;;;;;;;GAoDlC,IAAAqE,GAoDC,MAAAC,GAEDjmE,YAAA7gB,EAAA+tC,EApCuB,MACpB84C,QAAA,IAAA9U,GAAAgV,KACMF,IAkCTG,IAIMhmF,KAAKhB,MAAMA,EAGhBgB,KAAA+sC,UAED,CAOEgK,kBAAgBr4C,GAChB,IAAMqjF,EAAA,IAAW+D,GAAG,MAIlB,OAHE1xB,GAA2B11D,GAAA,CAAAunF,EAAAvH,KAC7BqD,EAAWA,EAAK7sE,IAAC,IAAAoxD,GAAoB2f,GAAAvH,EAAA,IAErCqD,C,CAIA37C,UACD,cAAApmC,KAAAhB,OAAAgB,KAAA+sC,SAAA3G,SACH,CChKa8/C,iCAAAC,EAAwBh1E,GAC/B,G,MAAAnR,KAAAhB,O,qBAEF1B,KAAa+oE,KAGRrnE,MAAAgB,KAAAhB,OAKL,GAAAgoE,GACemf,GACd,OAAO,KAIN,CAEJ,MAAAhS,EAAA5N,GAAA4f,GAEFxN,EAAA34E,KAAA+sC,SAAA7tB,IAAAi1D,GASc,GAAc,OAAVwE,EAAU,CAI1B,MAAAyN,EAAqBC,sCAA+BF,GAAeh1E,GACnE,SAAAi1E,EAAA,CAWO,OAGL9oF,KAZJgpF,GAEG,IACIhgB,GAAM6N,GAAAiS,EACX9oF,MAYoB0B,MAAUonF,EAE1BpnF,M,YAmBK,CAAI,OAAK,I,CAkBlB,C,yBAIwBmnF,G,YAEbD,iCAAmCC,GAAO,Q,SAejDA,G,GACAnf,GAAAmf,GAAqB,OAAanmF,KAClC,CACC,MAAAm0E,EAAA5N,GAAA4f,GAEC7P,EAAet2E,KAAA+sC,SACjB7tB,IAAAi1D,GAOH,cAAAmC,IAAA+M,QAAA5c,GAAA0f,IACD,IAAAL,GAAA,KAEF,CAOE,C,IAkBGK,EAAAI,GACF,GAAAvf,GAAAmf,GAAA,WAAAL,GAAAS,EAAAvmF,KAAA+sC,U,eAKU+uC,G,oCAAK5mE,IAAAuxD,GAAa0f,GAAAI,GACjBxqC,EAAqB/7C,KAAA+sC,SAAAukC,OAAA6C,EAAA2H,GACxB,OAAO,IAAAgK,GAAwB9lF,KAAAhB,MAAA+8C,EACtC,C,CA4BFjZ,OAAM0jD,GAEF,GAAExf,GAAiCmf,GAMjC,OAAAnmF,KAAU+sC,SAAc3G,UAAA,IAAA0/C,GAAA,MAC9B,IAAAA,GAA2C,KAAA9lF,KAAA+sC,UACnC,CACN,MAAAonC,EAAA5N,GAAqBigB,GACjB7N,EAAA34E,KAAA+sC,SAAA7tB,IAAAi1D,GACF,GAAIwE,EAAC,CASN,MAAAmD,EAAAnD,EAAA71C,OAAA2jC,GAAA0f,IACD,IAAWpqC,EAGb,OAFGA,EAAA+/B,EAAA11C,UAAApmC,KAAA+sC,SAAAjK,OAAAqxC,GACHn0E,KAAA+sC,SAAAukC,OAA2BkV,KAC3B,OAAAxmF,KAAAhB,OAAA+8C,EAAA3V,UAAA,IAAA0/C,GAAA,MAEW,IAAAA,GAEX9lF,KAAiBhB,MACjB+8C,EAEI,CAAQ,OAAI/7C,IAGZ,C,CAqCJkf,IAAAinE,GAEF,GAAAnf,GAGamf,GAAA,OAAAnmF,KAAqBhB,MAM5B,CAIC,MAAAm1E,EAAA5N,GAA6B4f,GASlCxN,EAAA34E,KAAA+sC,SAAA7tB,IAAAi1D,GAEW,OAAAwE,IAAAz5D,IAAAunD,GAEX0f,I,IAME,CAGF,CAiBAM,QAAMN,EAAaO,GAEjB,GAAE1f,GAAmCmf,GACrC,OAAUO,EAWd,CCnZA,MAAAvS,EAAA5N,GAAA4f,GAoCarK,GADb97E,KAAA+sC,SAAA7tB,IAAAi1D,IAAA,IAAA2R,GAAA,OACgCW,QAAAhgB,GAAA0f,GAAAO,GAE9B,IAAA3qC,EAMF,OAFCA,EAAA+/B,EAAA11C,UAAApmC,KAAA+sC,SAAAjK,OAAAqxC,GAAAn0E,KAAA+sC,SAAAukC,OAAA6C,EAAA2H,GAED,IAAAgK,GAAA9lF,KAGgBhB,MAAA+8C,E,CAKd,C,KAKI3pB,G,OACApyB,KAAQ2mF,MAAGtgB,KAAKj0C,E,SAIaA,G,MAAGw0D,EAAA,GAQrC,OALG5mF,KAAA+sC,SAASkkC,kBAAkB,CAAAwN,EAAAnI,KAC5BsQ,EAAAnI,GAAAnI,EAAAqQ,MAAAL,GAAAO,EAAApI,GAAArsD,EAAA,IAIFA,EAAAy0D,EAAA7mF,KAAAhB,MAAA4nF,EAED,CAkBCE,WAAAxpF,EAAAqxC,GAED,OAAA3uC,KAAA+mF,YAAAzpF,EAAA+oE,KAAA13B,EAcE,CACAo4C,YAAAC,EAAAH,EAAAl4C,GAMD,MAAAr9B,IAAAtR,KAAAhB,OAAA2vC,EAAAk4C,EAAA7mF,KAAAhB,OAED,GAASsS,EAAA,OAAAA,EAMH,GAAO01D,GAAQggB,GAAA,YACL,CACN,MAAA7S,EAAY5N,GAA0BygB,GAC/B9H,EAAEl/E,KAAA+sC,SAAA7tB,IAAAi1D,GACb,OAAM+K,EAAYA,EAAe6H,YAAAtgB,GAAAugB,GAAAV,GAAAO,EAAA1S,GAAAxlC,GACnB,I,gBAMfrxC,EAAAqxC,GACF,OAAA3uC,KAAAinF,eAAA3pF,EAAA+oE,KAAA13B,EAED,CAIAs4C,eAAWD,EAAkBE,EAAAv4C,GAC9B,GAAAq4B,GAAAggB,GAAA,OAAAhnF,KAOD,CAIeA,KAAIhB,OAAG2vC,EAAAu4C,EAA4BlnF,KAAEhB,OAChD,MAAMm1E,EAAY5N,GAAoBygB,GAClC9H,EAAkBl/E,KAAE+sC,SAAA7tB,IAAAi1D,GACtB,OAAA+K,EAAsBA,EAAK+H,eAAAxgB,GAAAugB,GAAAV,GAAAY,EAAA/S,GAAAxlC,GACrB,IAAUm3C,GAA2B,K,ECMjDqB,QAAAx4C,GA6BE3uC,KAAAonF,SACS/gB,KAEA13B,E,UADgBu4C,EAAhBv4C,GACA3uC,KAAkB+sC,SAAAkkC,kBAAlB,CAAA2C,EAAA0C,KACiBA,EAAA8Q,SAAAd,GAAuBY,EAAAtT,GAAAjlC,EAAA,IArBnC3uC,KAAAhB,OAAA2vC,EAAAu4C,EAA8BlnF,KAAAhB,M,cAEhC2vC,GAIZ3uC,KAA4B+sC,SAAAkkC,kBAAA,CAAA2C,EAAkD0C,K;;;;;;;;;;;;;;;;wBAiExE+Q,G,gBACUA,C,gBAId,OAAK,IAAAC,GAA4B,IAAAxB,GAC1B,M,cAWgByB,EAAOjqF,EAAciyE,G,MAEtBjyE,GAAA,WAAAgqF,GAAA,IAAAxB,GAAAvW,I,OAGpBiY,EAAKD,EACLF,WAAKI,yBAELnqF,GAEF,GAAe,MAAXkqF,EAAgB,CACrB,MAAAE,EAAAF,EAAAlqF,KAEI,IAAA0B,EAAAwoF,EAAmBxoF,MAClB,MAACmnF,EAAQlf,GAAwBygB,EAAApqF,GAGlC,OAFF0B,IAAAk1E,YAAAiS,EAAA5W,GAEE,IAAA+X,GAA+CC,EAAGF,WAAAnyE,IAAAwyE,EAAA1oF,GACrD,CAAK,CACJ,MAAAqkF,EAAA,IAAAyC,GAAAvW,G,4CAIC,C,WAOCoY,GAAoBJ,EAASjqF,EAAAsqF,G,IAChCC,EAAAN,E,UAC8BK,GAAC,CAAAnJ,EAAAlP,K,EACvBuY,GAA2CD,EAAAvB,GAAAhpF,EAAAmhF,GAAAlP,EAAA,I,WAenDwY,GAAuBR,EAAAjqF,G,GACtB0pE,GAAA1pE,GAAA,OAAAgqF,GAAAU,QACH,CAEI,MAACC,EAAkBV,EAAIF,WAAAZ,QAASnpF,EAAA,IAAAwoF,GAAA,OAClC,WAAAwB,GAA4CW,E,WAc3CC,GAAAX,EAAAjqF,G,OACA,MAAA6qF,GAAAZ,EAAAjqF,E,UAiBD6qF,GAA+BZ,EAAAjqF,G,MAC9BkqF,EAAAD,EAAAF,WAAAI,yBAAAnqF,GACJ,aAAAkqF,EAAAD,EAAAF,WAAAnoE,IAAAsoE,EAAAlqF,MAAAu2E,SAAA5M,GAAAugB,EAAAlqF,SAED,I,UAkBQ8qF,GAASb,G,QACL,G,EAINA,EAASF,WAAAroF,M,OAMJ,M,EAELuwE,EAAMuD,cAAGvD,EAAA8E,aAAA2C,IACF,CAAApD,EACLG,KAIHhnC,EAAAzrC,KAAA,IAAAguE,GAAAsE,EAAAG,GAAA,IAEDwT,EAAMF,WAAkBt6C,SAAAkkC,kBAAA,CAAA2C,EAAA0C,KAIf,MAATA,EAASt3E,OAAA+tC,EAAAzrC,KAAA,IAAAguE,GAEPsE,EACA0C,EACDt3E,OAAC,IAEF+tC,C,UAEDs7C,GAAAd,EAAAjqF,GACD,GAAI0pE,GAAoB1pE,GAAA,OAAAiqF,EACpB,C,gBAGF,OAAe,IAAAD,GAAA,MAAfgB,EAAiD,IAAAxC,GAAAwC,GAEnDf,EAAyCF,WAAahE,QAAY/lF,GACnE,CAUD,CAOA,SAASirF,GAAuBhB,GAC9B,OAAAA,EAAAF,WAAKjhD,S,CAQL,SAAKoiD,GAAwCjB,EAAAhY,GAC7C,OAAMkZ,GAASpiB,KACKkhB,EAEXF,WACP9X,E,UAEHkZ,GAAAtC,EAAAuC,EAAAnZ,GAED,GAAS,MAATmZ,EAAS1pF,MACP,OAAOuwE,EAAK2E,YAAYiS,EAAGuC,EAAA1pF,OAC5B,CAED,IAAA2pF,EAAA,K,4CAqBiB,cAAHlK,GAMErrB,GACW,OAAdkjB,EAACt3E,MACN,6CACF2pF,EAAArS,EAAAt3E,OAaoBuwE,EAAAkZ,GAAAnC,GAAAH,EAAA1H,GAAAnI,EAAA/G,EAAA,IAQlBA,EAAMsE,SAAMsS,GAAA//C,WAAyB,OAAzBuiD,IAAyBpZ,IAAiB2E,YAAOoS,GAAAH,EAAA,aAAAwC,IAC7DpZ,C;;;;;;;;;;;;;;;;GAwDN,SAAMqZ,GAAUF,EAAAprF,GAMhB,OAAMurF,GAAUvrF,EAAAorF,E,wBAsGftP,EAAAsP,EAAAI,UAAA3xD,WAAAyX,GACFA,EAAAm6C,cAMC31B,GAAcgmB,GAAA,kDAEd,MAAM4P,EAAeN,EAAAI,UAAA1P,GACrBsP,EAAMI,UAAAhxE,OAAAshE,EAAwB,GAC9B,IAAA6P,EAAAD,EAAA9gB,QAIIghB,GAAiB,EAMjB7nF,EAAAqnF,EAAAI,UAAAvoF,OAAA,E,KAEF0oF,GAAA5nF,GAAA,IACE,MAAM8nF,EAAeT,EAAAI,UAAAznF,GAEzB8nF,EAAAjhB,UAIU7mE,GAAG+3E,GAAOgQ,GACdD,EAAkCH,EAAiB1rF,MAErD2rF,GAAqB,EACrBI,GAA0BL,EAAc1rF,KAAE6rF,EAAA7rF,QAE5C4rF,GAAA,IAGF7nF,GACD,CAEe,GAAA4nF,EAKT,IAAAC,EAKF,O,SA4D0BR,G,EACrBY,cAAAC,GACOb,EACLI,UAAAU,GACAnjB,M,EAEDyiB,UAAAvoF,OAAA,EAAAmoF,EAAAe,YAAAf,EAAAI,UAAAJ,EAAAI,UAAAvoF,OAAA,GAAAwoF,QAELL,EAAAe,aAAA,C,CArEFC,CAAAhB,IACC,EASH,GAAMM,EAAUhO,KAAA0N,EAAAY,cAAavB,GAAOW,EAAAY,cAAAN,EAAA1rF,UAC/B,CAOD82D,GAFE40B,EAAAj8C,UAEF6mC,IAEF8U,EAAAY,cAAAvB,GAAAW,EAAAY,cAAAhD,GAAA0C,EAAA1rF,KAAAs2E,GAAA,GAGE,CAOJ,OAAM,CACN,CAxCc,Q,UA+CVwV,GAA2BO,EAAgBrsF,G,GAE7CqsF,EAAA3O,KAAA,OAAAqO,GAAAM,EAAArsF,QAGE,IAAU,MAAAs2E,KAAA+V,EAAA58C,SAMV,GAAA48C,EAAA58C,SAAA3uC,eAAAw1E,IAAAyV,GAA0B/C,GAAAqD,EAAArsF,KAAAs2E,GAAAt2E,GAAA,SAE5B,Q,CA4BF,SAAIksF,GAAOxsB,GACX,OAAIA,EAAAkL,O,qCAuBJ,IAAI,IAAA7mE,EAAO,EAAAA,EAAAuoF,EAAArpF,SAAAc,EAAA,CACP,MAAA27D,EAAA4sB,EAAAvoF,GAgBA,GAAUmgC,EAAAw7B,GAAA,CACN,MAAC6sB,EAAA7sB,EACP1/D,KAEH,IAAA6oF,EAEe,GAAAnpB,EAAAge,KACLqO,GACFS,EAAsBD,IAE9B1D,EAAAlf,GAAA6iB,EAAAD,GAsCQtC,EAAAO,GAAyCP,EAAApB,EAAAnpB,EAAAge,OAChCqO,GAAAQ,EAAAC,KACP3D,EAAqBlf,GACQ4iB,EAASC,GAE/CvC,EAAUO,GAAcP,EAAAlhB,KAAArJ,EAAAge,KAAAnH,SAAAsS,SAGV,KAAAnpB,EAAAjwB,S,uDAMF,GACVs8C,GAAeS,EAAKD,GACR1D,EACRlf,GAAe6iB,EAAAD,GACVtC,EAAAI,GAAAJ,EAAApB,EAAAnpB,EAAAjwB,eACK,GAAIs8C,GAAiCQ,EAAAC,GAE3C,GADA3D,EAAelf,GAAA4iB,EAAAC,GACf9iB,GAC2Bmf,GAACoB,EAAAI,GAAAJ,EAAAlhB,KAAArJ,EAAAjwB,cAGrB,C,6BAGQ,GAAG4rC,EAAK,CAE5B,MAAAoR,EAAApR,EAAA9E,SAAApN,GAAA0f,IACAoB,EAAAO,GAAAP,EAAAlhB,KAAA0jB,EAEN,CAED,C,CAsBE,C,QAEExC,C,UAQAyC,GAAYtB,EAAAuB,EAAAC,EAAAC,EAAAC,G,QAed,CACA,MAAM9sD,EAAS+qD,GAAuCK,EAAAY,cAAAW,GAClD,IAAAG,GAAsB7B,GAAAjrD,GAAA,OAAA4sD,EAGxB,GAAAE,GAA4C,MAAhCF,GAAgChC,GAAA5qD,EAAA+oC,MAC5C,CACI,MAAA7kC,EAAY,SACdw7B,GAEG,OAAAA,EAAAkL,SAAAkiB,MAAAD,OAAAx/D,QAAAqyC,EAAA+rB,YAAAM,GAAArsB,EAAA1/D,KAAA2sF,IAAAZ,GAAAY,EAAAjtB,EAAA1/D,MACL,EAQM,OAASkrF,G,oBADG0B,GAAyB5R,GAAAtH,WAE3C,CAf4C,W,EAlB5C,MAAAsX,EAAaH,GAAAO,EAAAY,cAAAW,G,oBAEb,C,8BAEA,GAAA1B,GAAiB8B,GAAA,OAAAH,EACjB,GAAoB,MAApBA,GAAoBhC,GAAAmC,EAAAhkB,MAEpB,CAEA,OAAAmiB,GAAA6B,EAD6BH,GAAM5R,GAAAtH,W,CAFnC,WAMF,CACA,C,UA4SMsZ,GAAsDC,EAAAL,EAAAC,EAAAC,G,UAChCG,EAAA7B,UAAA6B,EAAAN,SAAAC,EAAAC,EAAAC,E,aAYGG,EAAAC,G,gBA5RT9B,EAAAuB,EAAAO,G,IACpBC,EACenS,GAEbtH,W,0CAIA0Z,EAAA5X,c,EAKKuB,aAAA2C,IAAA,CAAApD,EAAA8K,KACL+L,EAAiBA,EACfzW,qBAAAJ,EAAA8K,EAAoC,IAGvC+L,EAED,GAAMD,EAAe,CAOrB,MAAAltD,EAAY+qD,GAA6CK,EAAAY,cAAAW,GAyB3D,OAxBEO,EAAYnW,aAAA2C,IAAwC,CAAApD,EAAAG,KACpD,MAAAxE,EAAYiZ,GAAiBH,GAAyB/qD,EAAA,IAAAgpC,GAAAsN,IAAAG,GAEtD0W,EAAeA,EAAAzW,qBAAAJ,EACRrE,EAAA,IASR6Y,GAAA9qD,GAAAr/B,SAAAg4E,IACFwU,IAAAzW,qBAAAiC,EAAA1zE,KAAA0zE,EAAA1G,KAAA,IAWGkb,CAGH,CAwBG,OAJErC,GAHFC,GAAwCK,EAAUY,cAAEW,IAG9BhsF,SAAAg4E,IACtBwU,EAAcA,EAAAzW,qBAAyBiC,EAAO1zE,KAAM0zE,EAAA1G,KAAA,IAG9Ckb,C,EA8MAF,EAAoB7B,UACb6B,EACLN,SAAWO,E,aAuCgBD,EAAyBjtF,EAAAqtF,EAAAC,G,gBApNvClC,EAAAuB,EAAAhE,EAAA0E,EAAAC,GACrBx3B,GAAAu3B,GACYC,EACV,6D,MAEFttF,EAAIgpF,GAAgC2D,EAAAhE,G,GACpCiC,GAAiBQ,EAAAY,cAAAhsF,G,YAGjB,CAMF,MAAMutF,EAAaxC,GAAqBK,EAAAY,cAAAhsF,GACxC,OAAMirF,GAAkBsC,G,cAahBrC,GAAiBqC,EAAAD,EAAA/W,SAAAoS,G,6CA0MfsE,EAAAjtF,G,+BAlKwBorF,EAAAY,cAAAhsF,E,EAwK3BitF,EAAA7B,UAAApC,GAAAiE,EAAAN,SAAA3sF,G,UAKDwtF,GAAkBP,EAAAQ,EAAApR,EAAArjD,EAAAtc,EAAAjJ,G,gBAjKuB23E,EAAAuB,EAAAc,EAAApR,EAAArjD,EAAAtc,EAAAjJ,G,iBAEP23E,EAAAY,cAAAW,G,EAC/B9B,GAAA7qD,EAAA+oC,M,GACF,M,EAAA2kB,EAAA1C,M,IAED,MAAAyC,E,MAGJ,GAHIC,EAAAxC,GAAkClrD,EAAAytD,EAGtC,CAIJ,GAFCC,IAAA/Q,UAAAlpE,GAEDi6E,EAAA5kD,WAAA4kD,EAAAlY,a,SAAA,CAYE,MAAMr4B,EAAA,GAIIk2B,EAAG5/D,EAAA6mE,aAEPM,EAAQl+D,EAAAgxE,EAAAnR,uBAAAF,EAAgC5oE,GAAAi6E,EAAAtR,gBAAyBC,EAAA5oE,GACvE,IAAAqrB,EAAA87C,EAAAV,UAEA,KAAOp7C,GAAKqe,EAAAl6C,OAAA+1B,GACb,IAAAq6C,EAAAv0C,EAAAu9C,IAAAl/B,EAAAn5C,KAAA86B,GAEDA,EAAA87C,EAAAV,U,sDAmIOyT,GAAmBV,EAAA9L,EAAAyM,G,gBAtN8BxC,EAAAuB,EAAAxL,EAAAmM,G,QAC9CtE,GACE2D,EAAAxL,G,EAEQ0J,G,4CAWDlE,mBAAYxF,G,UACtB4J,GAAAK,EAAAY,cAAAhsF,G,kCAGD,W,EAoMqCitF,EAAA7B,UAAA6B,EAAAN,SAAAxL,EAAAyM,E,aAUxBX,EAAe3W,G,UAG7B0S,GAAAiE,EAAAN,SAAArW,GAAA2W,EAAA7B,U,UAEJG,GAAAvrF,EAAAorF,G,OAGDuB,SAAA3sF,E;;;;;;;;;;;;;;;;GAsCF,MAAA6tF,G,cAYEnrF,KAAMorF,UAAA,IAAkClxE,GACxC,C,oBAOA,MAAAkb,EAAiBsvD,EAAOtvD,KAEjBqpD,EAAAiG,EAAiB9Q,UACzBxgB,GAAA,gBAAAh+B,GAAA,kBAAAA,GAAA,kBAAAA,EAAA,6CAEQg+B,GAGP,cAHOqrB,EAGa,mDAEpB,MAAM4M,EAAYrrF,KAAAorF,UAAAlsE,IAAAu/D,GACd,GAAA4M,EACG,CAKP,MAAAC,EAAAD,EAAAj2D,KACE,mBAAAA,GAA0C,kBAA1Ck2D,EAA0DtrF,KAAAorF,UAAAl2E,IAAAupE,EAAApC,GAAAoC,EAAAiG,EAAAhJ,aAAA2P,EAAA3P,oBACzD,qBAAAtmD,GAAA,gBAAAk2D,EAAAtrF,KAAAorF,UAAA7hC,OAAAk1B,QACJ,qBAAArpD,GAAA,kBAAAk2D,EAAAtrF,KAAAorF,UAAAl2E,IAAAupE,EAAArC,GAAAqC,EAAA4M,EAAAzP,eAED,qBAAAxmD,GAAA,gBAAAk2D,EAGStrF,KAAAorF,UAAAl2E,IAAAupE,EAAA9C,GAEkB8C,EAAAiG,EAAAhJ,mBAEd,IAAG,kBAAAtmD,GAAmB,kBAAAk2D,EACtB,MAAA7oC,GAAA,mCAAAiiC,EAAA,mBAAA2G,GADsBrrF,KAAAorF,UAAAl2E,IAAAupE,EAAApC,GAAAoC,EAAAiG,EAAAhJ,aAAA2P,EAAAzP,SACtB,CACT,MAAM57E,KAAKorF,UAAAl2E,IAAAupE,EAAAiG,E,qBAIL1oF,MAAGqI,KAAArE,KAAAorF,UAAAv5E,S;;;;;;;;;;;;;;;;SAwDT05E,GAAkB,IAnBtB,MASEC,iBAAc/M,GACV,OAAO,I,8DAkBLgN,EAAQC,EAAKC,EAAA,M,+BAEJD,E,6BACcC,C,kBAEvBlN,G,wCAKAwF,mBAAoBxF,GAAC,OAAAlP,EAAAiS,UAAA7N,kBAAA8K,G,OAQrBmN,EAEW,MAFE5rF,KAAA2rF,wBAEA,IAAAnG,GAAwCxlF,KAAK2rF,yBACtD,MAAA3rF,KAAA0rF,WAAAtG,Y,OAEL6F,GAAAjrF,KAAAyrF,QAAAhN,EAAAmN,E,qBAID76E,EAAA4nE,EAAA3+D,G,4FAGMygC,EAAMqwC,GAAgB9qF,KAAAyrF,QAAAV,EAAApS,EAAA,EAAA3+D,EAAAjJ,G,yBAI9B0pC,EAAA,E;;;;;;;;;;;;;;;;GCv+CG,SAAMoxC,GACXC,EACkBC,EAAAC,EAAAC,EAAAC,GAElB,MAAMp7E,EAAY,IAAAq6E,GAGlB,IAAIgB,EAAUC,E,0BAUZ,MAAEC,EAAaL,EAQZK,EAAU/hF,OACbw4E,SAAAqJ,EAAAG,GAAqBR,EAAAC,EAAAM,EAAA/uF,KAAA+uF,EAAArR,KAAAiR,EAAAC,EAAAp7E,IAKhBsiD,GAAAi5B,EAAA/hF,OAAA84E,WAAA,mBAYPgJ,EAAAC,EAAA/hF,OAAAy4E,QAAAgJ,EAAA3G,YAAArB,eAAA/c,GAAAqlB,EAAA/uF,MAEW6uF,EAAAI,GAA4CT,EAAAC,EAAAM,EAAA/uF,KAAA+uF,EAAArR,KAAAiR,EAAAC,EAAAE,EAAAt7E,GAWvD,MAAI,GAAOk7E,EACH52D,OACNutD,GAEAe,MAAY,C,UAGVpmD,EAAShzB,OACXw4E,SAASqJ,E,SCyDYL,EAAuBxG,EAAYhoF,EAAAkvF,EAAAP,EAAA7G,EAAAt0E,GCnL5D,IAAA27E,EAAAnH,E,OAoGEkH,EAAArF,SAAA,CAAAhB,EAGApS,KACW,MAAK8V,EAAAvD,GAAMhpF,EAAA6oF,GACNuG,GAAMpH,EAAA/e,GAAAsjB,MAAA4C,EAAAH,GAAAR,EAAAW,EAAA5C,EAAA9V,EAAAkY,EAAA7G,EAAAt0E,GAAA,I,EAEGq2E,SAAA,CAAAhB,EAAdpS,KACP,MAAA8V,EAAAvD,GAAAhpF,EAAA6oF,GAEGuG,GAAApH,EAAA/e,GAAAsjB,MAAA4C,EAAAH,GAAAR,EAAAW,EAAA5C,EAAA9V,EAAAkY,EAAA7G,EAAAt0E,GAAA,I,EFaE67E,CAAIb,EAAAC,EAAAzuD,EAAAhgC,KAAAggC,EAAAyP,SAAAk/C,EAAAC,EAAAp7E,IAGFsiD,GAAsB91B,EAAAhzB,OAAA84E,WAAA,mBAE3BgJ,EAAmB9uD,EAAAhzB,OAAay4E,QAACgJ,EAAA3G,YAAArB,aACjCoI,EAAeS,GAAAd,EAAAC,EAAAzuD,EAAAhgC,KAAAggC,EAAAyP,SAAAk/C,EAAAC,EAAAE,EAAAt7E,G,SAEjBk7E,EAAU52D,OAAQutD,GAAwBQ,eAAA,C,MAC3C0J,EAAAb,EAGGG,E,kBEyJNL,EAAAxG,EAAAhoF,EAAA2uF,EAAA/B,EAAAp5E,G,IAOW+7C,E,GAIsB,MAAtBigC,GAAsBb,EAAA3uF,GAAA,OAAAgoF,EACtB,CACP,MAAAh7E,EAAA,IAAAyiF,GAAAd,EAAA3G,EAAA4E,GAEJtL,EAAA0G,EAAAd,WAAAhD,U,MAUE,GAAAxa,GAAgE1pE,IAAA,cAAAipE,GAAAjpE,GAAA,CACjE,IAAAoyE,EAED,GAAA4V,EAAAF,YAAApB,qBAAAtU,EAAA4a,GAAA2B,EAAArG,GAAAN,QAUS,CACR,MAAA0H,EAAA1H,EAAAF,YAAA5D,U,GAGGwL,aAAI1U,GAAA,iDACC5I,EAAWud,GAAchB,EAAAe,EACjC,CAeC3N,EAAkByM,EAAItqD,OAAA86C,eAAWsC,EAAAlP,EAAA5+D,EACjC,KAAM,CACN,MAAO2tE,EAAIlY,GACTjpE,GAIH,IAAAw+E,EAAAmP,GAAAgB,EAAAxN,EAAA6G,EAAAF,aACD,MAAAtJ,GAAAwJ,EAAAF,YAAAnB,mBAAAxF,KAAA3C,EAAA8C,EAAAjL,kBAAA8K,IAK4BY,EAAP,MAAXvD,EAAqBgQ,EAAAtqD,OAAA0yC,YAAA0K,EAAAH,EAAA3C,EAAArV,GAAAnpE,GAAAgN,EAAAwG,GAC9Bw0E,EAAAd,WAAAhD,UAAA5I,SAAA6F,GAEDqN,EAAAtqD,OAAA0yC,YAAA0K,EAAAH,EAAAnG,GAAAtH,WAAAvK,GAAAnpE,GAAAgN,EAAAwG,GAUS8tE,EACAS,EAAej5C,WAAMk/C,EAAAF,YAAApB,uBAG9Bn3B,EAAAy9B,GAAA2B,EAAArG,GAAAN,IAmBWz4B,EAAMimB,eACbuM,EAAayM,EAAAtqD,OAAA86C,eAAA+C,EAAAxyB,EAAA/7C,I,QAKf+7C,EAASy4B,EAAYF,YAACpB,sBAAwC,MAAR8I,GAAQb,EAAA5lB,MAC5Dgf,GACMC,EAAajG,EAAMxyB,EAAAi/B,EAAAtqD,OAAK0rD,e;;;;;;;;;;;;;;;;GF7QjBC,CAAqBrB,EAAAC,EAAAc,EAAAvvF,KAAA2uF,EAAAC,EAAAp7E,G,SEqDWg7E,EAAAxG,EAAA8H,EAAAnK,EAAAgJ,EAAAC,EAAAp7E,G,GAE3B,M,GADAm7E,EACVmB,GAAU,OAAiB9H,E,MAIpC8G,EAAA9G,EAAAF,YAAArB,a,EAGYuB,EAAKF,Y,GAEE,M,EAAPpmF,MAAc,CAI5B,GAAMgoE,GAA0BomB,IAAAhI,EAAApB,sBAAgBoB,EAAAiI,kBAAAD,GAAA,OAAAb,GAAAT,EAAAxG,EAAA8H,EAAAhI,EAAA5D,UAAA3N,SAAAuZ,GAAAnB,EAAAC,EAAAE,EAAAt7E,GAE5C,GAAAk2D,GAAsBomB,GAAA,CAgBvB,IAACZ,EAAqB,IAAA1G,GACd,MAeV,OARDV,EAAA5D,UAAAnN,aAAAhE,IAAA,CAAA9tE,EAAAgtE,KACFid,IAAAt3E,IAAA,IAAAoxD,GAAA/jE,GAAAgtE,EAAA,IAOUqd,GAGNd,EAAOxG,EAER8H,EAAMZ,EACJP,EAAAC,EAAAE,EAAAt7E,EAIL,QAAAw0E,CACD,EAMI,IAAAgI,EAAsB,IAAAxH,GAAW,MAQlC,OAPA7C,EAAAkE,SAAA,CAAAoG,EAAAvuF,KAEG,MAAMwuF,EAAAlH,GAAA8G,EAAAG,GACFnI,EAAaiI,kBAAAG,KAAeF,EAAQA,EAAAp4E,IAAAq4E,EAAAnI,EAAA5D,UAAA3N,SAAA2Z,IAAA,IAI3CZ,GAAAd,EAAAxG,EAAA8H,EAAAE,EAAArB,EAAAC,EAAAE,EAAAt7E,EAED,C,uCFhIE,IAAIk7E,EAAa52D,OACfutD,GAA0BW,gBAE5B,MAAI7gC,GAAuC,2BAAAupC,EAAA52D,MAFf+2D,E,SEkITL,EAAAxG,EAAAhoF,EAAA2uF,EAAAn7E,G,MAEnB28E,EAAWnI,EAAAF,YACZ+G,EAAA1G,GAAAH,EAAAmI,EAAAjM,UAAAiM,EAAAzJ,sBAAAhd,GAAA1pE,GAAAmwF,EAAA1J,cACF,OAAA2J,GAAA5B,EAAAK,EAAA7uF,EAAA2uF,EAAAV,GAAAz6E,EAED,CFxIgC68E,CAAA7B,EAAAC,EAAAC,EAAA1uF,KAAA2uF,EAAAn7E,EAEe,C,MAC3CyzE,EAAIzzE,EAAoB88E,a,gBAcL7B,EAAAI,EAAAr7E,G,QACRq7E,EAAW3H,W,KAChBR,qBAAiB,C,MACtB6J,EACgBtI,EAAQ/D,UAAA1O,cAAAyS,EAAA/D,UAAAp7C,UAGnB0nD,EAAkBnI,GAAwBoG,IAC5Cj7E,EAAAvQ,OAAgB,IAAWwrF,EAAOvH,WACpCR,sBAAqB6J,IAAAtI,EAAA/D,UAAAxM,OAAA8Y,KAAAvI,EAAA/D,UAAAxO,cAAAgC,OAAA8Y,EAAA9a,iBAAAliE,EAAAxP,KAAAm6E,GAAAkK,GAAAwG,I,GApBwBJ,EAAiBI,EAAC5H,GACjE,CAEEe,UAAU6G,EAEZ5H,QAAMA,E,kCAoBQe,EAAQd,W,GACgC,M,GAAdyH,EAAc8B,G,cAGpD1O,EAAYuM,E,GACb5kB,GAAA+mB,GAKF,GAHS36B,GACiBkyB,EAAAF,YAAApB,qBAAA,8DAE1BsB,EAAAF,YAAArB,aAAA,CAKC,MAAMqB,EAAAQ,GAAAN,GAEA0I,EAAAf,GAAAhB,EADG7G,aAAA9M,GAAA8M,EAAA9M,GAAAtH,YAETqO,EAAMyM,EAAAtqD,OAAA86C,eAAAgJ,EAAAd,WAAAhD,UAAAwM,EAAAl9E,E,YAENm9E,EAAS3D,GAAA2B,EAAArG,GAAAN,IACTjG,EAAAyM,EAAAtqD,OAAA86C,eAAAgJ,EAAAd,WAAAhD,UAAAyM,EAAAn9E,EACJ,KG9LA,CAqDE,MAAA2tE,EAAAlY,GAAAwnB,GAOkB,GAAT,cAAStP,EAAW,CACHrrB,GAAmB,IAAAoT,GAAAunB,GAAA,yDAC5B,MAAAG,EAAiBC,EAAA3M,UACjBoK,EAARtG,EAAwBF,YAAA5D,UAE1B,MAAA4M,EAAAC,GAAApC,EAAA8B,EAAAG,EAAAtC,GACyBvM,EAAA,MAAlB+O,EAAkBtC,EAAAtqD,OAAAiyC,eAAAya,EAAAE,GAIVD,EAAM3M,SAE3B,MACW,MAAA8M,EAAA7nB,GAAAsnB,GAEX,IAAAQ,EACD,GAAcJ,EAAAlK,mBAAAxF,GAAA,CACAmN,EAAAtG,EAAkBF,YAAe5D,UAC9C,MAAAgN,EAAAH,GAAApC,EAAA8B,EAAAI,EAAA3M,UAAAoK,GACO2C,EAAA,MAAAC,EAAAL,EAAA3M,UAAA7N,kBAAA8K,GAAAvK,YAAAoa,EAAAE,GAQPL,EAAA3M,UAAA7N,kBAAA8K,EACF,MAAA8P,EAAAtD,GAAAgB,EAAAxN,EAAA6G,EAAAF,aAEuB/F,EAAX,MAAAkP,EAAWzC,EAAAtqD,OAAA0yC,YAAAia,EAAA3M,UAAA/C,EAAA8P,EAAAD,EAAAhkF,EAAAwG,GAEIq9E,EAAjB3M,SACK,CACL,CACL,OAAA6D,GAAAC,EAAAjG,EAAA8O,EAAAnK,sBAAAhd,GAAA+mB,GAAAjC,EAAAtqD,OAAA0rD,eACJ,C,UAECX,GAAAT,EAAAC,EAAAgC,EAAAU,EAAAxC,EAAAC,EAAAE,EAAAt7E,GACD,MAAA49E,EAAY3C,EAAA3G,Y,IACVuJ,E,MACDC,EAAAxC,EAAAN,EAAAtqD,OAAAsqD,EAAAtqD,OAAA07C,mBACD,GAAAlW,GAAc+mB,GAAAY,EAAAC,EAAAtS,eAAAoS,EAAAlN,UAAAiN,EAAA,WACZ,GAAAG,EAAY1B,iBAAkBwB,EAAqB3K,aAAA,CAErD,MAAQ8K,EAAAH,EAAAlN,UAAAtN,YAAA6Z,EAAAU,GACNE,EAAiBC,EAAatS,eAAUoS,EAAAlN,UAAAqN,EAAA,K,KACzC,CACF,MAAApQ,EAAAlY,GAAAwnB,GC5GD,IAAAW,EAAArB,kBAAAU,IAAAvnB,GAAAunB,GAAA,EAgDE,OAAAhC,EACmB,MAAgBuC,EAAhB7nB,GAA8BsnB,GAE7C9Z,EAD6Bya,EAAdlN,UAA0C7N,kBAAA8K,GACzDvK,YAAAoa,EAAAG,GAIFE,EADA,cAAAlQ,EACiCmQ,EAAAnb,eAAAib,EAAAlN,UAAAvN,GAEX2a,EAAW1a,YAAAwa,EAAiBlN,UAAmB/C,EAAAxK,EAAAqa,EAAA/C,GAAA,K,CAGvE,MAAAY,EAAqB1G,GAAAsG,EAAA4C,EAAAD,EAAA1K,sBAAAhd,GAAA+mB,GAAAa,EAAA1B,gB,OAKnBQ,GAA6C5B,EAAAK,EAAA4B,EAAA9B,EAJ7C,IAAAc,GACEd,EAAKE,EACLD,GAE2Cp7E,E,UAG3Cw7E,GAAiBR,EAAAC,EAAAgC,EAAAU,EAAAxC,EAAAC,EAAAp7E,G,MACnBq9E,EAAcpC,EAAevH,W,IAC9B2H,EAAA9M,EAED,MAAA/0E,EAA8B,IAAAyiF,GAAAd,EAAAF,EAAAG,G,GAC5BllB,GAC4B+mB,GAM7B1O,EAAAyM,EAAAtqD,OAAA86C,eAAAyP,EAAAvH,WAAAhD,UAAAiN,EAAA39E,GACFq7E,EAAA9G,GAAA0G,EAAA1M,GAAA,EAAAyM,EAAAtqD,OAAA0rD,oBHjFD,C,WAwDsDa,GAAhC,iBAAKtP,EAAqBY,EAAMyM,EAAAtqD,OAAAiyC,eAAAsY,EAAAvH,WAAAhD,UAAAiN,GAAItC,EAAA9G,GAAA0G,EAAA1M,EAAA8O,EAAAnK,qBAAAmK,EAAApK,kBAExD,CAWE,MAAMuK,EAAe7nB,GAAAsnB,GACrB7R,EAAAiS,EAAA3M,UAAsB7N,kBAEf8K,GAGP,IAAO3C,EACR,GAAA9U,GAAAsnB,GAEDxS,EAAA2S,MAOE,CACM,MAAQ1a,EAAOzpE,EAAAkhF,iBAAA/M,GAUvB3C,EATE,MAAA/H,EAMwB,cAAR+a,GAAQR,IAAAva,EAAAF,SAAAjN,GAAA0nB,IAAAloD,UAG1B2tC,EAoBEA,EAAAG,YAAqBoa,EAAyBG,GAE7BnW,GAAItH,UACrB,CAMA,GAAOkL,EAASlH,OAAQ8G,GAiBxBqQ,EAAAJ,MAjBwB,CAG1BI,EAAA9G,GAAA0G,EAFCD,EAAAtqD,OAAA0yC,YAAAia,EAAA3M,UAAA/C,EAAA3C,EAAAwS,EAAAhkF,EAAAwG,GAEDq9E,EAAAnK,qBAAA8H,EAAAtqD,OAAA0rD,eAcE,CACA,C,QAQAf,C,UAQAO,GAAwBpH,EAAA7G,G,OACzB6G,EAAAd,WAAAP,mBAAAxF,E,UC1CGsQ,GAAGjD,EAAAvc,EAAAjyC,G,SACL6pD,SAAO,CAAIhB,EAAApS,KACZxE,IAAA2E,YAAAiS,EAAApS,EAAA,IAGCxE,C,UAEAqd,GAAoCd,EAAAxG,EAAAhoF,EAAAkvF,EAAAP,EAAA7G,EAAAgH,EAAAt7E,G,GAOpCw0E,EAAOF,YAAA5D,UAAAp7C,YAAAk/C,EAA0BF,YAAKpB,qBAAc,OAAAsB,E,IAcpD0J,EAHAvC,EAAMnH,EAIP0J,EAAAhoB,GAAA1pE,GAAAkvF,EAEK,IAAA1G,GAAA,MAAAW,QAAAnpF,EAAAkvF,G,MACJZ,EAAYtG,EAAWF,YAAA5D,U,SACxBz0C,SAAAkkC,kBAAA,CAAAwN,EAAAnI,KAED,GAAQsV,EAAAhT,SAAA6F,GAAA,CACN,MACD3C,EAAAiT,GAAAjD,EADmBxG,EAAaF,YAAA5D,UAAA7N,kBAAA8K,GAChCnI,GACFmW,EAAAF,GAAAT,EAAAW,EAAA,IAAAnmB,GAAAmY,GAAA3C,EAAAmQ,EAAA7G,EAAAgH,EAAAt7E,EAED,KAOCk+E,EAAAjiD,SAAAkkC,kBAAA,CAAAwN,EAAAwQ,KAED,MAAAC,GAAA5J,EAAAF,YAGAnB,mBAASxF,IAA0C,OAA1CwQ,EAAAjwF,MACH,IAAA4sF,EAAgBhT,SAAC6F,KAAAyQ,EAAA,CACjB,MACOpT,EACTiT,GAAwCjD,EAFvBxG,EAAAF,YAAA5D,UAAA7N,kBAAA8K,GAEuBwQ,GAEtCxC,EACFF,GAAoCT,EAAAW,EAAA,IAAAnmB,GAAAmY,GAAA3C,EAAAmQ,EAAA7G,EAAAgH,EAAAt7E,EAGlC,KAIF27E,C,CA+TF,MAAG0C,GACHtvE,YAAMskE,EAAYiL,GAClBpvF,KAAAmkF,SAEAnkF,KAAMqvF,oBAAqB,GAEzB,MAAIr+C,EAAMhxC,KAAUmkF,OAAAnZ,aAcfskB,EAAA,IAAA7S,GAAkBzrC,EAAK66B,YAC/BrqC,GXwFuB2W,EWxFvBnH,GX6FiBk6B,eAAa,IAAYuR,GAAUtkC,EAAA0zB,YACnD1zB,EAAc8nC,WAA0B,IAACtC,GAAuBxlC,GAC1D,IAAAwkC,GAA+BxkC,G,IAPfA,EWvFxBn4C,KAAAuvF,WFpeE,SACa/tD,GAEb,MAAK,CACHA,OAAIA,E,CEgeRguD,CAAAhuD,GAeE,MAASiuD,EAAAL,EAAAhK,YACLsK,EAAAN,EAAoB5K,WAKjBkB,EAAI4J,EAAAhT,eAAAhE,GAA4BtH,WAAAye,EAAwBjO,UAAO,MACvE+D,EAAA/jD,EAAA86C,eAAAhE,GAAAtH,WAAA0e,EAAAlO,UAAA,MAEDmN,EAAA,IAAAnJ,GAAAE,EAAA+J,EAAAzL,qBAAAsL,EAAApC,gBAQQ7N,EAAA,IAAAmG,GAAAD,EAAsBmK,EAAmB1L,qBAAAxiD,EAAA0rD,gBAC/CltF,KAAO0rF,WAAIvG,GAAiB9F,EAAWsP,GACxC3uF,KAAA2vF,gBAAA,IAAAzL,GAAAlkF,KAAAmkF,OAMD,CA2BE7rC,YACA,OAAAt4C,KAAAmkF,MACA,E,iBAUA,MAAMtwE,EAAA+xE,GACJ/5C,EAAA6/C,YAGF,OAAA73E,IAMEg4B,EAAOyM,MAAG0yB,aAAgBE,iBAASlE,GAAA1pE,KAAAuW,EAAA8/D,kBAAApN,GAAAjpE,IAAA8oC,WAAAvyB,EAAAggE,SAAAv2E,GAIrC,I,UAEDsyF,GAAA/jD,GAED,WAAAA,EAAAwjD,oBAAA9uF,M,CAqDE,SAAAsvF,GAEMhkD,EACJikD,EACAC,GAGF,MAAAC,EAAgB,GACjB,GAAAD,EAAA,CAED38B,GAAA,MAAA08B,EAAA,mDAgBK,MAAGxyF,EAAAuuC,EAAAyM,MAAAkyB,MACN3+B,EAAAwjD,oBAAApxF,SAAAgnF,IACA,MAAAgL,EAAAhL,EAAiBiL,kBAAeH,EAAiBzyF,GAC3C2yF,GAAeD,EAAA1uF,KAAA2uF,EAAA,GAQrB,CACD,GAAAH,EAAA,CAED,IAAAr5D,EAAA,GAoBE,QAAAp1B,EAAA,EAAAA,EAAAwqC,EAAAwjD,oBAAqB9uF,SAAAc,EAAiB,CACtC,MAAA8uF,EAAAtkD,EAAAwjD,oBAAwBhuF,GACxB,GAAA8uF,EAAA9tD,QAAAytD,IACW,GAAKA,EAAiBM,iBAC/B,CAIF35D,IAAAj2B,OAAmBqrC,EACbwjD,oBAEJ3xF,MACA2D,EAAA,IAGK,KACR,OAdkBo1B,EAAmBn1B,KAAA6uF,EAgBtC,CAoCEtkD,EAAAwjD,oBAAA54D,CACA,MAAMoV,EAAAwjD,oBAAe,GACrB,OAAAW,C,CAkBA,SAAQK,GAAAxkD,EAAAmgD,EAAAC,EAAuC/B,GAC/C8B,EAAM52D,OAAeutD,GAAOe,OAA0B,OAAVsI,EAAU1hF,OAAAwgE,UAChD1X,GAAuCwyB,GAAiB/5C,EAAA6/C,YAAA,6DACvDt4B,GAAmBuyB,GAAqC95C,EAAA6/C,YAAA,4D,MAM5DK,EAAAlgD,EAAA6/C,WACJp6E,EAAAu6E,GAAAhgD,EAAA0jD,WAAAxD,EAAAC,EAAAC,EAAA/B,G,IF/vBoC4B,EAAOxG,E,OAAPwG,EEgwBrCjgD,EAGa0jD,WFnwB+BjK,EEmwB/Bh0E,EAAAg0E,UFjwBVlyB,GAAAkyB,EAAAd,WAAAhD,UAAAvF,UAAA6P,EAAAtqD,OAAAqqC,YAAA,0BACDzY,GAAekyB,EAAAF,YAAA5D,UAAAvF,UAAA6P,EAAAtqD,OAAAqqC,YAAA,2BEiwBfzY,GAAoD9hD,EAAAg0E,UAAAF,YAAApB,uBAAA+H,EAAA3G,YAAApB,qBAAA,2D,EAAhC0H,WAAep6E,EAAAg0E,UAAqBgL,GAAAzkD,EAAAv6B,EAAAizE,QAAAjzE,EAAAg0E,UAAAd,WAAAhD,UAAA,K,aAiCxC31C,EAAA04C,EAAAC,EAAAsL,G,MAEfztC,EAAAytC,EAAA,CAEDA,GACEjkD,EAAMwjD,oB,OPvtBR,SAAqChL,EAAAE,EAAAC,EAAA+L,GACrC,MAAAjM,EAAA,G,KAiCA,OA3BAC,EAAKtmF,SAAYymF,I,IP8JM9Q,EO1JV,kBAAP8Q,EAAOtvD,MAAyBivD,EAAAxI,OAAA2U,oBAAA9L,EAAA9I,QAAA8I,EAAAhJ,eAAA+U,EAAAnvF,MP0JfsyE,EO1Je8Q,EAAA9Q,U,iCAAA8Q,EAAAhJ,a,cAAA,IAEtC0I,GACeC,EAAAC,EAAA,gBAAAC,EAAAgM,EAAA/L,G,4BAIfJ,GAA2BC,EAAAC,EAAA,cAAAmM,EAAAF,EAAA/L,GAC3BJ,GAAAC,EAAAC,EAAA,gBAAAC,EAAAgM,EAAA/L,GAEFJ,GAAAC,EAAAC,EAAA,QAAAC,EAAAgM,EAAA/L,GAaSF,C;;;;;;;;;;;;;;;;OOmtBNoM,GAinCAC,G,MA1lCAC,GAED/wE,cAuBE7f,KAAO6wF,MAAM,IAAA32E,G,WAyBb42E,GAA8BC,EAAA/E,EAAAC,EAAA+E,G,MAC9BlmB,EAAMkhB,EAA8B1hF,OAAAwgE,Q,GAClC,O,EAAA,C,MACAj/B,EAAAklD,EAAaF,MAAY3xE,IAAE4rD,GAE7B,OADE1X,GAAA,MAAAvnB,EAAA,gDACFwkD,GAAqCxkD,EAAamgD,EAAAC,EAAA+E,E,CAClD,CACA,IAAA1M,EAAW,GACZ,UAAA2M,KAAAF,EAAAF,MAAAh/E,SAAAyyE,IAAA9jF,OAAA6vF,GAAAY,EAAAjF,EAAAC,EAAA+E,IAED,OAAM1M,CAIN,C,CAoWI,SAAU4M,GACdH,EACAz4C,EAIA2zC,EAAA7G,EAA2E+L,GAG3E,MAAArmB,EAAOxyB,EAAAyyB,iBAORl/B,EAAAklD,EAAAF,MAAA3xE,IAAA4rD,GA2GK,IAAUj/B,EAAA,CAgBf,IAAA24C,EAAA8F,GAAA2B,EAAAkF,EAAA/L,EAAA,MA8GegM,GAAA,EAMP5M,EAAA4M,GAAA,EAORhM,aAAA9M,IAIDkM,EAAAyI,GAAAhB,EAAA7G,GA+BMgM,GAA2C,IAE3C5M,EAAclM,GACAtH,WACXogB,GACI,GAGZ,MAAA9L,EAAAH,GAAA,IAAAK,GAAAhB,EAAA4M,GAAA,OAAA5L,GAAAJ,EAAA+L,GAAA,IAgBD,WAAAhC,GAAA72C,EAAAgtC,EAmBC,CAED,OAAMz5C,C,UAmBEwlD,GAEAN,EAAAz4C,EAAAw3C,EAAA7D,EAAA7G,EAAA+L,G,MAIJtlD,EAAOqlD,GAAIH,EACHz4C,EACN2zC,EACA7G,EACA+L,GAgCJ,OA9BCJ,EAAAF,MAAA/8E,IAAAwkC,EAAAyyB,mBAAAgmB,EAAAF,MAAA37E,IAAAojC,EAAAyyB,iBAAAl/B,G,SA9iCaA,EAAMikD,GACrBjkD,EAAAwjD,oBAAA/tF,KAAAwuF,EAED,CA8iCAwB,CAAAzlD,EAAAikD,G,SAp3BiCjkD,EAAAo5C,G,MAC9BM,EAAA15C,EAAA6/C,WAAAlH,WAED+M,EAA4B,GAC1BhM,EAAW/D,UAAS1O,cACTyS,EAAA/D,UASZnN,aAAA2C,IAAA,CAAA94E,EAAA61E,KAEDwd,EAAejwF,KAAkCq6E,GAAAz9E,EAAA61E,GAAA,IAUjD,OAFCwR,EAAAvB,sBAAAuN,EAAAjwF,KAAAm6E,GAAA8J,EAAA/D,YAED8O,GAA0CzkD,EAAA0lD,EAAAhM,EAAA/D,UAAAyD,E,CAq3B1CuM,CAA4B3lD,EAAKikD,E,UAgB/B2B,GAAsCV,EAC9Bz4C,EAAAw3C,EAENC,G,MAEFjlB,EAAAxyB,EAAAyyB,iBACA2mB,EAAA,G,IACA1B,EAAU,G,MAMV2B,EAAWC,GAETb,G,GAIH,YAAAjmB,EACF,UAAA+mB,EAAAhmD,KAAAklD,EAAAF,MAAAr0E,UAEDwzE,IAAAxvF,OAAAqvF,GAAAhkD,EAAAikD,EAAAC,IAuBEH,GAAY/jD,KACLklD,EAAIF,MAAAtnC,OAAAsoC,GAGPhmD,EAAAyM,MAAA0yB,aAAAE,gBAAuBwmB,EAAQpwF,KAAAuqC,EAAAyM,YAIhB,CAIlB,MAAA24C,EAAAF,EAAAF,MAAA3xE,IAAA4rD,GAESmmB,IACRjB,IAAAxvF,OAAAqvF,GAAmEoB,EAAAnB,EAAAC,IAC7DH,GAAYqB,KAKlBF,EAAAF,MAAAtnC,OAAAuhB,GAEUmmB,EAAA34C,MAAa0yB,aACrBE,gBACEwmB,EAAApwF,KAAA2vF,EAAA34C,QAWP,CA6BC,OA3BFq5C,IAAAC,GAAAb,IA0BEW,EAAApwF,KAAA,IA34BI8xD,GAAoCs9B,GAAA,oCACtCA,IA04BuCp4C,EAAAw5C,MAAAx5C,EAAAkyB,QAClC,CACRknB,UAEKpN,OAAA0L,E,UAIe+B,GAAwChB,G,MACxCz/E,EAAI,G,IAGtB,MAAAu6B,KAAAklD,EAAAF,MAAAh/E,SAAAg6B,EAAAyM,MAAA0yB,aAAAE,gBAAA55D,EAAAhQ,KAAAuqC,GAED,OAAUv6B,C,UASJ0gF,GAEAjB,EAAAzzF,G,IAIJ8nF,EAAW,K,IAMZ,MAAAv5C,KAAAklD,EAAAF,MAAAh/E,SAAAuzE,KAAA6M,GAAApmD,EAAAvuC,GACF,OAAA8nF,CAED,C,SAsBE8M,GAA0BnB,EAAYz4C,GAEvC,GADYA,EAAA0yB,aACZE,eAAA,OAAAinB,GAAApB,GAEK,CAGJ,MAAAjmB,EAA2CxyB,EAAAyyB,iBACzC,OAAOgmB,EAACF,MAAA3xE,IAAA4rD,E,WAGVsnB,GAA0BrB,EAAAz4C,G,OAGpB,MAFJ45C,GACYnB,EACRz4C,E,UAULs5C,GAAAb,GACF,aAAAoB,GAAApB,EAED,C,SAmBMoB,GAA8CpB,GAGlD,UAAWllD,KAAAklD,EAAAF,MAAAh/E,SACZ,GAAAg6B,EAAAyM,MAAA0yB,aAAAE,eAAA,OAAAr/B,EAKC,W;;;;;;;;;;;;;;;;GA0EF,IAAAwmD,GAAA,E,MAoEIC,GASHzyE,YAAA0yE,GAEDvyF,KAAAuyF,kBAYMvyF,KAAAwyF,eAAA,IAAA1M,GAAoC,MAKtC9lF,KAAMyyF,kBHr4BJ,C,yBAEJ3J,UAAM,GACJW,aAAS,GGm4BTzpF,KAAA0yF,cAAA,IAAAx4E,IACAla,KAAA2yF,cAAW,IAAAz4E,G,EAyBb,SAAA04E,GAEgCC,EAAAv1F,EAAAm2B,EAAAs1D,EAAA7gB,G,gBH7jDRwgB,EAAAprF,EAClB09E,EAAK+N,EAAA7gB,GAIP9U,GAAoC21B,EAAKL,EAAiBe,YAAa,qDACvE5lF,IAAAqkE,OAAA,G,EAEF4gB,UAAAxnF,KAAA,CACFhE,KAAMA,EACN09E,O,UAEA9S,YAGIA,IAAUwgB,EAAAY,cACdxB,GAGyEY,EAAAY,cAAAhsF,EAAA09E,IAEzE0N,EAAAe,YAAAV,C,EGuiD2D8J,EAAAJ,kBAAAn1F,EAAAm2B,EAAAs1D,EAAA7gB,GACxCA,EAGlB4qB,GAAAD,EAAA,IAAAtP,GR1kDC,CACAT,UAAS,EACVM,YAAA,EACDtY,QAAa,KACdiY,QAAA,GQskDEzlF,EAAAm2B,IAH+B,E,CA4ElC,SAAAs/D,GAAAF,EAAA9J,EAAA7F,GAAA,GAOA,MAAAlmB,E,SHnmDI0rB,EAA2BK,G,IAC3B,IAAI1nF,EAAC,EAAAA,EAAQqnF,EACNI,UAAUvoF,OACfc,IAAA,C,MAEE2xF,EAAMtK,EAAUI,UAAeznF,G,GAC/B2xF,EAAKjK,UACHA,EAAA,OAAAiK,C,aG4lDVC,CAAgCJ,EAAAJ,kBAAA1J,GGlpEhC,GAlEAmK,GAAAL,EAAAJ,kBAAA1J,GA2EA,CAKA,IAAA9F,EAAA,IAAA6C,GAAA,MAoCM,OA3BiB,MAAhB9oB,EAASge,KAUViI,EACFA,EAAK/tE,IAAAmxD,MAAmC,GAE3CjS,GAAA4I,EAAAjwB,UAAAq4B,IAED6d,IAAA/tE,IAAA,IAAAoxD,GAAAlB,IAAA,MAYW0tB,GAAgBD,EAAA,IAAA7P,GAAAhmB,EAAA1/D,KAAA2lF,EAAAC,G,CAlD3B,Q,CAiEE,SAAIiQ,GAAoBN,EAAAv1F,EAAAm2B,GAExB,OAAIq/D,GAA+CD,EAAA,IAAAtP,GX6c7C,CAGFT,UAAM,EACNM,YAAM,EAINtY,QAAI,KAINiY,QAAA,GWzdiDzlF,EAAAm2B,G,CA6GnD,SAAS2/D,GAAAP,EAAAv6C,EAAAw3C,EAAAC,EAAAsD,GAAA,G,QAEL/6C,EAAAkyB,M,EAKKqoB,EAAmBL,eAAKtzE,IAAA5hB,G,MAC9B,G,GAKDg2F,IACuB,YADbh7C,EACRyyB,kBAAyBqnB,GAA0BkB,EAAAh7C,IAAA,CAErD,MAAAi7C,EAAyB9B,GAAC6B,EAAAh7C,EAAAw3C,EAAAC,GH8rBjB,IG7rBVuD,EH6rBUzC,MAAAh8E,OG7rBVg+E,EAAAL,eAAAK,EAAAL,eAAA1vD,OAAAxlC,IAED,MAAOo0F,EAAA6B,EAAA7B,Q,GACL1B,EAASuD,EAAsBjP,QAC7B+O,EAAA,CAQE,MAAKG,GAAkB,IACzB9B,EAAAv6D,WAAAmhB,GAEHA,EAAA0yB,aAAAE,iBAGMuoB,EAAAZ,EAAAL,eAAkB1L,WAAAxpF,GAAA,CAAA6oF,EAAAuN,IAAA9B,GAAA8B,KACrB,GAAAF,IAAAC,EAAA,CAKL,MAAApQ,EAAAwP,EAAAL,eAAAnP,QAAA/lF,GAOC,IAAA+lF,EAAAj9C,UAAA,CAGF,MAAAutD,E,mIAAAC,CAAAvQ,GAKE,QAAAhiF,EAAA,EAAAA,EAAAsyF,EAAoBpzF,SAAAc,EAAa,CACjC,MAAAwqC,EAAA8nD,EAAAtyF,GAAsBwyF,EAAahoD,EAAAyM,MACpCgB,EAAAw6C,GAAAjB,EAAAhnD,GAEDgnD,EAAAN,gBAAAwB,eAAAC,GAAAH,GAAAI,GAAApB,EAAAgB,GAAAv6C,EAAA8xB,OAAA9xB,EAAA+rB,WAgBS,CACL,CAEH,CAuBQ,IAAAouB,GAAgB/B,EACrBnxF,OAAA,IAAAwvF,EAOO,GAAAyD,EAAqB,CAM5B,MAAgBU,EAAI,KACXrB,EAAQN,gBAAe4B,cAAAH,GAAA17C,GAAA47C,EAC1B,MACJxC,EAAOzzF,SAAQm2F,IAGjB,MAAgBC,EAAIxB,EAAAF,cAAAzzE,IAAAo1E,GAA6BF,IAClDvB,EAAAN,gBAAA4B,cAAAH,GAAAI,GAAAC,EAAA,GAIF,E,uLAwBGE,CAAG1B,EAAAnB,EACL,CACA,OAAA1B,C,CAkBD,SAAAwE,GAAA3B,EAAAv1F,EAAA09E,EAAAh7D,GAkBe,MAAAy0E,EAAAC,GAEd7B,EAAoB7yE,GAEpB20E,YACF,MAAAC,EAAAC,GAAAJ,GCpbAK,EAAAF,EAAAt3F,KAAAwtE,EAAA8pB,EAAA9pB,QA8BEqb,EAAAlf,GAAc8tB,KAKR,OAAMC,GAAmDnC,EAAAiC,EAJ/D,IAAAvR,GAAAV,GACM/X,GAAAqb,EACFnL,G,OAIE,E,UCQcia,GAASpC,EAAAv6C,EAAAw3C,EAAAoF,GAAA,G,MAElB53F,EAAQg7C,EAAAkyB,M,IACf4a,EAAA,K,OAIkCoN,eAAe2C,cAAe73F,GAAE,CAAA83F,EAAAC,K,MAAGlP,EAAAlf,GAAAmuB,EAAA93F,GACxE8nF,KAAA4M,GAAAqD,EAAAlP,GACFmP,KAAA1D,GAAAyD,EAAA,IA0CC,IAqBElE,EArBFJ,EACA8B,EAA4BL,eAAAtzE,IAAA5hB,G,MAY5Bg4F,EAAqBA,GAAA1D,GAAyBb,GAC9C3L,EAAiBA,GAAI4M,GAA8BjB,EAAA1qB,QAXhD0qB,EAAG,IAAAH,GAENiC,EAAAL,eAAAK,EAAAL,eAAqBt9E,IAAA5X,EAAAyzF,IAkBjB,MADF3L,EACW+L,GAAc,M,IAER,E,EAKN7Y,GAAYtH,WACtB6hB,EAAAL,eAAAnP,QAAA/lF,GACDi4F,cAAA,CAAA3hB,EAAA4hB,K,mBAGItJ,IAAY9G,IAAApR,qBAAuBJ,EAAAsY,GAAA,GAWzC,CACF,MAAAuJ,EAAArD,GAAArB,EAAAz4C,GC/IA,IAAAm9C,IAAAn9C,EAAA0yB,aAAAE,eAAA,CA0BC,MAAAupB,EAAAH,GAAsDh8C,GAIhD8a,IAAiBy/B,EAAAF,cAAA7+E,IAAA2gF,GAAA,0CAAE,MAAGz0E,E,KAAc6yE,EAAUF,cAAEz9E,IAAAu/E,EAAAz0E,GACrD6yE,EAAAH,cAAAx9E,IAAA8K,EAAAy0E,EAEF,CAKE,IAAInQ,EAAC+M,GAAoBN,EAAAz4C,EAAAw3C,EAJ1BlH,GAA8CiK,EAE7CJ,kBAA4Bn1F,GAEH8nF,EAAA+L,G,IAAGsE,IAAMH,IAAAJ,EAAA,CAAI,MAAOrpD,EAACqmD,GAAAnB,EAAAz4C,GAC9CgsC,IAAA9jF,O;;;;;;;;;;;;;;;;GAAAk1F,CAAA7C,EAAAv6C,EAAAzM,GAEF,CACkC,OAAAy4C,CAElC,CAuBA,SAAAqR,GAAA9C,EAAAv1F,EAAA6sF,GAKE,MACFzB,EAAAmK,EAAAJ,kBCzEArN,EAAAyN,EAAAL,eAAA1L,WAAAxpF,GAAA,CAAAupF,EA4BAkK,K,0DD4CE,E,qtBN4gBwBllD,G,kHG7Z1B,SAAAgnD,EAAAv1F,EAAA0iB,GAaE,MAAIy0E,EAAWC,GAAgB7B,EAAA7yE,GAE/B,GAAIy0E,EAAS,CACX,MAAAG,EAAQC,GAAMJ,GACdK,EAAAF,EAAAt3F,KAAAwtE,EAAc8pB,EAAC9pB,QAChBqb,EAAAlf,GAAA6tB,EAAAx3F,GAGG,OACF03F,GACEnC,EAAAiC,EAHO,IAAQc,GAAyB/S,GAAA/X,GAAAqb,GAM5C,CACA,Q,eAzCF,SAAA0M,EAIAv1F,GACE,OAAMw1F,GAA0BD,EAAA,IAAA+C,GXoa1B,CAGF9S,UAAM,EACNM,YAAM,EAINtY,QAAI,KAINiY,QAAA,GWhb8BzlF,G,sBKvJ3B,SAA0B4F,EAAAo1C,GAE1B,IAAM6sB,EAAA,gBAEb,YAAAjiE,EAAAiiE,EAAA,0FACA,sBAAAjiE,EAAAiiE,EAAA,6DACa,gBAAAjiE,IAAAiiE,EAAe,8BAGrB,MAAM3mE,EAAA,IAAAkB,MAAAwD,EAAA,OAAAo1C,EAAqBkyB,MAAK3rE,WAAA,KAAAsmE,GAMhC,OAFA3mE,EAAM0E,OAAAu7B,cAEAjgC,CAEN,C,ukBRg9DH40D,GAAqCu9B,GAA2B,oCAChEA,I;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;u8BSz/DJ,IAAA/oB,EAAA+Q,I,GAAA/Q,E,GAkJqBJ,OAAYjnE,OAAA,IAAAqnE,EAAAH,aAAA,G,EAAaD,OAAMlmE,KAAAq3E,G,EAAIlR,aAAAC,GAAAiR,GAEtDhR,GAAoCC,G,mBAEnCA,GACF,MAAAliD,EAAAkiD,EAAAJ,OAAA7kD,MzDvJDilD,EAAAH,aAAAC,GAAAhiD,GA+BIkiD,EAAYJ,OAAQjnE,OAAW,IAAAqnE,EAAAH,aAAA,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uhBb8GA,iBAAVn5B,QAAUA,OAAA,WAAAA,OAAA,yBuEzGlClE,OAAA,+F,4uBpEkeMmtB,EAAAs+B,G,MACFl+B,E,uCAGCm+B,GAAMn+B,E,42B8DvdZ,SAAAk7B,EAAAv1F,EAAAkvF,EAAAxsE,GOnDA,MAAAy0E,EAAAC,GAAA7B,EAAA7yE,GAkBE,GAAAy0E,EAAO,CACP,MAAAG,EAAAC,GAAAJ,GAEFK,EAAAF,EAAAt3F,KAAAwtE,EAAA8pB,EAAA9pB,QAMSqb,EAAAlf,GAAiB6tB,EAAAx3F,GACzBy4F,EAAAjQ,GAAAkQ,WAAAxJ,GAUC,OAAOwI,GAAAnC,EAAAiC,EART,IAAAnR,GAAAd,GAAA/X,GAAAqb,EAAA4P,G,oIRgHkClD,EAAAv1F,EAAAkvF,G,MAC/BuJ,EACWjQ,GAA8BkQ,WAAAxJ,GAG1C,OAAMsG,GAEID,EAAA,IAAAlP,GX6bJ,CAGFb,UAAM,EACNM,YAAM,EAINtY,QAAI,KAINiY,QAAA,GWxcQzlF,EAAAy4F,G;;;;;;;;;;;;;;;;kTnEiRM,oBAANznD,QAAMA,OAAAsB,UAAAtB,OAAAsB,SAAAG,WAAA,IAAAzB,OAAAsB,SAAAG,SAAAplB,QAAA,WAAAuqC,GAAA,6F;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ikBeugBX53D,G,MACF,G,yHAGD8nE,GAAS,G,smGiDFqBpxB,GAC/Bof,IAAAs9B,GAAA,mDACFA,GAAA18C,CAED,C,cA2jC4BA,GACxBof,IAAqCu9B,GAAgB,mD,GAC9B38C,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ezEj8DhB,Q;;;;;;;;;;;;;;;;MqFhDX33C,EAAA,SAAAgD,U,oBhFwG2B,iBAAhB42F,EAAiB,C,EAAwB,CAAS1zF,KAAf0zF,E,SAKhCl4F,OAAA2+B,OAAc,C,KLCU,Y,gCKCF,G,GAGhCw5D,EAAO72F,EAAKkD,K,GACb,iBAAA2zF,MAAA,MAAApmC,GAAAl4C,OAAA,gBAED84C,QAAAl6C,OAAA0/E,K,qBAYEC,EACO,C,4CAOP,MAAMrmC,GAAkBl4C,OAAA,gBAAoB,CAG5C84C,QAAMwlC,G,OACwD5tC,EAC5D,IAAA8tC,GAAAF,G,mDAEFG,EAAK,IAAArmC,GAA8CpzD,EAAAyC,EAAAipD,G,GACrBpzC,IAAAghF,EAAAG,E,CgF3ItB,CAFWvzF,KAAKlF,MAAK,6ZAAjC,MAGM04F,G,wEAAO,G,kBCJb,MAOMC,GAAQ,CACZt5E,KAAM,CACJu5E,MAAO,GACPC,SAAU,GACVC,OAAQ,GACRC,OAAQ,GACRC,WAAY,GACZC,SAAU,IAEZv0F,UAAW,GACXw0F,WACE,OAAO92F,KAAKid,I,EAEd85E,SAASC,GACPh3F,KAAKid,KAAO+5E,EACZ,IAAK,MAAM5mE,KAAYpwB,KAAKsC,UAC1B8tB,IAEF2xB,aAAak1C,QAAQ,QAASn0F,KAAKC,UAAUi0F,IAC7Cv6F,QAAQC,IAAI,cAAesD,KAAKid,K,EAElCy+B,UAAUtrB,GACRpwB,KAAKsC,UAAUhB,KAAK8uB,E,EAEtB8mE,OACE,MAAMC,EAA0Br0F,KAAKlF,MAAMmkD,aAAaC,QAAQ,UAChEhiD,KAAK+2F,SAASI,GACdn3F,KAAKo3F,cAAa,QAAUD,EAAwBR,O,EAItDU,oBAAoBb,EAAeC,EAAkBrmE,GACnD,MAAMknE,EAAKt3F,KAAK82F,WAChBQ,EAAGb,SAAWA,EACda,EAAGd,MAAQA,EAEXe,MAAMC,+BAA0B,CAC9Br4D,OAAQ,OACR+/B,QAAS,CACP,eAAgB,oBAElBpF,KAAMh3D,KAAKC,UAAU,CAAEyzF,MAAOc,EAAGd,MAAOiB,OAAQH,EAAGb,aAElDjgD,MAAMrzC,GACEA,EAAIu3E,SAEZlkC,MAAMv5B,IACLq6E,EAAGZ,OAASz5E,EAAKiR,GACjBluB,KAAK+2F,SAASO,GACdlnE,GAAU,IAEdpwB,KAAK+2F,SAASO,E,EAGhBI,OAAOtnE,GACL,MAAMknE,EAAKt3F,KAAK82F,WACZQ,EAAGd,MACLe,MAAMC,6BAAwB,CAC5Br4D,OAAQ,OACR+/B,QAAS,CACP,eAAgB,oBAElBpF,KAAMh3D,KAAKC,UAAU,CAAEyzF,MAAOc,EAAGd,MAAOiB,OAAQH,EAAGb,aAElDjgD,MAAMrzC,GACEA,EAAIu3E,SAEZlkC,MAAMv5B,IACLq6E,EAAGZ,OAASz5E,EAAKiR,GACjBluB,KAAK+2F,SAASO,GACdlnE,GAAU,IAGdA,GAAS,E,EAIbunE,WAAWvnE,GACT,MAAMknE,EAAKt3F,KAAK82F,WACZQ,EAAGZ,OACLa,MAAMC,8BAAyB,CAC7Br4D,OAAQ,OACR+/B,QAAS,CACP,eAAgB,oBAElBpF,KAAMh3D,KAAKC,UAAU,CAAE2zF,OAAQY,EAAGZ,WAEjClgD,MAAMrzC,GACEA,EAAIu3E,SAEZlkC,MAAMv5B,IACLq6E,EAAGX,OAAS15E,EAAKiR,GACjBluB,KAAK+2F,SAASO,GACdlnE,GAAU,IAGd3zB,QAAQ+B,MAAM,iB,EAIlB44F,aAAahnE,EAAUwnE,GACrB,MAAMN,EAAKt3F,KAAK82F,WAChB,IAAIH,EACCW,EAAGX,OAGGW,EAAGX,SACZA,EAASW,EAAGX,SAHZA,EAASiB,EACTN,EAAGX,OAASiB,GAKd,MAAM3gD,EAAMugD,+BAA2Bb,EAAS,WAAaW,EAAGZ,OAEhEa,MAAMtgD,GACHT,MAAMrzC,GACEA,EAAIu3E,SAEZhkC,OAAOxC,GAAQ2jD,MAAM3jD,KACrBsC,MAAMv5B,IACLq6E,EAAGV,WAAa35E,EAAK66E,gBACrB93F,KAAK+2F,SAASO,GACdt3F,KAAK+3F,aACL3nE,GAAU,G,EAIhB2nE,WAAW3nE,GACT,MAAMknE,EAAKt3F,KAAK82F,WAEhBkB,GADoBC,GAAI3B,GAAM,UAAYgB,EAAGV,aACvBsB,IACpB,MAAMZ,EAAKt3F,KAAK82F,WACVqB,EAAqBD,EAASlkD,MAC9BokD,EAAeC,GAAAzjF,IAAMujF,GAC3Bb,EAAGT,SAAWuB,EACdp4F,KAAK+2F,SAASO,EAAG,G,EAKrBgB,YAAY97F,GACV,MAAM86F,EAAKt3F,KAAK82F,WAChBS,MAAMC,iCAA4B,CAChCr4D,OAAQ,OACR+/B,QAAS,CACP,eAAgB,oBAElBpF,KAAMh3D,KAAKC,UAAU,CACnBsB,KAAMizF,EAAGb,SACTj6F,QAASA,EACTm6F,OAAQW,EAAGV,c,GC3JnB,MAAM2B,WAAan8C,YACjBo8C,oBACEx4F,KAAK48C,SACL,MAAM67C,EAAOz4F,KAAKytC,cAAc,eAC1BirD,EAAW14F,KAAKytC,cAAc,aAC9BkrD,EAAe34F,KAAKytC,cAAc,aAClCjsC,EAAQxB,KAAKytC,cAAc,UAEjCirD,EAASnoD,iBAAiB,UAAWtB,IACC,aAAhCA,EAAO3J,OAAetmC,MACxB25F,EAAsBz8B,MAAMC,QAAU,WAC5BltB,EAAM3J,OAAetmC,MAC/B25F,EAAsBz8B,MAAMC,QAAU,O,IAG1Cs8B,EAAKloD,iBAAiB,UAAWhyC,IAC/BA,EAAE4xC,iBACF,MAAM7K,EAAS/mC,EAAE+mC,OACXszD,EAAYtzD,EAAOkxD,MAAMx3F,MACzB65F,EAAavzD,EAAOmyD,OAAOz4F,MAC3B85F,EAAexzD,EAAOyzD,SAAS/5F,MAC/Bg6F,EAAc1zD,EAAO2zD,QAAQj6F,MACnC,GAAqB,SAAjB85F,EACFxqD,OAAOupD,MAAM,yCACR,CAqBL,SAASqB,EAAUC,EAAK7iE,GACtB,IAAI8iE,EAAM74B,aAAY,KACpB44B,EAAI97B,UAAY,uCAGR/mC,oB,EAGN,I,cACE8iE,G,YACM,KACTr/C,GAAAs/C,GAAA,WACM,KACV,GACD,IACD,CAnCC9C,GAAMc,oBAAoBuB,EAAWC,GAAa3kD,IAC5CA,GAAKz3C,QAAQ+B,MAAM,iCACvB+3F,GAAMmB,QAAQxjD,IACRA,GACFz3C,QAAQ+B,MAAM,4BAEK,QAAjBs6F,EACFvC,GAAMoB,YAAW,KACfpB,GAAMa,cAAcljD,IACdA,GAAKz3C,QAAQ+B,MAAM,iCAAiC,GACxD,IAEsB,aAAjBs6F,GACTvC,GAAMa,cAAcljD,IACdA,GAAKz3C,QAAQ+B,MAAM,iCAAiC,GACvDw6F,EAAY,GAEjB,IAmBLE,EAAA13F,EAjBa,EAkBjB,I,UAwECxB,KAAKq9D,UAAU,g5E,01BClInB,MAAMi8B,WAAal9C,YACjBo8C,oBACEjC,GAAM76C,WAAU,KACd,MAAM69C,EAAYhD,GAAMO,WACxB92F,KAAK22F,OAAS4C,EAAU5C,YACG9yF,IAAvB01F,EAAU1C,WACZ72F,KAAK62F,SAAW0C,EAAU1C,SAC1B72F,KAAK48C,S,IAGT58C,KAAK48C,Q,CAEP48C,eACex5F,KAAKytC,cAAc,mBAC3B8C,iBAAiB,UAAWhyC,IAC/BA,EAAE4xC,iBACF,MAAM7K,EAAS/mC,EAAE+mC,OACjBixD,GAAM+B,YAAYhzD,EAAO,GAAGtmC,MAAM,G,CAItC63F,SAAsB,GACtBj6C,SACE,MAAM28C,EAAYhD,GAAMO,WAExB92F,KAAKq9D,UAAY,0OAiDMk8B,EAAqB5C,ia,k6EC/EjC,IAAI58C,GAAOvM,SAASisD,eAAe,QAC3C/jD,UAAU,CACf,CAAEp4C,KAAM,IAAKm6C,UAAW,aACxB,CAAEn6C,KAAM,QAASm6C,UAAW,eCEhBjK,SAASisD,eAAe","sources":["node_modules/@vaadin/router/src/utils.js","node_modules/dotenv/lib/main.js","node_modules/process/browser.js","../../../../../node_modules/path-browserify/index.js","../../../../../node_modules/process/browser.js","../../../../../node_modules/os-browserify/browser.js","node_modules/lodash/lodash.js","node_modules/@vaadin/router/src/triggers/click.js","node_modules/@vaadin/router/src/triggers/popstate.js","node_modules/@vaadin/router/node_modules/path-to-regexp/index.js","node_modules/@vaadin/router/src/resolver/matchPath.js","node_modules/@vaadin/router/src/resolver/matchRoute.js","node_modules/@vaadin/router/src/resolver/resolveRoute.js","node_modules/@vaadin/router/src/resolver/resolver.js","node_modules/@vaadin/router/src/resolver/generateUrls.js","node_modules/@vaadin/router/src/triggers/setNavigationTriggers.js","node_modules/@vaadin/router/src/transitions/animate.js","node_modules/@vaadin/router/src/router.js","node_modules/@vaadin/router/node_modules/@vaadin/vaadin-development-mode-detector/vaadin-development-mode-detector.js","node_modules/@vaadin/router/node_modules/@vaadin/vaadin-usage-statistics/vaadin-usage-statistics-collect.js","node_modules/@vaadin/router/src/router-meta.js","node_modules/@vaadin/router/src/router-config.js","node_modules/@firebase/util/src/crypt.ts","node_modules/@firebase/util/src/deepCopy.ts","node_modules/@firebase/util/src/deferred.ts","node_modules/@firebase/util/src/emulator.ts","node_modules/@firebase/util/src/environment.ts","node_modules/@firebase/util/src/errors.ts","node_modules/@firebase/util/src/json.ts","node_modules/@firebase/util/src/jwt.ts","node_modules/@firebase/util/src/query.ts","node_modules/@firebase/util/src/sha1.ts","node_modules/@firebase/util/src/subscribe.ts","node_modules/@firebase/util/src/validation.ts","node_modules/@firebase/util/src/utf8.ts","node_modules/@firebase/util/src/uuid.ts","node_modules/@firebase/component/src/component.ts","node_modules/@firebase/component/src/constants.ts","node_modules/@firebase/component/src/provider.ts","node_modules/@firebase/component/src/component_container.ts","node_modules/@firebase/logger/src/logger.ts","node_modules/idb/build/wrap-idb-value.js","node_modules/idb/build/index.js","node_modules/@firebase/app/src/platformLoggerService.ts","node_modules/@firebase/app/src/constants.ts","node_modules/@firebase/app/src/internal.ts","node_modules/@firebase/app/src/errors.ts","node_modules/@firebase/app/src/firebaseApp.ts","node_modules/@firebase/app/src/api.ts","node_modules/@firebase/app/src/indexeddb.ts","node_modules/@firebase/app/src/heartbeatService.ts","node_modules/@firebase/database/src/core/storage/DOMStorageWrapper.ts","node_modules/@firebase/database/src/core/storage/MemoryStorage.ts","node_modules/@firebase/database/src/core/storage/storage.ts","node_modules/@firebase/database/src/core/util/util.ts","node_modules/@firebase/database/src/core/AppCheckTokenProvider.ts","node_modules/@firebase/database/src/core/AuthTokenProvider.ts","node_modules/@firebase/database/src/core/RepoInfo.ts","node_modules/@firebase/database/src/core/stats/StatsManager.ts","node_modules/@firebase/database/src/realtime/polling/PacketReceiver.ts","node_modules/@firebase/database/src/realtime/BrowserPollConnection.ts","node_modules/@firebase/database/src/realtime/WebSocketConnection.ts","node_modules/@firebase/database/src/realtime/TransportManager.ts","node_modules/@firebase/database/src/realtime/Connection.ts","node_modules/@firebase/database/src/core/ServerActions.ts","node_modules/@firebase/database/src/core/util/EventEmitter.ts","node_modules/@firebase/database/src/core/util/OnlineMonitor.ts","node_modules/@firebase/database/src/core/util/Path.ts","node_modules/@firebase/database/src/core/util/VisibilityMonitor.ts","node_modules/@firebase/database/src/core/PersistentConnection.ts","node_modules/@firebase/database/src/core/snap/indexes/Index.ts","node_modules/@firebase/database/src/core/snap/indexes/KeyIndex.ts","node_modules/@firebase/database/src/core/util/SortedMap.ts","node_modules/@firebase/database/src/core/snap/comparators.ts","node_modules/@firebase/database/src/core/snap/snap.ts","node_modules/@firebase/database/src/core/snap/LeafNode.ts","node_modules/@firebase/database/src/core/snap/indexes/PriorityIndex.ts","node_modules/@firebase/database/src/core/snap/childSet.ts","node_modules/@firebase/database/src/core/snap/IndexMap.ts","node_modules/@firebase/database/src/core/snap/ChildrenNode.ts","node_modules/@firebase/database/src/core/snap/nodeFromJSON.ts","node_modules/@firebase/database/src/core/snap/indexes/PathIndex.ts","node_modules/@firebase/database/src/core/snap/indexes/ValueIndex.ts","node_modules/@firebase/database/src/core/util/NextPushId.ts","node_modules/@firebase/database/src/core/view/Change.ts","node_modules/@firebase/database/src/core/view/filter/IndexedFilter.ts","node_modules/@firebase/database/src/core/view/filter/RangedFilter.ts","node_modules/@firebase/database/src/core/view/filter/LimitedFilter.ts","node_modules/@firebase/database/src/core/view/QueryParams.ts","node_modules/@firebase/database/src/core/ReadonlyRestClient.ts","node_modules/@firebase/database/src/core/SnapshotHolder.ts","node_modules/@firebase/database/src/core/SparseSnapshotTree.ts","node_modules/@firebase/database/src/core/stats/StatsListener.ts","node_modules/@firebase/database/src/core/stats/StatsReporter.ts","node_modules/@firebase/database/src/core/operation/Operation.ts","node_modules/@firebase/database/src/core/operation/AckUserWrite.ts","node_modules/@firebase/database/src/core/operation/ListenComplete.ts","node_modules/@firebase/database/src/core/operation/Overwrite.ts","node_modules/@firebase/database/src/core/operation/Merge.ts","node_modules/@firebase/database/src/core/view/CacheNode.ts","node_modules/@firebase/database/src/core/view/EventGenerator.ts","node_modules/@firebase/database/src/core/view/ViewCache.ts","node_modules/@firebase/database/src/core/util/ImmutableTree.ts","node_modules/@firebase/database/src/core/CompoundWrite.ts","node_modules/@firebase/database/src/core/WriteTree.ts","node_modules/@firebase/database/src/core/view/ChildChangeAccumulator.ts","node_modules/@firebase/database/src/core/view/CompleteChildSource.ts","node_modules/@firebase/database/src/core/view/ViewProcessor.ts","node_modules/@firebase/database/src/core/view/View.ts","node_modules/@firebase/database/src/core/SyncPoint.ts","node_modules/@firebase/database/src/core/SyncTree.ts","node_modules/@firebase/database/src/core/util/ServerValues.ts","node_modules/@firebase/database/src/core/util/Tree.ts","node_modules/@firebase/database/src/core/util/validation.ts","node_modules/@firebase/database/src/core/view/EventQueue.ts","node_modules/@firebase/database/src/core/Repo.ts","node_modules/@firebase/database/src/core/util/libs/parser.ts","node_modules/@firebase/database/src/api/OnDisconnect.ts","node_modules/@firebase/database/src/api/Reference_impl.ts","node_modules/@firebase/database/src/core/view/Event.ts","node_modules/@firebase/database/src/core/view/EventRegistration.ts","node_modules/@firebase/database/src/api/Database.ts","node_modules/@firebase/database/src/register.ts","node_modules/@firebase/database/src/api/Transaction.ts","node_modules/@firebase/database/src/api/test_access.ts","node_modules/@firebase/database/src/index.ts","node_modules/@firebase/database/src/realtime/Constants.ts","node_modules/@firebase/database/src/core/snap/Node.ts","node_modules/@firebase/database/src/core/stats/StatsCollection.ts","node_modules/@firebase/database/src/api/ServerValue.ts","src/firebase.ts","src/state.ts","src/pages/home.ts","src/pages/chat.ts","src/router.ts","src/main.ts"],"sourcesContent":["export function toArray(objectOrArray) {\n  objectOrArray = objectOrArray || [];\n  return Array.isArray(objectOrArray) ? objectOrArray : [objectOrArray];\n}\n\nexport function log(msg) {\n  return `[Vaadin.Router] ${msg}`;\n}\n\nexport function logValue(value) {\n  if (typeof value !== 'object') {\n    return String(value);\n  }\n\n  const stringType = Object.prototype.toString.call(value).match(/ (.*)\\]$/)[1];\n  if (stringType === 'Object' || stringType === 'Array') {\n    return `${stringType} ${JSON.stringify(value)}`;\n  } else {\n    return stringType;\n  }\n}\n\nconst MODULE = 'module';\nconst NOMODULE = 'nomodule';\nconst bundleKeys = [MODULE, NOMODULE];\n\nfunction ensureBundle(src) {\n  if (!src.match(/.+\\.[m]?js$/)) {\n    throw new Error(\n      log(`Unsupported type for bundle \"${src}\": .js or .mjs expected.`)\n    );\n  }\n}\n\nexport function ensureRoute(route) {\n  if (!route || !isString(route.path)) {\n    throw new Error(\n      log(`Expected route config to be an object with a \"path\" string property, or an array of such objects`)\n    );\n  }\n\n  const bundle = route.bundle;\n\n  const stringKeys = ['component', 'redirect', 'bundle'];\n  if (\n    !isFunction(route.action) &&\n    !Array.isArray(route.children) &&\n    !isFunction(route.children) &&\n    !isObject(bundle) &&\n    !stringKeys.some(key => isString(route[key]))\n  ) {\n    throw new Error(\n      log(\n        `Expected route config \"${route.path}\" to include either \"${stringKeys.join('\", \"')}\" ` +\n        `or \"action\" function but none found.`\n      )\n    );\n  }\n\n  if (bundle) {\n    if (isString(bundle)) {\n      ensureBundle(bundle);\n    } else if (!bundleKeys.some(key => key in bundle)) {\n      throw new Error(\n        log('Expected route bundle to include either \"' + NOMODULE + '\" or \"' + MODULE + '\" keys, or both')\n      );\n    } else {\n      bundleKeys.forEach(key => key in bundle && ensureBundle(bundle[key]));\n    }\n  }\n\n  if (route.redirect) {\n    ['bundle', 'component'].forEach(overriddenProp => {\n      if (overriddenProp in route) {\n        console.warn(\n          log(\n            `Route config \"${route.path}\" has both \"redirect\" and \"${overriddenProp}\" properties, ` +\n            `and \"redirect\" will always override the latter. Did you mean to only use \"${overriddenProp}\"?`\n          )\n        );\n      }\n    });\n  }\n}\n\nexport function ensureRoutes(routes) {\n  toArray(routes).forEach(route => ensureRoute(route));\n}\n\nfunction loadScript(src, key) {\n  let script = document.head.querySelector('script[src=\"' + src + '\"][async]');\n  if (!script) {\n    script = document.createElement('script');\n    script.setAttribute('src', src);\n    if (key === MODULE) {\n      script.setAttribute('type', MODULE);\n    } else if (key === NOMODULE) {\n      script.setAttribute(NOMODULE, '');\n    }\n    script.async = true;\n  }\n  return new Promise((resolve, reject) => {\n    script.onreadystatechange = script.onload = e => {\n      script.__dynamicImportLoaded = true;\n      resolve(e);\n    };\n    script.onerror = e => {\n      if (script.parentNode) {\n        script.parentNode.removeChild(script);\n      }\n      reject(e);\n    };\n    if (script.parentNode === null) {\n      document.head.appendChild(script);\n    } else if (script.__dynamicImportLoaded) {\n      resolve();\n    }\n  });\n}\n\nexport function loadBundle(bundle) {\n  if (isString(bundle)) {\n    return loadScript(bundle);\n  } else {\n    return Promise.race(\n      bundleKeys\n        .filter(key => key in bundle)\n        .map(key => loadScript(bundle[key], key))\n    );\n  }\n}\n\nexport function fireRouterEvent(type, detail) {\n  return !window.dispatchEvent(new CustomEvent(\n    `vaadin-router-${type}`,\n    {cancelable: type === 'go', detail}\n  ));\n}\n\nexport function isObject(o) {\n  // guard against null passing the typeof check\n  return typeof o === 'object' && !!o;\n}\n\nexport function isFunction(f) {\n  return typeof f === 'function';\n}\n\nexport function isString(s) {\n  return typeof s === 'string';\n}\n\nexport function getNotFoundError(context) {\n  const error = new Error(log(`Page not found (${context.pathname})`));\n  error.context = context;\n  error.code = 404;\n  return error;\n}\n\nexport const notFoundResult = new (class NotFoundResult {})();\n","const fs = require('fs')\nconst path = require('path')\nconst os = require('os')\n\nconst LINE = /(?:^|^)\\s*(?:export\\s+)?([\\w.-]+)(?:\\s*=\\s*?|:\\s+?)(\\s*'(?:\\\\'|[^'])*'|\\s*\"(?:\\\\\"|[^\"])*\"|\\s*`(?:\\\\`|[^`])*`|[^#\\r\\n]+)?\\s*(?:#.*)?(?:$|$)/mg\n\n// Parser src into an Object\nfunction parse (src) {\n  const obj = {}\n\n  // Convert buffer to string\n  let lines = src.toString()\n\n  // Convert line breaks to same format\n  lines = lines.replace(/\\r\\n?/mg, '\\n')\n\n  let match\n  while ((match = LINE.exec(lines)) != null) {\n    const key = match[1]\n\n    // Default undefined or null to empty string\n    let value = (match[2] || '')\n\n    // Remove whitespace\n    value = value.trim()\n\n    // Check if double quoted\n    const maybeQuote = value[0]\n\n    // Remove surrounding quotes\n    value = value.replace(/^(['\"`])([\\s\\S]*)\\1$/mg, '$2')\n\n    // Expand newlines if double quoted\n    if (maybeQuote === '\"') {\n      value = value.replace(/\\\\n/g, '\\n')\n      value = value.replace(/\\\\r/g, '\\r')\n    }\n\n    // Add to object\n    obj[key] = value\n  }\n\n  return obj\n}\n\nfunction _log (message) {\n  console.log(`[dotenv][DEBUG] ${message}`)\n}\n\nfunction _resolveHome (envPath) {\n  return envPath[0] === '~' ? path.join(os.homedir(), envPath.slice(1)) : envPath\n}\n\n// Populates process.env from .env file\nfunction config (options) {\n  let dotenvPath = path.resolve(process.cwd(), '.env')\n  let encoding = 'utf8'\n  const debug = Boolean(options && options.debug)\n  const override = Boolean(options && options.override)\n\n  if (options) {\n    if (options.path != null) {\n      dotenvPath = _resolveHome(options.path)\n    }\n    if (options.encoding != null) {\n      encoding = options.encoding\n    }\n  }\n\n  try {\n    // Specifying an encoding returns a string instead of a buffer\n    const parsed = DotenvModule.parse(fs.readFileSync(dotenvPath, { encoding }))\n\n    Object.keys(parsed).forEach(function (key) {\n      if (!Object.prototype.hasOwnProperty.call(process.env, key)) {\n        process.env[key] = parsed[key]\n      } else {\n        if (override === true) {\n          process.env[key] = parsed[key]\n        }\n\n        if (debug) {\n          if (override === true) {\n            _log(`\"${key}\" is already defined in \\`process.env\\` and WAS overwritten`)\n          } else {\n            _log(`\"${key}\" is already defined in \\`process.env\\` and was NOT overwritten`)\n          }\n        }\n      }\n    })\n\n    return { parsed }\n  } catch (e) {\n    if (debug) {\n      _log(`Failed to load ${dotenvPath} ${e.message}`)\n    }\n\n    return { error: e }\n  }\n}\n\nconst DotenvModule = {\n  config,\n  parse\n}\n\nmodule.exports.config = DotenvModule.config\nmodule.exports.parse = DotenvModule.parse\nmodule.exports = DotenvModule\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","exports.endianness = function () { return 'LE' };\n\nexports.hostname = function () {\n    if (typeof location !== 'undefined') {\n        return location.hostname\n    }\n    else return '';\n};\n\nexports.loadavg = function () { return [] };\n\nexports.uptime = function () { return 0 };\n\nexports.freemem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.totalmem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.cpus = function () { return [] };\n\nexports.type = function () { return 'Browser' };\n\nexports.release = function () {\n    if (typeof navigator !== 'undefined') {\n        return navigator.appVersion;\n    }\n    return '';\n};\n\nexports.networkInterfaces\n= exports.getNetworkInterfaces\n= function () { return {} };\n\nexports.arch = function () { return 'javascript' };\n\nexports.platform = function () { return 'browser' };\n\nexports.tmpdir = exports.tmpDir = function () {\n    return '/tmp';\n};\n\nexports.EOL = '\\n';\n\nexports.homedir = function () {\n\treturn '/'\n};\n","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.21';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function',\n      INVALID_TEMPL_VAR_ERROR_TEXT = 'Invalid `variable` option passed into `_.template`';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading whitespace. */\n  var reTrimStart = /^\\s+/;\n\n  /** Used to match a single whitespace character. */\n  var reWhitespace = /\\s/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /**\n   * Used to validate the `validate` option in `_.template` variable.\n   *\n   * Forbids characters which could potentially change the meaning of the function argument definition:\n   * - \"(),\" (modification of function parameters)\n   * - \"=\" (default value)\n   * - \"[]{}\" (destructuring of function parameters)\n   * - \"/\" (beginning of a comment)\n   * - whitespace\n   */\n  var reForbiddenIdentifierChars = /[()=,{}\\[\\]\\/\\s]/;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.trim`.\n   *\n   * @private\n   * @param {string} string The string to trim.\n   * @returns {string} Returns the trimmed string.\n   */\n  function baseTrim(string) {\n    return string\n      ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n      : string;\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedEndIndex(string) {\n    var index = string.length;\n\n    while (index-- && reWhitespace.test(string.charAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n      } else if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        stack || (stack = new Stack);\n        if (isObject(srcValue)) {\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || isFunction(objValue)) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      if (iteratees.length) {\n        iteratees = arrayMap(iteratees, function(iteratee) {\n          if (isArray(iteratee)) {\n            return function(value) {\n              return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n            }\n          }\n          return iteratee;\n        });\n      } else {\n        iteratees = [identity];\n      }\n\n      var index = -1;\n      iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n          return object;\n        }\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      var low = 0,\n          high = array == null ? 0 : array.length;\n      if (high === 0) {\n        return 0;\n      }\n\n      value = iteratee(value);\n      var valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision && nativeIsFinite(number)) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Check that cyclic values are equal.\n      var arrStacked = stack.get(array);\n      var othStacked = stack.get(other);\n      if (arrStacked && othStacked) {\n        return arrStacked == other && othStacked == array;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Check that cyclic values are equal.\n      var objStacked = stack.get(object);\n      var othStacked = stack.get(other);\n      if (objStacked && othStacked) {\n        return objStacked == other && othStacked == object;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n    function safeGet(object, key) {\n      if (key === 'constructor' && typeof object[key] === 'function') {\n        return;\n      }\n\n      if (key == '__proto__') {\n        return;\n      }\n\n      return object[key];\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     *\n     * // Combining several predicates using `_.overEvery` or `_.overSome`.\n     * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n     * // => objects for ['fred', 'barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 30 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            clearTimeout(timerId);\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = baseTrim(value);\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      // The sourceURL gets injected into the source that's eval-ed, so be careful\n      // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in\n      // and escape the comment, thus injecting code that gets evaled.\n      var sourceURL = '//# sourceURL=' +\n        (hasOwnProperty.call(options, 'sourceURL')\n          ? (options.sourceURL + '').replace(/\\s/g, ' ')\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = hasOwnProperty.call(options, 'variable') && options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Throw an error if a forbidden character was found in `variable`, to prevent\n      // potential command injection attacks.\n      else if (reForbiddenIdentifierChars.test(variable)) {\n        throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);\n      }\n\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return baseTrim(string);\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.slice(0, trimmedEndIndex(string) + 1);\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     *\n     * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])\n     * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name + '';\n        if (!hasOwnProperty.call(realNames, key)) {\n          realNames[key] = [];\n        }\n        realNames[key].push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n","import {fireRouterEvent} from '../utils.js';\n\n/* istanbul ignore next: coverage is calculated in Chrome, this code is for IE */\nfunction getAnchorOrigin(anchor) {\n  // IE11: on HTTP and HTTPS the default port is not included into\n  // window.location.origin, so won't include it here either.\n  const port = anchor.port;\n  const protocol = anchor.protocol;\n  const defaultHttp = protocol === 'http:' && port === '80';\n  const defaultHttps = protocol === 'https:' && port === '443';\n  const host = (defaultHttp || defaultHttps)\n    ? anchor.hostname // does not include the port number (e.g. www.example.org)\n    : anchor.host; // does include the port number (e.g. www.example.org:80)\n  return `${protocol}//${host}`;\n}\n\n// The list of checks is not complete:\n//  - SVG support is missing\n//  - the 'rel' attribute is not considered\nfunction vaadinRouterGlobalClickHandler(event) {\n  // ignore the click if the default action is prevented\n  if (event.defaultPrevented) {\n    return;\n  }\n\n  // ignore the click if not with the primary mouse button\n  if (event.button !== 0) {\n    return;\n  }\n\n  // ignore the click if a modifier key is pressed\n  if (event.shiftKey || event.ctrlKey || event.altKey || event.metaKey) {\n    return;\n  }\n\n  // find the <a> element that the click is at (or within)\n  let anchor = event.target;\n  const path = event.composedPath\n    ? event.composedPath()\n    : (event.path || []);\n\n  // FIXME(web-padawan): `Symbol.iterator` used by webcomponentsjs is broken for arrays\n  // example to check: `for...of` loop here throws the \"Not yet implemented\" error\n  for (let i = 0; i < path.length; i++) {\n    const target = path[i];\n    if (target.nodeName && target.nodeName.toLowerCase() === 'a') {\n      anchor = target;\n      break;\n    }\n  }\n\n  while (anchor && anchor.nodeName.toLowerCase() !== 'a') {\n    anchor = anchor.parentNode;\n  }\n\n  // ignore the click if not at an <a> element\n  if (!anchor || anchor.nodeName.toLowerCase() !== 'a') {\n    return;\n  }\n\n  // ignore the click if the <a> element has a non-default target\n  if (anchor.target && anchor.target.toLowerCase() !== '_self') {\n    return;\n  }\n\n  // ignore the click if the <a> element has the 'download' attribute\n  if (anchor.hasAttribute('download')) {\n    return;\n  }\n\n  // ignore the click if the <a> element has the 'router-ignore' attribute\n  if (anchor.hasAttribute('router-ignore')) {\n    return;\n  }\n\n  // ignore the click if the target URL is a fragment on the current page\n  if (anchor.pathname === window.location.pathname && anchor.hash !== '') {\n    return;\n  }\n\n  // ignore the click if the target is external to the app\n  // In IE11 HTMLAnchorElement does not have the `origin` property\n  const origin = anchor.origin || getAnchorOrigin(anchor);\n  if (origin !== window.location.origin) {\n    return;\n  }\n\n  // if none of the above, convert the click into a navigation event\n  const {pathname, search, hash} = anchor;\n  if (fireRouterEvent('go', {pathname, search, hash})) {\n    event.preventDefault();\n    // for a click event, the scroll is reset to the top position.\n    if (event && event.type === 'click') {\n      window.scrollTo(0, 0);\n    }\n  }\n}\n\n/**\n * A navigation trigger for Vaadin Router that translated clicks on `<a>` links\n * into Vaadin Router navigation events.\n *\n * Only regular clicks on in-app links are translated (primary mouse button, no\n * modifier keys, the target href is within the app's URL space).\n *\n * @memberOf Router.NavigationTrigger\n * @type {NavigationTrigger}\n */\nconst CLICK = {\n  activate() {\n    window.document.addEventListener('click', vaadinRouterGlobalClickHandler);\n  },\n\n  inactivate() {\n    window.document.removeEventListener('click', vaadinRouterGlobalClickHandler);\n  }\n};\n\nexport default CLICK;\n","import {fireRouterEvent, isFunction} from '../utils.js';\n\n// PopStateEvent constructor shim\nconst isIE = /Trident/.test(navigator.userAgent);\n\n/* istanbul ignore next: coverage is calculated in Chrome, this code is for IE */\nif (isIE && !isFunction(window.PopStateEvent)) {\n  window.PopStateEvent = function(inType, params) {\n    params = params || {};\n    var e = document.createEvent('Event');\n    e.initEvent(inType, Boolean(params.bubbles), Boolean(params.cancelable));\n    e.state = params.state || null;\n    return e;\n  };\n  window.PopStateEvent.prototype = window.Event.prototype;\n}\n\nfunction vaadinRouterGlobalPopstateHandler(event) {\n  if (event.state === 'vaadin-router-ignore') {\n    return;\n  }\n  const {pathname, search, hash} = window.location;\n  fireRouterEvent('go', {pathname, search, hash});\n}\n\n/**\n * A navigation trigger for Vaadin Router that translates popstate events into\n * Vaadin Router navigation events.\n *\n * @memberOf Router.NavigationTrigger\n * @type {NavigationTrigger}\n */\nconst POPSTATE = {\n  activate() {\n    window.addEventListener('popstate', vaadinRouterGlobalPopstateHandler);\n  },\n\n  inactivate() {\n    window.removeEventListener('popstate', vaadinRouterGlobalPopstateHandler);\n  }\n};\n\nexport default POPSTATE;\n","/**\n * Expose `pathToRegexp`.\n */\nmodule.exports = pathToRegexp\nmodule.exports.parse = parse\nmodule.exports.compile = compile\nmodule.exports.tokensToFunction = tokensToFunction\nmodule.exports.tokensToRegExp = tokensToRegExp\n\n/**\n * Default configs.\n */\nvar DEFAULT_DELIMITER = '/'\nvar DEFAULT_DELIMITERS = './'\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \":test(\\\\d+)?\" => [\"test\", \"\\d+\", undefined, \"?\"]\n  // \"(\\\\d+)\"  => [undefined, undefined, \"\\d+\", undefined]\n  '(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?'\n].join('|'), 'g')\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = []\n  var key = 0\n  var index = 0\n  var path = ''\n  var defaultDelimiter = (options && options.delimiter) || DEFAULT_DELIMITER\n  var delimiters = (options && options.delimiters) || DEFAULT_DELIMITERS\n  var pathEscaped = false\n  var res\n\n  while ((res = PATH_REGEXP.exec(str)) !== null) {\n    var m = res[0]\n    var escaped = res[1]\n    var offset = res.index\n    path += str.slice(index, offset)\n    index = offset + m.length\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1]\n      pathEscaped = true\n      continue\n    }\n\n    var prev = ''\n    var next = str[index]\n    var name = res[2]\n    var capture = res[3]\n    var group = res[4]\n    var modifier = res[5]\n\n    if (!pathEscaped && path.length) {\n      var k = path.length - 1\n\n      if (delimiters.indexOf(path[k]) > -1) {\n        prev = path[k]\n        path = path.slice(0, k)\n      }\n    }\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path)\n      path = ''\n      pathEscaped = false\n    }\n\n    var partial = prev !== '' && next !== undefined && next !== prev\n    var repeat = modifier === '+' || modifier === '*'\n    var optional = modifier === '?' || modifier === '*'\n    var delimiter = prev || defaultDelimiter\n    var pattern = capture || group\n\n    tokens.push({\n      name: name || key++,\n      prefix: prev,\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      pattern: pattern ? escapeGroup(pattern) : '[^' + escapeString(delimiter) + ']+?'\n    })\n  }\n\n  // Push any remaining characters.\n  if (path || index < str.length) {\n    tokens.push(path + str.substr(index))\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length)\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$')\n    }\n  }\n\n  return function (data, options) {\n    var path = ''\n    var encode = (options && options.encode) || encodeURIComponent\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i]\n\n      if (typeof token === 'string') {\n        path += token\n        continue\n      }\n\n      var value = data ? data[token.name] : undefined\n      var segment\n\n      if (Array.isArray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but got array')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) continue\n\n          throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j], token)\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\"')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment\n        }\n\n        continue\n      }\n\n      if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        segment = encode(String(value), token)\n\n        if (!matches[i].test(segment)) {\n          throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but got \"' + segment + '\"')\n        }\n\n        path += token.prefix + segment\n        continue\n      }\n\n      if (token.optional) {\n        // Prepend partial segment prefixes.\n        if (token.partial) path += token.prefix\n\n        continue\n      }\n\n      throw new TypeError('Expected \"' + token.name + '\" to be ' + (token.repeat ? 'an array' : 'a string'))\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$/()])/g, '\\\\$1')\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options && options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {Array=}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  if (!keys) return path\n\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g)\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        pattern: null\n      })\n    }\n  }\n\n  return path\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = []\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source)\n  }\n\n  return new RegExp('(?:' + parts.join('|') + ')', flags(options))\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}  tokens\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  options = options || {}\n\n  var strict = options.strict\n  var start = options.start !== false\n  var end = options.end !== false\n  var delimiter = escapeString(options.delimiter || DEFAULT_DELIMITER)\n  var delimiters = options.delimiters || DEFAULT_DELIMITERS\n  var endsWith = [].concat(options.endsWith || []).map(escapeString).concat('$').join('|')\n  var route = start ? '^' : ''\n  var isEndDelimited = tokens.length === 0\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n\n    if (typeof token === 'string') {\n      route += escapeString(token)\n      isEndDelimited = i === tokens.length - 1 && delimiters.indexOf(token[token.length - 1]) > -1\n    } else {\n      var capture = token.repeat\n        ? '(?:' + token.pattern + ')(?:' + escapeString(token.delimiter) + '(?:' + token.pattern + '))*'\n        : token.pattern\n\n      if (keys) keys.push(token)\n\n      if (token.optional) {\n        if (token.partial) {\n          route += escapeString(token.prefix) + '(' + capture + ')?'\n        } else {\n          route += '(?:' + escapeString(token.prefix) + '(' + capture + '))?'\n        }\n      } else {\n        route += escapeString(token.prefix) + '(' + capture + ')'\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += '(?:' + delimiter + ')?'\n\n    route += endsWith === '$' ? '$' : '(?=' + endsWith + ')'\n  } else {\n    if (!strict) route += '(?:' + delimiter + '(?=' + endsWith + '))?'\n    if (!isEndDelimited) route += '(?=' + delimiter + '|' + endsWith + ')'\n  }\n\n  return new RegExp(route, flags(options))\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {Array=}                keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, keys)\n  }\n\n  if (Array.isArray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), keys, options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), keys, options)\n}\n","/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport pathToRegexp from './path-to-regexp.js';\n\nconst {hasOwnProperty} = Object.prototype;\nconst cache = new Map();\n// see https://github.com/pillarjs/path-to-regexp/issues/148\ncache.set('|false', {\n  keys: [],\n  pattern: /(?:)/\n});\n\nfunction decodeParam(val) {\n  try {\n    return decodeURIComponent(val);\n  } catch (err) {\n    return val;\n  }\n}\n\nfunction matchPath(routepath, path, exact, parentKeys, parentParams) {\n  exact = !!exact;\n  const cacheKey = `${routepath}|${exact}`;\n  let regexp = cache.get(cacheKey);\n\n  if (!regexp) {\n    const keys = [];\n    regexp = {\n      keys,\n      pattern: pathToRegexp(routepath, keys, {\n        end: exact,\n        strict: routepath === ''\n      }),\n    };\n    cache.set(cacheKey, regexp);\n  }\n\n  const m = regexp.pattern.exec(path);\n  if (!m) {\n    return null;\n  }\n\n  const params = Object.assign({}, parentParams);\n\n  for (let i = 1; i < m.length; i++) {\n    const key = regexp.keys[i - 1];\n    const prop = key.name;\n    const value = m[i];\n    if (value !== undefined || !hasOwnProperty.call(params, prop)) {\n      if (key.repeat) {\n        params[prop] = value ? value.split(key.delimiter).map(decodeParam) : [];\n      } else {\n        params[prop] = value ? decodeParam(value) : value;\n      }\n    }\n  }\n\n  return {\n    path: m[0],\n    keys: (parentKeys || []).concat(regexp.keys),\n    params,\n  };\n}\n\nexport default matchPath;\n","/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport matchPath from './matchPath.js';\n\n/**\n * Traverses the routes tree and matches its nodes to the given pathname from\n * the root down to the leaves. Each match consumes a part of the pathname and\n * the matching process continues for as long as there is a matching child\n * route for the remaining part of the pathname.\n *\n * The returned value is a lazily evaluated iterator.\n *\n * The leading \"/\" in a route path matters only for the root of the routes\n * tree (or if all parent routes are \"\"). In all other cases a leading \"/\" in\n * a child route path has no significance.\n *\n * The trailing \"/\" in a _route path_ matters only for the leaves of the\n * routes tree. A leaf route with a trailing \"/\" matches only a pathname that\n * also has a trailing \"/\".\n *\n * The trailing \"/\" in a route path does not affect matching of child routes\n * in any way.\n *\n * The trailing \"/\" in a _pathname_ generally does not matter (except for\n * the case of leaf nodes described above).\n *\n * The \"\" and \"/\" routes have special treatment:\n *  1. as a single route\n *     the \"\" and \"/\" routes match only the \"\" and \"/\" pathnames respectively\n *  2. as a parent in the routes tree\n *     the \"\" route matches any pathname without consuming any part of it\n *     the \"/\" route matches any absolute pathname consuming its leading \"/\"\n *  3. as a leaf in the routes tree\n *     the \"\" and \"/\" routes match only if the entire pathname is consumed by\n *         the parent routes chain. In this case \"\" and \"/\" are equivalent.\n *  4. several directly nested \"\" or \"/\" routes\n *     - directly nested \"\" or \"/\" routes are 'squashed' (i.e. nesting two\n *       \"/\" routes does not require a double \"/\" in the pathname to match)\n *     - if there are only \"\" in the parent routes chain, no part of the\n *       pathname is consumed, and the leading \"/\" in the child routes' paths\n *       remains significant\n *\n * Side effect:\n *   - the routes tree { path: '' } matches only the '' pathname\n *   - the routes tree { path: '', children: [ { path: '' } ] } matches any\n *     pathname (for the tree root)\n *\n * Prefix matching can be enabled also by `children: true`.\n */\nfunction matchRoute(route, pathname, ignoreLeadingSlash, parentKeys, parentParams) {\n  let match;\n  let childMatches;\n  let childIndex = 0;\n  let routepath = route.path || '';\n  if (routepath.charAt(0) === '/') {\n    if (ignoreLeadingSlash) {\n      routepath = routepath.substr(1);\n    }\n    ignoreLeadingSlash = true;\n  }\n\n  return {\n    next(routeToSkip) {\n      if (route === routeToSkip) {\n        return {done: true};\n      }\n\n      const children = route.__children = route.__children || route.children;\n\n      if (!match) {\n        match = matchPath(routepath, pathname, !children, parentKeys, parentParams);\n\n        if (match) {\n          return {\n            done: false,\n            value: {\n              route,\n              keys: match.keys,\n              params: match.params,\n              path: match.path\n            },\n          };\n        }\n      }\n\n      if (match && children) {\n        while (childIndex < children.length) {\n          if (!childMatches) {\n            const childRoute = children[childIndex];\n            childRoute.parent = route;\n\n            let matchedLength = match.path.length;\n            if (matchedLength > 0 && pathname.charAt(matchedLength) === '/') {\n              matchedLength += 1;\n            }\n\n            childMatches = matchRoute(\n              childRoute,\n              pathname.substr(matchedLength),\n              ignoreLeadingSlash,\n              match.keys,\n              match.params\n            );\n          }\n\n          const childMatch = childMatches.next(routeToSkip);\n          if (!childMatch.done) {\n            return {\n              done: false,\n              value: childMatch.value,\n            };\n          }\n\n          childMatches = null;\n          childIndex++;\n        }\n      }\n\n      return {done: true};\n    },\n  };\n}\n\nexport default matchRoute;\n","/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport {isFunction} from '../utils.js';\n\nfunction resolveRoute(context) {\n  if (isFunction(context.route.action)) {\n    return context.route.action(context);\n  }\n  return undefined;\n}\n\nexport default resolveRoute;\n","/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport pathToRegexp from './path-to-regexp.js';\nimport matchRoute from './matchRoute.js';\nimport resolveRoute from './resolveRoute.js';\nimport {toArray, ensureRoutes, isString, getNotFoundError, notFoundResult} from '../utils.js';\n\nfunction isChildRoute(parentRoute, childRoute) {\n  let route = childRoute;\n  while (route) {\n    route = route.parent;\n    if (route === parentRoute) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction generateErrorMessage(currentContext) {\n  let errorMessage = `Path '${currentContext.pathname}' is not properly resolved due to an error.`;\n  const routePath = (currentContext.route || {}).path;\n  if (routePath) {\n    errorMessage += ` Resolution had failed on route: '${routePath}'`;\n  }\n  return errorMessage;\n}\n\nfunction updateChainForRoute(context, match) {\n  const {route, path} = match;\n\n  if (route && !route.__synthetic) {\n    const item = {path, route};\n    if (!context.chain) {\n      context.chain = [];\n    } else {\n      // Discard old items\n      if (route.parent) {\n        let i = context.chain.length;\n        while (i-- && context.chain[i].route && context.chain[i].route !== route.parent) {\n          context.chain.pop();\n        }\n      }\n    }\n    context.chain.push(item);\n  }\n}\n\n/**\n */\nclass Resolver {\n  constructor(routes, options = {}) {\n    if (Object(routes) !== routes) {\n      throw new TypeError('Invalid routes');\n    }\n\n    this.baseUrl = options.baseUrl || '';\n    this.errorHandler = options.errorHandler;\n    this.resolveRoute = options.resolveRoute || resolveRoute;\n    this.context = Object.assign({resolver: this}, options.context);\n    this.root = Array.isArray(routes) ? {path: '', __children: routes, parent: null, __synthetic: true} : routes;\n    this.root.parent = null;\n  }\n\n  /**\n   * Returns the current list of routes (as a shallow copy). Adding / removing\n   * routes to / from the returned array does not affect the routing config,\n   * but modifying the route objects does.\n   *\n   * @return {!Array<!Router.Route>}\n   */\n  getRoutes() {\n    return [...this.root.__children];\n  }\n\n  /**\n   * Sets the routing config (replacing the existing one).\n   *\n   * @param {!Array<!Router.Route>|!Router.Route} routes a single route or an array of those\n   *    (the array is shallow copied)\n   */\n  setRoutes(routes) {\n    ensureRoutes(routes);\n    const newRoutes = [...toArray(routes)];\n    this.root.__children = newRoutes;\n  }\n\n  /**\n   * Appends one or several routes to the routing config and returns the\n   * effective routing config after the operation.\n   *\n   * @param {!Array<!Router.Route>|!Router.Route} routes a single route or an array of those\n   *    (the array is shallow copied)\n   * @return {!Array<!Router.Route>}\n   * @protected\n   */\n  addRoutes(routes) {\n    ensureRoutes(routes);\n    this.root.__children.push(...toArray(routes));\n    return this.getRoutes();\n  }\n\n  /**\n   * Removes all existing routes from the routing config.\n   */\n  removeRoutes() {\n    this.setRoutes([]);\n  }\n\n  /**\n   * Asynchronously resolves the given pathname, i.e. finds all routes matching\n   * the pathname and tries resolving them one after another in the order they\n   * are listed in the routes config until the first non-null result.\n   *\n   * Returns a promise that is fulfilled with the return value of an object that consists of the first\n   * route handler result that returns something other than `null` or `undefined` and context used to get this result.\n   *\n   * If no route handlers return a non-null result, or if no route matches the\n   * given pathname the returned promise is rejected with a 'page not found'\n   * `Error`.\n   *\n   * @param {!string|!{pathname: !string}} pathnameOrContext the pathname to\n   *    resolve or a context object with a `pathname` property and other\n   *    properties to pass to the route resolver functions.\n   * @return {!Promise<any>}\n   */\n  resolve(pathnameOrContext) {\n    const context = Object.assign(\n      {},\n      this.context,\n      isString(pathnameOrContext) ? {pathname: pathnameOrContext} : pathnameOrContext\n    );\n    const match = matchRoute(\n      this.root,\n      this.__normalizePathname(context.pathname),\n      this.baseUrl\n    );\n    const resolve = this.resolveRoute;\n    let matches = null;\n    let nextMatches = null;\n    let currentContext = context;\n\n    function next(resume, parent = matches.value.route, prevResult) {\n      const routeToSkip = prevResult === null && matches.value.route;\n      matches = nextMatches || match.next(routeToSkip);\n      nextMatches = null;\n\n      if (!resume) {\n        if (matches.done || !isChildRoute(parent, matches.value.route)) {\n          nextMatches = matches;\n          return Promise.resolve(notFoundResult);\n        }\n      }\n\n      if (matches.done) {\n        return Promise.reject(getNotFoundError(context));\n      }\n\n      currentContext = Object.assign(\n        currentContext\n          ? {chain: (currentContext.chain ? currentContext.chain.slice(0) : [])}\n          : {},\n        context,\n        matches.value\n      );\n      updateChainForRoute(currentContext, matches.value);\n\n      return Promise.resolve(resolve(currentContext)).then(resolution => {\n        if (resolution !== null && resolution !== undefined && resolution !== notFoundResult) {\n          currentContext.result = resolution.result || resolution;\n          return currentContext;\n        }\n        return next(resume, parent, resolution);\n      });\n    }\n\n    context.next = next;\n\n    return Promise.resolve()\n      .then(() => next(true, this.root))\n      .catch((error) => {\n        const errorMessage = generateErrorMessage(currentContext);\n        if (!error) {\n          error = new Error(errorMessage);\n        } else {\n          console.warn(errorMessage);\n        }\n        error.context = error.context || currentContext;\n        // DOMException has its own code which is read-only\n        if (!(error instanceof DOMException)) {\n          error.code = error.code || 500;\n        }\n        if (this.errorHandler) {\n          currentContext.result = this.errorHandler(error);\n          return currentContext;\n        }\n        throw error;\n      });\n  }\n\n  /**\n   * URL constructor polyfill hook. Creates and returns an URL instance.\n   */\n  static __createUrl(url, base) {\n    return new URL(url, base);\n  }\n\n  /**\n   * If the baseUrl property is set, transforms the baseUrl and returns the full\n   * actual `base` string for using in the `new URL(path, base);` and for\n   * prepernding the paths with. The returned base ends with a trailing slash.\n   *\n   * Otherwise, returns empty string.\n   */\n  get __effectiveBaseUrl() {\n    return this.baseUrl\n      ? this.constructor.__createUrl(\n        this.baseUrl,\n        document.baseURI || document.URL\n      ).href.replace(/[^\\/]*$/, '')\n      : '';\n  }\n\n  /**\n   * If the baseUrl is set, matches the pathname with the router’s baseUrl,\n   * and returns the local pathname with the baseUrl stripped out.\n   *\n   * If the pathname does not match the baseUrl, returns undefined.\n   *\n   * If the `baseUrl` is not set, returns the unmodified pathname argument.\n   */\n  __normalizePathname(pathname) {\n    if (!this.baseUrl) {\n      // No base URL, no need to transform the pathname.\n      return pathname;\n    }\n\n    const base = this.__effectiveBaseUrl;\n    const normalizedUrl = this.constructor.__createUrl(pathname, base).href;\n    if (normalizedUrl.slice(0, base.length) === base) {\n      return normalizedUrl.slice(base.length);\n    }\n  }\n}\n\nResolver.pathToRegexp = pathToRegexp;\n\nexport default Resolver;\n","/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport Resolver from './resolver.js';\nimport {isString} from '../utils.js';\n\nconst {pathToRegexp} = Resolver;\nconst cache = new Map();\n\nfunction cacheRoutes(routesByName, route, routes) {\n  const name = route.name || route.component;\n  if (name) {\n    if (routesByName.has(name)) {\n      routesByName.get(name).push(route);\n    } else {\n      routesByName.set(name, [route]);\n    }\n  }\n\n  if (Array.isArray(routes)) {\n    for (let i = 0; i < routes.length; i++) {\n      const childRoute = routes[i];\n      childRoute.parent = route;\n      cacheRoutes(routesByName, childRoute, childRoute.__children || childRoute.children);\n    }\n  }\n}\n\nfunction getRouteByName(routesByName, routeName) {\n  const routes = routesByName.get(routeName);\n  if (routes && routes.length > 1) {\n    throw new Error(\n      `Duplicate route with name \"${routeName}\".`\n      + ` Try seting unique 'name' route properties.`\n    );\n  }\n  return routes && routes[0];\n}\n\nfunction getRoutePath(route) {\n  let path = route.path;\n  path = Array.isArray(path) ? path[0] : path;\n  return path !== undefined ? path : '';\n}\n\nfunction generateUrls(router, options = {}) {\n  if (!(router instanceof Resolver)) {\n    throw new TypeError('An instance of Resolver is expected');\n  }\n\n  const routesByName = new Map();\n\n  return (routeName, params) => {\n    let route = getRouteByName(routesByName, routeName);\n    if (!route) {\n      routesByName.clear(); // clear cache\n      cacheRoutes(routesByName, router.root, router.root.__children);\n\n      route = getRouteByName(routesByName, routeName);\n      if (!route) {\n        throw new Error(`Route \"${routeName}\" not found`);\n      }\n    }\n\n    let regexp = cache.get(route.fullPath);\n    if (!regexp) {\n      let fullPath = getRoutePath(route);\n      let rt = route.parent;\n      while (rt) {\n        const path = getRoutePath(rt);\n        if (path) {\n          fullPath = path.replace(/\\/$/, '') + '/' + fullPath.replace(/^\\//, '');\n        }\n        rt = rt.parent;\n      }\n      const tokens = pathToRegexp.parse(fullPath);\n      const toPath = pathToRegexp.tokensToFunction(tokens);\n      const keys = Object.create(null);\n      for (let i = 0; i < tokens.length; i++) {\n        if (!isString(tokens[i])) {\n          keys[tokens[i].name] = true;\n        }\n      }\n      regexp = {toPath, keys};\n      cache.set(fullPath, regexp);\n      route.fullPath = fullPath;\n    }\n\n    let url = regexp.toPath(params, options) || '/';\n\n    if (options.stringifyQueryParams && params) {\n      const queryParams = {};\n      const keys = Object.keys(params);\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        if (!regexp.keys[key]) {\n          queryParams[key] = params[key];\n        }\n      }\n      const query = options.stringifyQueryParams(queryParams);\n      if (query) {\n        url += query.charAt(0) === '?' ? query : `?${query}`;\n      }\n    }\n\n    return url;\n  };\n}\n\nexport default generateUrls;\n","/**\n * @typedef NavigationTrigger\n * @type {object}\n * @property {function()} activate\n * @property {function()} inactivate\n */\n\n/** @type {Array<NavigationTrigger>} */\nlet triggers = [];\n\nexport default function setNavigationTriggers(newTriggers) {\n  triggers.forEach(trigger => trigger.inactivate());\n\n  newTriggers.forEach(trigger => trigger.activate());\n\n  triggers = newTriggers;\n}\n","const willAnimate = elem => {\n  const name = getComputedStyle(elem).getPropertyValue('animation-name');\n  return name && name !== 'none';\n};\n\nconst waitForAnimation = (elem, cb) => {\n  const listener = () => {\n    elem.removeEventListener('animationend', listener);\n    cb();\n  };\n  elem.addEventListener('animationend', listener);\n};\n\nfunction animate(elem, className) {\n  elem.classList.add(className);\n\n  return new Promise(resolve => {\n    if (willAnimate(elem)) {\n      const rect = elem.getBoundingClientRect();\n      const size = `height: ${rect.bottom - rect.top}px; width: ${rect.right - rect.left}px`;\n      elem.setAttribute('style', `position: absolute; ${size}`);\n      waitForAnimation(elem, () => {\n        elem.classList.remove(className);\n        elem.removeAttribute('style');\n        resolve();\n      });\n    } else {\n      elem.classList.remove(className);\n      resolve();\n    }\n  });\n}\n\nexport default animate;\n","import Resolver from './resolver/resolver.js';\nimport generateUrls from './resolver/generateUrls.js';\nimport setNavigationTriggers from './triggers/setNavigationTriggers.js';\nimport animate from './transitions/animate.js';\nimport {\n  ensureRoute,\n  fireRouterEvent,\n  loadBundle,\n  log,\n  logValue,\n  toArray,\n  isFunction,\n  isString,\n  isObject,\n  getNotFoundError,\n  notFoundResult\n} from './utils.js';\n\nconst MAX_REDIRECT_COUNT = 256;\n\nfunction isResultNotEmpty(result) {\n  return result !== null && result !== undefined;\n}\n\nfunction copyContextWithoutNext(context) {\n  const copy = Object.assign({}, context);\n  delete copy.next;\n  return copy;\n}\n\nfunction createLocation({pathname = '', search = '', hash = '', chain = [], params = {}, redirectFrom, resolver}, route) {\n  const routes = chain.map(item => item.route);\n  return {\n    baseUrl: resolver && resolver.baseUrl || '',\n    pathname,\n    search,\n    hash,\n    routes,\n    route: route || routes.length && routes[routes.length - 1] || null,\n    params,\n    redirectFrom,\n    getUrl: (userParams = {}) => getPathnameForRouter(\n      Router.pathToRegexp.compile(\n        getMatchedPath(routes)\n      )(Object.assign({}, params, userParams)),\n      resolver\n    )\n  };\n}\n\nfunction createRedirect(context, pathname) {\n  const params = Object.assign({}, context.params);\n  return {\n    redirect: {\n      pathname,\n      from: context.pathname,\n      params\n    }\n  };\n}\n\nfunction renderElement(context, element) {\n  element.location = createLocation(context);\n  const index = context.chain.map(item => item.route).indexOf(context.route);\n  context.chain[index].element = element;\n  return element;\n}\n\nfunction runCallbackIfPossible(callback, args, thisArg) {\n  if (isFunction(callback)) {\n    return callback.apply(thisArg, args);\n  }\n}\n\nfunction amend(amendmentFunction, args, element) {\n  return amendmentResult => {\n    if (amendmentResult && (amendmentResult.cancel || amendmentResult.redirect)) {\n      return amendmentResult;\n    }\n\n    if (element) {\n      return runCallbackIfPossible(element[amendmentFunction], args, element);\n    }\n  };\n}\n\nfunction processNewChildren(newChildren, route) {\n  if (!Array.isArray(newChildren) && !isObject(newChildren)) {\n    throw new Error(\n      log(\n        `Incorrect \"children\" value for the route ${route.path}: expected array or object, but got ${newChildren}`\n      )\n    );\n  }\n\n  route.__children = [];\n  const childRoutes = toArray(newChildren);\n  for (let i = 0; i < childRoutes.length; i++) {\n    ensureRoute(childRoutes[i]);\n    route.__children.push(childRoutes[i]);\n  }\n}\n\nfunction removeDomNodes(nodes) {\n  if (nodes && nodes.length) {\n    const parent = nodes[0].parentNode;\n    for (let i = 0; i < nodes.length; i++) {\n      parent.removeChild(nodes[i]);\n    }\n  }\n}\n\nfunction getPathnameForRouter(pathname, router) {\n  const base = router.__effectiveBaseUrl;\n  return base\n    ? router.constructor.__createUrl(pathname.replace(/^\\//, ''), base).pathname\n    : pathname;\n}\n\nfunction getMatchedPath(chain) {\n  return chain.map(item => item.path).reduce((a, b) => {\n    if (b.length) {\n      return a.replace(/\\/$/, '') + '/' + b.replace(/^\\//, '');\n    }\n    return a;\n  }, '');\n}\n\n/**\n * A simple client-side router for single-page applications. It uses\n * express-style middleware and has a first-class support for Web Components and\n * lazy-loading. Works great in Polymer and non-Polymer apps.\n *\n * Use `new Router(outlet, options)` to create a new Router instance.\n *\n * * The `outlet` parameter is a reference to the DOM node to render\n *   the content into.\n *\n * * The `options` parameter is an optional object with options. The following\n *   keys are supported:\n *   * `baseUrl` — the initial value for [\n *     the `baseUrl` property\n *   ](#/classes/Router#property-baseUrl)\n *\n * The Router instance is automatically subscribed to navigation events\n * on `window`.\n *\n * See [Live Examples](#/classes/Router/demos/demo/index.html) for the detailed usage demo and code snippets.\n *\n * See also detailed API docs for the following methods, for the advanced usage:\n *\n * * [setOutlet](#/classes/Router#method-setOutlet) – should be used to configure the outlet.\n * * [setTriggers](#/classes/Router#method-setTriggers) – should be used to configure the navigation events.\n * * [setRoutes](#/classes/Router#method-setRoutes) – should be used to configure the routes.\n *\n * Only `setRoutes` has to be called manually, others are automatically invoked when creating a new instance.\n *\n * @extends Resolver\n * @demo demo/index.html\n * @summary JavaScript class that renders different DOM content depending on\n *    a given path. It can re-render when triggered or automatically on\n *    'popstate' and / or 'click' events.\n */\nexport class Router extends Resolver {\n\n  /**\n   * Creates a new Router instance with a given outlet, and\n   * automatically subscribes it to navigation events on the `window`.\n   * Using a constructor argument or a setter for outlet is equivalent:\n   *\n   * ```\n   * const router = new Router();\n   * router.setOutlet(outlet);\n   * ```\n   * @param {?Node=} outlet\n   * @param {?RouterOptions=} options\n   */\n  constructor(outlet, options) {\n    const baseElement = document.head.querySelector('base');\n    const baseHref = baseElement && baseElement.getAttribute('href');\n    super([], Object.assign({\n      // Default options\n      baseUrl: baseHref && Resolver.__createUrl(baseHref, document.URL).pathname.replace(/[^\\/]*$/, '')\n    }, options));\n\n    this.resolveRoute = context => this.__resolveRoute(context);\n\n    const triggers = Router.NavigationTrigger;\n    Router.setTriggers.apply(Router, Object.keys(triggers).map(key => triggers[key]));\n\n    /**\n     * The base URL for all routes in the router instance. By default,\n     * if the base element exists in the `<head>`, vaadin-router\n     * takes the `<base href>` attribute value, resolves against current `document.URL`\n     * and gets the `pathname` from the result.\n     *\n     * @public\n     * @type {string}\n     */\n    this.baseUrl;\n\n    /**\n     * A promise that is settled after the current render cycle completes. If\n     * there is no render cycle in progress the promise is immediately settled\n     * with the last render cycle result.\n     *\n     * @public\n     * @type {!Promise<!RouterLocation>}\n     */\n    this.ready;\n    this.ready = Promise.resolve(outlet);\n\n    /**\n     * Contains read-only information about the current router location:\n     * pathname, active routes, parameters. See the\n     * [Location type declaration](#/classes/RouterLocation)\n     * for more details.\n     *\n     * @public\n     * @type {!RouterLocation}\n     */\n    this.location;\n    this.location = createLocation({resolver: this});\n\n    this.__lastStartedRenderId = 0;\n    this.__navigationEventHandler = this.__onNavigationEvent.bind(this);\n    this.setOutlet(outlet);\n    this.subscribe();\n    // Using WeakMap instead of WeakSet because WeakSet is not supported by IE11\n    this.__createdByRouter = new WeakMap();\n    this.__addedByRouter = new WeakMap();\n  }\n\n  __resolveRoute(context) {\n    const route = context.route;\n\n    let callbacks = Promise.resolve();\n\n    if (isFunction(route.children)) {\n      callbacks = callbacks\n        .then(() => route.children(copyContextWithoutNext(context)))\n        .then(children => {\n          // The route.children() callback might have re-written the\n          // route.children property instead of returning a value\n          if (!isResultNotEmpty(children) && !isFunction(route.children)) {\n            children = route.children;\n          }\n          processNewChildren(children, route);\n        });\n    }\n\n    const commands = {\n      redirect: path => createRedirect(context, path),\n      component: (component) => {\n        const element = document.createElement(component);\n        this.__createdByRouter.set(element, true);\n        return element;\n      }\n    };\n\n    return callbacks\n      .then(() => {\n        if (this.__isLatestRender(context)) {\n          return runCallbackIfPossible(route.action, [context, commands], route);\n        }\n      })\n      .then(result => {\n        if (isResultNotEmpty(result)) {\n          // Actions like `() => import('my-view.js')` are not expected to\n          // end the resolution, despite the result is not empty. Checking\n          // the result with a whitelist of values that end the resolution.\n          if (result instanceof HTMLElement ||\n              result.redirect ||\n              result === notFoundResult) {\n            return result;\n          }\n        }\n\n        if (isString(route.redirect)) {\n          return commands.redirect(route.redirect);\n        }\n\n        if (route.bundle) {\n          return loadBundle(route.bundle)\n            .then(() => {}, () => {\n              throw new Error(log(`Bundle not found: ${route.bundle}. Check if the file name is correct`));\n            });\n        }\n      })\n      .then(result => {\n        if (isResultNotEmpty(result)) {\n          return result;\n        }\n        if (isString(route.component)) {\n          return commands.component(route.component);\n        }\n      });\n  }\n\n  /**\n   * Sets the router outlet (the DOM node where the content for the current\n   * route is inserted). Any content pre-existing in the router outlet is\n   * removed at the end of each render pass.\n   *\n   * NOTE: this method is automatically invoked first time when creating a new Router instance.\n   *\n   * @param {?Node} outlet the DOM node where the content for the current route\n   *     is inserted.\n   */\n  setOutlet(outlet) {\n    if (outlet) {\n      this.__ensureOutlet(outlet);\n    }\n    this.__outlet = outlet;\n  }\n\n  /**\n   * Returns the current router outlet. The initial value is `undefined`.\n   *\n   * @return {?Node} the current router outlet (or `undefined`)\n   */\n  getOutlet() {\n    return this.__outlet;\n  }\n\n  /**\n   * Sets the routing config (replacing the existing one) and triggers a\n   * navigation event so that the router outlet is refreshed according to the\n   * current `window.location` and the new routing config.\n   *\n   * Each route object may have the following properties, listed here in the processing order:\n   * * `path` – the route path (relative to the parent route if any) in the\n   * [express.js syntax](https://expressjs.com/en/guide/routing.html#route-paths\").\n   *\n   * * `children` – an array of nested routes or a function that provides this\n   * array at the render time. The function can be synchronous or asynchronous:\n   * in the latter case the render is delayed until the returned promise is\n   * resolved. The `children` function is executed every time when this route is\n   * being rendered. This allows for dynamic route structures (e.g. backend-defined),\n   * but it might have a performance impact as well. In order to avoid calling\n   * the function on subsequent renders, you can override the `children` property\n   * of the route object and save the calculated array there\n   * (via `context.route.children = [ route1, route2, ...];`).\n   * Parent routes are fully resolved before resolving the children. Children\n   * 'path' values are relative to the parent ones.\n   *\n   * * `action` – the action that is executed before the route is resolved.\n   * The value for this property should be a function, accepting `context`\n   * and `commands` parameters described below. If present, this function is\n   * always invoked first, disregarding of the other properties' presence.\n   * The action can return a result directly or within a `Promise`, which\n   * resolves to the result. If the action result is an `HTMLElement` instance,\n   * a `commands.component(name)` result, a `commands.redirect(path)` result,\n   * or a `context.next()` result, the current route resolution is finished,\n   * and other route config properties are ignored.\n   * See also **Route Actions** section in [Live Examples](#/classes/Router/demos/demo/index.html).\n   *\n   * * `redirect` – other route's path to redirect to. Passes all route parameters to the redirect target.\n   * The target route should also be defined.\n   * See also **Redirects** section in [Live Examples](#/classes/Router/demos/demo/index.html).\n   *\n   * * `bundle` – string containing the path to `.js` or `.mjs` bundle to load before resolving the route,\n   * or the object with \"module\" and \"nomodule\" keys referring to different bundles.\n   * Each bundle is only loaded once. If \"module\" and \"nomodule\" are set, only one bundle is loaded,\n   * depending on whether the browser supports ES modules or not.\n   * The property is ignored when either an `action` returns the result or `redirect` property is present.\n   * Any error, e.g. 404 while loading bundle will cause route resolution to throw.\n   * See also **Code Splitting** section in [Live Examples](#/classes/Router/demos/demo/index.html).\n   *\n   * * `component` – the tag name of the Web Component to resolve the route to.\n   * The property is ignored when either an `action` returns the result or `redirect` property is present.\n   * If route contains the `component` property (or an action that return a component)\n   * and its child route also contains the `component` property, child route's component\n   * will be rendered as a light dom child of a parent component.\n   *\n   * * `name` – the string name of the route to use in the\n   * [`router.urlForName(name, params)`](#/classes/Router#method-urlForName)\n   * navigation helper method.\n   *\n   * For any route function (`action`, `children`) defined, the corresponding `route` object is available inside the callback\n   * through the `this` reference. If you need to access it, make sure you define the callback as a non-arrow function\n   * because arrow functions do not have their own `this` reference.\n   *\n   * `context` object that is passed to `action` function holds the following properties:\n   * * `context.pathname` – string with the pathname being resolved\n   *\n   * * `context.search` – search query string\n   *\n   * * `context.hash` – hash string\n   *\n   * * `context.params` – object with route parameters\n   *\n   * * `context.route` – object that holds the route that is currently being rendered.\n   *\n   * * `context.next()` – function for asynchronously getting the next route\n   * contents from the resolution chain (if any)\n   *\n   * `commands` object that is passed to `action` function has\n   * the following methods:\n   *\n   * * `commands.redirect(path)` – function that creates a redirect data\n   * for the path specified.\n   *\n   * * `commands.component(component)` – function that creates a new HTMLElement\n   * with current context. Note: the component created by this function is reused if visiting the same path twice in row.\n   *\n   *\n   * @param {!Array<!Route>|!Route} routes a single route or an array of those\n   * @param {?boolean} skipRender configure the router but skip rendering the\n   *     route corresponding to the current `window.location` values\n   *\n   * @return {!Promise<!Node>}\n   */\n  setRoutes(routes, skipRender = false) {\n    this.__previousContext = undefined;\n    this.__urlForName = undefined;\n    super.setRoutes(routes);\n    if (!skipRender) {\n      this.__onNavigationEvent();\n    }\n    return this.ready;\n  }\n\n  /**\n   * Asynchronously resolves the given pathname and renders the resolved route\n   * component into the router outlet. If no router outlet is set at the time of\n   * calling this method, or at the time when the route resolution is completed,\n   * a `TypeError` is thrown.\n   *\n   * Returns a promise that is fulfilled with the router outlet DOM Node after\n   * the route component is created and inserted into the router outlet, or\n   * rejected if no route matches the given path.\n   *\n   * If another render pass is started before the previous one is completed, the\n   * result of the previous render pass is ignored.\n   *\n   * @param {!string|!{pathname: !string, search: ?string, hash: ?string}} pathnameOrContext\n   *    the pathname to render or a context object with a `pathname` property,\n   *    optional `search` and `hash` properties, and other properties\n   *    to pass to the resolver.\n   * @param {boolean=} shouldUpdateHistory\n   *    update browser history with the rendered location\n   * @return {!Promise<!Node>}\n   */\n  render(pathnameOrContext, shouldUpdateHistory) {\n    const renderId = ++this.__lastStartedRenderId;\n    const context = Object.assign(\n      {\n        search: '',\n        hash: ''\n      },\n      isString(pathnameOrContext)\n        ? {pathname: pathnameOrContext}\n        : pathnameOrContext,\n      {\n        __renderId: renderId\n      }\n    );\n\n    // Find the first route that resolves to a non-empty result\n    this.ready = this.resolve(context)\n\n      // Process the result of this.resolve() and handle all special commands:\n      // (redirect / prevent / component). If the result is a 'component',\n      // then go deeper and build the entire chain of nested components matching\n      // the pathname. Also call all 'on before' callbacks along the way.\n      .then(context => this.__fullyResolveChain(context))\n\n      .then(context => {\n        if (this.__isLatestRender(context)) {\n          const previousContext = this.__previousContext;\n\n          // Check if the render was prevented and make an early return in that case\n          if (context === previousContext) {\n            // Replace the history with the previous context\n            // to make sure the URL stays the same.\n            this.__updateBrowserHistory(previousContext, true);\n            return this.location;\n          }\n\n          this.location = createLocation(context);\n\n          if (shouldUpdateHistory) {\n            // Replace only if first render redirects, so that we don’t leave\n            // the redirecting record in the history\n            this.__updateBrowserHistory(context, renderId === 1);\n          }\n\n          fireRouterEvent('location-changed', {router: this, location: this.location});\n\n          // Skip detaching/re-attaching there are no render changes\n          if (context.__skipAttach) {\n            this.__copyUnchangedElements(context, previousContext);\n            this.__previousContext = context;\n            return this.location;\n          }\n\n          this.__addAppearingContent(context, previousContext);\n          const animationDone = this.__animateIfNeeded(context);\n\n          this.__runOnAfterEnterCallbacks(context);\n          this.__runOnAfterLeaveCallbacks(context, previousContext);\n\n          return animationDone.then(() => {\n            if (this.__isLatestRender(context)) {\n              // If there is another render pass started after this one,\n              // the 'disappearing content' would be removed when the other\n              // render pass calls `this.__addAppearingContent()`\n              this.__removeDisappearingContent();\n\n              this.__previousContext = context;\n              return this.location;\n            }\n          });\n        }\n      })\n      .catch(error => {\n        if (renderId === this.__lastStartedRenderId) {\n          if (shouldUpdateHistory) {\n            this.__updateBrowserHistory(context);\n          }\n          removeDomNodes(this.__outlet && this.__outlet.children);\n          this.location = createLocation(Object.assign(context, {resolver: this}));\n          fireRouterEvent('error', Object.assign({router: this, error}, context));\n          throw error;\n        }\n      });\n    return this.ready;\n  }\n\n  // `topOfTheChainContextBeforeRedirects` is a context coming from Resolver.resolve().\n  // It would contain a 'redirect' route or the first 'component' route that\n  // matched the pathname. There might be more child 'component' routes to be\n  // resolved and added into the chain. This method would find and add them.\n  // `contextBeforeRedirects` is the context containing such a child component\n  // route. It's only necessary when this method is called recursively (otherwise\n  // it's the same as the 'top of the chain' context).\n  //\n  // Apart from building the chain of child components, this method would also\n  // handle 'redirect' routes, call 'onBefore' callbacks and handle 'prevent'\n  // and 'redirect' callback results.\n  __fullyResolveChain(topOfTheChainContextBeforeRedirects,\n    contextBeforeRedirects = topOfTheChainContextBeforeRedirects) {\n    return this.__findComponentContextAfterAllRedirects(contextBeforeRedirects)\n      // `contextAfterRedirects` is always a context with an `HTMLElement` result\n      // In other cases the promise gets rejected and .then() is not called\n      .then(contextAfterRedirects => {\n        const redirectsHappened = contextAfterRedirects !== contextBeforeRedirects;\n        const topOfTheChainContextAfterRedirects =\n          redirectsHappened ? contextAfterRedirects : topOfTheChainContextBeforeRedirects;\n\n        const matchedPath = getPathnameForRouter(\n          getMatchedPath(contextAfterRedirects.chain),\n          contextAfterRedirects.resolver\n        );\n        const isFound = (matchedPath === contextAfterRedirects.pathname);\n\n        // Recursive method to try matching more child and sibling routes\n        const findNextContextIfAny = (context, parent = context.route, prevResult) => {\n          return context.next(undefined, parent, prevResult).then(nextContext => {\n            if (nextContext === null || nextContext === notFoundResult) {\n              // Next context is not found in children, ...\n              if (isFound) {\n                // ...but original context is already fully matching - use it\n                return context;\n              } else if (parent.parent !== null) {\n                // ...and there is no full match yet - step up to check siblings\n                return findNextContextIfAny(context, parent.parent, nextContext);\n              } else {\n                return nextContext;\n              }\n            }\n\n            return nextContext;\n          });\n        };\n\n        return findNextContextIfAny(contextAfterRedirects).then(nextContext => {\n          if (nextContext === null || nextContext === notFoundResult) {\n            throw getNotFoundError(topOfTheChainContextAfterRedirects);\n          }\n\n          return nextContext\n          && nextContext !== notFoundResult\n          && nextContext !== contextAfterRedirects\n            ? this.__fullyResolveChain(topOfTheChainContextAfterRedirects, nextContext)\n            : this.__amendWithOnBeforeCallbacks(contextAfterRedirects);\n        });\n      });\n  }\n\n  __findComponentContextAfterAllRedirects(context) {\n    const result = context.result;\n    if (result instanceof HTMLElement) {\n      renderElement(context, result);\n      return Promise.resolve(context);\n    } else if (result.redirect) {\n      return this.__redirect(result.redirect, context.__redirectCount, context.__renderId)\n        .then(context => this.__findComponentContextAfterAllRedirects(context));\n    } else if (result instanceof Error) {\n      return Promise.reject(result);\n    } else {\n      return Promise.reject(\n        new Error(\n          log(\n            `Invalid route resolution result for path \"${context.pathname}\". ` +\n            `Expected redirect object or HTML element, but got: \"${logValue(result)}\". ` +\n            `Double check the action return value for the route.`\n          )\n        ));\n    }\n  }\n\n  __amendWithOnBeforeCallbacks(contextWithFullChain) {\n    return this.__runOnBeforeCallbacks(contextWithFullChain).then(amendedContext => {\n      if (amendedContext === this.__previousContext || amendedContext === contextWithFullChain) {\n        return amendedContext;\n      }\n      return this.__fullyResolveChain(amendedContext);\n    });\n  }\n\n  __runOnBeforeCallbacks(newContext) {\n    const previousContext = this.__previousContext || {};\n    const previousChain = previousContext.chain || [];\n    const newChain = newContext.chain;\n\n    let callbacks = Promise.resolve();\n    const prevent = () => ({cancel: true});\n    const redirect = (pathname) => createRedirect(newContext, pathname);\n\n    newContext.__divergedChainIndex = 0;\n    newContext.__skipAttach = false;\n    if (previousChain.length) {\n      for (let i = 0; i < Math.min(previousChain.length, newChain.length); i = ++newContext.__divergedChainIndex) {\n        if (previousChain[i].route !== newChain[i].route\n          || previousChain[i].path !== newChain[i].path && previousChain[i].element !== newChain[i].element\n          || !this.__isReusableElement(previousChain[i].element, newChain[i].element)) {\n          break;\n        }\n      }\n\n      // Skip re-attaching and notifications if element and chain do not change\n      newContext.__skipAttach =\n        // Same route chain\n        newChain.length === previousChain.length && newContext.__divergedChainIndex == newChain.length &&\n        // Same element\n        this.__isReusableElement(newContext.result, previousContext.result);\n\n      if (newContext.__skipAttach) {\n        // execute onBeforeLeave for changed segment element when skipping attach\n        for (let i = newChain.length - 1; i >= 0; i--) {\n          callbacks = this.__runOnBeforeLeaveCallbacks(callbacks, newContext, {prevent}, previousChain[i]);\n        }\n        // execute onBeforeEnter for changed segment element when skipping attach\n        for (let i = 0; i < newChain.length; i++) {\n          callbacks = this.__runOnBeforeEnterCallbacks(callbacks, newContext, {prevent, redirect}, newChain[i]);\n          previousChain[i].element.location = createLocation(newContext, previousChain[i].route);\n        }\n\n      } else {\n        // execute onBeforeLeave when NOT skipping attach\n        for (let i = previousChain.length - 1; i >= newContext.__divergedChainIndex; i--) {\n          callbacks = this.__runOnBeforeLeaveCallbacks(callbacks, newContext, {prevent}, previousChain[i]);\n        }\n      }\n    }\n    // execute onBeforeEnter when NOT skipping attach\n    if (!newContext.__skipAttach) {\n      for (let i = 0; i < newChain.length; i++) {\n        if (i < newContext.__divergedChainIndex) {\n          if (i < previousChain.length && previousChain[i].element) {\n            previousChain[i].element.location = createLocation(newContext, previousChain[i].route);\n          }\n        } else {\n          callbacks = this.__runOnBeforeEnterCallbacks(callbacks, newContext, {prevent, redirect}, newChain[i]);\n          if (newChain[i].element) {\n            newChain[i].element.location = createLocation(newContext, newChain[i].route);\n          }\n        }\n      }\n    }\n    return callbacks.then(amendmentResult => {\n      if (amendmentResult) {\n        if (amendmentResult.cancel) {\n          this.__previousContext.__renderId = newContext.__renderId;\n          return this.__previousContext;\n        }\n        if (amendmentResult.redirect) {\n          return this.__redirect(amendmentResult.redirect, newContext.__redirectCount, newContext.__renderId);\n        }\n      }\n      return newContext;\n    });\n  }\n\n  __runOnBeforeLeaveCallbacks(callbacks, newContext, commands, chainElement) {\n    const location = createLocation(newContext);\n    return callbacks.then(result => {\n      if (this.__isLatestRender(newContext)) {\n        const afterLeaveFunction = amend('onBeforeLeave', [location, commands, this], chainElement.element);\n        return afterLeaveFunction(result);\n      }\n    }).then(result => {\n      if (!(result || {}).redirect) {\n        return result;\n      }\n    });\n  }\n\n  __runOnBeforeEnterCallbacks(callbacks, newContext, commands, chainElement) {\n    const location = createLocation(newContext, chainElement.route);\n    return callbacks.then(result => {\n      if (this.__isLatestRender(newContext)) {\n        const beforeEnterFunction = amend('onBeforeEnter', [location, commands, this], chainElement.element);\n        return beforeEnterFunction(result);\n      }\n    });\n  }\n\n  __isReusableElement(element, otherElement) {\n    if (element && otherElement) {\n      return this.__createdByRouter.get(element) && this.__createdByRouter.get(otherElement)\n        ? element.localName === otherElement.localName\n        : element === otherElement;\n    }\n    return false;\n  }\n\n  __isLatestRender(context) {\n    return context.__renderId === this.__lastStartedRenderId;\n  }\n\n  __redirect(redirectData, counter, renderId) {\n    if (counter > MAX_REDIRECT_COUNT) {\n      throw new Error(log(`Too many redirects when rendering ${redirectData.from}`));\n    }\n\n    return this.resolve({\n      pathname: this.urlForPath(\n        redirectData.pathname,\n        redirectData.params\n      ),\n      redirectFrom: redirectData.from,\n      __redirectCount: (counter || 0) + 1,\n      __renderId: renderId\n    });\n  }\n\n  __ensureOutlet(outlet = this.__outlet) {\n    if (!(outlet instanceof Node)) {\n      throw new TypeError(log(`Expected router outlet to be a valid DOM Node (but got ${outlet})`));\n    }\n  }\n\n  __updateBrowserHistory({pathname, search = '', hash = ''}, replace) {\n    if (window.location.pathname !== pathname\n        || window.location.search !== search\n        || window.location.hash !== hash\n    ) {\n      const changeState = replace ? 'replaceState' : 'pushState';\n      window.history[changeState](null, document.title, pathname + search + hash);\n      window.dispatchEvent(new PopStateEvent('popstate', {state: 'vaadin-router-ignore'}));\n    }\n  }\n\n  __copyUnchangedElements(context, previousContext) {\n    // Find the deepest common parent between the last and the new component\n    // chains. Update references for the unchanged elements in the new chain\n    let deepestCommonParent = this.__outlet;\n    for (let i = 0; i < context.__divergedChainIndex; i++) {\n      const unchangedElement = previousContext && previousContext.chain[i].element;\n      if (unchangedElement) {\n        if (unchangedElement.parentNode === deepestCommonParent) {\n          context.chain[i].element = unchangedElement;\n          deepestCommonParent = unchangedElement;\n        } else {\n          break;\n        }\n      }\n    }\n    return deepestCommonParent;\n  }\n\n  __addAppearingContent(context, previousContext) {\n    this.__ensureOutlet();\n\n    // If the previous 'entering' animation has not completed yet,\n    // stop it and remove that content from the DOM before adding new one.\n    this.__removeAppearingContent();\n\n    // Copy reusable elements from the previousContext to current\n    const deepestCommonParent = this.__copyUnchangedElements(context, previousContext);\n\n    // Keep two lists of DOM elements:\n    //  - those that should be removed once the transition animation is over\n    //  - and those that should remain\n    this.__appearingContent = [];\n    this.__disappearingContent = Array\n      .from(deepestCommonParent.children)\n      .filter(\n        // Only remove layout content that was added by router\n        e => this.__addedByRouter.get(e) &&\n        // Do not remove the result element to avoid flickering\n        e !== context.result);\n\n    // Add new elements (starting after the deepest common parent) to the DOM.\n    // That way only the components that are actually different between the two\n    // locations are added to the DOM (and those that are common remain in the\n    // DOM without first removing and then adding them again).\n    let parentElement = deepestCommonParent;\n    for (let i = context.__divergedChainIndex; i < context.chain.length; i++) {\n      const elementToAdd = context.chain[i].element;\n      if (elementToAdd) {\n        parentElement.appendChild(elementToAdd);\n        this.__addedByRouter.set(elementToAdd, true);\n        if (parentElement === deepestCommonParent) {\n          this.__appearingContent.push(elementToAdd);\n        }\n        parentElement = elementToAdd;\n      }\n    }\n  }\n\n  __removeDisappearingContent() {\n    if (this.__disappearingContent) {\n      removeDomNodes(this.__disappearingContent);\n    }\n    this.__disappearingContent = null;\n    this.__appearingContent = null;\n  }\n\n  __removeAppearingContent() {\n    if (this.__disappearingContent && this.__appearingContent) {\n      removeDomNodes(this.__appearingContent);\n      this.__disappearingContent = null;\n      this.__appearingContent = null;\n    }\n  }\n\n  __runOnAfterLeaveCallbacks(currentContext, targetContext) {\n    if (!targetContext) {\n      return;\n    }\n\n    // REVERSE iteration: from Z to A\n    for (let i = targetContext.chain.length - 1; i >= currentContext.__divergedChainIndex; i--) {\n      if (!this.__isLatestRender(currentContext)) {\n        break;\n      }\n      const currentComponent = targetContext.chain[i].element;\n      if (!currentComponent) {\n        continue;\n      }\n      try {\n        const location = createLocation(currentContext);\n        runCallbackIfPossible(\n          currentComponent.onAfterLeave,\n          [location, {}, targetContext.resolver],\n          currentComponent);\n      } finally {\n        if (this.__disappearingContent.indexOf(currentComponent) > -1) {\n          removeDomNodes(currentComponent.children);\n        }\n      }\n    }\n  }\n\n  __runOnAfterEnterCallbacks(currentContext) {\n    // forward iteration: from A to Z\n    for (let i = currentContext.__divergedChainIndex; i < currentContext.chain.length; i++) {\n      if (!this.__isLatestRender(currentContext)) {\n        break;\n      }\n      const currentComponent = currentContext.chain[i].element || {};\n      const location = createLocation(currentContext, currentContext.chain[i].route);\n      runCallbackIfPossible(\n        currentComponent.onAfterEnter,\n        [location, {}, currentContext.resolver],\n        currentComponent);\n    }\n  }\n\n  __animateIfNeeded(context) {\n    const from = (this.__disappearingContent || [])[0];\n    const to = (this.__appearingContent || [])[0];\n    const promises = [];\n\n    const chain = context.chain;\n    let config;\n    for (let i = chain.length; i > 0; i--) {\n      if (chain[i - 1].route.animate) {\n        config = chain[i - 1].route.animate;\n        break;\n      }\n    }\n\n    if (from && to && config) {\n      const leave = isObject(config) && config.leave || 'leaving';\n      const enter = isObject(config) && config.enter || 'entering';\n      promises.push(animate(from, leave));\n      promises.push(animate(to, enter));\n    }\n\n    return Promise.all(promises).then(() => context);\n  }\n\n  /**\n   * Subscribes this instance to navigation events on the `window`.\n   *\n   * NOTE: beware of resource leaks. For as long as a router instance is\n   * subscribed to navigation events, it won't be garbage collected.\n   */\n  subscribe() {\n    window.addEventListener('vaadin-router-go', this.__navigationEventHandler);\n  }\n\n  /**\n   * Removes the subscription to navigation events created in the `subscribe()`\n   * method.\n   */\n  unsubscribe() {\n    window.removeEventListener('vaadin-router-go', this.__navigationEventHandler);\n  }\n\n  __onNavigationEvent(event) {\n    const {pathname, search, hash} = event ? event.detail : window.location;\n    if (isString(this.__normalizePathname(pathname))) {\n      if (event && event.preventDefault) {\n        event.preventDefault();\n      }\n      this.render({pathname, search, hash}, true);\n    }\n  }\n\n  /**\n   * Configures what triggers Router navigation events:\n   *  - `POPSTATE`: popstate events on the current `window`\n   *  - `CLICK`: click events on `<a>` links leading to the current page\n   *\n   * This method is invoked with the pre-configured values when creating a new Router instance.\n   * By default, both `POPSTATE` and `CLICK` are enabled. This setup is expected to cover most of the use cases.\n   *\n   * See the `router-config.js` for the default navigation triggers config. Based on it, you can\n   * create the own one and only import the triggers you need, instead of pulling in all the code,\n   * e.g. if you want to handle `click` differently.\n   *\n   * See also **Navigation Triggers** section in [Live Examples](#/classes/Router/demos/demo/index.html).\n   *\n   * @param {...NavigationTrigger} triggers\n   */\n  static setTriggers(...triggers) {\n    setNavigationTriggers(triggers);\n  }\n\n  /**\n   * Generates a URL for the route with the given name, optionally performing\n   * substitution of parameters.\n   *\n   * The route is searched in all the Router instances subscribed to\n   * navigation events.\n   *\n   * **Note:** For child route names, only array children are considered.\n   * It is not possible to generate URLs using a name for routes set with\n   * a children function.\n   *\n   * @function urlForName\n   * @param {!string} name the route name or the route’s `component` name.\n   * @param {Params=} params Optional object with route path parameters.\n   * Named parameters are passed by name (`params[name] = value`), unnamed\n   * parameters are passed by index (`params[index] = value`).\n   *\n   * @return {string}\n   */\n  urlForName(name, params) {\n    if (!this.__urlForName) {\n      this.__urlForName = generateUrls(this);\n    }\n    return getPathnameForRouter(\n      this.__urlForName(name, params),\n      this\n    );\n  }\n\n  /**\n   * Generates a URL for the given route path, optionally performing\n   * substitution of parameters.\n   *\n   * @param {!string} path string route path declared in [express.js syntax](https://expressjs.com/en/guide/routing.html#route-paths\").\n   * @param {Params=} params Optional object with route path parameters.\n   * Named parameters are passed by name (`params[name] = value`), unnamed\n   * parameters are passed by index (`params[index] = value`).\n   *\n   * @return {string}\n   */\n  urlForPath(path, params) {\n    return getPathnameForRouter(\n      Router.pathToRegexp.compile(path)(params),\n      this\n    );\n  }\n\n  /**\n   * Triggers navigation to a new path. Returns a boolean without waiting until\n   * the navigation is complete. Returns `true` if at least one `Router`\n   * has handled the navigation (was subscribed and had `baseUrl` matching\n   * the `path` argument), otherwise returns `false`.\n   *\n   * @param {!string|!{pathname: !string, search: (string|undefined), hash: (string|undefined)}} path\n   *   a new in-app path string, or an URL-like object with `pathname`\n   *   string property, and optional `search` and `hash` string properties.\n   * @return {boolean}\n   */\n  static go(path) {\n    const {pathname, search, hash} = isString(path)\n      ? this.__createUrl(path, 'http://a') // some base to omit origin\n      : path;\n    return fireRouterEvent('go', {pathname, search, hash});\n  }\n}\n","const DEV_MODE_CODE_REGEXP =\n  /\\/\\*\\*\\s+vaadin-dev-mode:start([\\s\\S]*)vaadin-dev-mode:end\\s+\\*\\*\\//i;\n\nconst FlowClients = window.Vaadin && window.Vaadin.Flow && window.Vaadin.Flow.clients;\n\nfunction isMinified() {\n  function test() {\n    /** vaadin-dev-mode:start\n    return false;\n    vaadin-dev-mode:end **/\n    return true;\n  }\n  return uncommentAndRun(test);\n}\n\nfunction isDevelopmentMode() {\n  try {\n    if (isForcedDevelopmentMode()) {\n      return true;\n    }\n\n    if (!isLocalhost()) {\n      return false;\n    }\n\n    if (FlowClients) {\n      return !isFlowProductionMode();\n    }\n\n    return !isMinified();\n  } catch (e) {\n    // Some error in this code, assume production so no further actions will be taken\n    return false;\n  }\n}\n\nfunction isForcedDevelopmentMode() {\n  return localStorage.getItem(\"vaadin.developmentmode.force\");\n}\n\nfunction isLocalhost() {\n  return ([\"localhost\",\"127.0.0.1\"].indexOf(window.location.hostname) >= 0);\n}\n\nfunction isFlowProductionMode() {\n  if (FlowClients) {\n    const productionModeApps = Object.keys(FlowClients)\n      .map(key => FlowClients[key])\n      .filter(client => client.productionMode);\n    if (productionModeApps.length > 0) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction uncommentAndRun(callback, args) {\n  if (typeof callback !== 'function') {\n    return;\n  }\n\n  const match = DEV_MODE_CODE_REGEXP.exec(callback.toString());\n  if (match) {\n    try {\n      // requires CSP: script-src 'unsafe-eval'\n      callback = new Function(match[1]);\n    } catch (e) {\n      // eat the exception\n      console.log('vaadin-development-mode-detector: uncommentAndRun() failed', e)\n    }\n  }\n\n  return callback(args);\n}\n\n// A guard against polymer-modulizer removing the window.Vaadin\n// initialization above.\nwindow['Vaadin'] = window['Vaadin'] || {};\n\n/**\n * Inspects the source code of the given `callback` function for\n * specially-marked _commented_ code. If such commented code is found in the\n * callback source, uncomments and runs that code instead of the callback\n * itself. Otherwise runs the callback as is.\n *\n * The optional arguments are passed into the callback / uncommented code,\n * the result is returned.\n *\n * See the `isMinified()` function source code in this file for an example.\n *\n */\nexport const runIfDevelopmentMode = function(callback, args) {\n  if (window.Vaadin.developmentMode) {\n    return uncommentAndRun(callback, args);\n  }\n};\n\nif (window.Vaadin.developmentMode === undefined) {\n  window.Vaadin.developmentMode = isDevelopmentMode();\n}\n","/* This file is autogenerated from src/vaadin-usage-statistics.tpl.html */\n/*\n\nThis script gathers usage statistics from the application running in development mode.\n\nStatistics gathering is automatically disabled and excluded from production builds.\n\nFor details and to opt-out, see https://github.com/vaadin/vaadin-usage-statistics.\n\n*/\n/*\n  FIXME(polymer-modulizer): the above comments were extracted\n  from HTML and may be out of place here. Review them and\n  then delete this comment!\n*/\nimport { runIfDevelopmentMode } from '@vaadin/vaadin-development-mode-detector/vaadin-development-mode-detector.js';\n\nfunction maybeGatherAndSendStats() {\n  /** vaadin-dev-mode:start\n  (function () {\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar getPolymerVersion = function getPolymerVersion() {\n  return window.Polymer && window.Polymer.version;\n};\n\nvar StatisticsGatherer = function () {\n  function StatisticsGatherer(logger) {\n    classCallCheck(this, StatisticsGatherer);\n\n    this.now = new Date().getTime();\n    this.logger = logger;\n  }\n\n  createClass(StatisticsGatherer, [{\n    key: 'frameworkVersionDetectors',\n    value: function frameworkVersionDetectors() {\n      return {\n        'Flow': function Flow() {\n          if (window.Vaadin && window.Vaadin.Flow && window.Vaadin.Flow.clients) {\n            var flowVersions = Object.keys(window.Vaadin.Flow.clients).map(function (key) {\n              return window.Vaadin.Flow.clients[key];\n            }).filter(function (client) {\n              return client.getVersionInfo;\n            }).map(function (client) {\n              return client.getVersionInfo().flow;\n            });\n            if (flowVersions.length > 0) {\n              return flowVersions[0];\n            }\n          }\n        },\n        'Vaadin Framework': function VaadinFramework() {\n          if (window.vaadin && window.vaadin.clients) {\n            var frameworkVersions = Object.values(window.vaadin.clients).filter(function (client) {\n              return client.getVersionInfo;\n            }).map(function (client) {\n              return client.getVersionInfo().vaadinVersion;\n            });\n            if (frameworkVersions.length > 0) {\n              return frameworkVersions[0];\n            }\n          }\n        },\n        'AngularJs': function AngularJs() {\n          if (window.angular && window.angular.version && window.angular.version) {\n            return window.angular.version.full;\n          }\n        },\n        'Angular': function Angular() {\n          if (window.ng) {\n            var tags = document.querySelectorAll(\"[ng-version]\");\n            if (tags.length > 0) {\n              return tags[0].getAttribute(\"ng-version\");\n            }\n            return \"Unknown\";\n          }\n        },\n        'Backbone.js': function BackboneJs() {\n          if (window.Backbone) {\n            return window.Backbone.VERSION;\n          }\n        },\n        'React': function React() {\n          var reactSelector = '[data-reactroot], [data-reactid]';\n          if (!!document.querySelector(reactSelector)) {\n            // React does not publish the version by default\n            return \"unknown\";\n          }\n        },\n        'Ember': function Ember() {\n          if (window.Em && window.Em.VERSION) {\n            return window.Em.VERSION;\n          } else if (window.Ember && window.Ember.VERSION) {\n            return window.Ember.VERSION;\n          }\n        },\n        'jQuery': function (_jQuery) {\n          function jQuery() {\n            return _jQuery.apply(this, arguments);\n          }\n\n          jQuery.toString = function () {\n            return _jQuery.toString();\n          };\n\n          return jQuery;\n        }(function () {\n          if (typeof jQuery === 'function' && jQuery.prototype.jquery !== undefined) {\n            return jQuery.prototype.jquery;\n          }\n        }),\n        'Polymer': function Polymer() {\n          var version = getPolymerVersion();\n          if (version) {\n            return version;\n          }\n        },\n        'LitElement': function LitElement() {\n          var version = window.litElementVersions && window.litElementVersions[0];\n          if (version) {\n            return version;\n          }\n        },\n        'LitHtml': function LitHtml() {\n          var version = window.litHtmlVersions && window.litHtmlVersions[0];\n          if (version) {\n            return version;\n          }\n        },\n        'Vue.js': function VueJs() {\n          if (window.Vue) {\n            return window.Vue.version;\n          }\n        }\n      };\n    }\n  }, {\n    key: 'getUsedVaadinElements',\n    value: function getUsedVaadinElements(elements) {\n      var version = getPolymerVersion();\n      var elementClasses = void 0;\n      // NOTE: In case you edit the code here, YOU MUST UPDATE any statistics reporting code in Flow.\n      // Check all locations calling the method getEntries() in\n      // https://github.com/vaadin/flow/blob/master/flow-server/src/main/java/com/vaadin/flow/internal/UsageStatistics.java#L106\n      // Currently it is only used by BootstrapHandler.\n      if (version && version.indexOf('2') === 0) {\n        // Polymer 2: components classes are stored in window.Vaadin\n        elementClasses = Object.keys(window.Vaadin).map(function (c) {\n          return window.Vaadin[c];\n        }).filter(function (c) {\n          return c.is;\n        });\n      } else {\n        // Polymer 3: components classes are stored in window.Vaadin.registrations\n        elementClasses = window.Vaadin.registrations || [];\n      }\n      elementClasses.forEach(function (klass) {\n        var version = klass.version ? klass.version : \"0.0.0\";\n        elements[klass.is] = { version: version };\n      });\n    }\n  }, {\n    key: 'getUsedVaadinThemes',\n    value: function getUsedVaadinThemes(themes) {\n      ['Lumo', 'Material'].forEach(function (themeName) {\n        var theme;\n        var version = getPolymerVersion();\n        if (version && version.indexOf('2') === 0) {\n          // Polymer 2: themes are stored in window.Vaadin\n          theme = window.Vaadin[themeName];\n        } else {\n          // Polymer 3: themes are stored in custom element registry\n          theme = customElements.get('vaadin-' + themeName.toLowerCase() + '-styles');\n        }\n        if (theme && theme.version) {\n          themes[themeName] = { version: theme.version };\n        }\n      });\n    }\n  }, {\n    key: 'getFrameworks',\n    value: function getFrameworks(frameworks) {\n      var detectors = this.frameworkVersionDetectors();\n      Object.keys(detectors).forEach(function (framework) {\n        var detector = detectors[framework];\n        try {\n          var version = detector();\n          if (version) {\n            frameworks[framework] = { version: version };\n          }\n        } catch (e) {}\n      });\n    }\n  }, {\n    key: 'gather',\n    value: function gather(storage) {\n      var storedStats = storage.read();\n      var gatheredStats = {};\n      var types = [\"elements\", \"frameworks\", \"themes\"];\n\n      types.forEach(function (type) {\n        gatheredStats[type] = {};\n        if (!storedStats[type]) {\n          storedStats[type] = {};\n        }\n      });\n\n      var previousStats = JSON.stringify(storedStats);\n\n      this.getUsedVaadinElements(gatheredStats.elements);\n      this.getFrameworks(gatheredStats.frameworks);\n      this.getUsedVaadinThemes(gatheredStats.themes);\n\n      var now = this.now;\n      types.forEach(function (type) {\n        var keys = Object.keys(gatheredStats[type]);\n        keys.forEach(function (key) {\n          if (!storedStats[type][key] || _typeof(storedStats[type][key]) != _typeof({})) {\n            storedStats[type][key] = { firstUsed: now };\n          }\n          // Discards any previously logged version number\n          storedStats[type][key].version = gatheredStats[type][key].version;\n          storedStats[type][key].lastUsed = now;\n        });\n      });\n\n      var newStats = JSON.stringify(storedStats);\n      storage.write(newStats);\n      if (newStats != previousStats && Object.keys(storedStats).length > 0) {\n        this.logger.debug(\"New stats: \" + newStats);\n      }\n    }\n  }]);\n  return StatisticsGatherer;\n}();\n\nvar StatisticsStorage = function () {\n  function StatisticsStorage(key) {\n    classCallCheck(this, StatisticsStorage);\n\n    this.key = key;\n  }\n\n  createClass(StatisticsStorage, [{\n    key: 'read',\n    value: function read() {\n      var localStorageStatsString = localStorage.getItem(this.key);\n      try {\n        return JSON.parse(localStorageStatsString ? localStorageStatsString : '{}');\n      } catch (e) {\n        return {};\n      }\n    }\n  }, {\n    key: 'write',\n    value: function write(data) {\n      localStorage.setItem(this.key, data);\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      localStorage.removeItem(this.key);\n    }\n  }, {\n    key: 'isEmpty',\n    value: function isEmpty() {\n      var storedStats = this.read();\n      var empty = true;\n      Object.keys(storedStats).forEach(function (key) {\n        if (Object.keys(storedStats[key]).length > 0) {\n          empty = false;\n        }\n      });\n\n      return empty;\n    }\n  }]);\n  return StatisticsStorage;\n}();\n\nvar StatisticsSender = function () {\n  function StatisticsSender(url, logger) {\n    classCallCheck(this, StatisticsSender);\n\n    this.url = url;\n    this.logger = logger;\n  }\n\n  createClass(StatisticsSender, [{\n    key: 'send',\n    value: function send(data, errorHandler) {\n      var logger = this.logger;\n\n      if (navigator.onLine === false) {\n        logger.debug(\"Offline, can't send\");\n        errorHandler();\n        return;\n      }\n      logger.debug(\"Sending data to \" + this.url);\n\n      var req = new XMLHttpRequest();\n      req.withCredentials = true;\n      req.addEventListener(\"load\", function () {\n        // Stats sent, nothing more to do\n        logger.debug(\"Response: \" + req.responseText);\n      });\n      req.addEventListener(\"error\", function () {\n        logger.debug(\"Send failed\");\n        errorHandler();\n      });\n      req.addEventListener(\"abort\", function () {\n        logger.debug(\"Send aborted\");\n        errorHandler();\n      });\n      req.open(\"POST\", this.url);\n      req.setRequestHeader(\"Content-Type\", \"application/json\");\n      req.send(data);\n    }\n  }]);\n  return StatisticsSender;\n}();\n\nvar StatisticsLogger = function () {\n  function StatisticsLogger(id) {\n    classCallCheck(this, StatisticsLogger);\n\n    this.id = id;\n  }\n\n  createClass(StatisticsLogger, [{\n    key: '_isDebug',\n    value: function _isDebug() {\n      return localStorage.getItem(\"vaadin.\" + this.id + \".debug\");\n    }\n  }, {\n    key: 'debug',\n    value: function debug(msg) {\n      if (this._isDebug()) {\n        console.info(this.id + \": \" + msg);\n      }\n    }\n  }]);\n  return StatisticsLogger;\n}();\n\nvar UsageStatistics = function () {\n  function UsageStatistics() {\n    classCallCheck(this, UsageStatistics);\n\n    this.now = new Date();\n    this.timeNow = this.now.getTime();\n    this.gatherDelay = 10; // Delay between loading this file and gathering stats\n    this.initialDelay = 24 * 60 * 60;\n\n    this.logger = new StatisticsLogger(\"statistics\");\n    this.storage = new StatisticsStorage(\"vaadin.statistics.basket\");\n    this.gatherer = new StatisticsGatherer(this.logger);\n    this.sender = new StatisticsSender(\"https://tools.vaadin.com/usage-stats/submit\", this.logger);\n  }\n\n  createClass(UsageStatistics, [{\n    key: 'maybeGatherAndSend',\n    value: function maybeGatherAndSend() {\n      var _this = this;\n\n      if (localStorage.getItem(UsageStatistics.optOutKey)) {\n        return;\n      }\n      this.gatherer.gather(this.storage);\n      setTimeout(function () {\n        _this.maybeSend();\n      }, this.gatherDelay * 1000);\n    }\n  }, {\n    key: 'lottery',\n    value: function lottery() {\n      return true;\n    }\n  }, {\n    key: 'currentMonth',\n    value: function currentMonth() {\n      return this.now.getYear() * 12 + this.now.getMonth();\n    }\n  }, {\n    key: 'maybeSend',\n    value: function maybeSend() {\n      var firstUse = Number(localStorage.getItem(UsageStatistics.firstUseKey));\n      var monthProcessed = Number(localStorage.getItem(UsageStatistics.monthProcessedKey));\n\n      if (!firstUse) {\n        // Use a grace period to avoid interfering with tests, incognito mode etc\n        firstUse = this.timeNow;\n        localStorage.setItem(UsageStatistics.firstUseKey, firstUse);\n      }\n\n      if (this.timeNow < firstUse + this.initialDelay * 1000) {\n        this.logger.debug(\"No statistics will be sent until the initial delay of \" + this.initialDelay + \"s has passed\");\n        return;\n      }\n      if (this.currentMonth() <= monthProcessed) {\n        this.logger.debug(\"This month has already been processed\");\n        return;\n      }\n      localStorage.setItem(UsageStatistics.monthProcessedKey, this.currentMonth());\n      // Use random sampling\n      if (this.lottery()) {\n        this.logger.debug(\"Congratulations, we have a winner!\");\n      } else {\n        this.logger.debug(\"Sorry, no stats from you this time\");\n        return;\n      }\n\n      this.send();\n    }\n  }, {\n    key: 'send',\n    value: function send() {\n      // Ensure we have the latest data\n      this.gatherer.gather(this.storage);\n\n      // Read, send and clean up\n      var data = this.storage.read();\n      data[\"firstUse\"] = Number(localStorage.getItem(UsageStatistics.firstUseKey));\n      data[\"usageStatisticsVersion\"] = UsageStatistics.version;\n      var info = 'This request contains usage statistics gathered from the application running in development mode. \\n\\nStatistics gathering is automatically disabled and excluded from production builds.\\n\\nFor details and to opt-out, see https://github.com/vaadin/vaadin-usage-statistics.\\n\\n\\n\\n';\n      var self = this;\n      this.sender.send(info + JSON.stringify(data), function () {\n        // Revert the 'month processed' flag\n        localStorage.setItem(UsageStatistics.monthProcessedKey, self.currentMonth() - 1);\n      });\n    }\n  }], [{\n    key: 'version',\n    get: function get$1() {\n      return '2.1.0';\n    }\n  }, {\n    key: 'firstUseKey',\n    get: function get$1() {\n      return 'vaadin.statistics.firstuse';\n    }\n  }, {\n    key: 'monthProcessedKey',\n    get: function get$1() {\n      return 'vaadin.statistics.monthProcessed';\n    }\n  }, {\n    key: 'optOutKey',\n    get: function get$1() {\n      return 'vaadin.statistics.optout';\n    }\n  }]);\n  return UsageStatistics;\n}();\n\ntry {\n  window.Vaadin = window.Vaadin || {};\n  window.Vaadin.usageStatsChecker = window.Vaadin.usageStatsChecker || new UsageStatistics();\n  window.Vaadin.usageStatsChecker.maybeGatherAndSend();\n} catch (e) {\n  // Intentionally ignored as this is not a problem in the app being developed\n}\n\n}());\n\n  vaadin-dev-mode:end **/\n}\n\nexport const usageStatistics = function() {\n  if (typeof runIfDevelopmentMode === 'function') {\n    return runIfDevelopmentMode(maybeGatherAndSendStats);\n  }\n};\n","import {usageStatistics} from '@vaadin/vaadin-usage-statistics/vaadin-usage-statistics.js';\n\nwindow.Vaadin = window.Vaadin || {};\nwindow.Vaadin.registrations = window.Vaadin.registrations || [];\n\nwindow.Vaadin.registrations.push({\n  is: '@vaadin/router',\n  version: '1.7.4',\n});\n\nusageStatistics();\n","import CLICK from './triggers/click.js';\nimport POPSTATE from './triggers/popstate.js';\nimport {Router} from './router.js';\nimport './router-meta.js';\nRouter.NavigationTrigger = {POPSTATE, CLICK};\nexport {Router};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw Error();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nexport function deepCopy<T>(value: T): T {\n  return deepExtend(undefined, value) as T;\n}\n\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n *\n * Note: we don't merge __proto__ to prevent prototype pollution\n */\nexport function deepExtend(target: unknown, source: unknown): unknown {\n  if (!(source instanceof Object)) {\n    return source;\n  }\n\n  switch (source.constructor) {\n    case Date:\n      // Treat Dates like scalars; if the target date object had any child\n      // properties - they will be lost!\n      const dateValue = source as Date;\n      return new Date(dateValue.getTime());\n\n    case Object:\n      if (target === undefined) {\n        target = {};\n      }\n      break;\n    case Array:\n      // Always copy the array source and overwrite the target.\n      target = [];\n      break;\n\n    default:\n      // Not a plain Object - treat it as a scalar.\n      return source;\n  }\n\n  for (const prop in source) {\n    // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\n    if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\n      continue;\n    }\n    (target as Record<string, unknown>)[prop] = deepExtend(\n      (target as Record<string, unknown>)[prop],\n      (source as Record<string, unknown>)[prop]\n    );\n  }\n\n  return target;\n}\n\nfunction isValidKey(key: string): boolean {\n  return key !== '__proto__';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  return typeof indexedDB === 'object';\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Evaluates a JSON string into a javascript object.\n *\n * @param {string} str A string containing JSON.\n * @return {*} The javascript object representing the specified JSON.\n */\nexport function jsonEval(str: string): unknown {\n  return JSON.parse(str);\n}\n\n/**\n * Returns JSON representing a javascript object.\n * @param {*} data Javascript object to be stringified.\n * @return {string} The JSON contents of the object.\n */\nexport function stringify(data: unknown): string {\n  return JSON.stringify(data);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { jsonEval } from './json';\n\ninterface Claims {\n  [key: string]: {};\n}\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token into constituent parts.\n *\n * Notes:\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const decode = function (token: string): DecodedToken {\n  let header = {},\n    claims: Claims = {},\n    data = {},\n    signature = '';\n\n  try {\n    const parts = token.split('.');\n    header = jsonEval(base64Decode(parts[0]) || '') as object;\n    claims = jsonEval(base64Decode(parts[1]) || '') as Claims;\n    signature = parts[2];\n    data = claims['d'] || {};\n    delete claims['d'];\n  } catch (e) {}\n\n  return {\n    header,\n    claims,\n    data,\n    signature\n  };\n};\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidTimestamp = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  const now: number = Math.floor(new Date().getTime() / 1000);\n  let validSince: number = 0,\n    validUntil: number = 0;\n\n  if (typeof claims === 'object') {\n    if (claims.hasOwnProperty('nbf')) {\n      validSince = claims['nbf'] as number;\n    } else if (claims.hasOwnProperty('iat')) {\n      validSince = claims['iat'] as number;\n    }\n\n    if (claims.hasOwnProperty('exp')) {\n      validUntil = claims['exp'] as number;\n    } else {\n      // token will expire after 24h by default\n      validUntil = validSince + 86400;\n    }\n  }\n\n  return (\n    !!now &&\n    !!validSince &&\n    !!validUntil &&\n    now >= validSince &&\n    now <= validUntil\n  );\n};\n\n/**\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\n *\n * Notes:\n * - May return null if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const issuedAtTime = function (token: string): number | null {\n  const claims: Claims = decode(token).claims;\n  if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\n    return claims['iat'] as number;\n  }\n  return null;\n};\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidFormat = function (token: string): boolean {\n  const decoded = decode(token),\n    claims = decoded.claims;\n\n  return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\n};\n\n/**\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isAdmin = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  return typeof claims === 'object' && claims['admin'] === true;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\n * params object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n */\nexport function querystring(querystringParams: {\n  [key: string]: string | number;\n}): string {\n  const params = [];\n  for (const [key, value] of Object.entries(querystringParams)) {\n    if (Array.isArray(value)) {\n      value.forEach(arrayVal => {\n        params.push(\n          encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal)\n        );\n      });\n    } else {\n      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    }\n  }\n  return params.length ? '&' + params.join('&') : '';\n}\n\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\n * (e.g. {arg: 'val', arg2: 'val2'})\n */\nexport function querystringDecode(querystring: string): Record<string, string> {\n  const obj: Record<string, string> = {};\n  const tokens = querystring.replace(/^\\?/, '').split('&');\n\n  tokens.forEach(token => {\n    if (token) {\n      const [key, value] = token.split('=');\n      obj[decodeURIComponent(key)] = decodeURIComponent(value);\n    }\n  });\n  return obj;\n}\n\n/**\n * Extract the query string part of a URL, including the leading question mark (if present).\n */\nexport function extractQuerystring(url: string): string {\n  const queryStart = url.indexOf('?');\n  if (!queryStart) {\n    return '';\n  }\n  const fragmentStart = url.indexOf('#', queryStart);\n  return url.substring(\n    queryStart,\n    fragmentStart > 0 ? fragmentStart : undefined\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview SHA-1 cryptographic hash.\n * Variable names follow the notation in FIPS PUB 180-3:\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\n *\n * Usage:\n *   var sha1 = new sha1();\n *   sha1.update(bytes);\n *   var hash = sha1.digest();\n *\n * Performance:\n *   Chrome 23:   ~400 Mbit/s\n *   Firefox 16:  ~250 Mbit/s\n *\n */\n\n/**\n * SHA-1 cryptographic hash constructor.\n *\n * The properties declared here are discussed in the above algorithm document.\n * @constructor\n * @final\n * @struct\n */\nexport class Sha1 {\n  /**\n   * Holds the previous values of accumulated variables a-e in the compress_\n   * function.\n   * @private\n   */\n  private chain_: number[] = [];\n\n  /**\n   * A buffer holding the partially computed hash result.\n   * @private\n   */\n  private buf_: number[] = [];\n\n  /**\n   * An array of 80 bytes, each a part of the message to be hashed.  Referred to\n   * as the message schedule in the docs.\n   * @private\n   */\n  private W_: number[] = [];\n\n  /**\n   * Contains data needed to pad messages less than 64 bytes.\n   * @private\n   */\n  private pad_: number[] = [];\n\n  /**\n   * @private {number}\n   */\n  private inbuf_: number = 0;\n\n  /**\n   * @private {number}\n   */\n  private total_: number = 0;\n\n  blockSize: number;\n\n  constructor() {\n    this.blockSize = 512 / 8;\n\n    this.pad_[0] = 128;\n    for (let i = 1; i < this.blockSize; ++i) {\n      this.pad_[i] = 0;\n    }\n\n    this.reset();\n  }\n\n  reset(): void {\n    this.chain_[0] = 0x67452301;\n    this.chain_[1] = 0xefcdab89;\n    this.chain_[2] = 0x98badcfe;\n    this.chain_[3] = 0x10325476;\n    this.chain_[4] = 0xc3d2e1f0;\n\n    this.inbuf_ = 0;\n    this.total_ = 0;\n  }\n\n  /**\n   * Internal compress helper function.\n   * @param buf Block to compress.\n   * @param offset Offset of the block in the buffer.\n   * @private\n   */\n  compress_(buf: number[] | Uint8Array | string, offset?: number): void {\n    if (!offset) {\n      offset = 0;\n    }\n\n    const W = this.W_;\n\n    // get 16 big endian words\n    if (typeof buf === 'string') {\n      for (let i = 0; i < 16; i++) {\n        // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\n        // have a bug that turns the post-increment ++ operator into pre-increment\n        // during JIT compilation.  We have code that depends heavily on SHA-1 for\n        // correctness and which is affected by this bug, so I've removed all uses\n        // of post-increment ++ in which the result value is used.  We can revert\n        // this change once the Safari bug\n        // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\n        // most clients have been updated.\n        W[i] =\n          (buf.charCodeAt(offset) << 24) |\n          (buf.charCodeAt(offset + 1) << 16) |\n          (buf.charCodeAt(offset + 2) << 8) |\n          buf.charCodeAt(offset + 3);\n        offset += 4;\n      }\n    } else {\n      for (let i = 0; i < 16; i++) {\n        W[i] =\n          (buf[offset] << 24) |\n          (buf[offset + 1] << 16) |\n          (buf[offset + 2] << 8) |\n          buf[offset + 3];\n        offset += 4;\n      }\n    }\n\n    // expand to 80 words\n    for (let i = 16; i < 80; i++) {\n      const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n      W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\n    }\n\n    let a = this.chain_[0];\n    let b = this.chain_[1];\n    let c = this.chain_[2];\n    let d = this.chain_[3];\n    let e = this.chain_[4];\n    let f, k;\n\n    // TODO(user): Try to unroll this loop to speed up the computation.\n    for (let i = 0; i < 80; i++) {\n      if (i < 40) {\n        if (i < 20) {\n          f = d ^ (b & (c ^ d));\n          k = 0x5a827999;\n        } else {\n          f = b ^ c ^ d;\n          k = 0x6ed9eba1;\n        }\n      } else {\n        if (i < 60) {\n          f = (b & c) | (d & (b | c));\n          k = 0x8f1bbcdc;\n        } else {\n          f = b ^ c ^ d;\n          k = 0xca62c1d6;\n        }\n      }\n\n      const t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\n      e = d;\n      d = c;\n      c = ((b << 30) | (b >>> 2)) & 0xffffffff;\n      b = a;\n      a = t;\n    }\n\n    this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\n    this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\n    this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\n    this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\n    this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\n  }\n\n  update(bytes?: number[] | Uint8Array | string, length?: number): void {\n    // TODO(johnlenz): tighten the function signature and remove this check\n    if (bytes == null) {\n      return;\n    }\n\n    if (length === undefined) {\n      length = bytes.length;\n    }\n\n    const lengthMinusBlock = length - this.blockSize;\n    let n = 0;\n    // Using local instead of member variables gives ~5% speedup on Firefox 16.\n    const buf = this.buf_;\n    let inbuf = this.inbuf_;\n\n    // The outer while loop should execute at most twice.\n    while (n < length) {\n      // When we have no data in the block to top up, we can directly process the\n      // input buffer (assuming it contains sufficient data). This gives ~25%\n      // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\n      // the data is provided in large chunks (or in multiples of 64 bytes).\n      if (inbuf === 0) {\n        while (n <= lengthMinusBlock) {\n          this.compress_(bytes, n);\n          n += this.blockSize;\n        }\n      }\n\n      if (typeof bytes === 'string') {\n        while (n < length) {\n          buf[inbuf] = bytes.charCodeAt(n);\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      } else {\n        while (n < length) {\n          buf[inbuf] = bytes[n];\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      }\n    }\n\n    this.inbuf_ = inbuf;\n    this.total_ += length;\n  }\n\n  /** @override */\n  digest(): number[] {\n    const digest: number[] = [];\n    let totalBits = this.total_ * 8;\n\n    // Add pad 0x80 0x00*.\n    if (this.inbuf_ < 56) {\n      this.update(this.pad_, 56 - this.inbuf_);\n    } else {\n      this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\n    }\n\n    // Add # bits.\n    for (let i = this.blockSize - 1; i >= 56; i--) {\n      this.buf_[i] = totalBits & 255;\n      totalBits /= 256; // Don't use bit-shifting here!\n    }\n\n    this.compress_(this.buf_);\n\n    let n = 0;\n    for (let i = 0; i < 5; i++) {\n      for (let j = 24; j >= 0; j -= 8) {\n        digest[n] = (this.chain_[i] >> j) & 255;\n        ++n;\n      }\n    }\n    return digest;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport type NextFn<T> = (value: T) => void;\nexport type ErrorFn = (error: Error) => void;\nexport type CompleteFn = () => void;\n\nexport interface Observer<T> {\n  // Called once for each value in a stream of values.\n  next: NextFn<T>;\n\n  // A stream terminates by a single call to EITHER error() or complete().\n  error: ErrorFn;\n\n  // No events will be sent to next() once complete() is called.\n  complete: CompleteFn;\n}\n\nexport type PartialObserver<T> = Partial<Observer<T>>;\n\n// TODO: Support also Unsubscribe.unsubscribe?\nexport type Unsubscribe = () => void;\n\n/**\n * The Subscribe interface has two forms - passing the inline function\n * callbacks, or a object interface with callback properties.\n */\nexport interface Subscribe<T> {\n  (next?: NextFn<T>, error?: ErrorFn, complete?: CompleteFn): Unsubscribe;\n  (observer: PartialObserver<T>): Unsubscribe;\n}\n\nexport interface Observable<T> {\n  // Subscribe method\n  subscribe: Subscribe<T>;\n}\n\nexport type Executor<T> = (observer: Observer<T>) => void;\n\n/**\n * Helper to make a Subscribe function (just like Promise helps make a\n * Thenable).\n *\n * @param executor Function which can make calls to a single Observer\n *     as a proxy.\n * @param onNoObservers Callback when count of Observers goes to zero.\n */\nexport function createSubscribe<T>(\n  executor: Executor<T>,\n  onNoObservers?: Executor<T>\n): Subscribe<T> {\n  const proxy = new ObserverProxy<T>(executor, onNoObservers);\n  return proxy.subscribe.bind(proxy);\n}\n\n/**\n * Implement fan-out for any number of Observers attached via a subscribe\n * function.\n */\nclass ObserverProxy<T> implements Observer<T> {\n  private observers: Array<Observer<T>> | undefined = [];\n  private unsubscribes: Unsubscribe[] = [];\n  private onNoObservers: Executor<T> | undefined;\n  private observerCount = 0;\n  // Micro-task scheduling by calling task.then().\n  private task = Promise.resolve();\n  private finalized = false;\n  private finalError?: Error;\n\n  /**\n   * @param executor Function which can make calls to a single Observer\n   *     as a proxy.\n   * @param onNoObservers Callback when count of Observers goes to zero.\n   */\n  constructor(executor: Executor<T>, onNoObservers?: Executor<T>) {\n    this.onNoObservers = onNoObservers;\n    // Call the executor asynchronously so subscribers that are called\n    // synchronously after the creation of the subscribe function\n    // can still receive the very first value generated in the executor.\n    this.task\n      .then(() => {\n        executor(this);\n      })\n      .catch(e => {\n        this.error(e);\n      });\n  }\n\n  next(value: T): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.next(value);\n    });\n  }\n\n  error(error: Error): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.error(error);\n    });\n    this.close(error);\n  }\n\n  complete(): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.complete();\n    });\n    this.close();\n  }\n\n  /**\n   * Subscribe function that can be used to add an Observer to the fan-out list.\n   *\n   * - We require that no event is sent to a subscriber sychronously to their\n   *   call to subscribe().\n   */\n  subscribe(\n    nextOrObserver?: NextFn<T> | PartialObserver<T>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ): Unsubscribe {\n    let observer: Observer<T>;\n\n    if (\n      nextOrObserver === undefined &&\n      error === undefined &&\n      complete === undefined\n    ) {\n      throw new Error('Missing Observer.');\n    }\n\n    // Assemble an Observer object when passed as callback functions.\n    if (\n      implementsAnyMethods(nextOrObserver as { [key: string]: unknown }, [\n        'next',\n        'error',\n        'complete'\n      ])\n    ) {\n      observer = nextOrObserver as Observer<T>;\n    } else {\n      observer = {\n        next: nextOrObserver as NextFn<T>,\n        error,\n        complete\n      } as Observer<T>;\n    }\n\n    if (observer.next === undefined) {\n      observer.next = noop as NextFn<T>;\n    }\n    if (observer.error === undefined) {\n      observer.error = noop as ErrorFn;\n    }\n    if (observer.complete === undefined) {\n      observer.complete = noop as CompleteFn;\n    }\n\n    const unsub = this.unsubscribeOne.bind(this, this.observers!.length);\n\n    // Attempt to subscribe to a terminated Observable - we\n    // just respond to the Observer with the final error or complete\n    // event.\n    if (this.finalized) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.task.then(() => {\n        try {\n          if (this.finalError) {\n            observer.error(this.finalError);\n          } else {\n            observer.complete();\n          }\n        } catch (e) {\n          // nothing\n        }\n        return;\n      });\n    }\n\n    this.observers!.push(observer as Observer<T>);\n\n    return unsub;\n  }\n\n  // Unsubscribe is synchronous - we guarantee that no events are sent to\n  // any unsubscribed Observer.\n  private unsubscribeOne(i: number): void {\n    if (this.observers === undefined || this.observers[i] === undefined) {\n      return;\n    }\n\n    delete this.observers[i];\n\n    this.observerCount -= 1;\n    if (this.observerCount === 0 && this.onNoObservers !== undefined) {\n      this.onNoObservers(this);\n    }\n  }\n\n  private forEachObserver(fn: (observer: Observer<T>) => void): void {\n    if (this.finalized) {\n      // Already closed by previous event....just eat the additional values.\n      return;\n    }\n\n    // Since sendOne calls asynchronously - there is no chance that\n    // this.observers will become undefined.\n    for (let i = 0; i < this.observers!.length; i++) {\n      this.sendOne(i, fn);\n    }\n  }\n\n  // Call the Observer via one of it's callback function. We are careful to\n  // confirm that the observe has not been unsubscribed since this asynchronous\n  // function had been queued.\n  private sendOne(i: number, fn: (observer: Observer<T>) => void): void {\n    // Execute the callback asynchronously\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      if (this.observers !== undefined && this.observers[i] !== undefined) {\n        try {\n          fn(this.observers[i]);\n        } catch (e) {\n          // Ignore exceptions raised in Observers or missing methods of an\n          // Observer.\n          // Log error to console. b/31404806\n          if (typeof console !== 'undefined' && console.error) {\n            console.error(e);\n          }\n        }\n      }\n    });\n  }\n\n  private close(err?: Error): void {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    if (err !== undefined) {\n      this.finalError = err;\n    }\n    // Proxy is no longer needed - garbage collect references\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      this.observers = undefined;\n      this.onNoObservers = undefined;\n    });\n  }\n}\n\n/** Turn synchronous function into one called asynchronously. */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(fn: Function, onError?: ErrorFn): Function {\n  return (...args: unknown[]) => {\n    Promise.resolve(true)\n      .then(() => {\n        fn(...args);\n      })\n      .catch((error: Error) => {\n        if (onError) {\n          onError(error);\n        }\n      });\n  };\n}\n\n/**\n * Return true if the object passed in implements any of the named methods.\n */\nfunction implementsAnyMethods(\n  obj: { [key: string]: unknown },\n  methods: string[]\n): boolean {\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n\n  for (const method of methods) {\n    if (method in obj && typeof obj[method] === 'function') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction noop(): void {\n  // do nothing\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Check to make sure the appropriate number of arguments are provided for a public function.\n * Throws an error if it fails.\n *\n * @param fnName The function name\n * @param minCount The minimum number of arguments to allow for the function call\n * @param maxCount The maximum number of argument to allow for the function call\n * @param argCount The actual number of arguments provided.\n */\nexport const validateArgCount = function (\n  fnName: string,\n  minCount: number,\n  maxCount: number,\n  argCount: number\n): void {\n  let argError;\n  if (argCount < minCount) {\n    argError = 'at least ' + minCount;\n  } else if (argCount > maxCount) {\n    argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\n  }\n  if (argError) {\n    const error =\n      fnName +\n      ' failed: Was called with ' +\n      argCount +\n      (argCount === 1 ? ' argument.' : ' arguments.') +\n      ' Expects ' +\n      argError +\n      '.';\n    throw new Error(error);\n  }\n};\n\n/**\n * Generates a string to prefix an error message about failed argument validation\n *\n * @param fnName The function name\n * @param argName The name of the argument\n * @return The prefix to add to the error thrown for validation.\n */\nexport function errorPrefix(fnName: string, argName: string): string {\n  return `${fnName} failed: ${argName} argument `;\n}\n\n/**\n * @param fnName\n * @param argumentNumber\n * @param namespace\n * @param optional\n */\nexport function validateNamespace(\n  fnName: string,\n  namespace: string,\n  optional: boolean\n): void {\n  if (optional && !namespace) {\n    return;\n  }\n  if (typeof namespace !== 'string') {\n    //TODO: I should do more validation here. We only allow certain chars in namespaces.\n    throw new Error(\n      errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.'\n    );\n  }\n}\n\nexport function validateCallback(\n  fnName: string,\n  argumentName: string,\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback: Function,\n  optional: boolean\n): void {\n  if (optional && !callback) {\n    return;\n  }\n  if (typeof callback !== 'function') {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid function.'\n    );\n  }\n}\n\nexport function validateContextObject(\n  fnName: string,\n  argumentName: string,\n  context: unknown,\n  optional: boolean\n): void {\n  if (optional && !context) {\n    return;\n  }\n  if (typeof context !== 'object' || context === null) {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid context object.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from './assert';\n\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\n// so it's been modified.\n\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\n// pair).\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\n\n/**\n * @param {string} str\n * @return {Array}\n */\nexport const stringToByteArray = function (str: string): number[] {\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n\n    // Is this the lead surrogate in a surrogate pair?\n    if (c >= 0xd800 && c <= 0xdbff) {\n      const high = c - 0xd800; // the high 10 bits.\n      i++;\n      assert(i < str.length, 'Surrogate pair missing trail surrogate.');\n      const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\n      c = 0x10000 + (high << 10) + low;\n    }\n\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (c < 65536) {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Calculate length without actually converting; useful for doing cheaper validation.\n * @param {string} str\n * @return {number}\n */\nexport const stringLength = function (str: string): number {\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n    if (c < 128) {\n      p++;\n    } else if (c < 2048) {\n      p += 2;\n    } else if (c >= 0xd800 && c <= 0xdbff) {\n      // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\n      p += 4;\n      i++; // skip trail surrogate.\n    } else {\n      p += 3;\n    }\n  }\n  return p;\n};\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Copied from https://stackoverflow.com/a/2117523\n * Generates a new uuid.\n * @public\n */\nexport const uuidv4 = function (): string {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = (Math.random() * 16) | 0,\n      v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name as appName } from '../package.json';\nimport { name as appCompatName } from '../../app-compat/package.json';\nimport { name as analyticsCompatName } from '../../../packages/analytics-compat/package.json';\nimport { name as analyticsName } from '../../../packages/analytics/package.json';\nimport { name as appCheckCompatName } from '../../../packages/app-check-compat/package.json';\nimport { name as appCheckName } from '../../../packages/app-check/package.json';\nimport { name as authName } from '../../../packages/auth/package.json';\nimport { name as authCompatName } from '../../../packages/auth-compat/package.json';\nimport { name as databaseName } from '../../../packages/database/package.json';\nimport { name as databaseCompatName } from '../../../packages/database-compat/package.json';\nimport { name as functionsName } from '../../../packages/functions/package.json';\nimport { name as functionsCompatName } from '../../../packages/functions-compat/package.json';\nimport { name as installationsName } from '../../../packages/installations/package.json';\nimport { name as installationsCompatName } from '../../../packages/installations-compat/package.json';\nimport { name as messagingName } from '../../../packages/messaging/package.json';\nimport { name as messagingCompatName } from '../../../packages/messaging-compat/package.json';\nimport { name as performanceName } from '../../../packages/performance/package.json';\nimport { name as performanceCompatName } from '../../../packages/performance-compat/package.json';\nimport { name as remoteConfigName } from '../../../packages/remote-config/package.json';\nimport { name as remoteConfigCompatName } from '../../../packages/remote-config-compat/package.json';\nimport { name as storageName } from '../../../packages/storage/package.json';\nimport { name as storageCompatName } from '../../../packages/storage-compat/package.json';\nimport { name as firestoreName } from '../../../packages/firestore/package.json';\nimport { name as firestoreCompatName } from '../../../packages/firestore-compat/package.json';\nimport { name as packageName } from '../../../packages/firebase/package.json';\n\n/**\n * The default app name\n *\n * @internal\n */\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [appCompatName]: 'fire-core-compat',\n  [analyticsName]: 'fire-analytics',\n  [analyticsCompatName]: 'fire-analytics-compat',\n  [appCheckName]: 'fire-app-check',\n  [appCheckCompatName]: 'fire-app-check-compat',\n  [authName]: 'fire-auth',\n  [authCompatName]: 'fire-auth-compat',\n  [databaseName]: 'fire-rtdb',\n  [databaseCompatName]: 'fire-rtdb-compat',\n  [functionsName]: 'fire-fn',\n  [functionsCompatName]: 'fire-fn-compat',\n  [installationsName]: 'fire-iid',\n  [installationsCompatName]: 'fire-iid-compat',\n  [messagingName]: 'fire-fcm',\n  [messagingCompatName]: 'fire-fcm-compat',\n  [performanceName]: 'fire-perf',\n  [performanceCompatName]: 'fire-perf-compat',\n  [remoteConfigName]: 'fire-rc',\n  [remoteConfigCompatName]: 'fire-rc-compat',\n  [storageName]: 'fire-gcs',\n  [storageCompatName]: 'fire-gcs-compat',\n  [firestoreName]: 'fire-fst',\n  [firestoreCompatName]: 'fire-fst-compat',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument',\n  IDB_OPEN = 'idb-open',\n  IDB_GET = 'idb-get',\n  IDB_WRITE = 'idb-set',\n  IDB_DELETE = 'idb-delete'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call Firebase App.initializeApp()',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.',\n  [AppError.IDB_OPEN]:\n    'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_GET]:\n    'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_WRITE]:\n    'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_DELETE]:\n    'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n  [AppError.IDB_OPEN]: { originalErrorMessage?: string };\n  [AppError.IDB_GET]: { originalErrorMessage?: string };\n  [AppError.IDB_WRITE]: { originalErrorMessage?: string };\n  [AppError.IDB_DELETE]: { originalErrorMessage?: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  private readonly _options: FirebaseOptions;\n  private readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  private _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { _apps, _components, _registerComponent } from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\nexport function initializeApp(\n  options: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  const name = app.name;\n  if (_apps.has(name)) {\n    _apps.delete(name);\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nimport { logger } from './logger';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(STORE_NAME);\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.IDB_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    return db\n      .transaction(STORE_NAME)\n      .objectStore(STORE_NAME)\n      .get(computeKey(app)) as Promise<HeartbeatsInIndexedDB | undefined>;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_GET, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    return tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_WRITE, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (hearbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    const platformLogger = this.container\n      .getProvider('platform-logger')\n      .getImmediate();\n\n    // This is the \"Firebase user agent\" string from the platform logger\n    // service, not the browser user agent.\n    const agent = platformLogger.getPlatformInfoString();\n    const date = getUTCDateString();\n    if (this._heartbeatsCache === null) {\n      this._heartbeatsCache = await this._heartbeatsCachePromise;\n    }\n    // Do not store a heartbeat if one is already stored for this day\n    // or if a header has already been sent today.\n    if (\n      this._heartbeatsCache.lastSentHeartbeatDate === date ||\n      this._heartbeatsCache.heartbeats.some(\n        singleDateHeartbeat => singleDateHeartbeat.date === date\n      )\n    ) {\n      return;\n    } else {\n      // There is no entry for this date. Create one.\n      this._heartbeatsCache.heartbeats.push({ date, agent });\n    }\n    // Remove entries older than 30 days.\n    this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(\n      singleDateHeartbeat => {\n        const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n        const now = Date.now();\n        return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n      }\n    );\n    return this._storage.overwrite(this._heartbeatsCache);\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    if (this._heartbeatsCache === null) {\n      await this._heartbeatsCachePromise;\n    }\n    // If it's still null or the array is empty, there is no data to send.\n    if (\n      this._heartbeatsCache === null ||\n      this._heartbeatsCache.heartbeats.length === 0\n    ) {\n      return '';\n    }\n    const date = getUTCDateString();\n    // Extract as many heartbeats from the cache as will fit under the size limit.\n    const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n      this._heartbeatsCache.heartbeats\n    );\n    const headerString = base64urlEncodeWithoutPadding(\n      JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n    );\n    // Store last sent date to prevent another being logged/sent for the same day.\n    this._heartbeatsCache.lastSentHeartbeatDate = date;\n    if (unsentEntries.length > 0) {\n      // Store any unsent entries if they exist.\n      this._heartbeatsCache.heartbeats = unsentEntries;\n      // This seems more likely than emptying the array (below) to lead to some odd state\n      // since the cache isn't empty and this will be called again on the next request,\n      // and is probably safest if we await it.\n      await this._storage.overwrite(this._heartbeatsCache);\n    } else {\n      this._heartbeatsCache.heartbeats = [];\n      // Do not wait for this, to reduce latency.\n      void this._storage.overwrite(this._heartbeatsCache);\n    }\n    return headerString;\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      return idbHeartbeatObject || { heartbeats: [] };\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { jsonEval, stringify } from '@firebase/util';\n\n/**\n * Wraps a DOM Storage object and:\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\n *\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\n * and one for localStorage.\n *\n */\nexport class DOMStorageWrapper {\n  // Use a prefix to avoid collisions with other stuff saved by the app.\n  private prefix_ = 'firebase:';\n\n  /**\n   * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\n   */\n  constructor(private domStorage_: Storage) {}\n\n  /**\n   * @param key - The key to save the value under\n   * @param value - The value being stored, or null to remove the key.\n   */\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      this.domStorage_.removeItem(this.prefixedName_(key));\n    } else {\n      this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\n    }\n  }\n\n  /**\n   * @returns The value that was stored under this key, or null\n   */\n  get(key: string): unknown {\n    const storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n    if (storedVal == null) {\n      return null;\n    } else {\n      return jsonEval(storedVal);\n    }\n  }\n\n  remove(key: string) {\n    this.domStorage_.removeItem(this.prefixedName_(key));\n  }\n\n  isInMemoryStorage: boolean;\n\n  prefixedName_(name: string): string {\n    return this.prefix_ + name;\n  }\n\n  toString(): string {\n    return this.domStorage_.toString();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\n/**\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\n * (TODO: create interface for both to implement).\n */\nexport class MemoryStorage {\n  private cache_: { [k: string]: unknown } = {};\n\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      delete this.cache_[key];\n    } else {\n      this.cache_[key] = value;\n    }\n  }\n\n  get(key: string): unknown {\n    if (contains(this.cache_, key)) {\n      return this.cache_[key];\n    }\n    return null;\n  }\n\n  remove(key: string) {\n    delete this.cache_[key];\n  }\n\n  isInMemoryStorage = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DOMStorageWrapper } from './DOMStorageWrapper';\nimport { MemoryStorage } from './MemoryStorage';\n\ndeclare const window: Window;\n\n/**\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\n * to reflect this type\n *\n * @param domStorageName - Name of the underlying storage object\n *   (e.g. 'localStorage' or 'sessionStorage').\n * @returns Turning off type information until a common interface is defined.\n */\nconst createStoragefor = function (\n  domStorageName: string\n): DOMStorageWrapper | MemoryStorage {\n  try {\n    // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n    // so it must be inside the try/catch.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window[domStorageName] !== 'undefined'\n    ) {\n      // Need to test cache. Just because it's here doesn't mean it works\n      const domStorage = window[domStorageName];\n      domStorage.setItem('firebase:sentinel', 'cache');\n      domStorage.removeItem('firebase:sentinel');\n      return new DOMStorageWrapper(domStorage);\n    }\n  } catch (e) {}\n\n  // Failed to create wrapper.  Just return in-memory storage.\n  // TODO: log?\n  return new MemoryStorage();\n};\n\n/** A storage object that lasts across sessions */\nexport const PersistentStorage = createStoragefor('localStorage');\n\n/** A storage object that only lasts one session */\nexport const SessionStorage = createStoragefor('sessionStorage');\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger, LogLevel } from '@firebase/logger';\nimport {\n  assert,\n  base64,\n  Sha1,\n  stringToByteArray,\n  stringify,\n  isNodeSdk\n} from '@firebase/util';\n\nimport { SessionStorage } from '../storage/storage';\nimport { QueryContext } from '../view/EventRegistration';\n\ndeclare const window: Window;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const Windows: any;\n\nconst logClient = new Logger('@firebase/database');\n\n/**\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\n */\nexport const LUIDGenerator: () => number = (function () {\n  let id = 1;\n  return function () {\n    return id++;\n  };\n})();\n\n/**\n * Sha1 hash of the input string\n * @param str - The string to hash\n * @returns {!string} The resulting hash\n */\nexport const sha1 = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  const sha1 = new Sha1();\n  sha1.update(utf8Bytes);\n  const sha1Bytes = sha1.digest();\n  return base64.encodeByteArray(sha1Bytes);\n};\n\nconst buildLogMessage_ = function (...varArgs: unknown[]): string {\n  let message = '';\n  for (let i = 0; i < varArgs.length; i++) {\n    const arg = varArgs[i];\n    if (\n      Array.isArray(arg) ||\n      (arg &&\n        typeof arg === 'object' &&\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        typeof (arg as any).length === 'number')\n    ) {\n      message += buildLogMessage_.apply(null, arg);\n    } else if (typeof arg === 'object') {\n      message += stringify(arg);\n    } else {\n      message += arg;\n    }\n    message += ' ';\n  }\n\n  return message;\n};\n\n/**\n * Use this for all debug messages in Firebase.\n */\nexport let logger: ((a: string) => void) | null = null;\n\n/**\n * Flag to check for log availability on first log message\n */\nlet firstLog_ = true;\n\n/**\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\n * @param logger_ - A flag to turn on logging, or a custom logger\n * @param persistent - Whether or not to persist logging settings across refreshes\n */\nexport const enableLogging = function (\n  logger_?: boolean | ((a: string) => void) | null,\n  persistent?: boolean\n) {\n  assert(\n    !persistent || logger_ === true || logger_ === false,\n    \"Can't turn on custom loggers persistently.\"\n  );\n  if (logger_ === true) {\n    logClient.logLevel = LogLevel.VERBOSE;\n    logger = logClient.log.bind(logClient);\n    if (persistent) {\n      SessionStorage.set('logging_enabled', true);\n    }\n  } else if (typeof logger_ === 'function') {\n    logger = logger_;\n  } else {\n    logger = null;\n    SessionStorage.remove('logging_enabled');\n  }\n};\n\nexport const log = function (...varArgs: unknown[]) {\n  if (firstLog_ === true) {\n    firstLog_ = false;\n    if (logger === null && SessionStorage.get('logging_enabled') === true) {\n      enableLogging(true);\n    }\n  }\n\n  if (logger) {\n    const message = buildLogMessage_.apply(null, varArgs);\n    logger(message);\n  }\n};\n\nexport const logWrapper = function (\n  prefix: string\n): (...varArgs: unknown[]) => void {\n  return function (...varArgs: unknown[]) {\n    log(prefix, ...varArgs);\n  };\n};\n\nexport const error = function (...varArgs: string[]) {\n  const message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_(...varArgs);\n  logClient.error(message);\n};\n\nexport const fatal = function (...varArgs: string[]) {\n  const message = `FIREBASE FATAL ERROR: ${buildLogMessage_(...varArgs)}`;\n  logClient.error(message);\n  throw new Error(message);\n};\n\nexport const warn = function (...varArgs: unknown[]) {\n  const message = 'FIREBASE WARNING: ' + buildLogMessage_(...varArgs);\n  logClient.warn(message);\n};\n\n/**\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\n * does not use https.\n */\nexport const warnIfPageIsSecure = function () {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (\n    typeof window !== 'undefined' &&\n    window.location &&\n    window.location.protocol &&\n    window.location.protocol.indexOf('https:') !== -1\n  ) {\n    warn(\n      'Insecure Firebase access from a secure page. ' +\n        'Please use https in calls to new Firebase().'\n    );\n  }\n};\n\nexport const warnAboutUnsupportedMethod = function (methodName: string) {\n  warn(\n    methodName +\n      ' is unsupported and will likely change soon.  ' +\n      'Please do not use.'\n  );\n};\n\n/**\n * Returns true if data is NaN, or +/- Infinity.\n */\nexport const isInvalidJSONNumber = function (data: unknown): boolean {\n  return (\n    typeof data === 'number' &&\n    (data !== data || // NaN\n      data === Number.POSITIVE_INFINITY ||\n      data === Number.NEGATIVE_INFINITY)\n  );\n};\n\nexport const executeWhenDOMReady = function (fn: () => void) {\n  if (isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n\n    let called = false;\n    const wrappedFn = function () {\n      if (!document.body) {\n        setTimeout(wrappedFn, Math.floor(10));\n        return;\n      }\n\n      if (!called) {\n        called = true;\n        fn();\n      }\n    };\n\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn, false);\n      // fallback to onload.\n      window.addEventListener('load', wrappedFn, false);\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((document as any).attachEvent) {\n      // IE.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (document as any).attachEvent('onreadystatechange', () => {\n        if (document.readyState === 'complete') {\n          wrappedFn();\n        }\n      });\n      // fallback to onload.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (window as any).attachEvent('onload', wrappedFn);\n\n      // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n\n/**\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\n */\nexport const MIN_NAME = '[MIN_NAME]';\n\n/**\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\n */\nexport const MAX_NAME = '[MAX_NAME]';\n\n/**\n * Compares valid Firebase key names, plus min and max name\n */\nexport const nameCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a === MIN_NAME || b === MAX_NAME) {\n    return -1;\n  } else if (b === MIN_NAME || a === MAX_NAME) {\n    return 1;\n  } else {\n    const aAsInt = tryParseInt(a),\n      bAsInt = tryParseInt(b);\n\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n\n/**\n * @returns {!number} comparison result.\n */\nexport const stringCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\nexport const requireKey = function (\n  key: string,\n  obj: { [k: string]: unknown }\n): unknown {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error(\n      'Missing required key (' + key + ') in object: ' + stringify(obj)\n    );\n  }\n};\n\nexport const ObjectToUniqueKey = function (obj: unknown): string {\n  if (typeof obj !== 'object' || obj === null) {\n    return stringify(obj);\n  }\n\n  const keys = [];\n  // eslint-disable-next-line guard-for-in\n  for (const k in obj) {\n    keys.push(k);\n  }\n\n  // Export as json, but with the keys sorted.\n  keys.sort();\n  let key = '{';\n  for (let i = 0; i < keys.length; i++) {\n    if (i !== 0) {\n      key += ',';\n    }\n    key += stringify(keys[i]);\n    key += ':';\n    key += ObjectToUniqueKey(obj[keys[i]]);\n  }\n\n  key += '}';\n  return key;\n};\n\n/**\n * Splits a string into a number of smaller segments of maximum size\n * @param str - The string\n * @param segsize - The maximum number of chars in the string.\n * @returns The string, split into appropriately-sized chunks\n */\nexport const splitStringBySize = function (\n  str: string,\n  segsize: number\n): string[] {\n  const len = str.length;\n\n  if (len <= segsize) {\n    return [str];\n  }\n\n  const dataSegs = [];\n  for (let c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n  return dataSegs;\n};\n\n/**\n * Apply a function to each (key, value) pair in an object or\n * apply a function to each (index, value) pair in an array\n * @param obj - The object or array to iterate over\n * @param fn - The function to apply\n */\nexport function each(obj: object, fn: (k: string, v: unknown) => void) {\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n\n/**\n * Like goog.bind, but doesn't bother to create a closure if opt_context is null/undefined.\n * @param callback - Callback function.\n * @param context - Optional context to bind to.\n *\n */\nexport const bindCallback = function (\n  callback: (a: unknown) => void,\n  context?: object | null\n): (a: unknown) => void {\n  return context ? callback.bind(context) : callback;\n};\n\n/**\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\n * I made one modification at the end and removed the NaN / Infinity\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\n * @param v - A double\n *\n */\nexport const doubleToIEEE754String = function (v: number): string {\n  assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n\n  const ebits = 11,\n    fbits = 52;\n  const bias = (1 << (ebits - 1)) - 1;\n  let s, e, f, ln, i;\n\n  // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  }\n\n  // Pack sign, exponent, fraction\n  const bits = [];\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  const str = bits.join('');\n\n  // Return the data as a hex string. --MJL\n  let hexByteString = '';\n  for (i = 0; i < 64; i += 8) {\n    let hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n    if (hexByte.length === 1) {\n      hexByte = '0' + hexByte;\n    }\n    hexByteString = hexByteString + hexByte;\n  }\n  return hexByteString.toLowerCase();\n};\n\n/**\n * Used to detect if we're in a Chrome content script (which executes in an\n * isolated environment where long-polling doesn't work).\n */\nexport const isChromeExtensionContentScript = function (): boolean {\n  return !!(\n    typeof window === 'object' &&\n    window['chrome'] &&\n    window['chrome']['extension'] &&\n    !/^chrome/.test(window.location.href)\n  );\n};\n\n/**\n * Used to detect if we're in a Windows 8 Store app.\n */\nexport const isWindowsStoreApp = function (): boolean {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n\n/**\n * Converts a server error code to a Javascript Error\n */\nexport function errorForServerCode(code: string, query: QueryContext): Error {\n  let reason = 'Unknown Error';\n  if (code === 'too_big') {\n    reason =\n      'The data requested exceeds the maximum size ' +\n      'that can be accessed with a single request.';\n  } else if (code === 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code === 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n\n  const error = new Error(\n    code + ' at ' + query._path.toString() + ': ' + reason\n  );\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (error as any).code = code.toUpperCase();\n  return error;\n}\n\n/**\n * Used to test for integer-looking strings\n */\nexport const INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\n\n/**\n * For use in keys, the minimum possible 32-bit integer.\n */\nexport const INTEGER_32_MIN = -2147483648;\n\n/**\n * For use in kyes, the maximum possible 32-bit integer.\n */\nexport const INTEGER_32_MAX = 2147483647;\n\n/**\n * If the string contains a 32-bit integer, return it.  Else return null.\n */\nexport const tryParseInt = function (str: string): number | null {\n  if (INTEGER_REGEXP_.test(str)) {\n    const intVal = Number(str);\n    if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\n      return intVal;\n    }\n  }\n  return null;\n};\n\n/**\n * Helper to run some code but catch any exceptions and re-throw them later.\n * Useful for preventing user callbacks from breaking internal code.\n *\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\n * convenient (we don't have to try to figure out when is a safe point to\n * re-throw it), and the behavior seems reasonable:\n *\n * * If you aren't pausing on exceptions, you get an error in the console with\n *   the correct stack trace.\n * * If you're pausing on all exceptions, the debugger will pause on your\n *   exception and then again when we rethrow it.\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\n *   on us re-throwing it.\n *\n * @param fn - The code to guard.\n */\nexport const exceptionGuard = function (fn: () => void) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(() => {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      const stack = e.stack || '';\n      warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n\n/**\n * Helper function to safely call opt_callback with the specified arguments.  It:\n * 1. Turns into a no-op if opt_callback is null or undefined.\n * 2. Wraps the call inside exceptionGuard to prevent exceptions from breaking our state.\n *\n * @param callback - Optional onComplete callback.\n * @param varArgs - Arbitrary args to be passed to opt_onComplete\n */\nexport const callUserCallback = function (\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback?: Function | null,\n  ...varArgs: unknown[]\n) {\n  if (typeof callback === 'function') {\n    exceptionGuard(() => {\n      callback(...varArgs);\n    });\n  }\n};\n\n/**\n * @returns {boolean} true if we think we're currently being crawled.\n */\nexport const beingCrawled = function (): boolean {\n  const userAgent =\n    (typeof window === 'object' &&\n      window['navigator'] &&\n      window['navigator']['userAgent']) ||\n    '';\n\n  // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n  return (\n    userAgent.search(\n      /googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i\n    ) >= 0\n  );\n};\n\n/**\n * Export a property of an object using a getter function.\n */\nexport const exportPropGetter = function (\n  object: object,\n  name: string,\n  fnGet: () => unknown\n) {\n  Object.defineProperty(object, name, { get: fnGet });\n};\n\n/**\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\n *\n * It is removed with clearTimeout() as normal.\n *\n * @param fn - Function to run.\n * @param time - Milliseconds to wait before running.\n * @returns The setTimeout() return value.\n */\nexport const setTimeoutNonBlocking = function (\n  fn: () => void,\n  time: number\n): number | object {\n  const timeout: number | object = setTimeout(fn, time);\n  // Note: at the time of this comment, unrefTimer is under the unstable set of APIs. Run with --unstable to enable the API.\n  if (\n    typeof timeout === 'number' &&\n    // @ts-ignore Is only defined in Deno environments.\n    typeof Deno !== 'undefined' &&\n    // @ts-ignore Deno and unrefTimer are only defined in Deno environments.\n    Deno['unrefTimer']\n  ) {\n    // @ts-ignore Deno and unrefTimer are only defined in Deno environments.\n    Deno.unrefTimer(timeout);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  } else if (typeof timeout === 'object' && (timeout as any)['unref']) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (timeout as any)['unref']();\n  }\n\n  return timeout;\n};\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AppCheckInternalComponentName,\n  AppCheckTokenListener,\n  AppCheckTokenResult,\n  FirebaseAppCheckInternal\n} from '@firebase/app-check-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { warn } from './util/util';\n\n/**\n * Abstraction around AppCheck's token fetching capabilities.\n */\nexport class AppCheckTokenProvider {\n  private appCheck?: FirebaseAppCheckInternal;\n  constructor(\n    private appName_: string,\n    private appCheckProvider?: Provider<AppCheckInternalComponentName>\n  ) {\n    this.appCheck = appCheckProvider?.getImmediate({ optional: true });\n    if (!this.appCheck) {\n      appCheckProvider?.get().then(appCheck => (this.appCheck = appCheck));\n    }\n  }\n\n  getToken(forceRefresh?: boolean): Promise<AppCheckTokenResult> {\n    if (!this.appCheck) {\n      return new Promise<AppCheckTokenResult>((resolve, reject) => {\n        // Support delayed initialization of FirebaseAppCheck. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // AppCheck and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(() => {\n          if (this.appCheck) {\n            this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n    return this.appCheck.getToken(forceRefresh);\n  }\n\n  addTokenChangeListener(listener: AppCheckTokenListener) {\n    this.appCheckProvider\n      ?.get()\n      .then(appCheck => appCheck.addTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    warn(\n      `Provided AppCheck credentials for the app named \"${this.appName_}\" ` +\n        'are invalid. This usually indicates your app was not initialized correctly.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseAuthTokenData } from '@firebase/app-types/private';\nimport {\n  FirebaseAuthInternal,\n  FirebaseAuthInternalName\n} from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { log, warn } from './util/util';\n\nexport interface AuthTokenProvider {\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData>;\n  addTokenChangeListener(listener: (token: string | null) => void): void;\n  removeTokenChangeListener(listener: (token: string | null) => void): void;\n  notifyForInvalidToken(): void;\n}\n\n/**\n * Abstraction around FirebaseApp's token fetching capabilities.\n */\nexport class FirebaseAuthTokenProvider implements AuthTokenProvider {\n  private auth_: FirebaseAuthInternal | null = null;\n\n  constructor(\n    private appName_: string,\n    private firebaseOptions_: object,\n    private authProvider_: Provider<FirebaseAuthInternalName>\n  ) {\n    this.auth_ = authProvider_.getImmediate({ optional: true });\n    if (!this.auth_) {\n      authProvider_.onInit(auth => (this.auth_ = auth));\n    }\n  }\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    if (!this.auth_) {\n      return new Promise<FirebaseAuthTokenData>((resolve, reject) => {\n        // Support delayed initialization of FirebaseAuth. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // Auth and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(() => {\n          if (this.auth_) {\n            this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n\n    return this.auth_.getToken(forceRefresh).catch(error => {\n      // TODO: Need to figure out all the cases this is raised and whether\n      // this makes sense.\n      if (error && error.code === 'auth/token-not-initialized') {\n        log('Got auth/token-not-initialized error.  Treating as null token.');\n        return null;\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // TODO: We might want to wrap the listener and call it with no args to\n    // avoid a leaky abstraction, but that makes removing the listener harder.\n    if (this.auth_) {\n      this.auth_.addAuthTokenListener(listener);\n    } else {\n      this.authProvider_\n        .get()\n        .then(auth => auth.addAuthTokenListener(listener));\n    }\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {\n    this.authProvider_\n      .get()\n      .then(auth => auth.removeAuthTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    let errorMessage =\n      'Provided authentication credentials for the app named \"' +\n      this.appName_ +\n      '\" are invalid. This usually indicates your app was not ' +\n      'initialized correctly. ';\n    if ('credential' in this.firebaseOptions_) {\n      errorMessage +=\n        'Make sure the \"credential\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else if ('serviceAccount' in this.firebaseOptions_) {\n      errorMessage +=\n        'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else {\n      errorMessage +=\n        'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\n        'initializeApp() match the values provided for your app at ' +\n        'https://console.firebase.google.com/.';\n    }\n    warn(errorMessage);\n  }\n}\n\n/* AuthTokenProvider that supplies a constant token. Used by Admin SDK or mockUserToken with emulators. */\nexport class EmulatorTokenProvider implements AuthTokenProvider {\n  /** A string that is treated as an admin access token by the RTDB emulator. Used by Admin SDK. */\n  static OWNER = 'owner';\n\n  constructor(private accessToken: string) {}\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    return Promise.resolve({\n      accessToken: this.accessToken\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // Invoke the listener immediately to match the behavior in Firebase Auth\n    // (see packages/auth/src/auth.js#L1807)\n    listener(this.accessToken);\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {}\n\n  notifyForInvalidToken(): void {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { LONG_POLLING, WEBSOCKET } from '../realtime/Constants';\n\nimport { PersistentStorage } from './storage/storage';\nimport { each } from './util/util';\n\n/**\n * A class that holds metadata about a Repo object\n */\nexport class RepoInfo {\n  private _host: string;\n  private _domain: string;\n  internalHost: string;\n\n  /**\n   * @param host - Hostname portion of the url for the repo\n   * @param secure - Whether or not this repo is accessed over ssl\n   * @param namespace - The namespace represented by the repo\n   * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\n   * @param nodeAdmin - Whether this instance uses Admin SDK credentials\n   * @param persistenceKey - Override the default session persistence storage key\n   */\n  constructor(\n    host: string,\n    public readonly secure: boolean,\n    public readonly namespace: string,\n    public readonly webSocketOnly: boolean,\n    public readonly nodeAdmin: boolean = false,\n    public readonly persistenceKey: string = '',\n    public readonly includeNamespaceInQueryParams: boolean = false\n  ) {\n    this._host = host.toLowerCase();\n    this._domain = this._host.substr(this._host.indexOf('.') + 1);\n    this.internalHost =\n      (PersistentStorage.get('host:' + host) as string) || this._host;\n  }\n\n  isCacheableHost(): boolean {\n    return this.internalHost.substr(0, 2) === 's-';\n  }\n\n  isCustomHost() {\n    return (\n      this._domain !== 'firebaseio.com' &&\n      this._domain !== 'firebaseio-demo.com'\n    );\n  }\n\n  get host() {\n    return this._host;\n  }\n\n  set host(newHost: string) {\n    if (newHost !== this.internalHost) {\n      this.internalHost = newHost;\n      if (this.isCacheableHost()) {\n        PersistentStorage.set('host:' + this._host, this.internalHost);\n      }\n    }\n  }\n\n  toString(): string {\n    let str = this.toURLString();\n    if (this.persistenceKey) {\n      str += '<' + this.persistenceKey + '>';\n    }\n    return str;\n  }\n\n  toURLString(): string {\n    const protocol = this.secure ? 'https://' : 'http://';\n    const query = this.includeNamespaceInQueryParams\n      ? `?ns=${this.namespace}`\n      : '';\n    return `${protocol}${this.host}/${query}`;\n  }\n}\n\nfunction repoInfoNeedsQueryParam(repoInfo: RepoInfo): boolean {\n  return (\n    repoInfo.host !== repoInfo.internalHost ||\n    repoInfo.isCustomHost() ||\n    repoInfo.includeNamespaceInQueryParams\n  );\n}\n\n/**\n * Returns the websocket URL for this repo\n * @param repoInfo - RepoInfo object\n * @param type - of connection\n * @param params - list\n * @returns The URL for this repo\n */\nexport function repoInfoConnectionURL(\n  repoInfo: RepoInfo,\n  type: string,\n  params: { [k: string]: string }\n): string {\n  assert(typeof type === 'string', 'typeof type must == string');\n  assert(typeof params === 'object', 'typeof params must == object');\n\n  let connURL: string;\n  if (type === WEBSOCKET) {\n    connURL =\n      (repoInfo.secure ? 'wss://' : 'ws://') + repoInfo.internalHost + '/.ws?';\n  } else if (type === LONG_POLLING) {\n    connURL =\n      (repoInfo.secure ? 'https://' : 'http://') +\n      repoInfo.internalHost +\n      '/.lp?';\n  } else {\n    throw new Error('Unknown connection type: ' + type);\n  }\n  if (repoInfoNeedsQueryParam(repoInfo)) {\n    params['ns'] = repoInfo.namespace;\n  }\n\n  const pairs: string[] = [];\n\n  each(params, (key: string, value: string) => {\n    pairs.push(key + '=' + value);\n  });\n\n  return connURL + pairs.join('&');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport { StatsCollection } from './StatsCollection';\n\nconst collections: { [k: string]: StatsCollection } = {};\nconst reporters: { [k: string]: unknown } = {};\n\nexport function statsManagerGetCollection(repoInfo: RepoInfo): StatsCollection {\n  const hashString = repoInfo.toString();\n\n  if (!collections[hashString]) {\n    collections[hashString] = new StatsCollection();\n  }\n\n  return collections[hashString];\n}\n\nexport function statsManagerGetOrCreateReporter<T>(\n  repoInfo: RepoInfo,\n  creatorFunction: () => T\n): T {\n  const hashString = repoInfo.toString();\n\n  if (!reporters[hashString]) {\n    reporters[hashString] = creatorFunction();\n  }\n\n  return reporters[hashString] as T;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { exceptionGuard } from '../../core/util/util';\n\n/**\n * This class ensures the packets from the server arrive in order\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\n */\nexport class PacketReceiver {\n  pendingResponses: unknown[] = [];\n  currentResponseNum = 0;\n  closeAfterResponse = -1;\n  onClose: (() => void) | null = null;\n\n  /**\n   * @param onMessage_\n   */\n  constructor(private onMessage_: (a: {}) => void) {}\n\n  closeAfter(responseNum: number, callback: () => void) {\n    this.closeAfterResponse = responseNum;\n    this.onClose = callback;\n    if (this.closeAfterResponse < this.currentResponseNum) {\n      this.onClose();\n      this.onClose = null;\n    }\n  }\n\n  /**\n   * Each message from the server comes with a response number, and an array of data. The responseNumber\n   * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\n   * browsers will respond in the same order as the requests we sent\n   */\n  handleResponse(requestNum: number, data: unknown[]) {\n    this.pendingResponses[requestNum] = data;\n    while (this.pendingResponses[this.currentResponseNum]) {\n      const toProcess = this.pendingResponses[\n        this.currentResponseNum\n      ] as unknown[];\n      delete this.pendingResponses[this.currentResponseNum];\n      for (let i = 0; i < toProcess.length; ++i) {\n        if (toProcess[i]) {\n          exceptionGuard(() => {\n            this.onMessage_(toProcess[i]);\n          });\n        }\n      }\n      if (this.currentResponseNum === this.closeAfterResponse) {\n        if (this.onClose) {\n          this.onClose();\n          this.onClose = null;\n        }\n        break;\n      }\n      this.currentResponseNum++;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Encode, isNodeSdk, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport {\n  executeWhenDOMReady,\n  isChromeExtensionContentScript,\n  isWindowsStoreApp,\n  log,\n  logWrapper,\n  LUIDGenerator,\n  splitStringBySize\n} from '../core/util/util';\n\nimport {\n  APP_CHECK_TOKEN_PARAM,\n  APPLICATION_ID_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  LONG_POLLING,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM\n} from './Constants';\nimport { PacketReceiver } from './polling/PacketReceiver';\nimport { Transport } from './Transport';\n\n// URL query parameters associated with longpolling\nexport const FIREBASE_LONGPOLL_START_PARAM = 'start';\nexport const FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nexport const FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nexport const FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nexport const FIREBASE_LONGPOLL_ID_PARAM = 'id';\nexport const FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nexport const FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nexport const FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nexport const FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nexport const FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nexport const FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\n\n//Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\nconst MAX_URL_DATA_SIZE = 1870;\nconst SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\nconst MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n\n/**\n * Keepalive period\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\n * length of 30 seconds that we can't exceed.\n */\nconst KEEPALIVE_REQUEST_INTERVAL = 25000;\n\n/**\n * How long to wait before aborting a long-polling connection attempt.\n */\nconst LP_CONNECT_TIMEOUT = 30000;\n\n/**\n * This class manages a single long-polling connection.\n */\nexport class BrowserPollConnection implements Transport {\n  bytesSent = 0;\n  bytesReceived = 0;\n  urlFn: (params: object) => string;\n  scriptTagHolder: FirebaseIFrameScriptHolder;\n  myDisconnFrame: HTMLIFrameElement;\n  curSegmentNum: number;\n  myPacketOrderer: PacketReceiver;\n  id: string;\n  password: string;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_ = false;\n  private isClosed_: boolean;\n  private connectTimeoutTimer_: number | null;\n  private onDisconnect_: ((a?: boolean) => void) | null;\n\n  /**\n   * @param connId An identifier for this connection, used for logging\n   * @param repoInfo The info for the endpoint to send data to.\n   * @param applicationId The Firebase App ID for this project.\n   * @param appCheckToken The AppCheck token for this client.\n   * @param authToken The AuthToken to use for this connection.\n   * @param transportSessionId Optional transportSessionid if we are\n   * reconnecting for an existing transport session\n   * @param lastSessionId Optional lastSessionId if the PersistentConnection has\n   * already created a connection previously\n   */\n  constructor(\n    public connId: string,\n    public repoInfo: RepoInfo,\n    private applicationId?: string,\n    private appCheckToken?: string,\n    private authToken?: string,\n    public transportSessionId?: string,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.urlFn = (params: { [k: string]: string }) => {\n      // Always add the token if we have one.\n      if (this.appCheckToken) {\n        params[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\n      }\n      return repoInfoConnectionURL(repoInfo, LONG_POLLING, params);\n    };\n  }\n\n  /**\n   * @param onMessage - Callback when messages arrive\n   * @param onDisconnect - Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.curSegmentNum = 0;\n    this.onDisconnect_ = onDisconnect;\n    this.myPacketOrderer = new PacketReceiver(onMessage);\n    this.isClosed_ = false;\n\n    this.connectTimeoutTimer_ = setTimeout(() => {\n      this.log_('Timed out trying to connect.');\n      // Make sure we clear the host cache\n      this.onClosed_();\n      this.connectTimeoutTimer_ = null;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(LP_CONNECT_TIMEOUT)) as any;\n\n    // Ensure we delay the creation of the iframe until the DOM is loaded.\n    executeWhenDOMReady(() => {\n      if (this.isClosed_) {\n        return;\n      }\n\n      //Set up a callback that gets triggered once a connection is set up.\n      this.scriptTagHolder = new FirebaseIFrameScriptHolder(\n        (...args) => {\n          const [command, arg1, arg2, arg3, arg4] = args;\n          this.incrementIncomingBytes_(args);\n          if (!this.scriptTagHolder) {\n            return; // we closed the connection.\n          }\n\n          if (this.connectTimeoutTimer_) {\n            clearTimeout(this.connectTimeoutTimer_);\n            this.connectTimeoutTimer_ = null;\n          }\n          this.everConnected_ = true;\n          if (command === FIREBASE_LONGPOLL_START_PARAM) {\n            this.id = arg1 as string;\n            this.password = arg2 as string;\n          } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n            // Don't clear the host cache. We got a response from the server, so we know it's reachable\n            if (arg1) {\n              // We aren't expecting any more data (other than what the server's already in the process of sending us\n              // through our already open polls), so don't send any more.\n              this.scriptTagHolder.sendNewPolls = false;\n\n              // arg1 in this case is the last response number sent by the server. We should try to receive\n              // all of the responses up to this one before closing\n              this.myPacketOrderer.closeAfter(arg1 as number, () => {\n                this.onClosed_();\n              });\n            } else {\n              this.onClosed_();\n            }\n          } else {\n            throw new Error('Unrecognized command received: ' + command);\n          }\n        },\n        (...args) => {\n          const [pN, data] = args;\n          this.incrementIncomingBytes_(args);\n          this.myPacketOrderer.handleResponse(pN as number, data as unknown[]);\n        },\n        () => {\n          this.onClosed_();\n        },\n        this.urlFn\n      );\n\n      //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n      //from cache.\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(\n        Math.random() * 100000000\n      );\n      if (this.scriptTagHolder.uniqueCallbackIdentifier) {\n        urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] =\n          this.scriptTagHolder.uniqueCallbackIdentifier;\n      }\n      urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n      if (this.transportSessionId) {\n        urlParams[TRANSPORT_SESSION_PARAM] = this.transportSessionId;\n      }\n      if (this.lastSessionId) {\n        urlParams[LAST_SESSION_PARAM] = this.lastSessionId;\n      }\n      if (this.applicationId) {\n        urlParams[APPLICATION_ID_PARAM] = this.applicationId;\n      }\n      if (this.appCheckToken) {\n        urlParams[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\n      }\n      if (\n        typeof location !== 'undefined' &&\n        location.hostname &&\n        FORGE_DOMAIN_RE.test(location.hostname)\n      ) {\n        urlParams[REFERER_PARAM] = FORGE_REF;\n      }\n      const connectURL = this.urlFn(urlParams);\n      this.log_('Connecting via long-poll to ' + connectURL);\n      this.scriptTagHolder.addTag(connectURL, () => {\n        /* do nothing */\n      });\n    });\n  }\n\n  /**\n   * Call this when a handshake has completed successfully and we want to consider the connection established\n   */\n  start() {\n    this.scriptTagHolder.startLongPoll(this.id, this.password);\n    this.addDisconnectPingFrame(this.id, this.password);\n  }\n\n  static forceAllow_: boolean;\n\n  /**\n   * Forces long polling to be considered as a potential transport\n   */\n  static forceAllow() {\n    BrowserPollConnection.forceAllow_ = true;\n  }\n\n  static forceDisallow_: boolean;\n\n  /**\n   * Forces longpolling to not be considered as a potential transport\n   */\n  static forceDisallow() {\n    BrowserPollConnection.forceDisallow_ = true;\n  }\n\n  // Static method, use string literal so it can be accessed in a generic way\n  static isAvailable() {\n    if (isNodeSdk()) {\n      return false;\n    } else if (BrowserPollConnection.forceAllow_) {\n      return true;\n    } else {\n      // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n      // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n      return (\n        !BrowserPollConnection.forceDisallow_ &&\n        typeof document !== 'undefined' &&\n        document.createElement != null &&\n        !isChromeExtensionContentScript() &&\n        !isWindowsStoreApp()\n      );\n    }\n  }\n\n  /**\n   * No-op for polling\n   */\n  markConnectionHealthy() {}\n\n  /**\n   * Stops polling and cleans up the iframe\n   */\n  private shutdown_() {\n    this.isClosed_ = true;\n\n    if (this.scriptTagHolder) {\n      this.scriptTagHolder.close();\n      this.scriptTagHolder = null;\n    }\n\n    //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n    if (this.myDisconnFrame) {\n      document.body.removeChild(this.myDisconnFrame);\n      this.myDisconnFrame = null;\n    }\n\n    if (this.connectTimeoutTimer_) {\n      clearTimeout(this.connectTimeoutTimer_);\n      this.connectTimeoutTimer_ = null;\n    }\n  }\n\n  /**\n   * Triggered when this transport is closed\n   */\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is closing itself');\n      this.shutdown_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_(this.everConnected_);\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\n   * that we've left.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is being closed.');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\n   * broken into chunks (since URLs have a small maximum length).\n   * @param data - The JSON data to transmit.\n   */\n  send(data: {}) {\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //first, lets get the base64-encoded data\n    const base64data = base64Encode(dataStr);\n\n    //We can only fit a certain amount in each URL, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n    const dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\n\n    //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n    //of segments so that we can reassemble the packet on the server.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.scriptTagHolder.enqueueSegment(\n        this.curSegmentNum,\n        dataSegs.length,\n        dataSegs[i]\n      );\n      this.curSegmentNum++;\n    }\n  }\n\n  /**\n   * This is how we notify the server that we're leaving.\n   * We aren't able to send requests with DHTML on a window close event, but we can\n   * trigger XHR requests in some browsers (everything but Opera basically).\n   */\n  addDisconnectPingFrame(id: string, pw: string) {\n    if (isNodeSdk()) {\n      return;\n    }\n    this.myDisconnFrame = document.createElement('iframe');\n    const urlParams: { [k: string]: string } = {};\n    urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n    urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\n    urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\n    this.myDisconnFrame.src = this.urlFn(urlParams);\n    this.myDisconnFrame.style.display = 'none';\n\n    document.body.appendChild(this.myDisconnFrame);\n  }\n\n  /**\n   * Used to track the bytes received by this client\n   */\n  private incrementIncomingBytes_(args: unknown) {\n    // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n    const bytesReceived = stringify(args).length;\n    this.bytesReceived += bytesReceived;\n    this.stats_.incrementCounter('bytes_received', bytesReceived);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface IFrameElement extends HTMLIFrameElement {\n  doc: Document;\n}\n\n/*********************************************************************************************\n * A wrapper around an iframe that is used as a long-polling script holder.\n *********************************************************************************************/\nexport class FirebaseIFrameScriptHolder {\n  //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n  //problems in some browsers.\n  outstandingRequests = new Set<number>();\n\n  //A queue of the pending segments waiting for transmission to the server.\n  pendingSegs: Array<{ seg: number; ts: number; d: unknown }> = [];\n\n  //A serial number. We use this for two things:\n  // 1) A way to ensure the browser doesn't cache responses to polls\n  // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n  //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n  //    JSONP code in the order it was added to the iframe.\n  currentSerial = Math.floor(Math.random() * 100000000);\n\n  // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n  // incoming data from the server that we're waiting for).\n  sendNewPolls = true;\n\n  uniqueCallbackIdentifier: number;\n  myIFrame: IFrameElement;\n  alive: boolean;\n  myID: string;\n  myPW: string;\n  commandCB: (command: string, ...args: unknown[]) => void;\n  onMessageCB: (...args: unknown[]) => void;\n\n  /**\n   * @param commandCB - The callback to be called when control commands are recevied from the server.\n   * @param onMessageCB - The callback to be triggered when responses arrive from the server.\n   * @param onDisconnect - The callback to be triggered when this tag holder is closed\n   * @param urlFn - A function that provides the URL of the endpoint to send data to.\n   */\n  constructor(\n    commandCB: (command: string, ...args: unknown[]) => void,\n    onMessageCB: (...args: unknown[]) => void,\n    public onDisconnect: () => void,\n    public urlFn: (a: object) => string\n  ) {\n    if (!isNodeSdk()) {\n      //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n      //iframes where we put the long-polling script tags. We have two callbacks:\n      //   1) Command Callback - Triggered for control issues, like starting a connection.\n      //   2) Message Callback - Triggered when new data arrives.\n      this.uniqueCallbackIdentifier = LUIDGenerator();\n      window[\n        FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier\n      ] = commandCB;\n      window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] =\n        onMessageCB;\n\n      //Create an iframe for us to add script tags to.\n      this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\n\n      // Set the iframe's contents.\n      let script = '';\n      // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n      // for ie9, but ie8 needs to do it again in the document itself.\n      if (\n        this.myIFrame.src &&\n        this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:'\n      ) {\n        const currentDomain = document.domain;\n        script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n      }\n      const iframeContents = '<html><body>' + script + '</body></html>';\n      try {\n        this.myIFrame.doc.open();\n        this.myIFrame.doc.write(iframeContents);\n        this.myIFrame.doc.close();\n      } catch (e) {\n        log('frame writing exception');\n        if (e.stack) {\n          log(e.stack);\n        }\n        log(e);\n      }\n    } else {\n      this.commandCB = commandCB;\n      this.onMessageCB = onMessageCB;\n    }\n  }\n\n  /**\n   * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\n   * actually use.\n   */\n  private static createIFrame_(): IFrameElement {\n    const iframe = document.createElement('iframe') as IFrameElement;\n    iframe.style.display = 'none';\n\n    // This is necessary in order to initialize the document inside the iframe\n    if (document.body) {\n      document.body.appendChild(iframe);\n      try {\n        // If document.domain has been modified in IE, this will throw an error, and we need to set the\n        // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n        // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n        const a = iframe.contentWindow.document;\n        if (!a) {\n          // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n          log('No IE domain setting required');\n        }\n      } catch (e) {\n        const domain = document.domain;\n        iframe.src =\n          \"javascript:void((function(){document.open();document.domain='\" +\n          domain +\n          \"';document.close();})())\";\n      }\n    } else {\n      // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n      // never gets hit.\n      throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n    }\n\n    // Get the document of the iframe in a browser-specific way.\n    if (iframe.contentDocument) {\n      iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n    } else if (iframe.contentWindow) {\n      iframe.doc = iframe.contentWindow.document; // Internet Explorer\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((iframe as any).document) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      iframe.doc = (iframe as any).document; //others?\n    }\n\n    return iframe;\n  }\n\n  /**\n   * Cancel all outstanding queries and remove the frame.\n   */\n  close() {\n    //Mark this iframe as dead, so no new requests are sent.\n    this.alive = false;\n\n    if (this.myIFrame) {\n      //We have to actually remove all of the html inside this iframe before removing it from the\n      //window, or IE will continue loading and executing the script tags we've already added, which\n      //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\n      this.myIFrame.doc.body.innerHTML = '';\n      setTimeout(() => {\n        if (this.myIFrame !== null) {\n          document.body.removeChild(this.myIFrame);\n          this.myIFrame = null;\n        }\n      }, Math.floor(0));\n    }\n\n    // Protect from being called recursively.\n    const onDisconnect = this.onDisconnect;\n    if (onDisconnect) {\n      this.onDisconnect = null;\n      onDisconnect();\n    }\n  }\n\n  /**\n   * Actually start the long-polling session by adding the first script tag(s) to the iframe.\n   * @param id - The ID of this connection\n   * @param pw - The password for this connection\n   */\n  startLongPoll(id: string, pw: string) {\n    this.myID = id;\n    this.myPW = pw;\n    this.alive = true;\n\n    //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n    while (this.newRequest_()) {}\n  }\n\n  /**\n   * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\n   * too many outstanding requests and we are still alive.\n   *\n   * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\n   * needed.\n   */\n  private newRequest_() {\n    // We keep one outstanding request open all the time to receive data, but if we need to send data\n    // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n    // close the old request.\n    if (\n      this.alive &&\n      this.sendNewPolls &&\n      this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)\n    ) {\n      //construct our url\n      this.currentSerial++;\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n      urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n      let theURL = this.urlFn(urlParams);\n      //Now add as much data as we can.\n      let curDataString = '';\n      let i = 0;\n\n      while (this.pendingSegs.length > 0) {\n        //first, lets see if the next segment will fit.\n        const nextSeg = this.pendingSegs[0];\n        if (\n          (nextSeg.d as unknown[]).length +\n            SEG_HEADER_SIZE +\n            curDataString.length <=\n          MAX_URL_DATA_SIZE\n        ) {\n          //great, the segment will fit. Lets append it.\n          const theSeg = this.pendingSegs.shift();\n          curDataString =\n            curDataString +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\n            i +\n            '=' +\n            theSeg.seg +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\n            i +\n            '=' +\n            theSeg.ts +\n            '&' +\n            FIREBASE_LONGPOLL_DATA_PARAM +\n            i +\n            '=' +\n            theSeg.d;\n          i++;\n        } else {\n          break;\n        }\n      }\n\n      theURL = theURL + curDataString;\n      this.addLongPollTag_(theURL, this.currentSerial);\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Queue a packet for transmission to the server.\n   * @param segnum - A sequential id for this packet segment used for reassembly\n   * @param totalsegs - The total number of segments in this packet\n   * @param data - The data for this segment.\n   */\n  enqueueSegment(segnum: number, totalsegs: number, data: unknown) {\n    //add this to the queue of segments to send.\n    this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\n\n    //send the data immediately if there isn't already data being transmitted, unless\n    //startLongPoll hasn't been called yet.\n    if (this.alive) {\n      this.newRequest_();\n    }\n  }\n\n  /**\n   * Add a script tag for a regular long-poll request.\n   * @param url - The URL of the script tag.\n   * @param serial - The serial number of the request.\n   */\n  private addLongPollTag_(url: string, serial: number) {\n    //remember that we sent this request.\n    this.outstandingRequests.add(serial);\n\n    const doNewRequest = () => {\n      this.outstandingRequests.delete(serial);\n      this.newRequest_();\n    };\n\n    // If this request doesn't return on its own accord (by the server sending us some data), we'll\n    // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n    const keepaliveTimeout = setTimeout(\n      doNewRequest,\n      Math.floor(KEEPALIVE_REQUEST_INTERVAL)\n    );\n\n    const readyStateCB = () => {\n      // Request completed.  Cancel the keepalive.\n      clearTimeout(keepaliveTimeout);\n\n      // Trigger a new request so we can continue receiving data.\n      doNewRequest();\n    };\n\n    this.addTag(url, readyStateCB);\n  }\n\n  /**\n   * Add an arbitrary script tag to the iframe.\n   * @param url - The URL for the script tag source.\n   * @param loadCB - A callback to be triggered once the script has loaded.\n   */\n  addTag(url: string, loadCB: () => void) {\n    if (isNodeSdk()) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this as any).doNodeLongPoll(url, loadCB);\n    } else {\n      setTimeout(() => {\n        try {\n          // if we're already closed, don't add this poll\n          if (!this.sendNewPolls) {\n            return;\n          }\n          const newScript = this.myIFrame.doc.createElement('script');\n          newScript.type = 'text/javascript';\n          newScript.async = true;\n          newScript.src = url;\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          newScript.onload = (newScript as any).onreadystatechange =\n            function () {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              const rstate = (newScript as any).readyState;\n              if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                newScript.onload = (newScript as any).onreadystatechange = null;\n                if (newScript.parentNode) {\n                  newScript.parentNode.removeChild(newScript);\n                }\n                loadCB();\n              }\n            };\n          newScript.onerror = () => {\n            log('Long-poll script failed to load: ' + url);\n            this.sendNewPolls = false;\n            this.close();\n          };\n          this.myIFrame.doc.body.appendChild(newScript);\n        } catch (e) {\n          // TODO: we should make this error visible somehow\n        }\n      }, Math.floor(1));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isNodeSdk, jsonEval, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { logWrapper, splitStringBySize } from '../core/util/util';\nimport { SDK_VERSION } from '../core/version';\n\nimport {\n  APPLICATION_ID_PARAM,\n  APP_CHECK_TOKEN_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM,\n  WEBSOCKET\n} from './Constants';\nimport { Transport } from './Transport';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const MozWebSocket: any;\n\nconst WEBSOCKET_MAX_FRAME_SIZE = 16384;\nconst WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\n\nlet WebSocketImpl = null;\nif (typeof MozWebSocket !== 'undefined') {\n  WebSocketImpl = MozWebSocket;\n} else if (typeof WebSocket !== 'undefined') {\n  WebSocketImpl = WebSocket;\n}\n\nexport function setWebSocketImpl(impl) {\n  WebSocketImpl = impl;\n}\n\n/**\n * Create a new websocket connection with the given callbacks.\n */\nexport class WebSocketConnection implements Transport {\n  keepaliveTimer: number | null = null;\n  frames: string[] | null = null;\n  totalFrames = 0;\n  bytesSent = 0;\n  bytesReceived = 0;\n  connURL: string;\n  onDisconnect: (a?: boolean) => void;\n  onMessage: (msg: {}) => void;\n  mySock: WebSocket | null;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_: boolean;\n  private isClosed_: boolean;\n  private nodeAdmin: boolean;\n\n  /**\n   * @param connId identifier for this transport\n   * @param repoInfo The info for the websocket endpoint.\n   * @param applicationId The Firebase App ID for this project.\n   * @param appCheckToken The App Check Token for this client.\n   * @param authToken The Auth Token for this client.\n   * @param transportSessionId Optional transportSessionId if this is connecting\n   * to an existing transport session\n   * @param lastSessionId Optional lastSessionId if there was a previous\n   * connection\n   */\n  constructor(\n    public connId: string,\n    repoInfo: RepoInfo,\n    private applicationId?: string,\n    private appCheckToken?: string,\n    private authToken?: string,\n    transportSessionId?: string,\n    lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(this.connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.connURL = WebSocketConnection.connectionURL_(\n      repoInfo,\n      transportSessionId,\n      lastSessionId,\n      appCheckToken,\n      applicationId\n    );\n    this.nodeAdmin = repoInfo.nodeAdmin;\n  }\n\n  /**\n   * @param repoInfo - The info for the websocket endpoint.\n   * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\n   *                                         session\n   * @param lastSessionId - Optional lastSessionId if there was a previous connection\n   * @returns connection url\n   */\n  private static connectionURL_(\n    repoInfo: RepoInfo,\n    transportSessionId?: string,\n    lastSessionId?: string,\n    appCheckToken?: string,\n    applicationId?: string\n  ): string {\n    const urlParams: { [k: string]: string } = {};\n    urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n    if (\n      !isNodeSdk() &&\n      typeof location !== 'undefined' &&\n      location.hostname &&\n      FORGE_DOMAIN_RE.test(location.hostname)\n    ) {\n      urlParams[REFERER_PARAM] = FORGE_REF;\n    }\n    if (transportSessionId) {\n      urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\n    }\n    if (lastSessionId) {\n      urlParams[LAST_SESSION_PARAM] = lastSessionId;\n    }\n    if (appCheckToken) {\n      urlParams[APP_CHECK_TOKEN_PARAM] = appCheckToken;\n    }\n    if (applicationId) {\n      urlParams[APPLICATION_ID_PARAM] = applicationId;\n    }\n\n    return repoInfoConnectionURL(repoInfo, WEBSOCKET, urlParams);\n  }\n\n  /**\n   * @param onMessage - Callback when messages arrive\n   * @param onDisconnect - Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.onDisconnect = onDisconnect;\n    this.onMessage = onMessage;\n\n    this.log_('Websocket connecting to ' + this.connURL);\n\n    this.everConnected_ = false;\n    // Assume failure until proven otherwise.\n    PersistentStorage.set('previous_websocket_failure', true);\n\n    try {\n      let options: { [k: string]: object };\n      if (isNodeSdk()) {\n        const device = this.nodeAdmin ? 'AdminNode' : 'Node';\n        // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n        options = {\n          headers: {\n            'User-Agent': `Firebase/${PROTOCOL_VERSION}/${SDK_VERSION}/${process.platform}/${device}`,\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        };\n\n        // If using Node with admin creds, AppCheck-related checks are unnecessary.\n        // Note that we send the credentials here even if they aren't admin credentials, which is\n        // not a problem.\n        // Note that this header is just used to bypass appcheck, and the token should still be sent\n        // through the websocket connection once it is established.\n        if (this.authToken) {\n          options.headers['Authorization'] = `Bearer ${this.authToken}`;\n        }\n        if (this.appCheckToken) {\n          options.headers['X-Firebase-AppCheck'] = this.appCheckToken;\n        }\n\n        // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n        const env = process['env'];\n        const proxy =\n          this.connURL.indexOf('wss://') === 0\n            ? env['HTTPS_PROXY'] || env['https_proxy']\n            : env['HTTP_PROXY'] || env['http_proxy'];\n\n        if (proxy) {\n          options['proxy'] = { origin: proxy };\n        }\n      }\n      this.mySock = new WebSocketImpl(this.connURL, [], options);\n    } catch (e) {\n      this.log_('Error instantiating WebSocket.');\n      const error = e.message || e.data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n      return;\n    }\n\n    this.mySock.onopen = () => {\n      this.log_('Websocket connected.');\n      this.everConnected_ = true;\n    };\n\n    this.mySock.onclose = () => {\n      this.log_('Websocket connection was disconnected.');\n      this.mySock = null;\n      this.onClosed_();\n    };\n\n    this.mySock.onmessage = m => {\n      this.handleIncomingFrame(m as {});\n    };\n\n    this.mySock.onerror = e => {\n      this.log_('WebSocket error.  Closing connection.');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const error = (e as any).message || (e as any).data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n    };\n  }\n\n  /**\n   * No-op for websockets, we don't need to do anything once the connection is confirmed as open\n   */\n  start() {}\n\n  static forceDisallow_: boolean;\n\n  static forceDisallow() {\n    WebSocketConnection.forceDisallow_ = true;\n  }\n\n  static isAvailable(): boolean {\n    let isOldAndroid = false;\n    if (typeof navigator !== 'undefined' && navigator.userAgent) {\n      const oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n      const oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n      if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n        if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n          isOldAndroid = true;\n        }\n      }\n    }\n\n    return (\n      !isOldAndroid &&\n      WebSocketImpl !== null &&\n      !WebSocketConnection.forceDisallow_\n    );\n  }\n\n  /**\n   * Number of response before we consider the connection \"healthy.\"\n   */\n  static responsesRequiredToBeHealthy = 2;\n\n  /**\n   * Time to wait for the connection te become healthy before giving up.\n   */\n  static healthyTimeout = 30000;\n\n  /**\n   * Returns true if we previously failed to connect with this transport.\n   */\n  static previouslyFailed(): boolean {\n    // If our persistent storage is actually only in-memory storage,\n    // we default to assuming that it previously failed to be safe.\n    return (\n      PersistentStorage.isInMemoryStorage ||\n      PersistentStorage.get('previous_websocket_failure') === true\n    );\n  }\n\n  markConnectionHealthy() {\n    PersistentStorage.remove('previous_websocket_failure');\n  }\n\n  private appendFrame_(data: string) {\n    this.frames.push(data);\n    if (this.frames.length === this.totalFrames) {\n      const fullMess = this.frames.join('');\n      this.frames = null;\n      const jsonMess = jsonEval(fullMess) as object;\n\n      //handle the message\n      this.onMessage(jsonMess);\n    }\n  }\n\n  /**\n   * @param frameCount - The number of frames we are expecting from the server\n   */\n  private handleNewFrameCount_(frameCount: number) {\n    this.totalFrames = frameCount;\n    this.frames = [];\n  }\n\n  /**\n   * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\n   * @returns Any remaining data to be process, or null if there is none\n   */\n  private extractFrameCount_(data: string): string | null {\n    assert(this.frames === null, 'We already have a frame buffer');\n    // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n    // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n    if (data.length <= 6) {\n      const frameCount = Number(data);\n      if (!isNaN(frameCount)) {\n        this.handleNewFrameCount_(frameCount);\n        return null;\n      }\n    }\n    this.handleNewFrameCount_(1);\n    return data;\n  }\n\n  /**\n   * Process a websocket frame that has arrived from the server.\n   * @param mess - The frame data\n   */\n  handleIncomingFrame(mess: { [k: string]: unknown }) {\n    if (this.mySock === null) {\n      return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n    }\n    const data = mess['data'] as string;\n    this.bytesReceived += data.length;\n    this.stats_.incrementCounter('bytes_received', data.length);\n\n    this.resetKeepAlive();\n\n    if (this.frames !== null) {\n      // we're buffering\n      this.appendFrame_(data);\n    } else {\n      // try to parse out a frame count, otherwise, assume 1 and process it\n      const remainingData = this.extractFrameCount_(data);\n      if (remainingData !== null) {\n        this.appendFrame_(remainingData);\n      }\n    }\n  }\n\n  /**\n   * Send a message to the server\n   * @param data - The JSON object to transmit\n   */\n  send(data: {}) {\n    this.resetKeepAlive();\n\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //We can only fit a certain amount in each websocket frame, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    const dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\n\n    //Send the length header\n    if (dataSegs.length > 1) {\n      this.sendString_(String(dataSegs.length));\n    }\n\n    //Send the actual data in segments.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.sendString_(dataSegs[i]);\n    }\n  }\n\n  private shutdown_() {\n    this.isClosed_ = true;\n    if (this.keepaliveTimer) {\n      clearInterval(this.keepaliveTimer);\n      this.keepaliveTimer = null;\n    }\n\n    if (this.mySock) {\n      this.mySock.close();\n      this.mySock = null;\n    }\n  }\n\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is closing itself');\n      this.shutdown_();\n\n      // since this is an internal close, trigger the close listener\n      if (this.onDisconnect) {\n        this.onDisconnect(this.everConnected_);\n        this.onDisconnect = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler.\n   * Close the websocket and kill the connection.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is being closed');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\n   * the last activity.\n   */\n  resetKeepAlive() {\n    clearInterval(this.keepaliveTimer);\n    this.keepaliveTimer = setInterval(() => {\n      //If there has been no websocket activity for a while, send a no-op\n      if (this.mySock) {\n        this.sendString_('0');\n      }\n      this.resetKeepAlive();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL)) as any;\n  }\n\n  /**\n   * Send a string over the websocket.\n   *\n   * @param str - String to send.\n   */\n  private sendString_(str: string) {\n    // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n    // calls for some unknown reason.  We treat these as an error and disconnect.\n    // See https://app.asana.com/0/58926111402292/68021340250410\n    try {\n      this.mySock.send(str);\n    } catch (e) {\n      this.log_(\n        'Exception thrown from WebSocket.send():',\n        e.message || e.data,\n        'Closing connection.'\n      );\n      setTimeout(this.onClosed_.bind(this), 0);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { warn } from '../core/util/util';\n\nimport { BrowserPollConnection } from './BrowserPollConnection';\nimport { TransportConstructor } from './Transport';\nimport { WebSocketConnection } from './WebSocketConnection';\n\n/**\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\n * lifecycle.\n *\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\n * they are available.\n */\nexport class TransportManager {\n  private transports_: TransportConstructor[];\n\n  // Keeps track of whether the TransportManager has already chosen a transport to use\n  static globalTransportInitialized_ = false;\n\n  static get ALL_TRANSPORTS() {\n    return [BrowserPollConnection, WebSocketConnection];\n  }\n\n  /**\n   * Returns whether transport has been selected to ensure WebSocketConnection or BrowserPollConnection are not called after\n   * TransportManager has already set up transports_\n   */\n  static get IS_TRANSPORT_INITIALIZED() {\n    return this.globalTransportInitialized_;\n  }\n\n  /**\n   * @param repoInfo - Metadata around the namespace we're connecting to\n   */\n  constructor(repoInfo: RepoInfo) {\n    this.initTransports_(repoInfo);\n  }\n\n  private initTransports_(repoInfo: RepoInfo) {\n    const isWebSocketsAvailable: boolean =\n      WebSocketConnection && WebSocketConnection['isAvailable']();\n    let isSkipPollConnection =\n      isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\n\n    if (repoInfo.webSocketOnly) {\n      if (!isWebSocketsAvailable) {\n        warn(\n          \"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\"\n        );\n      }\n\n      isSkipPollConnection = true;\n    }\n\n    if (isSkipPollConnection) {\n      this.transports_ = [WebSocketConnection];\n    } else {\n      const transports = (this.transports_ = [] as TransportConstructor[]);\n      for (const transport of TransportManager.ALL_TRANSPORTS) {\n        if (transport && transport['isAvailable']()) {\n          transports.push(transport);\n        }\n      }\n      TransportManager.globalTransportInitialized_ = true;\n    }\n  }\n\n  /**\n   * @returns The constructor for the initial transport to use\n   */\n  initialTransport(): TransportConstructor {\n    if (this.transports_.length > 0) {\n      return this.transports_[0];\n    } else {\n      throw new Error('No transports available');\n    }\n  }\n\n  /**\n   * @returns The constructor for the next transport, or null\n   */\n  upgradeTransport(): TransportConstructor | null {\n    if (this.transports_.length > 1) {\n      return this.transports_[1];\n    } else {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { Indexable } from '../core/util/misc';\nimport {\n  error,\n  logWrapper,\n  requireKey,\n  setTimeoutNonBlocking,\n  warn\n} from '../core/util/util';\n\nimport { PROTOCOL_VERSION } from './Constants';\nimport { Transport, TransportConstructor } from './Transport';\nimport { TransportManager } from './TransportManager';\n\n// Abort upgrade attempt if it takes longer than 60s.\nconst UPGRADE_TIMEOUT = 60000;\n\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\nconst DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\n\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\nconst BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nconst BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\n\nconst enum RealtimeState {\n  CONNECTING,\n  CONNECTED,\n  DISCONNECTED\n}\n\nconst MESSAGE_TYPE = 't';\nconst MESSAGE_DATA = 'd';\nconst CONTROL_SHUTDOWN = 's';\nconst CONTROL_RESET = 'r';\nconst CONTROL_ERROR = 'e';\nconst CONTROL_PONG = 'o';\nconst SWITCH_ACK = 'a';\nconst END_TRANSMISSION = 'n';\nconst PING = 'p';\n\nconst SERVER_HELLO = 'h';\n\n/**\n * Creates a new real-time connection to the server using whichever method works\n * best in the current browser.\n */\nexport class Connection {\n  connectionCount = 0;\n  pendingDataMessages: unknown[] = [];\n  sessionId: string;\n\n  private conn_: Transport;\n  private healthyTimeout_: number;\n  private isHealthy_: boolean;\n  private log_: (...args: unknown[]) => void;\n  private primaryResponsesRequired_: number;\n  private rx_: Transport;\n  private secondaryConn_: Transport;\n  private secondaryResponsesRequired_: number;\n  private state_ = RealtimeState.CONNECTING;\n  private transportManager_: TransportManager;\n  private tx_: Transport;\n\n  /**\n   * @param id - an id for this connection\n   * @param repoInfo_ - the info for the endpoint to connect to\n   * @param applicationId_ - the Firebase App ID for this project\n   * @param appCheckToken_ - The App Check Token for this device.\n   * @param authToken_ - The auth token for this session.\n   * @param onMessage_ - the callback to be triggered when a server-push message arrives\n   * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\n   * @param onDisconnect_ - the callback to be triggered when a connection was lost\n   * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\n   * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\n   */\n  constructor(\n    public id: string,\n    private repoInfo_: RepoInfo,\n    private applicationId_: string | undefined,\n    private appCheckToken_: string | undefined,\n    private authToken_: string | undefined,\n    private onMessage_: (a: {}) => void,\n    private onReady_: (a: number, b: string) => void,\n    private onDisconnect_: () => void,\n    private onKill_: (a: string) => void,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper('c:' + this.id + ':');\n    this.transportManager_ = new TransportManager(repoInfo_);\n    this.log_('Connection created');\n    this.start_();\n  }\n\n  /**\n   * Starts a connection attempt\n   */\n  private start_(): void {\n    const conn = this.transportManager_.initialTransport();\n    this.conn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.appCheckToken_,\n      this.authToken_,\n      null,\n      this.lastSessionId\n    );\n\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessageReceived = this.connReceiver_(this.conn_);\n    const onConnectionLost = this.disconnReceiver_(this.conn_);\n    this.tx_ = this.conn_;\n    this.rx_ = this.conn_;\n    this.secondaryConn_ = null;\n    this.isHealthy_ = false;\n\n    /*\n     * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\n     * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\n     * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\n     * still have the context of your originating frame.\n     */\n    setTimeout(() => {\n      // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n      this.conn_ && this.conn_.open(onMessageReceived, onConnectionLost);\n    }, Math.floor(0));\n\n    const healthyTimeoutMS = conn['healthyTimeout'] || 0;\n    if (healthyTimeoutMS > 0) {\n      this.healthyTimeout_ = setTimeoutNonBlocking(() => {\n        this.healthyTimeout_ = null;\n        if (!this.isHealthy_) {\n          if (\n            this.conn_ &&\n            this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has received ' +\n                this.conn_.bytesReceived +\n                ' bytes.  Marking connection healthy.'\n            );\n            this.isHealthy_ = true;\n            this.conn_.markConnectionHealthy();\n          } else if (\n            this.conn_ &&\n            this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has sent ' +\n                this.conn_.bytesSent +\n                ' bytes.  Leaving connection alive.'\n            );\n            // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n            // the server.\n          } else {\n            this.log_('Closing unhealthy connection after timeout.');\n            this.close();\n          }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      }, Math.floor(healthyTimeoutMS)) as any;\n    }\n  }\n\n  private nextTransportId_(): string {\n    return 'c:' + this.id + ':' + this.connectionCount++;\n  }\n\n  private disconnReceiver_(conn) {\n    return everConnected => {\n      if (conn === this.conn_) {\n        this.onConnectionLost_(everConnected);\n      } else if (conn === this.secondaryConn_) {\n        this.log_('Secondary connection lost.');\n        this.onSecondaryConnectionLost_();\n      } else {\n        this.log_('closing an old connection');\n      }\n    };\n  }\n\n  private connReceiver_(conn: Transport) {\n    return (message: Indexable) => {\n      if (this.state_ !== RealtimeState.DISCONNECTED) {\n        if (conn === this.rx_) {\n          this.onPrimaryMessageReceived_(message);\n        } else if (conn === this.secondaryConn_) {\n          this.onSecondaryMessageReceived_(message);\n        } else {\n          this.log_('message on old connection');\n        }\n      }\n    };\n  }\n\n  /**\n   * @param dataMsg - An arbitrary data message to be sent to the server\n   */\n  sendRequest(dataMsg: object) {\n    // wrap in a data message envelope and send it on\n    const msg = { t: 'd', d: dataMsg };\n    this.sendData_(msg);\n  }\n\n  tryCleanupConnection() {\n    if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n      this.log_(\n        'cleaning up and promoting a connection: ' + this.secondaryConn_.connId\n      );\n      this.conn_ = this.secondaryConn_;\n      this.secondaryConn_ = null;\n      // the server will shutdown the old connection\n    }\n  }\n\n  private onSecondaryControl_(controlData: { [k: string]: unknown }) {\n    if (MESSAGE_TYPE in controlData) {\n      const cmd = controlData[MESSAGE_TYPE] as string;\n      if (cmd === SWITCH_ACK) {\n        this.upgradeIfSecondaryHealthy_();\n      } else if (cmd === CONTROL_RESET) {\n        // Most likely the session wasn't valid. Abandon the switch attempt\n        this.log_('Got a reset on secondary, closing it');\n        this.secondaryConn_.close();\n        // If we were already using this connection for something, than we need to fully close\n        if (\n          this.tx_ === this.secondaryConn_ ||\n          this.rx_ === this.secondaryConn_\n        ) {\n          this.close();\n        }\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on secondary.');\n        this.secondaryResponsesRequired_--;\n        this.upgradeIfSecondaryHealthy_();\n      }\n    }\n  }\n\n  private onSecondaryMessageReceived_(parsedData: Indexable) {\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onSecondaryControl_(data as Indexable);\n    } else if (layer === 'd') {\n      // got a data message, but we're still second connection. Need to buffer it up\n      this.pendingDataMessages.push(data);\n    } else {\n      throw new Error('Unknown protocol layer: ' + layer);\n    }\n  }\n\n  private upgradeIfSecondaryHealthy_() {\n    if (this.secondaryResponsesRequired_ <= 0) {\n      this.log_('Secondary connection is healthy.');\n      this.isHealthy_ = true;\n      this.secondaryConn_.markConnectionHealthy();\n      this.proceedWithUpgrade_();\n    } else {\n      // Send a ping to make sure the connection is healthy.\n      this.log_('sending ping on secondary.');\n      this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private proceedWithUpgrade_() {\n    // tell this connection to consider itself open\n    this.secondaryConn_.start();\n    // send ack\n    this.log_('sending client ack on secondary');\n    this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\n\n    // send end packet on primary transport, switch to sending on this one\n    // can receive on this one, buffer responses until end received on primary transport\n    this.log_('Ending transmission on primary');\n    this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\n    this.tx_ = this.secondaryConn_;\n\n    this.tryCleanupConnection();\n  }\n\n  private onPrimaryMessageReceived_(parsedData: { [k: string]: unknown }) {\n    // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onControl_(data as { [k: string]: unknown });\n    } else if (layer === 'd') {\n      this.onDataMessage_(data);\n    }\n  }\n\n  private onDataMessage_(message: unknown) {\n    this.onPrimaryResponse_();\n\n    // We don't do anything with data messages, just kick them up a level\n    this.onMessage_(message);\n  }\n\n  private onPrimaryResponse_() {\n    if (!this.isHealthy_) {\n      this.primaryResponsesRequired_--;\n      if (this.primaryResponsesRequired_ <= 0) {\n        this.log_('Primary connection is healthy.');\n        this.isHealthy_ = true;\n        this.conn_.markConnectionHealthy();\n      }\n    }\n  }\n\n  private onControl_(controlData: { [k: string]: unknown }) {\n    const cmd: string = requireKey(MESSAGE_TYPE, controlData) as string;\n    if (MESSAGE_DATA in controlData) {\n      const payload = controlData[MESSAGE_DATA];\n      if (cmd === SERVER_HELLO) {\n        this.onHandshake_(\n          payload as {\n            ts: number;\n            v: string;\n            h: string;\n            s: string;\n          }\n        );\n      } else if (cmd === END_TRANSMISSION) {\n        this.log_('recvd end transmission on primary');\n        this.rx_ = this.secondaryConn_;\n        for (let i = 0; i < this.pendingDataMessages.length; ++i) {\n          this.onDataMessage_(this.pendingDataMessages[i]);\n        }\n        this.pendingDataMessages = [];\n        this.tryCleanupConnection();\n      } else if (cmd === CONTROL_SHUTDOWN) {\n        // This was previously the 'onKill' callback passed to the lower-level connection\n        // payload in this case is the reason for the shutdown. Generally a human-readable error\n        this.onConnectionShutdown_(payload as string);\n      } else if (cmd === CONTROL_RESET) {\n        // payload in this case is the host we should contact\n        this.onReset_(payload as string);\n      } else if (cmd === CONTROL_ERROR) {\n        error('Server Error: ' + payload);\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on primary.');\n        this.onPrimaryResponse_();\n        this.sendPingOnPrimaryIfNecessary_();\n      } else {\n        error('Unknown control packet command: ' + cmd);\n      }\n    }\n  }\n\n  /**\n   * @param handshake - The handshake data returned from the server\n   */\n  private onHandshake_(handshake: {\n    ts: number;\n    v: string;\n    h: string;\n    s: string;\n  }): void {\n    const timestamp = handshake.ts;\n    const version = handshake.v;\n    const host = handshake.h;\n    this.sessionId = handshake.s;\n    this.repoInfo_.host = host;\n    // if we've already closed the connection, then don't bother trying to progress further\n    if (this.state_ === RealtimeState.CONNECTING) {\n      this.conn_.start();\n      this.onConnectionEstablished_(this.conn_, timestamp);\n      if (PROTOCOL_VERSION !== version) {\n        warn('Protocol version mismatch detected');\n      }\n      // TODO: do we want to upgrade? when? maybe a delay?\n      this.tryStartUpgrade_();\n    }\n  }\n\n  private tryStartUpgrade_() {\n    const conn = this.transportManager_.upgradeTransport();\n    if (conn) {\n      this.startUpgrade_(conn);\n    }\n  }\n\n  private startUpgrade_(conn: TransportConstructor) {\n    this.secondaryConn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.appCheckToken_,\n      this.authToken_,\n      this.sessionId\n    );\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.secondaryResponsesRequired_ =\n      conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessage = this.connReceiver_(this.secondaryConn_);\n    const onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n    this.secondaryConn_.open(onMessage, onDisconnect);\n\n    // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n    setTimeoutNonBlocking(() => {\n      if (this.secondaryConn_) {\n        this.log_('Timed out trying to upgrade.');\n        this.secondaryConn_.close();\n      }\n    }, Math.floor(UPGRADE_TIMEOUT));\n  }\n\n  private onReset_(host: string) {\n    this.log_('Reset packet received.  New host: ' + host);\n    this.repoInfo_.host = host;\n    // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n    // We don't currently support resets after the connection has already been established\n    if (this.state_ === RealtimeState.CONNECTED) {\n      this.close();\n    } else {\n      // Close whatever connections we have open and start again.\n      this.closeConnections_();\n      this.start_();\n    }\n  }\n\n  private onConnectionEstablished_(conn: Transport, timestamp: number) {\n    this.log_('Realtime connection established.');\n    this.conn_ = conn;\n    this.state_ = RealtimeState.CONNECTED;\n\n    if (this.onReady_) {\n      this.onReady_(timestamp, this.sessionId);\n      this.onReady_ = null;\n    }\n\n    // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n    // send some pings.\n    if (this.primaryResponsesRequired_ === 0) {\n      this.log_('Primary connection is healthy.');\n      this.isHealthy_ = true;\n    } else {\n      setTimeoutNonBlocking(() => {\n        this.sendPingOnPrimaryIfNecessary_();\n      }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n    }\n  }\n\n  private sendPingOnPrimaryIfNecessary_() {\n    // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n    if (!this.isHealthy_ && this.state_ === RealtimeState.CONNECTED) {\n      this.log_('sending ping on primary.');\n      this.sendData_({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private onSecondaryConnectionLost_() {\n    const conn = this.secondaryConn_;\n    this.secondaryConn_ = null;\n    if (this.tx_ === conn || this.rx_ === conn) {\n      // we are relying on this connection already in some capacity. Therefore, a failure is real\n      this.close();\n    }\n  }\n\n  /**\n   * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\n   * we should flush the host cache\n   */\n  private onConnectionLost_(everConnected: boolean) {\n    this.conn_ = null;\n\n    // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n    // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n    if (!everConnected && this.state_ === RealtimeState.CONNECTING) {\n      this.log_('Realtime connection failed.');\n      // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n      if (this.repoInfo_.isCacheableHost()) {\n        PersistentStorage.remove('host:' + this.repoInfo_.host);\n        // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n        this.repoInfo_.internalHost = this.repoInfo_.host;\n      }\n    } else if (this.state_ === RealtimeState.CONNECTED) {\n      this.log_('Realtime connection lost.');\n    }\n\n    this.close();\n  }\n\n  private onConnectionShutdown_(reason: string) {\n    this.log_('Connection shutdown command received. Shutting down...');\n\n    if (this.onKill_) {\n      this.onKill_(reason);\n      this.onKill_ = null;\n    }\n\n    // We intentionally don't want to fire onDisconnect (kill is a different case),\n    // so clear the callback.\n    this.onDisconnect_ = null;\n\n    this.close();\n  }\n\n  private sendData_(data: object) {\n    if (this.state_ !== RealtimeState.CONNECTED) {\n      throw 'Connection is not connected';\n    } else {\n      this.tx_.send(data);\n    }\n  }\n\n  /**\n   * Cleans up this connection, calling the appropriate callbacks\n   */\n  close() {\n    if (this.state_ !== RealtimeState.DISCONNECTED) {\n      this.log_('Closing realtime connection.');\n      this.state_ = RealtimeState.DISCONNECTED;\n\n      this.closeConnections_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_();\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  private closeConnections_() {\n    this.log_('Shutting down all connections');\n    if (this.conn_) {\n      this.conn_.close();\n      this.conn_ = null;\n    }\n\n    if (this.secondaryConn_) {\n      this.secondaryConn_.close();\n      this.secondaryConn_ = null;\n    }\n\n    if (this.healthyTimeout_) {\n      clearTimeout(this.healthyTimeout_);\n      this.healthyTimeout_ = null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { QueryContext } from './view/EventRegistration';\n\n/**\n * Interface defining the set of actions that can be performed against the Firebase server\n * (basically corresponds to our wire protocol).\n *\n * @interface\n */\nexport abstract class ServerActions {\n  abstract listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ): void;\n\n  /**\n   * Remove a listen.\n   */\n  abstract unlisten(query: QueryContext, tag: number | null): void;\n\n  /**\n   * Get the server value satisfying this query.\n   */\n  abstract get(query: QueryContext): Promise<string>;\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {}\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {}\n\n  /**\n   * Refreshes the auth token for the current connection.\n   * @param token - The authentication token\n   */\n  refreshAuthToken(token: string) {}\n\n  /**\n   * Refreshes the app check token for the current connection.\n   * @param token The app check token\n   */\n  refreshAppCheckToken(token: string) {}\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  reportStats(stats: { [k: string]: unknown }) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\n/**\n * Base class to be used if you want to emit events. Call the constructor with\n * the set of allowed event names.\n */\nexport abstract class EventEmitter {\n  private listeners_: {\n    [eventType: string]: Array<{\n      callback(...args: unknown[]): void;\n      context: unknown;\n    }>;\n  } = {};\n\n  constructor(private allowedEvents_: string[]) {\n    assert(\n      Array.isArray(allowedEvents_) && allowedEvents_.length > 0,\n      'Requires a non-empty array'\n    );\n  }\n\n  /**\n   * To be overridden by derived classes in order to fire an initial event when\n   * somebody subscribes for data.\n   *\n   * @returns {Array.<*>} Array of parameters to trigger initial event with.\n   */\n  abstract getInitialEvent(eventType: string): unknown[];\n\n  /**\n   * To be called by derived classes to trigger events.\n   */\n  protected trigger(eventType: string, ...varArgs: unknown[]) {\n    if (Array.isArray(this.listeners_[eventType])) {\n      // Clone the list, since callbacks could add/remove listeners.\n      const listeners = [...this.listeners_[eventType]];\n\n      for (let i = 0; i < listeners.length; i++) {\n        listeners[i].callback.apply(listeners[i].context, varArgs);\n      }\n    }\n  }\n\n  on(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    this.listeners_[eventType] = this.listeners_[eventType] || [];\n    this.listeners_[eventType].push({ callback, context });\n\n    const eventData = this.getInitialEvent(eventType);\n    if (eventData) {\n      callback.apply(context, eventData);\n    }\n  }\n\n  off(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    const listeners = this.listeners_[eventType] || [];\n    for (let i = 0; i < listeners.length; i++) {\n      if (\n        listeners[i].callback === callback &&\n        (!context || context === listeners[i].context)\n      ) {\n        listeners.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  private validateEventType_(eventType: string) {\n    assert(\n      this.allowedEvents_.find(et => {\n        return et === eventType;\n      }),\n      'Unknown event: ' + eventType\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isMobileCordova } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\n/**\n * Monitors online state (as reported by window.online/offline events).\n *\n * The expectation is that this could have many false positives (thinks we are online\n * when we're not), but no false negatives.  So we can safely use it to determine when\n * we definitely cannot reach the internet.\n */\nexport class OnlineMonitor extends EventEmitter {\n  private online_ = true;\n\n  static getInstance() {\n    return new OnlineMonitor();\n  }\n\n  constructor() {\n    super(['online']);\n\n    // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n    // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n    // It would seem that the 'online' event does not always fire consistently. So we disable it\n    // for Cordova.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window.addEventListener !== 'undefined' &&\n      !isMobileCordova()\n    ) {\n      window.addEventListener(\n        'online',\n        () => {\n          if (!this.online_) {\n            this.online_ = true;\n            this.trigger('online', true);\n          }\n        },\n        false\n      );\n\n      window.addEventListener(\n        'offline',\n        () => {\n          if (this.online_) {\n            this.online_ = false;\n            this.trigger('online', false);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'online', 'Unknown event type: ' + eventType);\n    return [this.online_];\n  }\n\n  currentlyOnline(): boolean {\n    return this.online_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringLength } from '@firebase/util';\n\nimport { nameCompare } from './util';\n\n/** Maximum key depth. */\nconst MAX_PATH_DEPTH = 32;\n\n/** Maximum number of (UTF8) bytes in a Firebase path. */\nconst MAX_PATH_LENGTH_BYTES = 768;\n\n/**\n * An immutable object representing a parsed path.  It's immutable so that you\n * can pass them around to other functions without worrying about them changing\n * it.\n */\n\nexport class Path {\n  pieces_: string[];\n  pieceNum_: number;\n\n  /**\n   * @param pathOrString - Path string to parse, or another path, or the raw\n   * tokens array\n   */\n  constructor(pathOrString: string | string[], pieceNum?: number) {\n    if (pieceNum === void 0) {\n      this.pieces_ = (pathOrString as string).split('/');\n\n      // Remove empty pieces.\n      let copyTo = 0;\n      for (let i = 0; i < this.pieces_.length; i++) {\n        if (this.pieces_[i].length > 0) {\n          this.pieces_[copyTo] = this.pieces_[i];\n          copyTo++;\n        }\n      }\n      this.pieces_.length = copyTo;\n\n      this.pieceNum_ = 0;\n    } else {\n      this.pieces_ = pathOrString as string[];\n      this.pieceNum_ = pieceNum;\n    }\n  }\n\n  toString(): string {\n    let pathString = '';\n    for (let i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + this.pieces_[i];\n      }\n    }\n\n    return pathString || '/';\n  }\n}\n\nexport function newEmptyPath(): Path {\n  return new Path('');\n}\n\nexport function pathGetFront(path: Path): string | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  return path.pieces_[path.pieceNum_];\n}\n\n/**\n * @returns The number of segments in this path\n */\nexport function pathGetLength(path: Path): number {\n  return path.pieces_.length - path.pieceNum_;\n}\n\nexport function pathPopFront(path: Path): Path {\n  let pieceNum = path.pieceNum_;\n  if (pieceNum < path.pieces_.length) {\n    pieceNum++;\n  }\n  return new Path(path.pieces_, pieceNum);\n}\n\nexport function pathGetBack(path: Path): string | null {\n  if (path.pieceNum_ < path.pieces_.length) {\n    return path.pieces_[path.pieces_.length - 1];\n  }\n\n  return null;\n}\n\nexport function pathToUrlEncodedString(path: Path): string {\n  let pathString = '';\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    if (path.pieces_[i] !== '') {\n      pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\n    }\n  }\n\n  return pathString || '/';\n}\n\n/**\n * Shallow copy of the parts of the path.\n *\n */\nexport function pathSlice(path: Path, begin: number = 0): string[] {\n  return path.pieces_.slice(path.pieceNum_ + begin);\n}\n\nexport function pathParent(path: Path): Path | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  return new Path(pieces, 0);\n}\n\nexport function pathChild(path: Path, childPathObj: string | Path): Path {\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  if (childPathObj instanceof Path) {\n    for (let i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n      pieces.push(childPathObj.pieces_[i]);\n    }\n  } else {\n    const childPieces = childPathObj.split('/');\n    for (let i = 0; i < childPieces.length; i++) {\n      if (childPieces[i].length > 0) {\n        pieces.push(childPieces[i]);\n      }\n    }\n  }\n\n  return new Path(pieces, 0);\n}\n\n/**\n * @returns True if there are no segments in this path\n */\nexport function pathIsEmpty(path: Path): boolean {\n  return path.pieceNum_ >= path.pieces_.length;\n}\n\n/**\n * @returns The path from outerPath to innerPath\n */\nexport function newRelativePath(outerPath: Path, innerPath: Path): Path {\n  const outer = pathGetFront(outerPath),\n    inner = pathGetFront(innerPath);\n  if (outer === null) {\n    return innerPath;\n  } else if (outer === inner) {\n    return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\n  } else {\n    throw new Error(\n      'INTERNAL ERROR: innerPath (' +\n        innerPath +\n        ') is not within ' +\n        'outerPath (' +\n        outerPath +\n        ')'\n    );\n  }\n}\n\n/**\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\n */\nexport function pathCompare(left: Path, right: Path): number {\n  const leftKeys = pathSlice(left, 0);\n  const rightKeys = pathSlice(right, 0);\n  for (let i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n    const cmp = nameCompare(leftKeys[i], rightKeys[i]);\n    if (cmp !== 0) {\n      return cmp;\n    }\n  }\n  if (leftKeys.length === rightKeys.length) {\n    return 0;\n  }\n  return leftKeys.length < rightKeys.length ? -1 : 1;\n}\n\n/**\n * @returns true if paths are the same.\n */\nexport function pathEquals(path: Path, other: Path): boolean {\n  if (pathGetLength(path) !== pathGetLength(other)) {\n    return false;\n  }\n\n  for (\n    let i = path.pieceNum_, j = other.pieceNum_;\n    i <= path.pieces_.length;\n    i++, j++\n  ) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * @returns True if this path is a parent of (or the same as) other\n */\nexport function pathContains(path: Path, other: Path): boolean {\n  let i = path.pieceNum_;\n  let j = other.pieceNum_;\n  if (pathGetLength(path) > pathGetLength(other)) {\n    return false;\n  }\n  while (i < path.pieces_.length) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n    ++i;\n    ++j;\n  }\n  return true;\n}\n\n/**\n * Dynamic (mutable) path used to count path lengths.\n *\n * This class is used to efficiently check paths for valid\n * length (in UTF8 bytes) and depth (used in path validation).\n *\n * Throws Error exception if path is ever invalid.\n *\n * The definition of a path always begins with '/'.\n */\nexport class ValidationPath {\n  parts_: string[];\n  /** Initialize to number of '/' chars needed in path. */\n  byteLength_: number;\n\n  /**\n   * @param path - Initial Path.\n   * @param errorPrefix_ - Prefix for any error messages.\n   */\n  constructor(path: Path, public errorPrefix_: string) {\n    this.parts_ = pathSlice(path, 0);\n    /** Initialize to number of '/' chars needed in path. */\n    this.byteLength_ = Math.max(1, this.parts_.length);\n\n    for (let i = 0; i < this.parts_.length; i++) {\n      this.byteLength_ += stringLength(this.parts_[i]);\n    }\n    validationPathCheckValid(this);\n  }\n}\n\nexport function validationPathPush(\n  validationPath: ValidationPath,\n  child: string\n): void {\n  // Count the needed '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ += 1;\n  }\n  validationPath.parts_.push(child);\n  validationPath.byteLength_ += stringLength(child);\n  validationPathCheckValid(validationPath);\n}\n\nexport function validationPathPop(validationPath: ValidationPath): void {\n  const last = validationPath.parts_.pop();\n  validationPath.byteLength_ -= stringLength(last);\n  // Un-count the previous '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ -= 1;\n  }\n}\n\nfunction validationPathCheckValid(validationPath: ValidationPath): void {\n  if (validationPath.byteLength_ > MAX_PATH_LENGTH_BYTES) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'has a key path longer than ' +\n        MAX_PATH_LENGTH_BYTES +\n        ' bytes (' +\n        validationPath.byteLength_ +\n        ').'\n    );\n  }\n  if (validationPath.parts_.length > MAX_PATH_DEPTH) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'path specified exceeds the maximum depth that can be written (' +\n        MAX_PATH_DEPTH +\n        ') or object contains a cycle ' +\n        validationPathToErrorString(validationPath)\n    );\n  }\n}\n\n/**\n * String for use in error messages - uses '.' notation for path.\n */\nexport function validationPathToErrorString(\n  validationPath: ValidationPath\n): string {\n  if (validationPath.parts_.length === 0) {\n    return '';\n  }\n  return \"in property '\" + validationPath.parts_.join('.') + \"'\";\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\ndeclare const document: Document;\n\nexport class VisibilityMonitor extends EventEmitter {\n  private visible_: boolean;\n\n  static getInstance() {\n    return new VisibilityMonitor();\n  }\n\n  constructor() {\n    super(['visible']);\n    let hidden: string;\n    let visibilityChange: string;\n    if (\n      typeof document !== 'undefined' &&\n      typeof document.addEventListener !== 'undefined'\n    ) {\n      if (typeof document['hidden'] !== 'undefined') {\n        // Opera 12.10 and Firefox 18 and later support\n        visibilityChange = 'visibilitychange';\n        hidden = 'hidden';\n      } else if (typeof document['mozHidden'] !== 'undefined') {\n        visibilityChange = 'mozvisibilitychange';\n        hidden = 'mozHidden';\n      } else if (typeof document['msHidden'] !== 'undefined') {\n        visibilityChange = 'msvisibilitychange';\n        hidden = 'msHidden';\n      } else if (typeof document['webkitHidden'] !== 'undefined') {\n        visibilityChange = 'webkitvisibilitychange';\n        hidden = 'webkitHidden';\n      }\n    }\n\n    // Initially, we always assume we are visible. This ensures that in browsers\n    // without page visibility support or in cases where we are never visible\n    // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n    // reconnects\n    this.visible_ = true;\n\n    if (visibilityChange) {\n      document.addEventListener(\n        visibilityChange,\n        () => {\n          const visible = !document[hidden];\n          if (visible !== this.visible_) {\n            this.visible_ = visible;\n            this.trigger('visible', visible);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n    return [this.visible_];\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  Deferred,\n  isEmpty,\n  isMobileCordova,\n  isNodeSdk,\n  isReactNative,\n  isValidFormat,\n  safeGet,\n  stringify,\n  isAdmin\n} from '@firebase/util';\n\nimport { Connection } from '../realtime/Connection';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { OnlineMonitor } from './util/OnlineMonitor';\nimport { Path } from './util/Path';\nimport { error, log, logWrapper, warn, ObjectToUniqueKey } from './util/util';\nimport { VisibilityMonitor } from './util/VisibilityMonitor';\nimport { SDK_VERSION } from './version';\nimport { QueryContext } from './view/EventRegistration';\n\nconst RECONNECT_MIN_DELAY = 1000;\nconst RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\nconst RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\nconst RECONNECT_DELAY_MULTIPLIER = 1.3;\nconst RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\nconst SERVER_KILL_INTERRUPT_REASON = 'server_kill';\n\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\nconst INVALID_TOKEN_THRESHOLD = 3;\n\ninterface ListenSpec {\n  onComplete(s: string, p?: unknown): void;\n\n  hashFn(): string;\n\n  query: QueryContext;\n  tag: number | null;\n}\n\ninterface OnDisconnectRequest {\n  pathString: string;\n  action: string;\n  data: unknown;\n  onComplete?: (a: string, b: string) => void;\n}\n\ninterface OutstandingPut {\n  action: string;\n  request: object;\n  queued?: boolean;\n  onComplete: (a: string, b?: string) => void;\n}\n\ninterface OutstandingGet {\n  request: object;\n  onComplete: (response: { [k: string]: unknown }) => void;\n}\n\n/**\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\n *\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\n * in quotes to make sure the closure compiler does not minify them.\n */\nexport class PersistentConnection extends ServerActions {\n  // Used for diagnostic logging.\n  id = PersistentConnection.nextPersistentConnectionId_++;\n  private log_ = logWrapper('p:' + this.id + ':');\n\n  private interruptReasons_: { [reason: string]: boolean } = {};\n  private readonly listens: Map<\n    /* path */ string,\n    Map</* queryId */ string, ListenSpec>\n  > = new Map();\n  private outstandingPuts_: OutstandingPut[] = [];\n  private outstandingGets_: OutstandingGet[] = [];\n  private outstandingPutCount_ = 0;\n  private outstandingGetCount_ = 0;\n  private onDisconnectRequestQueue_: OnDisconnectRequest[] = [];\n  private connected_ = false;\n  private reconnectDelay_ = RECONNECT_MIN_DELAY;\n  private maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n  private securityDebugCallback_: ((a: object) => void) | null = null;\n  lastSessionId: string | null = null;\n\n  private establishConnectionTimer_: number | null = null;\n\n  private visible_: boolean = false;\n\n  // Before we get connected, we keep a queue of pending messages to send.\n  private requestCBHash_: { [k: number]: (a: unknown) => void } = {};\n  private requestNumber_ = 0;\n\n  private realtime_: {\n    sendRequest(a: object): void;\n    close(): void;\n  } | null = null;\n\n  private authToken_: string | null = null;\n  private appCheckToken_: string | null = null;\n  private forceTokenRefresh_ = false;\n  private invalidAuthTokenCount_ = 0;\n  private invalidAppCheckTokenCount_ = 0;\n\n  private firstConnection_ = true;\n  private lastConnectionAttemptTime_: number | null = null;\n  private lastConnectionEstablishedTime_: number | null = null;\n\n  private static nextPersistentConnectionId_ = 0;\n\n  /**\n   * Counter for number of connections created. Mainly used for tagging in the logs\n   */\n  private static nextConnectionId_ = 0;\n\n  /**\n   * @param repoInfo_ - Data about the namespace we are connecting to\n   * @param applicationId_ - The Firebase App ID for this project\n   * @param onDataUpdate_ - A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private applicationId_: string,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private onConnectStatus_: (a: boolean) => void,\n    private onServerInfoUpdate_: (a: unknown) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private appCheckTokenProvider_: AppCheckTokenProvider,\n    private authOverride_?: object | null\n  ) {\n    super();\n\n    if (authOverride_ && !isNodeSdk()) {\n      throw new Error(\n        'Auth override specified in options, but not supported on non Node.js platforms'\n      );\n    }\n\n    VisibilityMonitor.getInstance().on('visible', this.onVisible_, this);\n\n    if (repoInfo_.host.indexOf('fblocal') === -1) {\n      OnlineMonitor.getInstance().on('online', this.onOnline_, this);\n    }\n  }\n\n  protected sendRequest(\n    action: string,\n    body: unknown,\n    onResponse?: (a: unknown) => void\n  ) {\n    const curReqNum = ++this.requestNumber_;\n\n    const msg = { r: curReqNum, a: action, b: body };\n    this.log_(stringify(msg));\n    assert(\n      this.connected_,\n      \"sendRequest call when we're not connected not allowed.\"\n    );\n    this.realtime_.sendRequest(msg);\n    if (onResponse) {\n      this.requestCBHash_[curReqNum] = onResponse;\n    }\n  }\n\n  get(query: QueryContext): Promise<string> {\n    this.initConnection_();\n\n    const deferred = new Deferred<string>();\n    const request = {\n      p: query._path.toString(),\n      q: query._queryObject\n    };\n    const outstandingGet = {\n      action: 'g',\n      request,\n      onComplete: (message: { [k: string]: unknown }) => {\n        const payload = message['d'] as string;\n        if (message['s'] === 'ok') {\n          deferred.resolve(payload);\n        } else {\n          deferred.reject(payload);\n        }\n      }\n    };\n    this.outstandingGets_.push(outstandingGet);\n    this.outstandingGetCount_++;\n    const index = this.outstandingGets_.length - 1;\n\n    if (this.connected_) {\n      this.sendGet_(index);\n    }\n\n    return deferred.promise;\n  }\n\n  listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    this.initConnection_();\n\n    const queryId = query._queryIdentifier;\n    const pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + queryId);\n    if (!this.listens.has(pathString)) {\n      this.listens.set(pathString, new Map());\n    }\n    assert(\n      query._queryParams.isDefault() || !query._queryParams.loadsAllData(),\n      'listen() called for non-default but complete query'\n    );\n    assert(\n      !this.listens.get(pathString)!.has(queryId),\n      `listen() called twice for same path/queryId.`\n    );\n    const listenSpec: ListenSpec = {\n      onComplete,\n      hashFn: currentHashFn,\n      query,\n      tag\n    };\n    this.listens.get(pathString)!.set(queryId, listenSpec);\n\n    if (this.connected_) {\n      this.sendListen_(listenSpec);\n    }\n  }\n\n  private sendGet_(index: number) {\n    const get = this.outstandingGets_[index];\n    this.sendRequest('g', get.request, (message: { [k: string]: unknown }) => {\n      delete this.outstandingGets_[index];\n      this.outstandingGetCount_--;\n      if (this.outstandingGetCount_ === 0) {\n        this.outstandingGets_ = [];\n      }\n      if (get.onComplete) {\n        get.onComplete(message);\n      }\n    });\n  }\n\n  private sendListen_(listenSpec: ListenSpec) {\n    const query = listenSpec.query;\n    const pathString = query._path.toString();\n    const queryId = query._queryIdentifier;\n    this.log_('Listen on ' + pathString + ' for ' + queryId);\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n\n    const action = 'q';\n\n    // Only bother to send query if it's non-default.\n    if (listenSpec.tag) {\n      req['q'] = query._queryObject;\n      req['t'] = listenSpec.tag;\n    }\n\n    req[/*hash*/ 'h'] = listenSpec.hashFn();\n\n    this.sendRequest(action, req, (message: { [k: string]: unknown }) => {\n      const payload: unknown = message[/*data*/ 'd'];\n      const status = message[/*status*/ 's'] as string;\n\n      // print warnings in any case...\n      PersistentConnection.warnOnListenWarnings_(payload, query);\n\n      const currentListenSpec =\n        this.listens.get(pathString) &&\n        this.listens.get(pathString)!.get(queryId);\n      // only trigger actions if the listen hasn't been removed and readded\n      if (currentListenSpec === listenSpec) {\n        this.log_('listen response', message);\n\n        if (status !== 'ok') {\n          this.removeListen_(pathString, queryId);\n        }\n\n        if (listenSpec.onComplete) {\n          listenSpec.onComplete(status, payload);\n        }\n      }\n    });\n  }\n\n  private static warnOnListenWarnings_(payload: unknown, query: QueryContext) {\n    if (payload && typeof payload === 'object' && contains(payload, 'w')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const warnings = safeGet(payload as any, 'w');\n      if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n        const indexSpec =\n          '\".indexOn\": \"' + query._queryParams.getIndex().toString() + '\"';\n        const indexPath = query._path.toString();\n        warn(\n          `Using an unspecified index. Your data will be downloaded and ` +\n            `filtered on the client. Consider adding ${indexSpec} at ` +\n            `${indexPath} to your security rules for better performance.`\n        );\n      }\n    }\n  }\n\n  refreshAuthToken(token: string) {\n    this.authToken_ = token;\n    this.log_('Auth token refreshed');\n    if (this.authToken_) {\n      this.tryAuth();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n      //the credential so we dont become authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unauth', {}, () => {});\n      }\n    }\n\n    this.reduceReconnectDelayIfAdminCredential_(token);\n  }\n\n  private reduceReconnectDelayIfAdminCredential_(credential: string) {\n    // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n    // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n    const isFirebaseSecret = credential && credential.length === 40;\n    if (isFirebaseSecret || isAdmin(credential)) {\n      this.log_(\n        'Admin auth credential detected.  Reducing max reconnect time.'\n      );\n      this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n    }\n  }\n\n  refreshAppCheckToken(token: string | null) {\n    this.appCheckToken_ = token;\n    this.log_('App check token refreshed');\n    if (this.appCheckToken_) {\n      this.tryAppCheck();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us.\n      //If we're not connected, simply delete the credential so we dont become\n      // authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unappeck', {}, () => {});\n      }\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\n   * a auth revoked (the connection is closed).\n   */\n  tryAuth() {\n    if (this.connected_ && this.authToken_) {\n      const token = this.authToken_;\n      const authMethod = isValidFormat(token) ? 'auth' : 'gauth';\n      const requestData: { [k: string]: unknown } = { cred: token };\n      if (this.authOverride_ === null) {\n        requestData['noauth'] = true;\n      } else if (typeof this.authOverride_ === 'object') {\n        requestData['authvar'] = this.authOverride_;\n      }\n      this.sendRequest(\n        authMethod,\n        requestData,\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n\n          if (this.authToken_ === token) {\n            if (status === 'ok') {\n              this.invalidAuthTokenCount_ = 0;\n            } else {\n              // Triggers reconnect and force refresh for auth token\n              this.onAuthRevoked_(status, data);\n            }\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given token. If the authentication\n   * attempt fails, it's triggered like the token was revoked (the connection is\n   * closed).\n   */\n  tryAppCheck() {\n    if (this.connected_ && this.appCheckToken_) {\n      this.sendRequest(\n        'appcheck',\n        { 'token': this.appCheckToken_ },\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n          if (status === 'ok') {\n            this.invalidAppCheckTokenCount_ = 0;\n          } else {\n            this.onAppCheckRevoked_(status, data);\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  unlisten(query: QueryContext, tag: number | null) {\n    const pathString = query._path.toString();\n    const queryId = query._queryIdentifier;\n\n    this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n\n    assert(\n      query._queryParams.isDefault() || !query._queryParams.loadsAllData(),\n      'unlisten() called for non-default but complete query'\n    );\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && this.connected_) {\n      this.sendUnlisten_(pathString, queryId, query._queryObject, tag);\n    }\n  }\n\n  private sendUnlisten_(\n    pathString: string,\n    queryId: string,\n    queryObj: object,\n    tag: number | null\n  ) {\n    this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n    const action = 'n';\n    // Only bother sending queryId if it's non-default.\n    if (tag) {\n      req['q'] = queryObj;\n      req['t'] = tag;\n    }\n\n    this.sendRequest(action, req);\n  }\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('o', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'o',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('om', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'om',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('oc', pathString, null, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'oc',\n        data: null,\n        onComplete\n      });\n    }\n  }\n\n  private sendOnDisconnect_(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string) => void\n  ) {\n    const request = { /*path*/ p: pathString, /*data*/ d: data };\n    this.log_('onDisconnect ' + action, request);\n    this.sendRequest(action, request, (response: { [k: string]: unknown }) => {\n      if (onComplete) {\n        setTimeout(() => {\n          onComplete(\n            response[/*status*/ 's'] as string,\n            response[/* data */ 'd'] as string\n          );\n        }, Math.floor(0));\n      }\n    });\n  }\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {\n    this.putInternal('p', pathString, data, onComplete, hash);\n  }\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.putInternal('m', pathString, data, onComplete, hash);\n  }\n\n  putInternal(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.initConnection_();\n\n    const request: { [k: string]: unknown } = {\n      /*path*/ p: pathString,\n      /*data*/ d: data\n    };\n\n    if (hash !== undefined) {\n      request[/*hash*/ 'h'] = hash;\n    }\n\n    // TODO: Only keep track of the most recent put for a given path?\n    this.outstandingPuts_.push({\n      action,\n      request,\n      onComplete\n    });\n\n    this.outstandingPutCount_++;\n    const index = this.outstandingPuts_.length - 1;\n\n    if (this.connected_) {\n      this.sendPut_(index);\n    } else {\n      this.log_('Buffering put: ' + pathString);\n    }\n  }\n\n  private sendPut_(index: number) {\n    const action = this.outstandingPuts_[index].action;\n    const request = this.outstandingPuts_[index].request;\n    const onComplete = this.outstandingPuts_[index].onComplete;\n    this.outstandingPuts_[index].queued = this.connected_;\n\n    this.sendRequest(action, request, (message: { [k: string]: unknown }) => {\n      this.log_(action + ' response', message);\n\n      delete this.outstandingPuts_[index];\n      this.outstandingPutCount_--;\n\n      // Clean up array occasionally.\n      if (this.outstandingPutCount_ === 0) {\n        this.outstandingPuts_ = [];\n      }\n\n      if (onComplete) {\n        onComplete(\n          message[/*status*/ 's'] as string,\n          message[/* data */ 'd'] as string\n        );\n      }\n    });\n  }\n\n  reportStats(stats: { [k: string]: unknown }) {\n    // If we're not connected, we just drop the stats.\n    if (this.connected_) {\n      const request = { /*counters*/ c: stats };\n      this.log_('reportStats', request);\n\n      this.sendRequest(/*stats*/ 's', request, result => {\n        const status = result[/*status*/ 's'];\n        if (status !== 'ok') {\n          const errorReason = result[/* data */ 'd'];\n          this.log_('reportStats', 'Error sending stats: ' + errorReason);\n        }\n      });\n    }\n  }\n\n  private onDataMessage_(message: { [k: string]: unknown }) {\n    if ('r' in message) {\n      // this is a response\n      this.log_('from server: ' + stringify(message));\n      const reqNum = message['r'] as string;\n      const onResponse = this.requestCBHash_[reqNum];\n      if (onResponse) {\n        delete this.requestCBHash_[reqNum];\n        onResponse(message[/*body*/ 'b']);\n      }\n    } else if ('error' in message) {\n      throw 'A server-side error has occurred: ' + message['error'];\n    } else if ('a' in message) {\n      // a and b are action and body, respectively\n      this.onDataPush_(message['a'] as string, message['b'] as {});\n    }\n  }\n\n  private onDataPush_(action: string, body: { [k: string]: unknown }) {\n    this.log_('handleServerMessage', action, body);\n    if (action === 'd') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge*/ false,\n        body['t'] as number\n      );\n    } else if (action === 'm') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge=*/ true,\n        body['t'] as number\n      );\n    } else if (action === 'c') {\n      this.onListenRevoked_(\n        body[/*path*/ 'p'] as string,\n        body[/*query*/ 'q'] as unknown[]\n      );\n    } else if (action === 'ac') {\n      this.onAuthRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'apc') {\n      this.onAppCheckRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'sd') {\n      this.onSecurityDebugPacket_(body);\n    } else {\n      error(\n        'Unrecognized action received from server: ' +\n          stringify(action) +\n          '\\nAre you using the latest client?'\n      );\n    }\n  }\n\n  private onReady_(timestamp: number, sessionId: string) {\n    this.log_('connection ready');\n    this.connected_ = true;\n    this.lastConnectionEstablishedTime_ = new Date().getTime();\n    this.handleTimestamp_(timestamp);\n    this.lastSessionId = sessionId;\n    if (this.firstConnection_) {\n      this.sendConnectStats_();\n    }\n    this.restoreState_();\n    this.firstConnection_ = false;\n    this.onConnectStatus_(true);\n  }\n\n  private scheduleConnect_(timeout: number) {\n    assert(\n      !this.realtime_,\n      \"Scheduling a connect when we're already connected/ing?\"\n    );\n\n    if (this.establishConnectionTimer_) {\n      clearTimeout(this.establishConnectionTimer_);\n    }\n\n    // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n    // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n\n    this.establishConnectionTimer_ = setTimeout(() => {\n      this.establishConnectionTimer_ = null;\n      this.establishConnection_();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(timeout)) as any;\n  }\n\n  private initConnection_() {\n    if (!this.realtime_ && this.firstConnection_) {\n      this.scheduleConnect_(0);\n    }\n  }\n\n  private onVisible_(visible: boolean) {\n    // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n    if (\n      visible &&\n      !this.visible_ &&\n      this.reconnectDelay_ === this.maxReconnectDelay_\n    ) {\n      this.log_('Window became visible.  Reducing delay.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n    this.visible_ = visible;\n  }\n\n  private onOnline_(online: boolean) {\n    if (online) {\n      this.log_('Browser went online.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    } else {\n      this.log_('Browser went offline.  Killing connection.');\n      if (this.realtime_) {\n        this.realtime_.close();\n      }\n    }\n  }\n\n  private onRealtimeDisconnect_() {\n    this.log_('data client disconnected');\n    this.connected_ = false;\n    this.realtime_ = null;\n\n    // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n    this.cancelSentTransactions_();\n\n    // Clear out the pending requests.\n    this.requestCBHash_ = {};\n\n    if (this.shouldReconnect_()) {\n      if (!this.visible_) {\n        this.log_(\"Window isn't visible.  Delaying reconnect.\");\n        this.reconnectDelay_ = this.maxReconnectDelay_;\n        this.lastConnectionAttemptTime_ = new Date().getTime();\n      } else if (this.lastConnectionEstablishedTime_) {\n        // If we've been connected long enough, reset reconnect delay to minimum.\n        const timeSinceLastConnectSucceeded =\n          new Date().getTime() - this.lastConnectionEstablishedTime_;\n        if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\n          this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        }\n        this.lastConnectionEstablishedTime_ = null;\n      }\n\n      const timeSinceLastConnectAttempt =\n        new Date().getTime() - this.lastConnectionAttemptTime_;\n      let reconnectDelay = Math.max(\n        0,\n        this.reconnectDelay_ - timeSinceLastConnectAttempt\n      );\n      reconnectDelay = Math.random() * reconnectDelay;\n\n      this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n      this.scheduleConnect_(reconnectDelay);\n\n      // Adjust reconnect delay for next time.\n      this.reconnectDelay_ = Math.min(\n        this.maxReconnectDelay_,\n        this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER\n      );\n    }\n    this.onConnectStatus_(false);\n  }\n\n  private async establishConnection_() {\n    if (this.shouldReconnect_()) {\n      this.log_('Making a connection attempt');\n      this.lastConnectionAttemptTime_ = new Date().getTime();\n      this.lastConnectionEstablishedTime_ = null;\n      const onDataMessage = this.onDataMessage_.bind(this);\n      const onReady = this.onReady_.bind(this);\n      const onDisconnect = this.onRealtimeDisconnect_.bind(this);\n      const connId = this.id + ':' + PersistentConnection.nextConnectionId_++;\n      const lastSessionId = this.lastSessionId;\n      let canceled = false;\n      let connection: Connection | null = null;\n      const closeFn = function () {\n        if (connection) {\n          connection.close();\n        } else {\n          canceled = true;\n          onDisconnect();\n        }\n      };\n      const sendRequestFn = function (msg: object) {\n        assert(\n          connection,\n          \"sendRequest call when we're not connected not allowed.\"\n        );\n        connection.sendRequest(msg);\n      };\n\n      this.realtime_ = {\n        close: closeFn,\n        sendRequest: sendRequestFn\n      };\n\n      const forceRefresh = this.forceTokenRefresh_;\n      this.forceTokenRefresh_ = false;\n\n      try {\n        // First fetch auth and app check token, and establish connection after\n        // fetching the token was successful\n        const [authToken, appCheckToken] = await Promise.all([\n          this.authTokenProvider_.getToken(forceRefresh),\n          this.appCheckTokenProvider_.getToken(forceRefresh)\n        ]);\n\n        if (!canceled) {\n          log('getToken() completed. Creating connection.');\n          this.authToken_ = authToken && authToken.accessToken;\n          this.appCheckToken_ = appCheckToken && appCheckToken.token;\n          connection = new Connection(\n            connId,\n            this.repoInfo_,\n            this.applicationId_,\n            this.appCheckToken_,\n            this.authToken_,\n            onDataMessage,\n            onReady,\n            onDisconnect,\n            /* onKill= */ reason => {\n              warn(reason + ' (' + this.repoInfo_.toString() + ')');\n              this.interrupt(SERVER_KILL_INTERRUPT_REASON);\n            },\n            lastSessionId\n          );\n        } else {\n          log('getToken() completed but was canceled');\n        }\n      } catch (error) {\n        this.log_('Failed to get token: ' + error);\n        if (!canceled) {\n          if (this.repoInfo_.nodeAdmin) {\n            // This may be a critical error for the Admin Node.js SDK, so log a warning.\n            // But getToken() may also just have temporarily failed, so we still want to\n            // continue retrying.\n            warn(error);\n          }\n          closeFn();\n        }\n      }\n    }\n  }\n\n  interrupt(reason: string) {\n    log('Interrupting connection for reason: ' + reason);\n    this.interruptReasons_[reason] = true;\n    if (this.realtime_) {\n      this.realtime_.close();\n    } else {\n      if (this.establishConnectionTimer_) {\n        clearTimeout(this.establishConnectionTimer_);\n        this.establishConnectionTimer_ = null;\n      }\n      if (this.connected_) {\n        this.onRealtimeDisconnect_();\n      }\n    }\n  }\n\n  resume(reason: string) {\n    log('Resuming connection for reason: ' + reason);\n    delete this.interruptReasons_[reason];\n    if (isEmpty(this.interruptReasons_)) {\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n  }\n\n  private handleTimestamp_(timestamp: number) {\n    const delta = timestamp - new Date().getTime();\n    this.onServerInfoUpdate_({ serverTimeOffset: delta });\n  }\n\n  private cancelSentTransactions_() {\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      const put = this.outstandingPuts_[i];\n      if (put && /*hash*/ 'h' in put.request && put.queued) {\n        if (put.onComplete) {\n          put.onComplete('disconnect');\n        }\n\n        delete this.outstandingPuts_[i];\n        this.outstandingPutCount_--;\n      }\n    }\n\n    // Clean up array occasionally.\n    if (this.outstandingPutCount_ === 0) {\n      this.outstandingPuts_ = [];\n    }\n  }\n\n  private onListenRevoked_(pathString: string, query?: unknown[]) {\n    // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n    let queryId;\n    if (!query) {\n      queryId = 'default';\n    } else {\n      queryId = query.map(q => ObjectToUniqueKey(q)).join('$');\n    }\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && listen.onComplete) {\n      listen.onComplete('permission_denied');\n    }\n  }\n\n  private removeListen_(pathString: string, queryId: string): ListenSpec {\n    const normalizedPathString = new Path(pathString).toString(); // normalize path.\n    let listen;\n    if (this.listens.has(normalizedPathString)) {\n      const map = this.listens.get(normalizedPathString)!;\n      listen = map.get(queryId);\n      map.delete(queryId);\n      if (map.size === 0) {\n        this.listens.delete(normalizedPathString);\n      }\n    } else {\n      // all listens for this path has already been removed\n      listen = undefined;\n    }\n    return listen;\n  }\n\n  private onAuthRevoked_(statusCode: string, explanation: string) {\n    log('Auth token revoked: ' + statusCode + '/' + explanation);\n    this.authToken_ = null;\n    this.forceTokenRefresh_ = true;\n    this.realtime_.close();\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAuthTokenCount_++;\n      if (this.invalidAuthTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        // Set a long reconnect delay because recovery is unlikely\n        this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n\n        // Notify the auth token provider that the token is invalid, which will log\n        // a warning\n        this.authTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onAppCheckRevoked_(statusCode: string, explanation: string) {\n    log('App check token revoked: ' + statusCode + '/' + explanation);\n    this.appCheckToken_ = null;\n    this.forceTokenRefresh_ = true;\n    // Note: We don't close the connection as the developer may not have\n    // enforcement enabled. The backend closes connections with enforcements.\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAppCheckTokenCount_++;\n      if (this.invalidAppCheckTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        this.appCheckTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onSecurityDebugPacket_(body: { [k: string]: unknown }) {\n    if (this.securityDebugCallback_) {\n      this.securityDebugCallback_(body);\n    } else {\n      if ('msg' in body) {\n        console.log(\n          'FIREBASE: ' + (body['msg'] as string).replace('\\n', '\\nFIREBASE: ')\n        );\n      }\n    }\n  }\n\n  private restoreState_() {\n    //Re-authenticate ourselves if we have a credential stored.\n    this.tryAuth();\n    this.tryAppCheck();\n\n    // Puts depend on having received the corresponding data update from the server before they complete, so we must\n    // make sure to send listens before puts.\n    for (const queries of this.listens.values()) {\n      for (const listenSpec of queries.values()) {\n        this.sendListen_(listenSpec);\n      }\n    }\n\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      if (this.outstandingPuts_[i]) {\n        this.sendPut_(i);\n      }\n    }\n\n    while (this.onDisconnectRequestQueue_.length) {\n      const request = this.onDisconnectRequestQueue_.shift();\n      this.sendOnDisconnect_(\n        request.action,\n        request.pathString,\n        request.data,\n        request.onComplete\n      );\n    }\n\n    for (let i = 0; i < this.outstandingGets_.length; i++) {\n      if (this.outstandingGets_[i]) {\n        this.sendGet_(i);\n      }\n    }\n  }\n\n  /**\n   * Sends client stats for first connection\n   */\n  private sendConnectStats_() {\n    const stats: { [k: string]: number } = {};\n\n    let clientName = 'js';\n    if (isNodeSdk()) {\n      if (this.repoInfo_.nodeAdmin) {\n        clientName = 'admin_node';\n      } else {\n        clientName = 'node';\n      }\n    }\n\n    stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\n\n    if (isMobileCordova()) {\n      stats['framework.cordova'] = 1;\n    } else if (isReactNative()) {\n      stats['framework.reactnative'] = 1;\n    }\n    this.reportStats(stats);\n  }\n\n  private shouldReconnect_(): boolean {\n    const online = OnlineMonitor.getInstance().currentlyOnline();\n    return isEmpty(this.interruptReasons_) && online;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Comparator } from '../../util/SortedMap';\nimport { MIN_NAME } from '../../util/util';\nimport { Node, NamedNode } from '../Node';\n\nexport abstract class Index {\n  abstract compare(a: NamedNode, b: NamedNode): number;\n\n  abstract isDefinedOn(node: Node): boolean;\n\n  /**\n   * @returns A standalone comparison function for\n   * this index\n   */\n  getCompare(): Comparator<NamedNode> {\n    return this.compare.bind(this);\n  }\n\n  /**\n   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\n   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\n   *\n   *\n   * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\n   */\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    const oldWrapped = new NamedNode(MIN_NAME, oldNode);\n    const newWrapped = new NamedNode(MIN_NAME, newNode);\n    return this.compare(oldWrapped, newWrapped) !== 0;\n  }\n\n  /**\n   * @returns a node wrapper that will sort equal to or less than\n   * any other node wrapper, using this index\n   */\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n\n  /**\n   * @returns a node wrapper that will sort greater than or equal to\n   * any other node wrapper, using this index\n   */\n  abstract maxPost(): NamedNode;\n\n  abstract makePost(indexValue: unknown, name: string): NamedNode;\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  abstract toString(): string;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { ChildrenNode } from '../ChildrenNode';\nimport { Node, NamedNode } from '../Node';\n\nimport { Index } from './Index';\n\nlet __EMPTY_NODE: ChildrenNode;\n\nexport class KeyIndex extends Index {\n  static get __EMPTY_NODE() {\n    return __EMPTY_NODE;\n  }\n\n  static set __EMPTY_NODE(val) {\n    __EMPTY_NODE = val;\n  }\n  compare(a: NamedNode, b: NamedNode): number {\n    return nameCompare(a.name, b.name);\n  }\n  isDefinedOn(node: Node): boolean {\n    // We could probably return true here (since every node has a key), but it's never called\n    // so just leaving unimplemented for now.\n    throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return false; // The key for a node never changes.\n  }\n  minPost() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    // TODO: This should really be created once and cached in a static property, but\n    // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n    return new NamedNode(MAX_NAME, __EMPTY_NODE);\n  }\n\n  makePost(indexValue: string, name: string): NamedNode {\n    assert(\n      typeof indexValue === 'string',\n      'KeyIndex indexValue must always be a string.'\n    );\n    // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n    return new NamedNode(indexValue, __EMPTY_NODE);\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.key';\n  }\n}\n\nexport const KEY_INDEX = new KeyIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Implementation of an immutable SortedMap using a Left-leaning\n * Red-Black Tree, adapted from the implementation in Mugs\n * (http://mads379.github.com/mugs/) by Mads Hartmann Jensen\n * (mads379\\@gmail.com).\n *\n * Original paper on Left-leaning Red-Black Trees:\n *   http://www.cs.princeton.edu/~rs/talks/LLRB/LLRB.pdf\n *\n * Invariant 1: No red node has a red child\n * Invariant 2: Every leaf path has the same number of black nodes\n * Invariant 3: Only the left child can be red (left leaning)\n */\n\n// TODO: There are some improvements I'd like to make to improve memory / perf:\n//  * Create two prototypes, LLRedNode and LLBlackNode, instead of storing a\n//    color property in every node.\n// TODO: It would also be good (and possibly necessary) to create a base\n// interface for LLRBNode and LLRBEmptyNode.\n\nexport type Comparator<K> = (key1: K, key2: K) => number;\n\n/**\n * An iterator over an LLRBNode.\n */\nexport class SortedMapIterator<K, V, T> {\n  private nodeStack_: Array<LLRBNode<K, V> | LLRBEmptyNode<K, V>> = [];\n\n  /**\n   * @param node - Node to iterate.\n   * @param isReverse_ - Whether or not to iterate in reverse\n   */\n  constructor(\n    node: LLRBNode<K, V> | LLRBEmptyNode<K, V>,\n    startKey: K | null,\n    comparator: Comparator<K>,\n    private isReverse_: boolean,\n    private resultGenerator_: ((k: K, v: V) => T) | null = null\n  ) {\n    let cmp = 1;\n    while (!node.isEmpty()) {\n      node = node as LLRBNode<K, V>;\n      cmp = startKey ? comparator(node.key, startKey) : 1;\n      // flip the comparison if we're going in reverse\n      if (isReverse_) {\n        cmp *= -1;\n      }\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse_) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n        this.nodeStack_.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move to the next one\n        this.nodeStack_.push(node);\n        if (this.isReverse_) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  getNext(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    let node = this.nodeStack_.pop();\n    let result: T;\n    if (this.resultGenerator_) {\n      result = this.resultGenerator_(node.key, node.value);\n    } else {\n      result = { key: node.key, value: node.value } as unknown as T;\n    }\n\n    if (this.isReverse_) {\n      node = node.left;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  }\n\n  hasNext(): boolean {\n    return this.nodeStack_.length > 0;\n  }\n\n  peek(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    const node = this.nodeStack_[this.nodeStack_.length - 1];\n    if (this.resultGenerator_) {\n      return this.resultGenerator_(node.key, node.value);\n    } else {\n      return { key: node.key, value: node.value } as unknown as T;\n    }\n  }\n}\n\n/**\n * Represents a node in a Left-leaning Red-Black tree.\n */\nexport class LLRBNode<K, V> {\n  color: boolean;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n\n  /**\n   * @param key - Key associated with this node.\n   * @param value - Value associated with this node.\n   * @param color - Whether this node is red.\n   * @param left - Left child.\n   * @param right - Right child.\n   */\n  constructor(\n    public key: K,\n    public value: V,\n    color: boolean | null,\n    left?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ) {\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left =\n      left != null ? left : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n    this.right =\n      right != null ? right : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n  }\n\n  static RED = true;\n  static BLACK = false;\n\n  /**\n   * Returns a copy of the current node, optionally replacing pieces of it.\n   *\n   * @param key - New key for the node, or null.\n   * @param value - New value for the node, or null.\n   * @param color - New color for the node, or null.\n   * @param left - New left child for the node, or null.\n   * @param right - New right child for the node, or null.\n   * @returns The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBNode<K, V> {\n    return new LLRBNode(\n      key != null ? key : this.key,\n      value != null ? value : this.value,\n      color != null ? color : this.color,\n      left != null ? left : this.left,\n      right != null ? right : this.right\n    );\n  }\n\n  /**\n   * @returns The total number of nodes in the tree.\n   */\n  count(): number {\n    return this.left.count() + 1 + this.right.count();\n  }\n\n  /**\n   * @returns True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   *   node.  If it returns true, traversal is aborted.\n   * @returns The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return (\n      this.left.inorderTraversal(action) ||\n      !!action(this.key, this.value) ||\n      this.right.inorderTraversal(action)\n    );\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return (\n      this.right.reverseTraversal(action) ||\n      action(this.key, this.value) ||\n      this.left.reverseTraversal(action)\n    );\n  }\n\n  /**\n   * @returns The minimum node in the tree.\n   */\n  private min_(): LLRBNode<K, V> {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return (this.left as LLRBNode<K, V>).min_();\n    }\n  }\n\n  /**\n   * @returns The maximum key in the tree.\n   */\n  minKey(): K {\n    return this.min_().key;\n  }\n\n  /**\n   * @returns The maximum key in the tree.\n   */\n  maxKey(): K {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  }\n\n  /**\n   * @param key - Key to insert.\n   * @param value - Value to insert.\n   * @param comparator - Comparator.\n   * @returns New tree, with the key/value added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    const cmp = comparator(key, n.key);\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        n.right.insert(key, value, comparator)\n      );\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @returns New tree, with the minimum key removed.\n   */\n  private removeMin_(): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    if (this.left.isEmpty()) {\n      return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n    }\n    let n: LLRBNode<K, V> = this;\n    if (!n.left.isRed_() && !n.left.left.isRed_()) {\n      n = n.moveRedLeft_();\n    }\n    n = n.copy(null, null, null, (n.left as LLRBNode<K, V>).removeMin_(), null);\n    return n.fixUp_();\n  }\n\n  /**\n   * @param key - The key of the item to remove.\n   * @param comparator - Comparator.\n   * @returns New tree, with the specified item removed.\n   */\n  remove(\n    key: K,\n    comparator: Comparator<K>\n  ): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    let n, smallest;\n    n = this;\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n        n = n.moveRedLeft_();\n      }\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed_()) {\n        n = n.rotateRight_();\n      }\n      if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n        n = n.moveRedRight_();\n      }\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n        } else {\n          smallest = (n.right as LLRBNode<K, V>).min_();\n          n = n.copy(\n            smallest.key,\n            smallest.value,\n            null,\n            null,\n            (n.right as LLRBNode<K, V>).removeMin_()\n          );\n        }\n      }\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @returns Whether this is a RED node.\n   */\n  isRed_(): boolean {\n    return this.color;\n  }\n\n  /**\n   * @returns New tree after performing any needed rotations.\n   */\n  private fixUp_(): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    if (n.right.isRed_() && !n.left.isRed_()) {\n      n = n.rotateLeft_();\n    }\n    if (n.left.isRed_() && n.left.left.isRed_()) {\n      n = n.rotateRight_();\n    }\n    if (n.left.isRed_() && n.right.isRed_()) {\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after moveRedLeft.\n   */\n  private moveRedLeft_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.right.left.isRed_()) {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        (n.right as LLRBNode<K, V>).rotateRight_()\n      );\n      n = n.rotateLeft_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after moveRedRight.\n   */\n  private moveRedRight_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.left.left.isRed_()) {\n      n = n.rotateRight_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after rotateLeft.\n   */\n  private rotateLeft_(): LLRBNode<K, V> {\n    const nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, nl, null) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @returns New tree, after rotateRight.\n   */\n  private rotateRight_(): LLRBNode<K, V> {\n    const nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, nr) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @returns Newt ree, after colorFlip.\n   */\n  private colorFlip_(): LLRBNode<K, V> {\n    const left = this.left.copy(null, null, !this.left.color, null, null);\n    const right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  }\n\n  /**\n   * For testing.\n   *\n   * @returns True if all is well.\n   */\n  private checkMaxDepth_(): boolean {\n    const blackDepth = this.check_();\n    return Math.pow(2.0, blackDepth) <= this.count() + 1;\n  }\n\n  check_(): number {\n    if (this.isRed_() && this.left.isRed_()) {\n      throw new Error(\n        'Red node has red child(' + this.key + ',' + this.value + ')'\n      );\n    }\n    if (this.right.isRed_()) {\n      throw new Error(\n        'Right child of (' + this.key + ',' + this.value + ') is red'\n      );\n    }\n    const blackDepth = this.left.check_();\n    if (blackDepth !== this.right.check_()) {\n      throw new Error('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed_() ? 0 : 1);\n    }\n  }\n}\n\n/**\n * Represents an empty node (a leaf node in the Red-Black Tree).\n */\nexport class LLRBEmptyNode<K, V> {\n  key: K;\n  value: V;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  color: boolean;\n\n  /**\n   * Returns a copy of the current node.\n   *\n   * @returns The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key/value added.\n   *\n   * @param key - Key to be added.\n   * @param value - Value to be added.\n   * @param comparator - Comparator.\n   * @returns New tree, with item added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    return new LLRBNode(key, value, null);\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key removed.\n   *\n   * @param key - The key to remove.\n   * @param comparator - Comparator.\n   * @returns New tree, with item removed.\n   */\n  remove(key: K, comparator: Comparator<K>): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * @returns The total number of nodes in the tree.\n   */\n  count(): number {\n    return 0;\n  }\n\n  /**\n   * @returns True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return true;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return false;\n  }\n\n  minKey(): null {\n    return null;\n  }\n\n  maxKey(): null {\n    return null;\n  }\n\n  check_(): number {\n    return 0;\n  }\n\n  /**\n   * @returns Whether this node is red.\n   */\n  isRed_() {\n    return false;\n  }\n}\n\n/**\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\n * tree.\n */\nexport class SortedMap<K, V> {\n  /**\n   * Always use the same empty node, to reduce memory.\n   */\n  static EMPTY_NODE = new LLRBEmptyNode();\n\n  /**\n   * @param comparator_ - Key comparator.\n   * @param root_ - Optional root node for the map.\n   */\n  constructor(\n    private comparator_: Comparator<K>,\n    private root_:\n      | LLRBNode<K, V>\n      | LLRBEmptyNode<K, V> = SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>\n  ) {}\n\n  /**\n   * Returns a copy of the map, with the specified key/value added or replaced.\n   * (TODO: We should perhaps rename this method to 'put')\n   *\n   * @param key - Key to be added.\n   * @param value - Value to be added.\n   * @returns New map, with item added.\n   */\n  insert(key: K, value: V): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .insert(key, value, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns a copy of the map, with the specified key removed.\n   *\n   * @param key - The key to remove.\n   * @returns New map, with item removed.\n   */\n  remove(key: K): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .remove(key, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns the value of the node with the given key, or null.\n   *\n   * @param key - The key to look up.\n   * @returns The value of the node with the given key, or null if the\n   * key doesn't exist.\n   */\n  get(key: K): V | null {\n    let cmp;\n    let node = this.root_;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Returns the key of the item *before* the specified key, or null if key is the first item.\n   * @param key - The key to find the predecessor of\n   * @returns The predecessor key.\n   */\n  getPredecessorKey(key: K): K | null {\n    let cmp,\n      node = this.root_,\n      rightParent = null;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        if (!node.left.isEmpty()) {\n          node = node.left;\n          while (!node.right.isEmpty()) {\n            node = node.right;\n          }\n          return node.key;\n        } else if (rightParent) {\n          return rightParent.key;\n        } else {\n          return null; // first item.\n        }\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        rightParent = node;\n        node = node.right;\n      }\n    }\n\n    throw new Error(\n      'Attempted to find predecessor key for a nonexistent key.  What gives?'\n    );\n  }\n\n  /**\n   * @returns True if the map is empty.\n   */\n  isEmpty(): boolean {\n    return this.root_.isEmpty();\n  }\n\n  /**\n   * @returns The total number of nodes in the map.\n   */\n  count(): number {\n    return this.root_.count();\n  }\n\n  /**\n   * @returns The minimum key in the map.\n   */\n  minKey(): K | null {\n    return this.root_.minKey();\n  }\n\n  /**\n   * @returns The maximum key in the map.\n   */\n  maxKey(): K | null {\n    return this.root_.maxKey();\n  }\n\n  /**\n   * Traverses the map in key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action - Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @returns The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return this.root_.inorderTraversal(action);\n  }\n\n  /**\n   * Traverses the map in reverse key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action - Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @returns True if the traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return this.root_.reverseTraversal(action);\n  }\n\n  /**\n   * Returns an iterator over the SortedMap.\n   * @returns The iterator.\n   */\n  getIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getReverseIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n\n  getReverseIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../util/util';\n\nimport { NamedNode } from './Node';\n\nexport function NAME_ONLY_COMPARATOR(left: NamedNode, right: NamedNode) {\n  return nameCompare(left.name, right.name);\n}\n\nexport function NAME_COMPARATOR(left: string, right: string) {\n  return nameCompare(left, right);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { doubleToIEEE754String } from '../util/util';\n\nimport { Node } from './Node';\n\nlet MAX_NODE: Node;\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport const priorityHashText = function (priority: string | number): string {\n  if (typeof priority === 'number') {\n    return 'number:' + doubleToIEEE754String(priority);\n  } else {\n    return 'string:' + priority;\n  }\n};\n\n/**\n * Validates that a priority snapshot Node is valid.\n */\nexport const validatePriorityNode = function (priorityNode: Node) {\n  if (priorityNode.isLeafNode()) {\n    const val = priorityNode.val();\n    assert(\n      typeof val === 'string' ||\n        typeof val === 'number' ||\n        (typeof val === 'object' && contains(val as Indexable, '.sv')),\n      'Priority must be a string or number.'\n    );\n  } else {\n    assert(\n      priorityNode === MAX_NODE || priorityNode.isEmpty(),\n      'priority of unexpected type.'\n    );\n  }\n  // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n  assert(\n    priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(),\n    \"Priority nodes can't have a priority of their own.\"\n  );\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport {\n  Path,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\nimport { doubleToIEEE754String, sha1 } from '../util/util';\n\nimport { ChildrenNodeConstructor } from './ChildrenNode';\nimport { Index } from './indexes/Index';\nimport { Node } from './Node';\nimport { priorityHashText, validatePriorityNode } from './snap';\n\nlet __childrenNodeConstructor: ChildrenNodeConstructor;\n\n/**\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\n * implements Node and stores the value of the node (a string,\n * number, or boolean) accessible via getValue().\n */\nexport class LeafNode implements Node {\n  static set __childrenNodeConstructor(val: ChildrenNodeConstructor) {\n    __childrenNodeConstructor = val;\n  }\n\n  static get __childrenNodeConstructor() {\n    return __childrenNodeConstructor;\n  }\n\n  /**\n   * The sort order for comparing leaf nodes of different types. If two leaf nodes have\n   * the same type, the comparison falls back to their value\n   */\n  static VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n\n  private lazyHash_: string | null = null;\n\n  /**\n   * @param value_ - The value to store in this leaf node. The object type is\n   * possible in the event of a deferred value\n   * @param priorityNode_ - The priority of this node.\n   */\n  constructor(\n    private readonly value_: string | number | boolean | Indexable,\n    private priorityNode_: Node = LeafNode.__childrenNodeConstructor.EMPTY_NODE\n  ) {\n    assert(\n      this.value_ !== undefined && this.value_ !== null,\n      \"LeafNode shouldn't be created with null/undefined value.\"\n    );\n\n    validatePriorityNode(this.priorityNode_);\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return true;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    return new LeafNode(this.value_, newPriorityNode);\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    if (pathIsEmpty(path)) {\n      return this;\n    } else if (pathGetFront(path) === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n  hasChild(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(childName: string, childNode: Node): null {\n    return null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else if (newChildNode.isEmpty() && childName !== '.priority') {\n      return this;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(\n        childName,\n        newChildNode\n      ).updatePriority(this.priorityNode_);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else if (newChildNode.isEmpty() && front !== '.priority') {\n      return this;\n    } else {\n      assert(\n        front !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n\n      return this.updateImmediateChild(\n        front,\n        LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(\n          pathPopFront(path),\n          newChildNode\n        )\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return 0;\n  }\n\n  /** @inheritDoc */\n  forEachChild(index: Index, action: (s: string, n: Node) => void): boolean {\n    return false;\n  }\n  val(exportFormat?: boolean): {} {\n    if (exportFormat && !this.getPriority().isEmpty()) {\n      return {\n        '.value': this.getValue(),\n        '.priority': this.getPriority().val()\n      };\n    } else {\n      return this.getValue();\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.priorityNode_.isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.priorityNode_.val() as number | string) +\n          ':';\n      }\n\n      const type = typeof this.value_;\n      toHash += type + ':';\n      if (type === 'number') {\n        toHash += doubleToIEEE754String(this.value_ as number);\n      } else {\n        toHash += this.value_;\n      }\n      this.lazyHash_ = sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /**\n   * Returns the value of the leaf node.\n   * @returns The value of the node.\n   */\n  getValue(): Indexable | string | number | boolean {\n    return this.value_;\n  }\n  compareTo(other: Node): number {\n    if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n      return 1;\n    } else if (other instanceof LeafNode.__childrenNodeConstructor) {\n      return -1;\n    } else {\n      assert(other.isLeafNode(), 'Unknown node type');\n      return this.compareToLeafNode_(other as LeafNode);\n    }\n  }\n\n  /**\n   * Comparison specifically for two leaf nodes\n   */\n  private compareToLeafNode_(otherLeaf: LeafNode): number {\n    const otherLeafType = typeof otherLeaf.value_;\n    const thisLeafType = typeof this.value_;\n    const otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n    const thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n    assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n    assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n    if (otherIndex === thisIndex) {\n      // Same type, compare values\n      if (thisLeafType === 'object') {\n        // Deferred value nodes are all equal, but we should also never get to this point...\n        return 0;\n      } else {\n        // Note that this works because true > false, all others are number or string comparisons\n        if (this.value_ < otherLeaf.value_) {\n          return -1;\n        } else if (this.value_ === otherLeaf.value_) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    } else {\n      return thisIndex - otherIndex;\n    }\n  }\n  withIndex(): Node {\n    return this;\n  }\n  isIndexed(): boolean {\n    return true;\n  }\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      const otherLeaf = other as LeafNode;\n      return (\n        this.value_ === otherLeaf.value_ &&\n        this.priorityNode_.equals(otherLeaf.priorityNode_)\n      );\n    } else {\n      return false;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { LeafNode } from '../LeafNode';\nimport { NamedNode, Node } from '../Node';\n\nimport { Index } from './Index';\n\nlet nodeFromJSON: (a: unknown) => Node;\nlet MAX_NODE: Node;\n\nexport function setNodeFromJSON(val: (a: unknown) => Node) {\n  nodeFromJSON = val;\n}\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport class PriorityIndex extends Index {\n  compare(a: NamedNode, b: NamedNode): number {\n    const aPriority = a.node.getPriority();\n    const bPriority = b.node.getPriority();\n    const indexCmp = aPriority.compareTo(bPriority);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  isDefinedOn(node: Node): boolean {\n    return !node.getPriority().isEmpty();\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.getPriority().equals(newNode.getPriority());\n  }\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE));\n  }\n\n  makePost(indexValue: unknown, name: string): NamedNode {\n    const priorityNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.priority';\n  }\n}\n\nexport const PRIORITY_INDEX = new PriorityIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LLRBNode, SortedMap } from '../util/SortedMap';\n\nimport { NamedNode } from './Node';\n\nconst LOG_2 = Math.log(2);\n\nclass Base12Num {\n  count: number;\n  private current_: number;\n  private bits_: number;\n\n  constructor(length: number) {\n    const logBase2 = (num: number) =>\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      parseInt((Math.log(num) / LOG_2) as any, 10);\n    const bitMask = (bits: number) => parseInt(Array(bits + 1).join('1'), 2);\n    this.count = logBase2(length + 1);\n    this.current_ = this.count - 1;\n    const mask = bitMask(this.count);\n    this.bits_ = (length + 1) & mask;\n  }\n\n  nextBitIsOne(): boolean {\n    //noinspection JSBitwiseOperatorUsage\n    const result = !(this.bits_ & (0x1 << this.current_));\n    this.current_--;\n    return result;\n  }\n}\n\n/**\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\n * function\n *\n * Uses the algorithm described in the paper linked here:\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\n *\n * @param childList - Unsorted list of children\n * @param cmp - The comparison method to be used\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\n * type is not NamedNode\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\n */\nexport const buildChildSet = function <K, V>(\n  childList: NamedNode[],\n  cmp: (a: NamedNode, b: NamedNode) => number,\n  keyFn?: (a: NamedNode) => K,\n  mapSortFn?: (a: K, b: K) => number\n): SortedMap<K, V> {\n  childList.sort(cmp);\n\n  const buildBalancedTree = function (\n    low: number,\n    high: number\n  ): LLRBNode<K, V> | null {\n    const length = high - low;\n    let namedNode: NamedNode;\n    let key: K;\n    if (length === 0) {\n      return null;\n    } else if (length === 1) {\n      namedNode = childList[low];\n      key = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      return new LLRBNode(\n        key,\n        namedNode.node as unknown as V,\n        LLRBNode.BLACK,\n        null,\n        null\n      );\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const middle = parseInt((length / 2) as any, 10) + low;\n      const left = buildBalancedTree(low, middle);\n      const right = buildBalancedTree(middle + 1, high);\n      namedNode = childList[middle];\n      key = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      return new LLRBNode(\n        key,\n        namedNode.node as unknown as V,\n        LLRBNode.BLACK,\n        left,\n        right\n      );\n    }\n  };\n\n  const buildFrom12Array = function (base12: Base12Num): LLRBNode<K, V> {\n    let node: LLRBNode<K, V> = null;\n    let root = null;\n    let index = childList.length;\n\n    const buildPennant = function (chunkSize: number, color: boolean) {\n      const low = index - chunkSize;\n      const high = index;\n      index -= chunkSize;\n      const childTree = buildBalancedTree(low + 1, high);\n      const namedNode = childList[low];\n      const key: K = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      attachPennant(\n        new LLRBNode(\n          key,\n          namedNode.node as unknown as V,\n          color,\n          null,\n          childTree\n        )\n      );\n    };\n\n    const attachPennant = function (pennant: LLRBNode<K, V>) {\n      if (node) {\n        node.left = pennant;\n        node = pennant;\n      } else {\n        root = pennant;\n        node = pennant;\n      }\n    };\n\n    for (let i = 0; i < base12.count; ++i) {\n      const isOne = base12.nextBitIsOne();\n      // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n      const chunkSize = Math.pow(2, base12.count - (i + 1));\n      if (isOne) {\n        buildPennant(chunkSize, LLRBNode.BLACK);\n      } else {\n        // current == 2\n        buildPennant(chunkSize, LLRBNode.BLACK);\n        buildPennant(chunkSize, LLRBNode.RED);\n      }\n    }\n    return root;\n  };\n\n  const base12 = new Base12Num(childList.length);\n  const root = buildFrom12Array(base12);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return new SortedMap<K, V>(mapSortFn || (cmp as any), root);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains, map, safeGet } from '@firebase/util';\n\nimport { SortedMap } from '../util/SortedMap';\n\nimport { buildChildSet } from './childSet';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX } from './indexes/KeyIndex';\nimport { PRIORITY_INDEX } from './indexes/PriorityIndex';\nimport { NamedNode, Node } from './Node';\n\nlet _defaultIndexMap: IndexMap;\n\nconst fallbackObject = {};\n\nexport class IndexMap {\n  /**\n   * The default IndexMap for nodes without a priority\n   */\n  static get Default(): IndexMap {\n    assert(\n      fallbackObject && PRIORITY_INDEX,\n      'ChildrenNode.ts has not been loaded'\n    );\n    _defaultIndexMap =\n      _defaultIndexMap ||\n      new IndexMap(\n        { '.priority': fallbackObject },\n        { '.priority': PRIORITY_INDEX }\n      );\n    return _defaultIndexMap;\n  }\n\n  constructor(\n    private indexes_: {\n      [k: string]: SortedMap<NamedNode, Node> | /*FallbackType*/ object;\n    },\n    private indexSet_: { [k: string]: Index }\n  ) {}\n\n  get(indexKey: string): SortedMap<NamedNode, Node> | null {\n    const sortedMap = safeGet(this.indexes_, indexKey);\n    if (!sortedMap) {\n      throw new Error('No index defined for ' + indexKey);\n    }\n\n    if (sortedMap instanceof SortedMap) {\n      return sortedMap;\n    } else {\n      // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n      // regular child map\n      return null;\n    }\n  }\n\n  hasIndex(indexDefinition: Index): boolean {\n    return contains(this.indexSet_, indexDefinition.toString());\n  }\n\n  addIndex(\n    indexDefinition: Index,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    assert(\n      indexDefinition !== KEY_INDEX,\n      \"KeyIndex always exists and isn't meant to be added to the IndexMap.\"\n    );\n    const childList = [];\n    let sawIndexedValue = false;\n    const iter = existingChildren.getIterator(NamedNode.Wrap);\n    let next = iter.getNext();\n    while (next) {\n      sawIndexedValue =\n        sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n      childList.push(next);\n      next = iter.getNext();\n    }\n    let newIndex;\n    if (sawIndexedValue) {\n      newIndex = buildChildSet(childList, indexDefinition.getCompare());\n    } else {\n      newIndex = fallbackObject;\n    }\n    const indexName = indexDefinition.toString();\n    const newIndexSet = { ...this.indexSet_ };\n    newIndexSet[indexName] = indexDefinition;\n    const newIndexes = { ...this.indexes_ };\n    newIndexes[indexName] = newIndex;\n    return new IndexMap(newIndexes, newIndexSet);\n  }\n\n  /**\n   * Ensure that this node is properly tracked in any indexes that we're maintaining\n   */\n  addToIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>, indexName: string) => {\n        const index = safeGet(this.indexSet_, indexName);\n        assert(index, 'Missing index implementation for ' + indexName);\n        if (indexedChildren === fallbackObject) {\n          // Check to see if we need to index everything\n          if (index.isDefinedOn(namedNode.node)) {\n            // We need to build this index\n            const childList = [];\n            const iter = existingChildren.getIterator(NamedNode.Wrap);\n            let next = iter.getNext();\n            while (next) {\n              if (next.name !== namedNode.name) {\n                childList.push(next);\n              }\n              next = iter.getNext();\n            }\n            childList.push(namedNode);\n            return buildChildSet(childList, index.getCompare());\n          } else {\n            // No change, this remains a fallback\n            return fallbackObject;\n          }\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          let newChildren = indexedChildren;\n          if (existingSnap) {\n            newChildren = newChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          }\n          return newChildren.insert(namedNode, namedNode.node);\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n\n  /**\n   * Create a new IndexMap instance with the given value removed\n   */\n  removeFromIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>) => {\n        if (indexedChildren === fallbackObject) {\n          // This is the fallback. Just return it, nothing to do in this case\n          return indexedChildren;\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          if (existingSnap) {\n            return indexedChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          } else {\n            // No record of this child\n            return indexedChildren;\n          }\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathGetLength, pathPopFront } from '../util/Path';\nimport { SortedMap, SortedMapIterator } from '../util/SortedMap';\nimport { MAX_NAME, MIN_NAME, sha1 } from '../util/util';\n\nimport { NAME_COMPARATOR } from './comparators';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX, KeyIndex } from './indexes/KeyIndex';\nimport {\n  PRIORITY_INDEX,\n  setMaxNode as setPriorityMaxNode\n} from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\nimport { priorityHashText, setMaxNode, validatePriorityNode } from './snap';\n\nexport interface ChildrenNodeConstructor {\n  new (\n    children_: SortedMap<string, Node>,\n    priorityNode_: Node | null,\n    indexMap_: IndexMap\n  ): ChildrenNode;\n  EMPTY_NODE: ChildrenNode;\n}\n\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\n\nlet EMPTY_NODE: ChildrenNode;\n\n/**\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\n * (i.e. nodes with children).  It implements Node and stores the\n * list of children in the children property, sorted by child name.\n */\nexport class ChildrenNode implements Node {\n  private lazyHash_: string | null = null;\n\n  static get EMPTY_NODE(): ChildrenNode {\n    return (\n      EMPTY_NODE ||\n      (EMPTY_NODE = new ChildrenNode(\n        new SortedMap<string, Node>(NAME_COMPARATOR),\n        null,\n        IndexMap.Default\n      ))\n    );\n  }\n\n  /**\n   * @param children_ - List of children of this node..\n   * @param priorityNode_ - The priority of this node (as a snapshot node).\n   */\n  constructor(\n    private readonly children_: SortedMap<string, Node>,\n    private readonly priorityNode_: Node | null,\n    private indexMap_: IndexMap\n  ) {\n    /**\n     * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\n     * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\n     * class instead of an empty ChildrenNode.\n     */\n    if (this.priorityNode_) {\n      validatePriorityNode(this.priorityNode_);\n    }\n\n    if (this.children_.isEmpty()) {\n      assert(\n        !this.priorityNode_ || this.priorityNode_.isEmpty(),\n        'An empty node cannot have a priority'\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_ || EMPTY_NODE;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    if (this.children_.isEmpty()) {\n      // Don't allow priorities on empty nodes\n      return this;\n    } else {\n      return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n    }\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.getPriority();\n    } else {\n      const child = this.children_.get(childName);\n      return child === null ? EMPTY_NODE : child;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return this;\n    }\n\n    return this.getImmediateChild(front).getChild(pathPopFront(path));\n  }\n\n  /** @inheritDoc */\n  hasChild(childName: string): boolean {\n    return this.children_.get(childName) !== null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    assert(newChildNode, 'We should always be passing snapshot nodes');\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else {\n      const namedNode = new NamedNode(childName, newChildNode);\n      let newChildren, newIndexMap;\n      if (newChildNode.isEmpty()) {\n        newChildren = this.children_.remove(childName);\n        newIndexMap = this.indexMap_.removeFromIndexes(\n          namedNode,\n          this.children_\n        );\n      } else {\n        newChildren = this.children_.insert(childName, newChildNode);\n        newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n      }\n\n      const newPriority = newChildren.isEmpty()\n        ? EMPTY_NODE\n        : this.priorityNode_;\n      return new ChildrenNode(newChildren, newPriority, newIndexMap);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else {\n      assert(\n        pathGetFront(path) !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n      const newImmediateChild = this.getImmediateChild(front).updateChild(\n        pathPopFront(path),\n        newChildNode\n      );\n      return this.updateImmediateChild(front, newImmediateChild);\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return this.children_.isEmpty();\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return this.children_.count();\n  }\n\n  private static INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n\n  /** @inheritDoc */\n  val(exportFormat?: boolean): object {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    const obj: { [k: string]: unknown } = {};\n    let numKeys = 0,\n      maxKey = 0,\n      allIntegerKeys = true;\n    this.forEachChild(PRIORITY_INDEX, (key: string, childNode: Node) => {\n      obj[key] = childNode.val(exportFormat);\n\n      numKeys++;\n      if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n        maxKey = Math.max(maxKey, Number(key));\n      } else {\n        allIntegerKeys = false;\n      }\n    });\n\n    if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n      // convert to array.\n      const array: unknown[] = [];\n      // eslint-disable-next-line guard-for-in\n      for (const key in obj) {\n        array[key as unknown as number] = obj[key];\n      }\n\n      return array;\n    } else {\n      if (exportFormat && !this.getPriority().isEmpty()) {\n        obj['.priority'] = this.getPriority().val();\n      }\n      return obj;\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.getPriority().isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.getPriority().val() as string | number) +\n          ':';\n      }\n\n      this.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n        const childHash = childNode.hash();\n        if (childHash !== '') {\n          toHash += ':' + key + ':' + childHash;\n        }\n      });\n\n      this.lazyHash_ = toHash === '' ? '' : sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      const predecessor = idx.getPredecessorKey(\n        new NamedNode(childName, childNode)\n      );\n      return predecessor ? predecessor.name : null;\n    } else {\n      return this.children_.getPredecessorKey(childName);\n    }\n  }\n\n  getFirstChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const minKey = idx.minKey();\n      return minKey && minKey.name;\n    } else {\n      return this.children_.minKey();\n    }\n  }\n\n  getFirstChild(indexDefinition: Index): NamedNode | null {\n    const minKey = this.getFirstChildName(indexDefinition);\n    if (minKey) {\n      return new NamedNode(minKey, this.children_.get(minKey));\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Given an index, return the key name of the largest value we have, according to that index\n   */\n  getLastChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const maxKey = idx.maxKey();\n      return maxKey && maxKey.name;\n    } else {\n      return this.children_.maxKey();\n    }\n  }\n\n  getLastChild(indexDefinition: Index): NamedNode | null {\n    const maxKey = this.getLastChildName(indexDefinition);\n    if (maxKey) {\n      return new NamedNode(maxKey, this.children_.get(maxKey));\n    } else {\n      return null;\n    }\n  }\n  forEachChild(\n    index: Index,\n    action: (key: string, node: Node) => boolean | void\n  ): boolean {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      return idx.inorderTraversal(wrappedNode => {\n        return action(wrappedNode.name, wrappedNode.node);\n      });\n    } else {\n      return this.children_.inorderTraversal(action);\n    }\n  }\n\n  getIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n  }\n\n  getIteratorFrom(\n    startPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getIteratorFrom(startPost, key => key);\n    } else {\n      const iterator = this.children_.getIteratorFrom(\n        startPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, startPost) < 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n\n  getReverseIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getReverseIteratorFrom(\n      indexDefinition.maxPost(),\n      indexDefinition\n    );\n  }\n\n  getReverseIteratorFrom(\n    endPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getReverseIteratorFrom(endPost, key => {\n        return key;\n      });\n    } else {\n      const iterator = this.children_.getReverseIteratorFrom(\n        endPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, endPost) > 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n  compareTo(other: ChildrenNode): number {\n    if (this.isEmpty()) {\n      if (other.isEmpty()) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (other.isLeafNode() || other.isEmpty()) {\n      return 1;\n    } else if (other === MAX_NODE) {\n      return -1;\n    } else {\n      // Must be another node with children.\n      return 0;\n    }\n  }\n  withIndex(indexDefinition: Index): Node {\n    if (\n      indexDefinition === KEY_INDEX ||\n      this.indexMap_.hasIndex(indexDefinition)\n    ) {\n      return this;\n    } else {\n      const newIndexMap = this.indexMap_.addIndex(\n        indexDefinition,\n        this.children_\n      );\n      return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n    }\n  }\n  isIndexed(index: Index): boolean {\n    return index === KEY_INDEX || this.indexMap_.hasIndex(index);\n  }\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      return false;\n    } else {\n      const otherChildrenNode = other as ChildrenNode;\n      if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n        return false;\n      } else if (\n        this.children_.count() === otherChildrenNode.children_.count()\n      ) {\n        const thisIter = this.getIterator(PRIORITY_INDEX);\n        const otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\n        let thisCurrent = thisIter.getNext();\n        let otherCurrent = otherIter.getNext();\n        while (thisCurrent && otherCurrent) {\n          if (\n            thisCurrent.name !== otherCurrent.name ||\n            !thisCurrent.node.equals(otherCurrent.node)\n          ) {\n            return false;\n          }\n          thisCurrent = thisIter.getNext();\n          otherCurrent = otherIter.getNext();\n        }\n        return thisCurrent === null && otherCurrent === null;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  /**\n   * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\n   * instead.\n   *\n   */\n  private resolveIndex_(\n    indexDefinition: Index\n  ): SortedMap<NamedNode, Node> | null {\n    if (indexDefinition === KEY_INDEX) {\n      return null;\n    } else {\n      return this.indexMap_.get(indexDefinition.toString());\n    }\n  }\n}\n\nexport class MaxNode extends ChildrenNode {\n  constructor() {\n    super(\n      new SortedMap<string, Node>(NAME_COMPARATOR),\n      ChildrenNode.EMPTY_NODE,\n      IndexMap.Default\n    );\n  }\n\n  compareTo(other: Node): number {\n    if (other === this) {\n      return 0;\n    } else {\n      return 1;\n    }\n  }\n\n  equals(other: Node): boolean {\n    // Not that we every compare it, but MAX_NODE is only ever equal to itself\n    return other === this;\n  }\n\n  getPriority(): MaxNode {\n    return this;\n  }\n\n  getImmediateChild(childName: string): ChildrenNode {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n}\n\n/**\n * Marker that will sort higher than any other snapshot.\n */\nexport const MAX_NODE = new MaxNode();\n\n/**\n * Document NamedNode extensions\n */\ndeclare module './Node' {\n  interface NamedNode {\n    MIN: NamedNode;\n    MAX: NamedNode;\n  }\n}\n\nObject.defineProperties(NamedNode, {\n  MIN: {\n    value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\n  },\n  MAX: {\n    value: new NamedNode(MAX_NAME, MAX_NODE)\n  }\n});\n\n/**\n * Reference Extensions\n */\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode.__childrenNodeConstructor = ChildrenNode;\nsetMaxNode(MAX_NODE);\nsetPriorityMaxNode(MAX_NODE);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { SortedMap } from '../util/SortedMap';\nimport { each } from '../util/util';\n\nimport { ChildrenNode } from './ChildrenNode';\nimport { buildChildSet } from './childSet';\nimport { NAME_COMPARATOR, NAME_ONLY_COMPARATOR } from './comparators';\nimport { PRIORITY_INDEX, setNodeFromJSON } from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\n\nconst USE_HINZE = true;\n\n/**\n * Constructs a snapshot node representing the passed JSON and returns it.\n * @param json - JSON to create a node for.\n * @param priority - Optional priority to use.  This will be ignored if the\n * passed JSON contains a .priority property.\n */\nexport function nodeFromJSON(\n  json: unknown | null,\n  priority: unknown = null\n): Node {\n  if (json === null) {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  if (typeof json === 'object' && '.priority' in json) {\n    priority = json['.priority'];\n  }\n\n  assert(\n    priority === null ||\n      typeof priority === 'string' ||\n      typeof priority === 'number' ||\n      (typeof priority === 'object' && '.sv' in (priority as object)),\n    'Invalid priority type found: ' + typeof priority\n  );\n\n  if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n    json = json['.value'];\n  }\n\n  // Valid leaf nodes include non-objects or server-value wrapper objects\n  if (typeof json !== 'object' || '.sv' in json) {\n    const jsonLeaf = json as string | number | boolean | Indexable;\n    return new LeafNode(jsonLeaf, nodeFromJSON(priority));\n  }\n\n  if (!(json instanceof Array) && USE_HINZE) {\n    const children: NamedNode[] = [];\n    let childrenHavePriority = false;\n    const hinzeJsonObj = json;\n    each(hinzeJsonObj, (key, child) => {\n      if (key.substring(0, 1) !== '.') {\n        // Ignore metadata nodes\n        const childNode = nodeFromJSON(child);\n        if (!childNode.isEmpty()) {\n          childrenHavePriority =\n            childrenHavePriority || !childNode.getPriority().isEmpty();\n          children.push(new NamedNode(key, childNode));\n        }\n      }\n    });\n\n    if (children.length === 0) {\n      return ChildrenNode.EMPTY_NODE;\n    }\n\n    const childSet = buildChildSet(\n      children,\n      NAME_ONLY_COMPARATOR,\n      namedNode => namedNode.name,\n      NAME_COMPARATOR\n    ) as SortedMap<string, Node>;\n    if (childrenHavePriority) {\n      const sortedChildSet = buildChildSet(\n        children,\n        PRIORITY_INDEX.getCompare()\n      );\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        new IndexMap(\n          { '.priority': sortedChildSet },\n          { '.priority': PRIORITY_INDEX }\n        )\n      );\n    } else {\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        IndexMap.Default\n      );\n    }\n  } else {\n    let node: Node = ChildrenNode.EMPTY_NODE;\n    each(json, (key: string, childData: unknown) => {\n      if (contains(json as object, key)) {\n        if (key.substring(0, 1) !== '.') {\n          // ignore metadata nodes.\n          const childNode = nodeFromJSON(childData);\n          if (childNode.isLeafNode() || !childNode.isEmpty()) {\n            node = node.updateImmediateChild(key, childNode);\n          }\n        }\n      }\n    });\n\n    return node.updatePriority(nodeFromJSON(priority));\n  }\n}\n\nsetNodeFromJSON(nodeFromJSON);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathIsEmpty, pathSlice } from '../../util/Path';\nimport { MAX_NAME, nameCompare } from '../../util/util';\nimport { ChildrenNode, MAX_NODE } from '../ChildrenNode';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class PathIndex extends Index {\n  constructor(private indexPath_: Path) {\n    super();\n\n    assert(\n      !pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority',\n      \"Can't create PathIndex with empty path or .priority key\"\n    );\n  }\n\n  protected extractChild(snap: Node): Node {\n    return snap.getChild(this.indexPath_);\n  }\n  isDefinedOn(node: Node): boolean {\n    return !node.getChild(this.indexPath_).isEmpty();\n  }\n  compare(a: NamedNode, b: NamedNode): number {\n    const aChild = this.extractChild(a.node);\n    const bChild = this.extractChild(b.node);\n    const indexCmp = aChild.compareTo(bChild);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    const node = ChildrenNode.EMPTY_NODE.updateChild(\n      this.indexPath_,\n      valueNode\n    );\n    return new NamedNode(name, node);\n  }\n  maxPost(): NamedNode {\n    const node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE);\n    return new NamedNode(MAX_NAME, node);\n  }\n  toString(): string {\n    return pathSlice(this.indexPath_, 0).join('/');\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../../util/util';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class ValueIndex extends Index {\n  compare(a: NamedNode, b: NamedNode): number {\n    const indexCmp = a.node.compareTo(b.node);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  isDefinedOn(node: Node): boolean {\n    return true;\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.equals(newNode);\n  }\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MAX;\n  }\n\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, valueNode);\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.value';\n  }\n}\n\nexport const VALUE_INDEX = new ValueIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport {\n  tryParseInt,\n  MAX_NAME,\n  MIN_NAME,\n  INTEGER_32_MIN,\n  INTEGER_32_MAX\n} from '../util/util';\n\n// Modeled after base64 web-safe chars, but ordered by ASCII.\nconst PUSH_CHARS =\n  '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n\nconst MIN_PUSH_CHAR = '-';\n\nconst MAX_PUSH_CHAR = 'z';\n\nconst MAX_KEY_LEN = 786;\n\n/**\n * Fancy ID generator that creates 20-character string identifiers with the\n * following properties:\n *\n * 1. They're based on timestamp so that they sort *after* any existing ids.\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\n *    collide with other clients' IDs.\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\n *    that will sort properly).\n * 4. They're monotonically increasing. Even if you generate more than one in\n *    the same timestamp, the latter ones will sort after the former ones. We do\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\n *    in the case of a timestamp collision).\n */\nexport const nextPushId = (function () {\n  // Timestamp of last push, used to prevent local collisions if you push twice\n  // in one ms.\n  let lastPushTime = 0;\n\n  // We generate 72-bits of randomness which get turned into 12 characters and\n  // appended to the timestamp to prevent collisions with other clients. We\n  // store the last characters we generated because in the event of a collision,\n  // we'll use those same characters except \"incremented\" by one.\n  const lastRandChars: number[] = [];\n\n  return function (now: number) {\n    const duplicateTime = now === lastPushTime;\n    lastPushTime = now;\n\n    let i;\n    const timeStampChars = new Array(8);\n    for (i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\n      // NOTE: Can't use << here because javascript will convert to int and lose\n      // the upper bits.\n      now = Math.floor(now / 64);\n    }\n    assert(now === 0, 'Cannot push at time == 0');\n\n    let id = timeStampChars.join('');\n\n    if (!duplicateTime) {\n      for (i = 0; i < 12; i++) {\n        lastRandChars[i] = Math.floor(Math.random() * 64);\n      }\n    } else {\n      // If the timestamp hasn't changed since last push, use the same random\n      // number, except incremented by 1.\n      for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n        lastRandChars[i] = 0;\n      }\n      lastRandChars[i]++;\n    }\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n    assert(id.length === 20, 'nextPushId: Length should be 20.');\n\n    return id;\n  };\n})();\n\nexport const successor = function (key: string) {\n  if (key === '' + INTEGER_32_MAX) {\n    // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\n    return MIN_PUSH_CHAR;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt + 1);\n  }\n  const next = new Array(key.length);\n\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n\n  if (next.length < MAX_KEY_LEN) {\n    next.push(MIN_PUSH_CHAR);\n    return next.join('');\n  }\n\n  let i = next.length - 1;\n\n  while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\n    i--;\n  }\n\n  // `successor` was called on the largest possible key, so return the\n  // MAX_NAME, which sorts larger than all keys.\n  if (i === -1) {\n    return MAX_NAME;\n  }\n\n  const source = next[i];\n  const sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\n  next[i] = sourcePlusOne;\n\n  return next.slice(0, i + 1).join('');\n};\n\n// `key` is assumed to be non-empty.\nexport const predecessor = function (key: string) {\n  if (key === '' + INTEGER_32_MIN) {\n    return MIN_NAME;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt - 1);\n  }\n  const next = new Array(key.length);\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n  // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\n  // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\n  // than that, `predecessor(predecessor(key))`, is\n  //\n  // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\n  //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\n  //\n  // analogous to increment/decrement for base-10 integers.\n  //\n  // This works because lexigographic comparison works character-by-character,\n  // using length as a tie-breaker if one key is a prefix of the other.\n  if (next[next.length - 1] === MIN_PUSH_CHAR) {\n    if (next.length === 1) {\n      // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\n      return '' + INTEGER_32_MAX;\n    }\n    delete next[next.length - 1];\n    return next.join('');\n  }\n  // Replace the last character with it's immediate predecessor, and\n  // fill the suffix of the key with MAX_PUSH_CHAR. This is the\n  // lexicographically largest possible key smaller than `key`.\n  next[next.length - 1] = PUSH_CHARS.charAt(\n    PUSH_CHARS.indexOf(next[next.length - 1]) - 1\n  );\n  return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nexport const enum ChangeType {\n  /** Event type for a child added */\n  CHILD_ADDED = 'child_added',\n  /** Event type for a child removed */\n  CHILD_REMOVED = 'child_removed',\n  /** Event type for a child changed */\n  CHILD_CHANGED = 'child_changed',\n  /** Event type for a child moved */\n  CHILD_MOVED = 'child_moved',\n  /** Event type for a value change */\n  VALUE = 'value'\n}\n\nexport interface Change {\n  /** @param type - The event type */\n  type: ChangeType;\n  /** @param snapshotNode - The data */\n  snapshotNode: Node;\n  /** @param childName - The name for this child, if it's a child even */\n  childName?: string;\n  /** @param oldSnap - Used for intermediate processing of child changed events */\n  oldSnap?: Node;\n  /**  * @param prevName - The name for the previous child, if applicable */\n  prevName?: string | null;\n}\n\nexport function changeValue(snapshotNode: Node): Change {\n  return { type: ChangeType.VALUE, snapshotNode };\n}\n\nexport function changeChildAdded(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_ADDED, snapshotNode, childName };\n}\n\nexport function changeChildRemoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_REMOVED, snapshotNode, childName };\n}\n\nexport function changeChildChanged(\n  childName: string,\n  snapshotNode: Node,\n  oldSnap: Node\n): Change {\n  return {\n    type: ChangeType.CHILD_CHANGED,\n    snapshotNode,\n    childName,\n    oldSnap\n  };\n}\n\nexport function changeChildMoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_MOVED, snapshotNode, childName };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { Node } from '../../snap/Node';\nimport { Path } from '../../util/Path';\nimport {\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from '../Change';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\n\nimport { NodeFilter } from './NodeFilter';\n\n/**\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\n */\nexport class IndexedFilter implements NodeFilter {\n  constructor(private readonly index_: Index) {}\n\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    assert(\n      snap.isIndexed(this.index_),\n      'A node must be indexed if only a child is updated'\n    );\n    const oldChild = snap.getImmediateChild(key);\n    // Check if anything actually changed.\n    if (\n      oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))\n    ) {\n      // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n      // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n      // to avoid treating these cases as \"nothing changed.\"\n      if (oldChild.isEmpty() === newChild.isEmpty()) {\n        // Nothing changed.\n\n        // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n        //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n        return snap;\n      }\n    }\n\n    if (optChangeAccumulator != null) {\n      if (newChild.isEmpty()) {\n        if (snap.hasChild(key)) {\n          optChangeAccumulator.trackChildChange(\n            changeChildRemoved(key, oldChild)\n          );\n        } else {\n          assert(\n            snap.isLeafNode(),\n            'A child remove without an old child only makes sense on a leaf node'\n          );\n        }\n      } else if (oldChild.isEmpty()) {\n        optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\n      } else {\n        optChangeAccumulator.trackChildChange(\n          changeChildChanged(key, newChild, oldChild)\n        );\n      }\n    }\n    if (snap.isLeafNode() && newChild.isEmpty()) {\n      return snap;\n    } else {\n      // Make sure the node is indexed\n      return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n    }\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (optChangeAccumulator != null) {\n      if (!oldSnap.isLeafNode()) {\n        oldSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (!newSnap.hasChild(key)) {\n            optChangeAccumulator.trackChildChange(\n              changeChildRemoved(key, childNode)\n            );\n          }\n        });\n      }\n      if (!newSnap.isLeafNode()) {\n        newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (oldSnap.hasChild(key)) {\n            const oldChild = oldSnap.getImmediateChild(key);\n            if (!oldChild.equals(childNode)) {\n              optChangeAccumulator.trackChildChange(\n                changeChildChanged(key, childNode, oldChild)\n              );\n            }\n          } else {\n            optChangeAccumulator.trackChildChange(\n              changeChildAdded(key, childNode)\n            );\n          }\n        });\n      }\n    }\n    return newSnap.withIndex(this.index_);\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    if (oldSnap.isEmpty()) {\n      return ChildrenNode.EMPTY_NODE;\n    } else {\n      return oldSnap.updatePriority(newPriority);\n    }\n  }\n  filtersNodes(): boolean {\n    return false;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this;\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NamedNode, Node } from '../../../core/snap/Node';\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { Path } from '../../util/Path';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { QueryParams } from '../QueryParams';\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { NodeFilter } from './NodeFilter';\n\n/**\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\n */\nexport class RangedFilter implements NodeFilter {\n  private indexedFilter_: IndexedFilter;\n\n  private index_: Index;\n\n  private startPost_: NamedNode;\n\n  private endPost_: NamedNode;\n\n  constructor(params: QueryParams) {\n    this.indexedFilter_ = new IndexedFilter(params.getIndex());\n    this.index_ = params.getIndex();\n    this.startPost_ = RangedFilter.getStartPost_(params);\n    this.endPost_ = RangedFilter.getEndPost_(params);\n  }\n\n  getStartPost(): NamedNode {\n    return this.startPost_;\n  }\n\n  getEndPost(): NamedNode {\n    return this.endPost_;\n  }\n\n  matches(node: NamedNode): boolean {\n    return (\n      this.index_.compare(this.getStartPost(), node) <= 0 &&\n      this.index_.compare(node, this.getEndPost()) <= 0\n    );\n  }\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    return this.indexedFilter_.updateChild(\n      snap,\n      key,\n      newChild,\n      affectedPath,\n      source,\n      optChangeAccumulator\n    );\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (newSnap.isLeafNode()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      newSnap = ChildrenNode.EMPTY_NODE;\n    }\n    let filtered = newSnap.withIndex(this.index_);\n    // Don't support priorities on queries\n    filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n    const self = this;\n    newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      if (!self.matches(new NamedNode(key, childNode))) {\n        filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\n      }\n    });\n    return this.indexedFilter_.updateFullNode(\n      oldSnap,\n      filtered,\n      optChangeAccumulator\n    );\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n  filtersNodes(): boolean {\n    return true;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this.indexedFilter_;\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  private static getStartPost_(params: QueryParams): NamedNode {\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      return params.getIndex().makePost(params.getIndexStartValue(), startName);\n    } else {\n      return params.getIndex().minPost();\n    }\n  }\n\n  private static getEndPost_(params: QueryParams): NamedNode {\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      return params.getIndex().makePost(params.getIndexEndValue(), endName);\n    } else {\n      return params.getIndex().maxPost();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { NamedNode, Node } from '../../snap/Node';\nimport { Path } from '../../util/Path';\nimport {\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from '../Change';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { QueryParams } from '../QueryParams';\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { NodeFilter } from './NodeFilter';\nimport { RangedFilter } from './RangedFilter';\n\n/**\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\n */\nexport class LimitedFilter implements NodeFilter {\n  private readonly rangedFilter_: RangedFilter;\n\n  private readonly index_: Index;\n\n  private readonly limit_: number;\n\n  private readonly reverse_: boolean;\n\n  constructor(params: QueryParams) {\n    this.rangedFilter_ = new RangedFilter(params);\n    this.index_ = params.getIndex();\n    this.limit_ = params.getLimit();\n    this.reverse_ = !params.isViewFromLeft();\n  }\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    if (snap.getImmediateChild(key).equals(newChild)) {\n      // No change\n      return snap;\n    } else if (snap.numChildren() < this.limit_) {\n      return this.rangedFilter_\n        .getIndexedFilter()\n        .updateChild(\n          snap,\n          key,\n          newChild,\n          affectedPath,\n          source,\n          optChangeAccumulator\n        );\n    } else {\n      return this.fullLimitUpdateChild_(\n        snap,\n        key,\n        newChild,\n        source,\n        optChangeAccumulator\n      );\n    }\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    let filtered;\n    if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n    } else {\n      if (\n        this.limit_ * 2 < newSnap.numChildren() &&\n        newSnap.isIndexed(this.index_)\n      ) {\n        // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n        filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n        // anchor to the startPost, endPost, or last element as appropriate\n        let iterator;\n        if (this.reverse_) {\n          iterator = (newSnap as ChildrenNode).getReverseIteratorFrom(\n            this.rangedFilter_.getEndPost(),\n            this.index_\n          );\n        } else {\n          iterator = (newSnap as ChildrenNode).getIteratorFrom(\n            this.rangedFilter_.getStartPost(),\n            this.index_\n          );\n        }\n        let count = 0;\n        while (iterator.hasNext() && count < this.limit_) {\n          const next = iterator.getNext();\n          let inRange;\n          if (this.reverse_) {\n            inRange =\n              this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\n          } else {\n            inRange =\n              this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\n          }\n          if (inRange) {\n            filtered = filtered.updateImmediateChild(next.name, next.node);\n            count++;\n          } else {\n            // if we have reached the end post, we cannot keep adding elemments\n            break;\n          }\n        }\n      } else {\n        // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n        filtered = newSnap.withIndex(this.index_);\n        // Don't support priorities on queries\n        filtered = filtered.updatePriority(\n          ChildrenNode.EMPTY_NODE\n        ) as ChildrenNode;\n        let startPost;\n        let endPost;\n        let cmp;\n        let iterator;\n        if (this.reverse_) {\n          iterator = filtered.getReverseIterator(this.index_);\n          startPost = this.rangedFilter_.getEndPost();\n          endPost = this.rangedFilter_.getStartPost();\n          const indexCompare = this.index_.getCompare();\n          cmp = (a: NamedNode, b: NamedNode) => indexCompare(b, a);\n        } else {\n          iterator = filtered.getIterator(this.index_);\n          startPost = this.rangedFilter_.getStartPost();\n          endPost = this.rangedFilter_.getEndPost();\n          cmp = this.index_.getCompare();\n        }\n\n        let count = 0;\n        let foundStartPost = false;\n        while (iterator.hasNext()) {\n          const next = iterator.getNext();\n          if (!foundStartPost && cmp(startPost, next) <= 0) {\n            // start adding\n            foundStartPost = true;\n          }\n          const inRange =\n            foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\n          if (inRange) {\n            count++;\n          } else {\n            filtered = filtered.updateImmediateChild(\n              next.name,\n              ChildrenNode.EMPTY_NODE\n            );\n          }\n        }\n      }\n    }\n    return this.rangedFilter_\n      .getIndexedFilter()\n      .updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n  filtersNodes(): boolean {\n    return true;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this.rangedFilter_.getIndexedFilter();\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  private fullLimitUpdateChild_(\n    snap: Node,\n    childKey: string,\n    childSnap: Node,\n    source: CompleteChildSource,\n    changeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    // TODO: rename all cache stuff etc to general snap terminology\n    let cmp;\n    if (this.reverse_) {\n      const indexCmp = this.index_.getCompare();\n      cmp = (a: NamedNode, b: NamedNode) => indexCmp(b, a);\n    } else {\n      cmp = this.index_.getCompare();\n    }\n    const oldEventCache = snap as ChildrenNode;\n    assert(oldEventCache.numChildren() === this.limit_, '');\n    const newChildNamedNode = new NamedNode(childKey, childSnap);\n    const windowBoundary = this.reverse_\n      ? oldEventCache.getFirstChild(this.index_)\n      : (oldEventCache.getLastChild(this.index_) as NamedNode);\n    const inRange = this.rangedFilter_.matches(newChildNamedNode);\n    if (oldEventCache.hasChild(childKey)) {\n      const oldChildSnap = oldEventCache.getImmediateChild(childKey);\n      let nextChild = source.getChildAfterChild(\n        this.index_,\n        windowBoundary,\n        this.reverse_\n      );\n      while (\n        nextChild != null &&\n        (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))\n      ) {\n        // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n        // been applied to the limited filter yet. Ignore this next child which will be updated later in\n        // the limited filter...\n        nextChild = source.getChildAfterChild(\n          this.index_,\n          nextChild,\n          this.reverse_\n        );\n      }\n      const compareNext =\n        nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n      const remainsInWindow =\n        inRange && !childSnap.isEmpty() && compareNext >= 0;\n      if (remainsInWindow) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildChanged(childKey, childSnap, oldChildSnap)\n          );\n        }\n        return oldEventCache.updateImmediateChild(childKey, childSnap);\n      } else {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildRemoved(childKey, oldChildSnap)\n          );\n        }\n        const newEventCache = oldEventCache.updateImmediateChild(\n          childKey,\n          ChildrenNode.EMPTY_NODE\n        );\n        const nextChildInRange =\n          nextChild != null && this.rangedFilter_.matches(nextChild);\n        if (nextChildInRange) {\n          if (changeAccumulator != null) {\n            changeAccumulator.trackChildChange(\n              changeChildAdded(nextChild.name, nextChild.node)\n            );\n          }\n          return newEventCache.updateImmediateChild(\n            nextChild.name,\n            nextChild.node\n          );\n        } else {\n          return newEventCache;\n        }\n      }\n    } else if (childSnap.isEmpty()) {\n      // we're deleting a node, but it was not in the window, so ignore it\n      return snap;\n    } else if (inRange) {\n      if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildRemoved(windowBoundary.name, windowBoundary.node)\n          );\n          changeAccumulator.trackChildChange(\n            changeChildAdded(childKey, childSnap)\n          );\n        }\n        return oldEventCache\n          .updateImmediateChild(childKey, childSnap)\n          .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\n      } else {\n        return snap;\n      }\n    } else {\n      return snap;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, stringify } from '@firebase/util';\n\nimport { Index } from '../snap/indexes/Index';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { PathIndex } from '../snap/indexes/PathIndex';\nimport { PRIORITY_INDEX, PriorityIndex } from '../snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../snap/indexes/ValueIndex';\nimport { predecessor, successor } from '../util/NextPushId';\nimport { MAX_NAME, MIN_NAME } from '../util/util';\n\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { LimitedFilter } from './filter/LimitedFilter';\nimport { NodeFilter } from './filter/NodeFilter';\nimport { RangedFilter } from './filter/RangedFilter';\n\n/**\n * Wire Protocol Constants\n */\nconst enum WIRE_PROTOCOL_CONSTANTS {\n  INDEX_START_VALUE = 'sp',\n  INDEX_START_NAME = 'sn',\n  INDEX_END_VALUE = 'ep',\n  INDEX_END_NAME = 'en',\n  LIMIT = 'l',\n  VIEW_FROM = 'vf',\n  VIEW_FROM_LEFT = 'l',\n  VIEW_FROM_RIGHT = 'r',\n  INDEX = 'i'\n}\n\n/**\n * REST Query Constants\n */\nconst enum REST_QUERY_CONSTANTS {\n  ORDER_BY = 'orderBy',\n  PRIORITY_INDEX = '$priority',\n  VALUE_INDEX = '$value',\n  KEY_INDEX = '$key',\n  START_AT = 'startAt',\n  END_AT = 'endAt',\n  LIMIT_TO_FIRST = 'limitToFirst',\n  LIMIT_TO_LAST = 'limitToLast'\n}\n\n/**\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\n * user-facing API level, so it is not done here.\n *\n * @internal\n */\nexport class QueryParams {\n  limitSet_ = false;\n  startSet_ = false;\n  startNameSet_ = false;\n  startAfterSet_ = false;\n  endSet_ = false;\n  endNameSet_ = false;\n  endBeforeSet_ = false;\n  limit_ = 0;\n  viewFrom_ = '';\n  indexStartValue_: unknown | null = null;\n  indexStartName_ = '';\n  indexEndValue_: unknown | null = null;\n  indexEndName_ = '';\n  index_: PriorityIndex = PRIORITY_INDEX;\n\n  hasStart(): boolean {\n    return this.startSet_;\n  }\n\n  hasStartAfter(): boolean {\n    return this.startAfterSet_;\n  }\n\n  hasEndBefore(): boolean {\n    return this.endBeforeSet_;\n  }\n\n  /**\n   * @returns True if it would return from left.\n   */\n  isViewFromLeft(): boolean {\n    if (this.viewFrom_ === '') {\n      // limit(), rather than limitToFirst or limitToLast was called.\n      // This means that only one of startSet_ and endSet_ is true. Use them\n      // to calculate which side of the view to anchor to. If neither is set,\n      // anchor to the end.\n      return this.startSet_;\n    } else {\n      return this.viewFrom_ === WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n    }\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true\n   */\n  getIndexStartValue(): unknown {\n    assert(this.startSet_, 'Only valid if start has been set');\n    return this.indexStartValue_;\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true.\n   * Returns the starting key name for the range defined by these query parameters\n   */\n  getIndexStartName(): string {\n    assert(this.startSet_, 'Only valid if start has been set');\n    if (this.startNameSet_) {\n      return this.indexStartName_;\n    } else {\n      return MIN_NAME;\n    }\n  }\n\n  hasEnd(): boolean {\n    return this.endSet_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   */\n  getIndexEndValue(): unknown {\n    assert(this.endSet_, 'Only valid if end has been set');\n    return this.indexEndValue_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   * Returns the end key name for the range defined by these query parameters\n   */\n  getIndexEndName(): string {\n    assert(this.endSet_, 'Only valid if end has been set');\n    if (this.endNameSet_) {\n      return this.indexEndName_;\n    } else {\n      return MAX_NAME;\n    }\n  }\n\n  hasLimit(): boolean {\n    return this.limitSet_;\n  }\n\n  /**\n   * @returns True if a limit has been set and it has been explicitly anchored\n   */\n  hasAnchoredLimit(): boolean {\n    return this.limitSet_ && this.viewFrom_ !== '';\n  }\n\n  /**\n   * Only valid to call if hasLimit() returns true\n   */\n  getLimit(): number {\n    assert(this.limitSet_, 'Only valid if limit has been set');\n    return this.limit_;\n  }\n\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  loadsAllData(): boolean {\n    return !(this.startSet_ || this.endSet_ || this.limitSet_);\n  }\n\n  isDefault(): boolean {\n    return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\n  }\n\n  copy(): QueryParams {\n    const copy = new QueryParams();\n    copy.limitSet_ = this.limitSet_;\n    copy.limit_ = this.limit_;\n    copy.startSet_ = this.startSet_;\n    copy.indexStartValue_ = this.indexStartValue_;\n    copy.startNameSet_ = this.startNameSet_;\n    copy.indexStartName_ = this.indexStartName_;\n    copy.endSet_ = this.endSet_;\n    copy.indexEndValue_ = this.indexEndValue_;\n    copy.endNameSet_ = this.endNameSet_;\n    copy.indexEndName_ = this.indexEndName_;\n    copy.index_ = this.index_;\n    copy.viewFrom_ = this.viewFrom_;\n    return copy;\n  }\n}\n\nexport function queryParamsGetNodeFilter(queryParams: QueryParams): NodeFilter {\n  if (queryParams.loadsAllData()) {\n    return new IndexedFilter(queryParams.getIndex());\n  } else if (queryParams.hasLimit()) {\n    return new LimitedFilter(queryParams);\n  } else {\n    return new RangedFilter(queryParams);\n  }\n}\n\nexport function queryParamsLimit(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = '';\n  return newParams;\n}\n\nexport function queryParamsLimitToFirst(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n  return newParams;\n}\n\nexport function queryParamsLimitToLast(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n  return newParams;\n}\n\nexport function queryParamsStartAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.startSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexStartValue_ = indexValue;\n  if (key != null) {\n    newParams.startNameSet_ = true;\n    newParams.indexStartName_ = key;\n  } else {\n    newParams.startNameSet_ = false;\n    newParams.indexStartName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsStartAfter(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX) {\n    if (typeof indexValue === 'string') {\n      indexValue = successor(indexValue as string);\n    }\n    params = queryParamsStartAt(queryParams, indexValue, key);\n  } else {\n    let childKey: string;\n    if (key == null) {\n      childKey = MAX_NAME;\n    } else {\n      childKey = successor(key);\n    }\n    params = queryParamsStartAt(queryParams, indexValue, childKey);\n  }\n  params.startAfterSet_ = true;\n  return params;\n}\n\nexport function queryParamsEndAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.endSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexEndValue_ = indexValue;\n  if (key !== undefined) {\n    newParams.endNameSet_ = true;\n    newParams.indexEndName_ = key;\n  } else {\n    newParams.endNameSet_ = false;\n    newParams.indexEndName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsEndBefore(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let childKey: string;\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX) {\n    if (typeof indexValue === 'string') {\n      indexValue = predecessor(indexValue as string);\n    }\n    params = queryParamsEndAt(queryParams, indexValue, key);\n  } else {\n    if (key == null) {\n      childKey = MIN_NAME;\n    } else {\n      childKey = predecessor(key);\n    }\n    params = queryParamsEndAt(queryParams, indexValue, childKey);\n  }\n  params.endBeforeSet_ = true;\n  return params;\n}\n\nexport function queryParamsOrderBy(\n  queryParams: QueryParams,\n  index: Index\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.index_ = index;\n  return newParams;\n}\n\n/**\n * Returns a set of REST query string parameters representing this query.\n *\n * @returns query string parameters\n */\nexport function queryParamsToRestQueryStringParameters(\n  queryParams: QueryParams\n): Record<string, string | number> {\n  const qs: Record<string, string | number> = {};\n\n  if (queryParams.isDefault()) {\n    return qs;\n  }\n\n  let orderBy;\n  if (queryParams.index_ === PRIORITY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.PRIORITY_INDEX;\n  } else if (queryParams.index_ === VALUE_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.VALUE_INDEX;\n  } else if (queryParams.index_ === KEY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.KEY_INDEX;\n  } else {\n    assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\n    orderBy = queryParams.index_.toString();\n  }\n  qs[REST_QUERY_CONSTANTS.ORDER_BY] = stringify(orderBy);\n\n  if (queryParams.startSet_) {\n    qs[REST_QUERY_CONSTANTS.START_AT] = stringify(queryParams.indexStartValue_);\n    if (queryParams.startNameSet_) {\n      qs[REST_QUERY_CONSTANTS.START_AT] +=\n        ',' + stringify(queryParams.indexStartName_);\n    }\n  }\n\n  if (queryParams.endSet_) {\n    qs[REST_QUERY_CONSTANTS.END_AT] = stringify(queryParams.indexEndValue_);\n    if (queryParams.endNameSet_) {\n      qs[REST_QUERY_CONSTANTS.END_AT] +=\n        ',' + stringify(queryParams.indexEndName_);\n    }\n  }\n\n  if (queryParams.limitSet_) {\n    if (queryParams.isViewFromLeft()) {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_FIRST] = queryParams.limit_;\n    } else {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_LAST] = queryParams.limit_;\n    }\n  }\n\n  return qs;\n}\n\nexport function queryParamsGetQueryObject(\n  queryParams: QueryParams\n): Record<string, unknown> {\n  const obj: Record<string, unknown> = {};\n  if (queryParams.startSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] =\n      queryParams.indexStartValue_;\n    if (queryParams.startNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] =\n        queryParams.indexStartName_;\n    }\n  }\n  if (queryParams.endSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = queryParams.indexEndValue_;\n    if (queryParams.endNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = queryParams.indexEndName_;\n    }\n  }\n  if (queryParams.limitSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = queryParams.limit_;\n    let viewFrom = queryParams.viewFrom_;\n    if (viewFrom === '') {\n      if (queryParams.isViewFromLeft()) {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n      } else {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n      }\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\n  }\n  // For now, priority index is the default, so we only specify if it's some other index\n  if (queryParams.index_ !== PRIORITY_INDEX) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = queryParams.index_.toString();\n  }\n  return obj;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  jsonEval,\n  safeGet,\n  querystring,\n  Deferred\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { logWrapper, warn } from './util/util';\nimport { QueryContext } from './view/EventRegistration';\nimport { queryParamsToRestQueryStringParameters } from './view/QueryParams';\n\n/**\n * An implementation of ServerActions that communicates with the server via REST requests.\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\n * persistent connection (using WebSockets or long-polling)\n */\nexport class ReadonlyRestClient extends ServerActions {\n  reportStats(stats: { [k: string]: unknown }): void {\n    throw new Error('Method not implemented.');\n  }\n\n  /** @private {function(...[*])} */\n  private log_: (...args: unknown[]) => void = logWrapper('p:rest:');\n\n  /**\n   * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\n   * that's been removed. :-/\n   */\n  private listens_: { [k: string]: object } = {};\n\n  static getListenId_(query: QueryContext, tag?: number | null): string {\n    if (tag !== undefined) {\n      return 'tag$' + tag;\n    } else {\n      assert(\n        query._queryParams.isDefault(),\n        \"should have a tag if it's not a default query.\"\n      );\n      return query._path.toString();\n    }\n  }\n\n  /**\n   * @param repoInfo_ - Data about the namespace we are connecting to\n   * @param onDataUpdate_ - A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private appCheckTokenProvider_: AppCheckTokenProvider\n  ) {\n    super();\n  }\n\n  /** @inheritDoc */\n  listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    const pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + query._queryIdentifier);\n\n    // Mark this listener so we can tell if it's removed.\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    const thisListen = {};\n    this.listens_[listenId] = thisListen;\n\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query._queryParams\n    );\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\n        }\n\n        if (safeGet(this.listens_, listenId) === thisListen) {\n          let status;\n          if (!error) {\n            status = 'ok';\n          } else if (error === 401) {\n            status = 'permission_denied';\n          } else {\n            status = 'rest_error:' + error;\n          }\n\n          onComplete(status, null);\n        }\n      }\n    );\n  }\n\n  /** @inheritDoc */\n  unlisten(query: QueryContext, tag: number | null) {\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    delete this.listens_[listenId];\n  }\n\n  get(query: QueryContext): Promise<string> {\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query._queryParams\n    );\n\n    const pathString = query._path.toString();\n\n    const deferred = new Deferred<string>();\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(\n            pathString,\n            data,\n            /*isMerge=*/ false,\n            /*tag=*/ null\n          );\n          deferred.resolve(data as string);\n        } else {\n          deferred.reject(new Error(data as string));\n        }\n      }\n    );\n    return deferred.promise;\n  }\n\n  /** @inheritDoc */\n  refreshAuthToken(token: string) {\n    // no-op since we just always call getToken.\n  }\n\n  /**\n   * Performs a REST request to the given path, with the provided query string parameters,\n   * and any auth credentials we have.\n   */\n  private restRequest_(\n    pathString: string,\n    queryStringParameters: { [k: string]: string | number } = {},\n    callback: ((a: number | null, b?: unknown) => void) | null\n  ) {\n    queryStringParameters['format'] = 'export';\n\n    return Promise.all([\n      this.authTokenProvider_.getToken(/*forceRefresh=*/ false),\n      this.appCheckTokenProvider_.getToken(/*forceRefresh=*/ false)\n    ]).then(([authToken, appCheckToken]) => {\n      if (authToken && authToken.accessToken) {\n        queryStringParameters['auth'] = authToken.accessToken;\n      }\n      if (appCheckToken && appCheckToken.token) {\n        queryStringParameters['ac'] = appCheckToken.token;\n      }\n\n      const url =\n        (this.repoInfo_.secure ? 'https://' : 'http://') +\n        this.repoInfo_.host +\n        pathString +\n        '?' +\n        'ns=' +\n        this.repoInfo_.namespace +\n        querystring(queryStringParameters);\n\n      this.log_('Sending REST request for ' + url);\n      const xhr = new XMLHttpRequest();\n      xhr.onreadystatechange = () => {\n        if (callback && xhr.readyState === 4) {\n          this.log_(\n            'REST Response for ' + url + ' received. status:',\n            xhr.status,\n            'response:',\n            xhr.responseText\n          );\n          let res = null;\n          if (xhr.status >= 200 && xhr.status < 300) {\n            try {\n              res = jsonEval(xhr.responseText);\n            } catch (e) {\n              warn(\n                'Failed to parse JSON response for ' +\n                  url +\n                  ': ' +\n                  xhr.responseText\n              );\n            }\n            callback(null, res);\n          } else {\n            // 401 and 404 are expected.\n            if (xhr.status !== 401 && xhr.status !== 404) {\n              warn(\n                'Got unsuccessful REST response for ' +\n                  url +\n                  ' Status: ' +\n                  xhr.status\n              );\n            }\n            callback(xhr.status);\n          }\n          callback = null;\n        }\n      };\n\n      xhr.open('GET', url, /*asynchronous=*/ true);\n      xhr.send();\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\n\n/**\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\n */\nexport class SnapshotHolder {\n  private rootNode_: Node = ChildrenNode.EMPTY_NODE;\n\n  getNode(path: Path): Node {\n    return this.rootNode_.getChild(path);\n  }\n\n  updateSnapshot(path: Path, newSnapshotNode: Node) {\n    this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { Node } from './snap/Node';\nimport { Path, pathGetFront, pathIsEmpty, pathPopFront } from './util/Path';\n\n/**\n * Helper class to store a sparse set of snapshots.\n */\nexport interface SparseSnapshotTree {\n  value: Node | null;\n  readonly children: Map<string, SparseSnapshotTree>;\n}\n\nexport function newSparseSnapshotTree(): SparseSnapshotTree {\n  return {\n    value: null,\n    children: new Map()\n  };\n}\n\n/**\n * Gets the node stored at the given path if one exists.\n * Only seems to be used in tests.\n *\n * @param path - Path to look up snapshot for.\n * @returns The retrieved node, or null.\n */\nexport function sparseSnapshotTreeFind(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): Node | null {\n  if (sparseSnapshotTree.value != null) {\n    return sparseSnapshotTree.value.getChild(path);\n  } else if (!pathIsEmpty(path) && sparseSnapshotTree.children.size > 0) {\n    const childKey = pathGetFront(path);\n    path = pathPopFront(path);\n    if (sparseSnapshotTree.children.has(childKey)) {\n      const childTree = sparseSnapshotTree.children.get(childKey);\n      return sparseSnapshotTreeFind(childTree, path);\n    } else {\n      return null;\n    }\n  } else {\n    return null;\n  }\n}\n\n/**\n * Stores the given node at the specified path. If there is already a node\n * at a shallower path, it merges the new data into that snapshot node.\n *\n * @param path - Path to look up snapshot for.\n * @param data - The new data, or null.\n */\nexport function sparseSnapshotTreeRemember(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path,\n  data: Node\n): void {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = data;\n    sparseSnapshotTree.children.clear();\n  } else if (sparseSnapshotTree.value !== null) {\n    sparseSnapshotTree.value = sparseSnapshotTree.value.updateChild(path, data);\n  } else {\n    const childKey = pathGetFront(path);\n    if (!sparseSnapshotTree.children.has(childKey)) {\n      sparseSnapshotTree.children.set(childKey, newSparseSnapshotTree());\n    }\n\n    const child = sparseSnapshotTree.children.get(childKey);\n    path = pathPopFront(path);\n    sparseSnapshotTreeRemember(child, path, data);\n  }\n}\n\n/**\n * Purge the data at path from the cache.\n *\n * @param path - Path to look up snapshot for.\n * @returns True if this node should now be removed.\n */\nexport function sparseSnapshotTreeForget(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): boolean {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = null;\n    sparseSnapshotTree.children.clear();\n    return true;\n  } else {\n    if (sparseSnapshotTree.value !== null) {\n      if (sparseSnapshotTree.value.isLeafNode()) {\n        // We're trying to forget a node that doesn't exist\n        return false;\n      } else {\n        const value = sparseSnapshotTree.value;\n        sparseSnapshotTree.value = null;\n\n        value.forEachChild(PRIORITY_INDEX, (key, tree) => {\n          sparseSnapshotTreeRemember(sparseSnapshotTree, new Path(key), tree);\n        });\n\n        return sparseSnapshotTreeForget(sparseSnapshotTree, path);\n      }\n    } else if (sparseSnapshotTree.children.size > 0) {\n      const childKey = pathGetFront(path);\n      path = pathPopFront(path);\n      if (sparseSnapshotTree.children.has(childKey)) {\n        const safeToRemove = sparseSnapshotTreeForget(\n          sparseSnapshotTree.children.get(childKey),\n          path\n        );\n        if (safeToRemove) {\n          sparseSnapshotTree.children.delete(childKey);\n        }\n      }\n\n      return sparseSnapshotTree.children.size === 0;\n    } else {\n      return true;\n    }\n  }\n}\n\n/**\n * Recursively iterates through all of the stored tree and calls the\n * callback on each one.\n *\n * @param prefixPath - Path to look up node for.\n * @param func - The function to invoke for each tree.\n */\nexport function sparseSnapshotTreeForEachTree(\n  sparseSnapshotTree: SparseSnapshotTree,\n  prefixPath: Path,\n  func: (a: Path, b: Node) => unknown\n): void {\n  if (sparseSnapshotTree.value !== null) {\n    func(prefixPath, sparseSnapshotTree.value);\n  } else {\n    sparseSnapshotTreeForEachChild(sparseSnapshotTree, (key, tree) => {\n      const path = new Path(prefixPath.toString() + '/' + key);\n      sparseSnapshotTreeForEachTree(tree, path, func);\n    });\n  }\n}\n\n/**\n * Iterates through each immediate child and triggers the callback.\n * Only seems to be used in tests.\n *\n * @param func - The function to invoke for each child.\n */\nexport function sparseSnapshotTreeForEachChild(\n  sparseSnapshotTree: SparseSnapshotTree,\n  func: (a: string, b: SparseSnapshotTree) => void\n): void {\n  sparseSnapshotTree.children.forEach((tree, key) => {\n    func(key, tree);\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\n\n/**\n * Returns the delta from the previous call to get stats.\n *\n * @param collection_ - The collection to \"listen\" to.\n */\nexport class StatsListener {\n  private last_: { [k: string]: number } | null = null;\n\n  constructor(private collection_: StatsCollection) {}\n\n  get(): { [k: string]: number } {\n    const newStats = this.collection_.get();\n\n    const delta = { ...newStats };\n    if (this.last_) {\n      each(this.last_, (stat: string, value: number) => {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n    this.last_ = newStats;\n\n    return delta;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\nimport { ServerActions } from '../ServerActions';\nimport { setTimeoutNonBlocking, each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\nimport { StatsListener } from './StatsListener';\n\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\nconst FIRST_STATS_MIN_TIME = 10 * 1000;\nconst FIRST_STATS_MAX_TIME = 30 * 1000;\n\n// We'll continue to report stats on average every 5 minutes.\nconst REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n\nexport class StatsReporter {\n  private statsListener_: StatsListener;\n  statsToReport_: { [k: string]: boolean } = {};\n\n  constructor(collection: StatsCollection, private server_: ServerActions) {\n    this.statsListener_ = new StatsListener(collection);\n\n    const timeout =\n      FIRST_STATS_MIN_TIME +\n      (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n  }\n\n  private reportStats_() {\n    const stats = this.statsListener_.get();\n    const reportedStats: typeof stats = {};\n    let haveStatsToReport = false;\n\n    each(stats, (stat: string, value: number) => {\n      if (value > 0 && contains(this.statsToReport_, stat)) {\n        reportedStats[stat] = value;\n        haveStatsToReport = true;\n      }\n    });\n\n    if (haveStatsToReport) {\n      this.server_.reportStats(reportedStats);\n    }\n\n    // queue our next run.\n    setTimeoutNonBlocking(\n      this.reportStats_.bind(this),\n      Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL)\n    );\n  }\n}\n\nexport function statsReporterIncludeStat(\n  reporter: StatsReporter,\n  stat: string\n) {\n  reporter.statsToReport_[stat] = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\n/**\n *\n * @enum\n */\nexport enum OperationType {\n  OVERWRITE,\n  MERGE,\n  ACK_USER_WRITE,\n  LISTEN_COMPLETE\n}\n\n/**\n * @interface\n */\nexport interface Operation {\n  source: OperationSource;\n\n  type: OperationType;\n\n  path: Path;\n\n  operationForChild(childName: string): Operation | null;\n}\n\nexport interface OperationSource {\n  fromUser: boolean;\n  fromServer: boolean;\n  queryId: string | null;\n  tagged: boolean;\n}\n\nexport function newOperationSourceUser(): OperationSource {\n  return {\n    fromUser: true,\n    fromServer: false,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServer(): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServerTaggedQuery(\n  queryId: string\n): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId,\n    tagged: true\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\n\nimport { newOperationSourceUser, Operation, OperationType } from './Operation';\n\nexport class AckUserWrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.ACK_USER_WRITE;\n\n  /** @inheritDoc */\n  source = newOperationSourceUser();\n\n  /**\n   * @param affectedTree - A tree containing true for each affected path. Affected paths can't overlap.\n   */\n  constructor(\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public affectedTree: ImmutableTree<boolean>,\n    /** @inheritDoc */ public revert: boolean\n  ) {}\n  operationForChild(childName: string): AckUserWrite {\n    if (!pathIsEmpty(this.path)) {\n      assert(\n        pathGetFront(this.path) === childName,\n        'operationForChild called for unrelated child.'\n      );\n      return new AckUserWrite(\n        pathPopFront(this.path),\n        this.affectedTree,\n        this.revert\n      );\n    } else if (this.affectedTree.value != null) {\n      assert(\n        this.affectedTree.children.isEmpty(),\n        'affectedTree should not have overlapping affected paths.'\n      );\n      // All child locations are affected as well; just return same operation.\n      return this;\n    } else {\n      const childTree = this.affectedTree.subtree(new Path(childName));\n      return new AckUserWrite(newEmptyPath(), childTree, this.revert);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class ListenComplete implements Operation {\n  /** @inheritDoc */\n  type = OperationType.LISTEN_COMPLETE;\n\n  constructor(public source: OperationSource, public path: Path) {}\n\n  operationForChild(childName: string): ListenComplete {\n    if (pathIsEmpty(this.path)) {\n      return new ListenComplete(this.source, newEmptyPath());\n    } else {\n      return new ListenComplete(this.source, pathPopFront(this.path));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class Overwrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.OVERWRITE;\n\n  constructor(\n    public source: OperationSource,\n    public path: Path,\n    public snap: Node\n  ) {}\n\n  operationForChild(childName: string): Overwrite {\n    if (pathIsEmpty(this.path)) {\n      return new Overwrite(\n        this.source,\n        newEmptyPath(),\n        this.snap.getImmediateChild(childName)\n      );\n    } else {\n      return new Overwrite(this.source, pathPopFront(this.path), this.snap);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\nimport { Overwrite } from './Overwrite';\n\nexport class Merge implements Operation {\n  /** @inheritDoc */\n  type = OperationType.MERGE;\n\n  constructor(\n    /** @inheritDoc */ public source: OperationSource,\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public children: ImmutableTree<Node>\n  ) {}\n  operationForChild(childName: string): Operation {\n    if (pathIsEmpty(this.path)) {\n      const childTree = this.children.subtree(new Path(childName));\n      if (childTree.isEmpty()) {\n        // This child is unaffected\n        return null;\n      } else if (childTree.value) {\n        // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n        return new Overwrite(this.source, newEmptyPath(), childTree.value);\n      } else {\n        // This is a merge at a deeper level\n        return new Merge(this.source, newEmptyPath(), childTree);\n      }\n    } else {\n      assert(\n        pathGetFront(this.path) === childName,\n        \"Can't get a merge for a child not on the path of the operation\"\n      );\n      return new Merge(this.source, pathPopFront(this.path), this.children);\n    }\n  }\n  toString(): string {\n    return (\n      'Operation(' +\n      this.path +\n      ': ' +\n      this.source.toString() +\n      ' merge: ' +\n      this.children.toString() +\n      ')'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\n\n/**\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\n * whether a node potentially had children removed due to a filter.\n */\nexport class CacheNode {\n  constructor(\n    private node_: Node,\n    private fullyInitialized_: boolean,\n    private filtered_: boolean\n  ) {}\n\n  /**\n   * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\n   */\n  isFullyInitialized(): boolean {\n    return this.fullyInitialized_;\n  }\n\n  /**\n   * Returns whether this node is potentially missing children due to a filter applied to the node\n   */\n  isFiltered(): boolean {\n    return this.filtered_;\n  }\n\n  isCompleteForPath(path: Path): boolean {\n    if (pathIsEmpty(path)) {\n      return this.isFullyInitialized() && !this.filtered_;\n    }\n\n    const childKey = pathGetFront(path);\n    return this.isCompleteForChild(childKey);\n  }\n\n  isCompleteForChild(key: string): boolean {\n    return (\n      (this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key)\n    );\n  }\n\n  getNode(): Node {\n    return this.node_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assertionError } from '@firebase/util';\n\nimport { Index } from '../snap/indexes/Index';\nimport { NamedNode, Node } from '../snap/Node';\n\nimport { Change, ChangeType, changeChildMoved } from './Change';\nimport { Event } from './Event';\nimport { EventRegistration, QueryContext } from './EventRegistration';\n\n/**\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\n * for details.\n *\n */\nexport class EventGenerator {\n  index_: Index;\n\n  constructor(public query_: QueryContext) {\n    this.index_ = this.query_._queryParams.getIndex();\n  }\n}\n\n/**\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\n *\n * Notes:\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\n *    our index.\n *  - prevName will be calculated based on the index ordering.\n */\nexport function eventGeneratorGenerateEventsForChanges(\n  eventGenerator: EventGenerator,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistrations: EventRegistration[]\n): Event[] {\n  const events: Event[] = [];\n  const moves: Change[] = [];\n\n  changes.forEach(change => {\n    if (\n      change.type === ChangeType.CHILD_CHANGED &&\n      eventGenerator.index_.indexedValueChanged(\n        change.oldSnap as Node,\n        change.snapshotNode\n      )\n    ) {\n      moves.push(changeChildMoved(change.childName, change.snapshotNode));\n    }\n  });\n\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_REMOVED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_ADDED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_MOVED,\n    moves,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_CHANGED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.VALUE,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n\n  return events;\n}\n\n/**\n * Given changes of a single change type, generate the corresponding events.\n */\nfunction eventGeneratorGenerateEventsForType(\n  eventGenerator: EventGenerator,\n  events: Event[],\n  eventType: string,\n  changes: Change[],\n  registrations: EventRegistration[],\n  eventCache: Node\n) {\n  const filteredChanges = changes.filter(change => change.type === eventType);\n\n  filteredChanges.sort((a, b) =>\n    eventGeneratorCompareChanges(eventGenerator, a, b)\n  );\n  filteredChanges.forEach(change => {\n    const materializedChange = eventGeneratorMaterializeSingleChange(\n      eventGenerator,\n      change,\n      eventCache\n    );\n    registrations.forEach(registration => {\n      if (registration.respondsTo(change.type)) {\n        events.push(\n          registration.createEvent(materializedChange, eventGenerator.query_)\n        );\n      }\n    });\n  });\n}\n\nfunction eventGeneratorMaterializeSingleChange(\n  eventGenerator: EventGenerator,\n  change: Change,\n  eventCache: Node\n): Change {\n  if (change.type === 'value' || change.type === 'child_removed') {\n    return change;\n  } else {\n    change.prevName = eventCache.getPredecessorChildName(\n      change.childName,\n      change.snapshotNode,\n      eventGenerator.index_\n    );\n    return change;\n  }\n}\n\nfunction eventGeneratorCompareChanges(\n  eventGenerator: EventGenerator,\n  a: Change,\n  b: Change\n) {\n  if (a.childName == null || b.childName == null) {\n    throw assertionError('Should only compare child_ events.');\n  }\n  const aWrapped = new NamedNode(a.childName, a.snapshotNode);\n  const bWrapped = new NamedNode(b.childName, b.snapshotNode);\n  return eventGenerator.index_.compare(aWrapped, bWrapped);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nimport { CacheNode } from './CacheNode';\n\n/**\n * Stores the data we have cached for a view.\n *\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\n */\nexport interface ViewCache {\n  readonly eventCache: CacheNode;\n  readonly serverCache: CacheNode;\n}\n\nexport function newViewCache(\n  eventCache: CacheNode,\n  serverCache: CacheNode\n): ViewCache {\n  return { eventCache, serverCache };\n}\n\nexport function viewCacheUpdateEventSnap(\n  viewCache: ViewCache,\n  eventSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    new CacheNode(eventSnap, complete, filtered),\n    viewCache.serverCache\n  );\n}\n\nexport function viewCacheUpdateServerSnap(\n  viewCache: ViewCache,\n  serverSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    viewCache.eventCache,\n    new CacheNode(serverSnap, complete, filtered)\n  );\n}\n\nexport function viewCacheGetCompleteEventSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.eventCache.isFullyInitialized()\n    ? viewCache.eventCache.getNode()\n    : null;\n}\n\nexport function viewCacheGetCompleteServerSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.serverCache.isFullyInitialized()\n    ? viewCache.serverCache.getNode()\n    : null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './Path';\nimport { SortedMap } from './SortedMap';\nimport { each, stringCompare } from './util';\n\nlet emptyChildrenSingleton: SortedMap<string, ImmutableTree<null>>;\n\n/**\n * Singleton empty children collection.\n *\n */\nconst EmptyChildren = (): SortedMap<string, ImmutableTree<null>> => {\n  if (!emptyChildrenSingleton) {\n    emptyChildrenSingleton = new SortedMap<string, ImmutableTree<null>>(\n      stringCompare\n    );\n  }\n  return emptyChildrenSingleton;\n};\n\n/**\n * A tree with immutable elements.\n */\nexport class ImmutableTree<T> {\n  static fromObject<T>(obj: { [k: string]: T }): ImmutableTree<T> {\n    let tree: ImmutableTree<T> = new ImmutableTree<T>(null);\n    each(obj, (childPath: string, childSnap: T) => {\n      tree = tree.set(new Path(childPath), childSnap);\n    });\n    return tree;\n  }\n\n  constructor(\n    public readonly value: T | null,\n    public readonly children: SortedMap<\n      string,\n      ImmutableTree<T>\n    > = EmptyChildren()\n  ) {}\n\n  /**\n   * True if the value is empty and there are no children\n   */\n  isEmpty(): boolean {\n    return this.value === null && this.children.isEmpty();\n  }\n\n  /**\n   * Given a path and predicate, return the first node and the path to that node\n   * where the predicate returns true.\n   *\n   * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\n   * objects on the way back out, it may be better to pass down a pathSoFar obj.\n   *\n   * @param relativePath - The remainder of the path\n   * @param predicate - The predicate to satisfy to return a node\n   */\n  findRootMostMatchingPathAndValue(\n    relativePath: Path,\n    predicate: (a: T) => boolean\n  ): { path: Path; value: T } | null {\n    if (this.value != null && predicate(this.value)) {\n      return { path: newEmptyPath(), value: this.value };\n    } else {\n      if (pathIsEmpty(relativePath)) {\n        return null;\n      } else {\n        const front = pathGetFront(relativePath);\n        const child = this.children.get(front);\n        if (child !== null) {\n          const childExistingPathAndValue =\n            child.findRootMostMatchingPathAndValue(\n              pathPopFront(relativePath),\n              predicate\n            );\n          if (childExistingPathAndValue != null) {\n            const fullPath = pathChild(\n              new Path(front),\n              childExistingPathAndValue.path\n            );\n            return { path: fullPath, value: childExistingPathAndValue.value };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  /**\n   * Find, if it exists, the shortest subpath of the given path that points a defined\n   * value in the tree\n   */\n  findRootMostValueAndPath(\n    relativePath: Path\n  ): { path: Path; value: T } | null {\n    return this.findRootMostMatchingPathAndValue(relativePath, () => true);\n  }\n\n  /**\n   * @returns The subtree at the given path\n   */\n  subtree(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return this;\n    } else {\n      const front = pathGetFront(relativePath);\n      const childTree = this.children.get(front);\n      if (childTree !== null) {\n        return childTree.subtree(pathPopFront(relativePath));\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Sets a value at the specified path.\n   *\n   * @param relativePath - Path to set value at.\n   * @param toSet - Value to set.\n   * @returns Resulting tree.\n   */\n  set(relativePath: Path, toSet: T | null): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return new ImmutableTree(toSet, this.children);\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.set(pathPopFront(relativePath), toSet);\n      const newChildren = this.children.insert(front, newChild);\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Removes the value at the specified path.\n   *\n   * @param relativePath - Path to value to remove.\n   * @returns Resulting tree.\n   */\n  remove(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      if (this.children.isEmpty()) {\n        return new ImmutableTree<T>(null);\n      } else {\n        return new ImmutableTree(null, this.children);\n      }\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        const newChild = child.remove(pathPopFront(relativePath));\n        let newChildren;\n        if (newChild.isEmpty()) {\n          newChildren = this.children.remove(front);\n        } else {\n          newChildren = this.children.insert(front, newChild);\n        }\n        if (this.value === null && newChildren.isEmpty()) {\n          return new ImmutableTree<T>(null);\n        } else {\n          return new ImmutableTree(this.value, newChildren);\n        }\n      } else {\n        return this;\n      }\n    }\n  }\n\n  /**\n   * Gets a value from the tree.\n   *\n   * @param relativePath - Path to get value for.\n   * @returns Value at path, or null.\n   */\n  get(relativePath: Path): T | null {\n    if (pathIsEmpty(relativePath)) {\n      return this.value;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        return child.get(pathPopFront(relativePath));\n      } else {\n        return null;\n      }\n    }\n  }\n\n  /**\n   * Replace the subtree at the specified path with the given new tree.\n   *\n   * @param relativePath - Path to replace subtree for.\n   * @param newTree - New tree.\n   * @returns Resulting tree.\n   */\n  setTree(relativePath: Path, newTree: ImmutableTree<T>): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return newTree;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.setTree(pathPopFront(relativePath), newTree);\n      let newChildren;\n      if (newChild.isEmpty()) {\n        newChildren = this.children.remove(front);\n      } else {\n        newChildren = this.children.insert(front, newChild);\n      }\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Performs a depth first fold on this tree. Transforms a tree into a single\n   * value, given a function that operates on the path to a node, an optional\n   * current value, and a map of child names to folded subtrees\n   */\n  fold<V>(fn: (path: Path, value: T, children: { [k: string]: V }) => V): V {\n    return this.fold_(newEmptyPath(), fn);\n  }\n\n  /**\n   * Recursive helper for public-facing fold() method\n   */\n  private fold_<V>(\n    pathSoFar: Path,\n    fn: (path: Path, value: T | null, children: { [k: string]: V }) => V\n  ): V {\n    const accum: { [k: string]: V } = {};\n    this.children.inorderTraversal(\n      (childKey: string, childTree: ImmutableTree<T>) => {\n        accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\n      }\n    );\n    return fn(pathSoFar, this.value, accum);\n  }\n\n  /**\n   * Find the first matching value on the given path. Return the result of applying f to it.\n   */\n  findOnPath<V>(path: Path, f: (path: Path, value: T) => V | null): V | null {\n    return this.findOnPath_(path, newEmptyPath(), f);\n  }\n\n  private findOnPath_<V>(\n    pathToFollow: Path,\n    pathSoFar: Path,\n    f: (path: Path, value: T) => V | null\n  ): V | null {\n    const result = this.value ? f(pathSoFar, this.value) : false;\n    if (result) {\n      return result;\n    } else {\n      if (pathIsEmpty(pathToFollow)) {\n        return null;\n      } else {\n        const front = pathGetFront(pathToFollow)!;\n        const nextChild = this.children.get(front);\n        if (nextChild) {\n          return nextChild.findOnPath_(\n            pathPopFront(pathToFollow),\n            pathChild(pathSoFar, front),\n            f\n          );\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  foreachOnPath(\n    path: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    return this.foreachOnPath_(path, newEmptyPath(), f);\n  }\n\n  private foreachOnPath_(\n    pathToFollow: Path,\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    if (pathIsEmpty(pathToFollow)) {\n      return this;\n    } else {\n      if (this.value) {\n        f(currentRelativePath, this.value);\n      }\n      const front = pathGetFront(pathToFollow);\n      const nextChild = this.children.get(front);\n      if (nextChild) {\n        return nextChild.foreachOnPath_(\n          pathPopFront(pathToFollow),\n          pathChild(currentRelativePath, front),\n          f\n        );\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Calls the given function for each node in the tree that has a value.\n   *\n   * @param f - A function to be called with the path from the root of the tree to\n   * a node, and the value at that node. Called in depth-first order.\n   */\n  foreach(f: (path: Path, value: T) => void) {\n    this.foreach_(newEmptyPath(), f);\n  }\n\n  private foreach_(\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ) {\n    this.children.inorderTraversal((childName, childTree) => {\n      childTree.foreach_(pathChild(currentRelativePath, childName), f);\n    });\n    if (this.value) {\n      f(currentRelativePath, this.value);\n    }\n  }\n\n  foreachChild(f: (name: string, value: T) => void) {\n    this.children.inorderTraversal(\n      (childName: string, childTree: ImmutableTree<T>) => {\n        if (childTree.value) {\n          f(childName, childTree.value);\n        }\n      }\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathIsEmpty\n} from './util/Path';\nimport { each } from './util/util';\n\n/**\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\n * to reflect the write added.\n */\nexport class CompoundWrite {\n  constructor(public writeTree_: ImmutableTree<Node>) {}\n\n  static empty(): CompoundWrite {\n    return new CompoundWrite(new ImmutableTree(null));\n  }\n}\n\nexport function compoundWriteAddWrite(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  node: Node\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return new CompoundWrite(new ImmutableTree(node));\n  } else {\n    const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n    if (rootmost != null) {\n      const rootMostPath = rootmost.path;\n      let value = rootmost.value;\n      const relativePath = newRelativePath(rootMostPath, path);\n      value = value.updateChild(relativePath, node);\n      return new CompoundWrite(\n        compoundWrite.writeTree_.set(rootMostPath, value)\n      );\n    } else {\n      const subtree = new ImmutableTree(node);\n      const newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\n      return new CompoundWrite(newWriteTree);\n    }\n  }\n}\n\nexport function compoundWriteAddWrites(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  updates: { [name: string]: Node }\n): CompoundWrite {\n  let newWrite = compoundWrite;\n  each(updates, (childKey: string, node: Node) => {\n    newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\n  });\n  return newWrite;\n}\n\n/**\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\n * location, which must be removed by calling this method with that path.\n *\n * @param compoundWrite - The CompoundWrite to remove.\n * @param path - The path at which a write and all deeper writes should be removed\n * @returns The new CompoundWrite with the removed path\n */\nexport function compoundWriteRemoveWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return CompoundWrite.empty();\n  } else {\n    const newWriteTree = compoundWrite.writeTree_.setTree(\n      path,\n      new ImmutableTree<Node>(null)\n    );\n    return new CompoundWrite(newWriteTree);\n  }\n}\n\n/**\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\n * considered \"complete\".\n *\n * @param compoundWrite - The CompoundWrite to check.\n * @param path - The path to check for\n * @returns Whether there is a complete write at that path\n */\nexport function compoundWriteHasCompleteWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): boolean {\n  return compoundWriteGetCompleteNode(compoundWrite, path) != null;\n}\n\n/**\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\n * writes from deeper paths, but will return child nodes from a more shallow path.\n *\n * @param compoundWrite - The CompoundWrite to get the node from.\n * @param path - The path to get a complete write\n * @returns The node if complete at that path, or null otherwise.\n */\nexport function compoundWriteGetCompleteNode(\n  compoundWrite: CompoundWrite,\n  path: Path\n): Node | null {\n  const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n  if (rootmost != null) {\n    return compoundWrite.writeTree_\n      .get(rootmost.path)\n      .getChild(newRelativePath(rootmost.path, path));\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns all children that are guaranteed to be a complete overwrite.\n *\n * @param compoundWrite - The CompoundWrite to get children from.\n * @returns A list of all complete children.\n */\nexport function compoundWriteGetCompleteChildren(\n  compoundWrite: CompoundWrite\n): NamedNode[] {\n  const children: NamedNode[] = [];\n  const node = compoundWrite.writeTree_.value;\n  if (node != null) {\n    // If it's a leaf node, it has no children; so nothing to do.\n    if (!node.isLeafNode()) {\n      (node as ChildrenNode).forEachChild(\n        PRIORITY_INDEX,\n        (childName, childNode) => {\n          children.push(new NamedNode(childName, childNode));\n        }\n      );\n    }\n  } else {\n    compoundWrite.writeTree_.children.inorderTraversal(\n      (childName, childTree) => {\n        if (childTree.value != null) {\n          children.push(new NamedNode(childName, childTree.value));\n        }\n      }\n    );\n  }\n  return children;\n}\n\nexport function compoundWriteChildCompoundWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return compoundWrite;\n  } else {\n    const shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\n    if (shadowingNode != null) {\n      return new CompoundWrite(new ImmutableTree(shadowingNode));\n    } else {\n      return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\n    }\n  }\n}\n\n/**\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\n * @returns Whether this CompoundWrite is empty\n */\nexport function compoundWriteIsEmpty(compoundWrite: CompoundWrite): boolean {\n  return compoundWrite.writeTree_.isEmpty();\n}\n\n/**\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\n * node\n * @param node - The node to apply this CompoundWrite to\n * @returns The node with all writes applied\n */\nexport function compoundWriteApply(\n  compoundWrite: CompoundWrite,\n  node: Node\n): Node {\n  return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\n}\n\nfunction applySubtreeWrite(\n  relativePath: Path,\n  writeTree: ImmutableTree<Node>,\n  node: Node\n): Node {\n  if (writeTree.value != null) {\n    // Since there a write is always a leaf, we're done here\n    return node.updateChild(relativePath, writeTree.value);\n  } else {\n    let priorityWrite = null;\n    writeTree.children.inorderTraversal((childKey, childTree) => {\n      if (childKey === '.priority') {\n        // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n        // to apply priorities to empty nodes that are later filled\n        assert(\n          childTree.value !== null,\n          'Priority writes must always be leaf nodes'\n        );\n        priorityWrite = childTree.value;\n      } else {\n        node = applySubtreeWrite(\n          pathChild(relativePath, childKey),\n          childTree,\n          node\n        );\n      }\n    });\n    // If there was a priority write, we only apply it if the node is not empty\n    if (!node.getChild(relativePath).isEmpty() && priorityWrite !== null) {\n      node = node.updateChild(\n        pathChild(relativePath, '.priority'),\n        priorityWrite\n      );\n    }\n    return node;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError, safeGet } from '@firebase/util';\n\nimport {\n  CompoundWrite,\n  compoundWriteAddWrite,\n  compoundWriteAddWrites,\n  compoundWriteApply,\n  compoundWriteChildCompoundWrite,\n  compoundWriteGetCompleteChildren,\n  compoundWriteGetCompleteNode,\n  compoundWriteHasCompleteWrite,\n  compoundWriteIsEmpty,\n  compoundWriteRemoveWrite\n} from './CompoundWrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Index } from './snap/indexes/Index';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathContains,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './util/Path';\nimport { each } from './util/util';\nimport { CacheNode } from './view/CacheNode';\n\n/**\n * Defines a single user-initiated write operation. May be the result of a set(), transaction(), or update() call. In\n * the case of a set() or transaction, snap wil be non-null.  In the case of an update(), children will be non-null.\n */\nexport interface WriteRecord {\n  writeId: number;\n  path: Path;\n  snap?: Node | null;\n  children?: { [k: string]: Node } | null;\n  visible: boolean;\n}\n\n/**\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\n *\n */\nexport function writeTreeChildWrites(\n  writeTree: WriteTree,\n  path: Path\n): WriteTreeRef {\n  return newWriteTreeRef(path, writeTree);\n}\n\n/**\n * Record a new overwrite from user code.\n *\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\n */\nexport function writeTreeAddOverwrite(\n  writeTree: WriteTree,\n  path: Path,\n  snap: Node,\n  writeId: number,\n  visible?: boolean\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older write on top of newer ones'\n  );\n  if (visible === undefined) {\n    visible = true;\n  }\n  writeTree.allWrites.push({\n    path,\n    snap,\n    writeId,\n    visible\n  });\n\n  if (visible) {\n    writeTree.visibleWrites = compoundWriteAddWrite(\n      writeTree.visibleWrites,\n      path,\n      snap\n    );\n  }\n  writeTree.lastWriteId = writeId;\n}\n\n/**\n * Record a new merge from user code.\n */\nexport function writeTreeAddMerge(\n  writeTree: WriteTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older merge on top of newer ones'\n  );\n  writeTree.allWrites.push({\n    path,\n    children: changedChildren,\n    writeId,\n    visible: true\n  });\n\n  writeTree.visibleWrites = compoundWriteAddWrites(\n    writeTree.visibleWrites,\n    path,\n    changedChildren\n  );\n  writeTree.lastWriteId = writeId;\n}\n\nexport function writeTreeGetWrite(\n  writeTree: WriteTree,\n  writeId: number\n): WriteRecord | null {\n  for (let i = 0; i < writeTree.allWrites.length; i++) {\n    const record = writeTree.allWrites[i];\n    if (record.writeId === writeId) {\n      return record;\n    }\n  }\n  return null;\n}\n\n/**\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\n *\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\n * events as a result).\n */\nexport function writeTreeRemoveWrite(\n  writeTree: WriteTree,\n  writeId: number\n): boolean {\n  // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n  // out of order.\n  //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n  //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n\n  const idx = writeTree.allWrites.findIndex(s => {\n    return s.writeId === writeId;\n  });\n  assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n  const writeToRemove = writeTree.allWrites[idx];\n  writeTree.allWrites.splice(idx, 1);\n\n  let removedWriteWasVisible = writeToRemove.visible;\n  let removedWriteOverlapsWithOtherWrites = false;\n\n  let i = writeTree.allWrites.length - 1;\n\n  while (removedWriteWasVisible && i >= 0) {\n    const currentWrite = writeTree.allWrites[i];\n    if (currentWrite.visible) {\n      if (\n        i >= idx &&\n        writeTreeRecordContainsPath_(currentWrite, writeToRemove.path)\n      ) {\n        // The removed write was completely shadowed by a subsequent write.\n        removedWriteWasVisible = false;\n      } else if (pathContains(writeToRemove.path, currentWrite.path)) {\n        // Either we're covering some writes or they're covering part of us (depending on which came first).\n        removedWriteOverlapsWithOtherWrites = true;\n      }\n    }\n    i--;\n  }\n\n  if (!removedWriteWasVisible) {\n    return false;\n  } else if (removedWriteOverlapsWithOtherWrites) {\n    // There's some shadowing going on. Just rebuild the visible writes from scratch.\n    writeTreeResetTree_(writeTree);\n    return true;\n  } else {\n    // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n    if (writeToRemove.snap) {\n      writeTree.visibleWrites = compoundWriteRemoveWrite(\n        writeTree.visibleWrites,\n        writeToRemove.path\n      );\n    } else {\n      const children = writeToRemove.children;\n      each(children, (childName: string) => {\n        writeTree.visibleWrites = compoundWriteRemoveWrite(\n          writeTree.visibleWrites,\n          pathChild(writeToRemove.path, childName)\n        );\n      });\n    }\n    return true;\n  }\n}\n\nfunction writeTreeRecordContainsPath_(\n  writeRecord: WriteRecord,\n  path: Path\n): boolean {\n  if (writeRecord.snap) {\n    return pathContains(writeRecord.path, path);\n  } else {\n    for (const childName in writeRecord.children) {\n      if (\n        writeRecord.children.hasOwnProperty(childName) &&\n        pathContains(pathChild(writeRecord.path, childName), path)\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n/**\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\n */\nfunction writeTreeResetTree_(writeTree: WriteTree) {\n  writeTree.visibleWrites = writeTreeLayerTree_(\n    writeTree.allWrites,\n    writeTreeDefaultFilter_,\n    newEmptyPath()\n  );\n  if (writeTree.allWrites.length > 0) {\n    writeTree.lastWriteId =\n      writeTree.allWrites[writeTree.allWrites.length - 1].writeId;\n  } else {\n    writeTree.lastWriteId = -1;\n  }\n}\n\n/**\n * The default filter used when constructing the tree. Keep everything that's visible.\n */\nfunction writeTreeDefaultFilter_(write: WriteRecord) {\n  return write.visible;\n}\n\n/**\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\n * event data at that path.\n */\nfunction writeTreeLayerTree_(\n  writes: WriteRecord[],\n  filter: (w: WriteRecord) => boolean,\n  treeRoot: Path\n): CompoundWrite {\n  let compoundWrite = CompoundWrite.empty();\n  for (let i = 0; i < writes.length; ++i) {\n    const write = writes[i];\n    // Theory, a later set will either:\n    // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n    // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n    if (filter(write)) {\n      const writePath = write.path;\n      let relativePath: Path;\n      if (write.snap) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            relativePath,\n            write.snap\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            newEmptyPath(),\n            write.snap.getChild(relativePath)\n          );\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else if (write.children) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrites(\n            compoundWrite,\n            relativePath,\n            write.children\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          if (pathIsEmpty(relativePath)) {\n            compoundWrite = compoundWriteAddWrites(\n              compoundWrite,\n              newEmptyPath(),\n              write.children\n            );\n          } else {\n            const child = safeGet(write.children, pathGetFront(relativePath));\n            if (child) {\n              // There exists a child in this node that matches the root path\n              const deepNode = child.getChild(pathPopFront(relativePath));\n              compoundWrite = compoundWriteAddWrite(\n                compoundWrite,\n                newEmptyPath(),\n                deepNode\n              );\n            }\n          }\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else {\n        throw assertionError('WriteRecord should have .snap or .children');\n      }\n    }\n  }\n  return compoundWrite;\n}\n\n/**\n * Return a complete snapshot for the given path if there's visible write data at that path, else null.\n * No server data is considered.\n *\n */\nexport function writeTreeGetCompleteWriteData(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\n * writes), attempt to calculate a complete snapshot for the given path\n *\n * @param writeIdsToExclude - An optional set to be excluded\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeCalcCompleteEventCache(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  if (!writeIdsToExclude && !includeHiddenWrites) {\n    const shadowingNode = compoundWriteGetCompleteNode(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (shadowingNode != null) {\n      return shadowingNode;\n    } else {\n      const subMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        treePath\n      );\n      if (compoundWriteIsEmpty(subMerge)) {\n        return completeServerCache;\n      } else if (\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())\n      ) {\n        // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n        return null;\n      } else {\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(subMerge, layeredCache);\n      }\n    }\n  } else {\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\n      return completeServerCache;\n    } else {\n      // If the server cache is null, and we don't have a complete cache, we need to return null\n      if (\n        !includeHiddenWrites &&\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(merge, newEmptyPath())\n      ) {\n        return null;\n      } else {\n        const filter = function (write: WriteRecord) {\n          return (\n            (write.visible || includeHiddenWrites) &&\n            (!writeIdsToExclude ||\n              !~writeIdsToExclude.indexOf(write.writeId)) &&\n            (pathContains(write.path, treePath) ||\n              pathContains(treePath, write.path))\n          );\n        };\n        const mergeAtPath = writeTreeLayerTree_(\n          writeTree.allWrites,\n          filter,\n          treePath\n        );\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(mergeAtPath, layeredCache);\n      }\n    }\n  }\n}\n\n/**\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\n * Used when creating new views, to pre-fill their complete event children snapshot.\n */\nexport function writeTreeCalcCompleteEventChildren(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerChildren: ChildrenNode | null\n) {\n  let completeChildren = ChildrenNode.EMPTY_NODE as Node;\n  const topLevelSet = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    treePath\n  );\n  if (topLevelSet) {\n    if (!topLevelSet.isLeafNode()) {\n      // we're shadowing everything. Return the children.\n      topLevelSet.forEachChild(PRIORITY_INDEX, (childName, childSnap) => {\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          childSnap\n        );\n      });\n    }\n    return completeChildren;\n  } else if (completeServerChildren) {\n    // Layer any children we have on top of this\n    // We know we don't have a top-level set, so just enumerate existing children\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    completeServerChildren.forEachChild(\n      PRIORITY_INDEX,\n      (childName, childNode) => {\n        const node = compoundWriteApply(\n          compoundWriteChildCompoundWrite(merge, new Path(childName)),\n          childNode\n        );\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          node\n        );\n      }\n    );\n    // Add any complete children we have from the set\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  } else {\n    // We don't have anything to layer on top of. Layer on any children we have\n    // Note that we can return an empty snap if we have a defined delete\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  }\n}\n\n/**\n * Given that the underlying server data has updated, determine what, if anything, needs to be\n * applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events\n *\n * Either existingEventSnap or existingServerSnap must exist\n */\nexport function writeTreeCalcEventCacheAfterServerOverwrite(\n  writeTree: WriteTree,\n  treePath: Path,\n  childPath: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  assert(\n    existingEventSnap || existingServerSnap,\n    'Either existingEventSnap or existingServerSnap must exist'\n  );\n  const path = pathChild(treePath, childPath);\n  if (compoundWriteHasCompleteWrite(writeTree.visibleWrites, path)) {\n    // At this point we can probably guarantee that we're in case 2, meaning no events\n    // May need to check visibility while doing the findRootMostValueAndPath call\n    return null;\n  } else {\n    // No complete shadowing. We're either partially shadowing or not shadowing at all.\n    const childMerge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      path\n    );\n    if (compoundWriteIsEmpty(childMerge)) {\n      // We're not shadowing at all. Case 1\n      return existingServerSnap.getChild(childPath);\n    } else {\n      // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n      // However this is tricky to find out, since user updates don't necessary change the server\n      // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n      // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n      // only check if the updates change the serverNode.\n      // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getChild(childPath)\n      );\n    }\n  }\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeCalcCompleteChild(\n  writeTree: WriteTree,\n  treePath: Path,\n  childKey: string,\n  existingServerSnap: CacheNode\n): Node | null {\n  const path = pathChild(treePath, childKey);\n  const shadowingNode = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    path\n  );\n  if (shadowingNode != null) {\n    return shadowingNode;\n  } else {\n    if (existingServerSnap.isCompleteForChild(childKey)) {\n      const childMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        path\n      );\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getNode().getImmediateChild(childKey)\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n */\nexport function writeTreeShadowingWrite(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window.\n */\nexport function writeTreeCalcIndexedSlice(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  let toIterate: Node;\n  const merge = compoundWriteChildCompoundWrite(\n    writeTree.visibleWrites,\n    treePath\n  );\n  const shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\n  if (shadowingNode != null) {\n    toIterate = shadowingNode;\n  } else if (completeServerData != null) {\n    toIterate = compoundWriteApply(merge, completeServerData);\n  } else {\n    // no children to iterate on\n    return [];\n  }\n  toIterate = toIterate.withIndex(index);\n  if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n    const nodes = [];\n    const cmp = index.getCompare();\n    const iter = reverse\n      ? (toIterate as ChildrenNode).getReverseIteratorFrom(startPost, index)\n      : (toIterate as ChildrenNode).getIteratorFrom(startPost, index);\n    let next = iter.getNext();\n    while (next && nodes.length < count) {\n      if (cmp(next, startPost) !== 0) {\n        nodes.push(next);\n      }\n      next = iter.getNext();\n    }\n    return nodes;\n  } else {\n    return [];\n  }\n}\n\nexport function newWriteTree(): WriteTree {\n  return {\n    visibleWrites: CompoundWrite.empty(),\n    allWrites: [],\n    lastWriteId: -1\n  };\n}\n\n/**\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\n * and addMerge(), and removed with removeWrite().\n */\nexport interface WriteTree {\n  /**\n   * A tree tracking the result of applying all visible writes.  This does not include transactions with\n   * applyLocally=false or writes that are completely shadowed by other writes.\n   */\n  visibleWrites: CompoundWrite;\n\n  /**\n   * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\n   * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\n   * used by transactions).\n   */\n  allWrites: WriteRecord[];\n\n  lastWriteId: number;\n}\n\n/**\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\n * can lead to a more expensive calculation.\n *\n * @param writeIdsToExclude - Optional writes to exclude.\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeRefCalcCompleteEventCache(\n  writeTreeRef: WriteTreeRef,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  return writeTreeCalcCompleteEventCache(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerCache,\n    writeIdsToExclude,\n    includeHiddenWrites\n  );\n}\n\n/**\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\n * mix of the given server data and write data.\n *\n */\nexport function writeTreeRefCalcCompleteEventChildren(\n  writeTreeRef: WriteTreeRef,\n  completeServerChildren: ChildrenNode | null\n): ChildrenNode {\n  return writeTreeCalcCompleteEventChildren(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerChildren\n  ) as ChildrenNode;\n}\n\n/**\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\n * if anything, needs to be applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events should be raised\n *\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\n *\n *\n */\nexport function writeTreeRefCalcEventCacheAfterServerOverwrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  return writeTreeCalcEventCacheAfterServerOverwrite(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    path,\n    existingEventSnap,\n    existingServerSnap\n  );\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n *\n */\nexport function writeTreeRefShadowingWrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path\n): Node | null {\n  return writeTreeShadowingWrite(\n    writeTreeRef.writeTree,\n    pathChild(writeTreeRef.treePath, path)\n  );\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window\n */\nexport function writeTreeRefCalcIndexedSlice(\n  writeTreeRef: WriteTreeRef,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  return writeTreeCalcIndexedSlice(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerData,\n    startPost,\n    count,\n    reverse,\n    index\n  );\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeRefCalcCompleteChild(\n  writeTreeRef: WriteTreeRef,\n  childKey: string,\n  existingServerCache: CacheNode\n): Node | null {\n  return writeTreeCalcCompleteChild(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    childKey,\n    existingServerCache\n  );\n}\n\n/**\n * Return a WriteTreeRef for a child.\n */\nexport function writeTreeRefChild(\n  writeTreeRef: WriteTreeRef,\n  childName: string\n): WriteTreeRef {\n  return newWriteTreeRef(\n    pathChild(writeTreeRef.treePath, childName),\n    writeTreeRef.writeTree\n  );\n}\n\nexport function newWriteTreeRef(\n  path: Path,\n  writeTree: WriteTree\n): WriteTreeRef {\n  return {\n    treePath: path,\n    writeTree\n  };\n}\n\n/**\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\n * just proxy to the underlying WriteTree.\n *\n */\nexport interface WriteTreeRef {\n  /**\n   * The path to this particular write tree ref. Used for calling methods on writeTree_ while exposing a simpler\n   * interface to callers.\n   */\n  readonly treePath: Path;\n\n  /**\n   * * A reference to the actual tree of write data. All methods are pass-through to the tree, but with the appropriate\n   * path prefixed.\n   *\n   * This lets us make cheap references to points in the tree for sync points without having to copy and maintain all of\n   * the data.\n   */\n  readonly writeTree: WriteTree;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport {\n  Change,\n  ChangeType,\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from './Change';\n\nexport class ChildChangeAccumulator {\n  private readonly changeMap: Map<string, Change> = new Map();\n\n  trackChildChange(change: Change) {\n    const type = change.type;\n    const childKey = change.childName!;\n    assert(\n      type === ChangeType.CHILD_ADDED ||\n        type === ChangeType.CHILD_CHANGED ||\n        type === ChangeType.CHILD_REMOVED,\n      'Only child changes supported for tracking'\n    );\n    assert(\n      childKey !== '.priority',\n      'Only non-priority child changes can be tracked.'\n    );\n    const oldChange = this.changeMap.get(childKey);\n    if (oldChange) {\n      const oldType = oldChange.type;\n      if (\n        type === ChangeType.CHILD_ADDED &&\n        oldType === ChangeType.CHILD_REMOVED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildChanged(\n            childKey,\n            change.snapshotNode,\n            oldChange.snapshotNode\n          )\n        );\n      } else if (\n        type === ChangeType.CHILD_REMOVED &&\n        oldType === ChangeType.CHILD_ADDED\n      ) {\n        this.changeMap.delete(childKey);\n      } else if (\n        type === ChangeType.CHILD_REMOVED &&\n        oldType === ChangeType.CHILD_CHANGED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildRemoved(childKey, oldChange.oldSnap)\n        );\n      } else if (\n        type === ChangeType.CHILD_CHANGED &&\n        oldType === ChangeType.CHILD_ADDED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildAdded(childKey, change.snapshotNode)\n        );\n      } else if (\n        type === ChangeType.CHILD_CHANGED &&\n        oldType === ChangeType.CHILD_CHANGED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildChanged(childKey, change.snapshotNode, oldChange.oldSnap)\n        );\n      } else {\n        throw assertionError(\n          'Illegal combination of changes: ' +\n            change +\n            ' occurred after ' +\n            oldChange\n        );\n      }\n    } else {\n      this.changeMap.set(childKey, change);\n    }\n  }\n\n  getChanges(): Change[] {\n    return Array.from(this.changeMap.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Index } from '../snap/indexes/Index';\nimport { NamedNode, Node } from '../snap/Node';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcIndexedSlice\n} from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { ViewCache, viewCacheGetCompleteServerSnap } from './ViewCache';\n\n/**\n * Since updates to filtered nodes might require nodes to be pulled in from \"outside\" the node, this interface\n * can help to get complete children that can be pulled in.\n * A class implementing this interface takes potentially multiple sources (e.g. user writes, server data from\n * other views etc.) to try it's best to get a complete child that might be useful in pulling into the view.\n *\n * @interface\n */\nexport interface CompleteChildSource {\n  getCompleteChild(childKey: string): Node | null;\n\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null;\n}\n\n/**\n * An implementation of CompleteChildSource that never returns any additional children\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport class NoCompleteChildSource_ implements CompleteChildSource {\n  getCompleteChild(childKey?: string): Node | null {\n    return null;\n  }\n  getChildAfterChild(\n    index?: Index,\n    child?: NamedNode,\n    reverse?: boolean\n  ): NamedNode | null {\n    return null;\n  }\n}\n\n/**\n * Singleton instance.\n */\nexport const NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n\n/**\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\n * old event caches available to calculate complete children.\n */\nexport class WriteTreeCompleteChildSource implements CompleteChildSource {\n  constructor(\n    private writes_: WriteTreeRef,\n    private viewCache_: ViewCache,\n    private optCompleteServerCache_: Node | null = null\n  ) {}\n  getCompleteChild(childKey: string): Node | null {\n    const node = this.viewCache_.eventCache;\n    if (node.isCompleteForChild(childKey)) {\n      return node.getNode().getImmediateChild(childKey);\n    } else {\n      const serverNode =\n        this.optCompleteServerCache_ != null\n          ? new CacheNode(this.optCompleteServerCache_, true, false)\n          : this.viewCache_.serverCache;\n      return writeTreeRefCalcCompleteChild(this.writes_, childKey, serverNode);\n    }\n  }\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null {\n    const completeServerData =\n      this.optCompleteServerCache_ != null\n        ? this.optCompleteServerCache_\n        : viewCacheGetCompleteServerSnap(this.viewCache_);\n    const nodes = writeTreeRefCalcIndexedSlice(\n      this.writes_,\n      completeServerData,\n      child,\n      1,\n      reverse,\n      index\n    );\n    if (nodes.length === 0) {\n      return null;\n    } else {\n      return nodes[0];\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { AckUserWrite } from '../operation/AckUserWrite';\nimport { Merge } from '../operation/Merge';\nimport { Operation, OperationType } from '../operation/Operation';\nimport { Overwrite } from '../operation/Overwrite';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetBack,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathParent,\n  pathPopFront\n} from '../util/Path';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren,\n  writeTreeRefCalcEventCacheAfterServerOverwrite,\n  writeTreeRefShadowingWrite\n} from '../WriteTree';\n\nimport { Change, changeValue } from './Change';\nimport { ChildChangeAccumulator } from './ChildChangeAccumulator';\nimport {\n  CompleteChildSource,\n  NO_COMPLETE_CHILD_SOURCE,\n  WriteTreeCompleteChildSource\n} from './CompleteChildSource';\nimport { NodeFilter } from './filter/NodeFilter';\nimport {\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap,\n  viewCacheUpdateEventSnap,\n  viewCacheUpdateServerSnap\n} from './ViewCache';\n\nexport interface ProcessorResult {\n  readonly viewCache: ViewCache;\n  readonly changes: Change[];\n}\n\nexport interface ViewProcessor {\n  readonly filter: NodeFilter;\n}\n\nexport function newViewProcessor(filter: NodeFilter): ViewProcessor {\n  return { filter };\n}\n\nexport function viewProcessorAssertIndexed(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache\n): void {\n  assert(\n    viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Event snap not indexed'\n  );\n  assert(\n    viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Server snap not indexed'\n  );\n}\n\nexport function viewProcessorApplyOperation(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null\n): ProcessorResult {\n  const accumulator = new ChildChangeAccumulator();\n  let newViewCache, filterServerNode;\n  if (operation.type === OperationType.OVERWRITE) {\n    const overwrite = operation as Overwrite;\n    if (overwrite.source.fromUser) {\n      newViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(overwrite.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered  and the\n      // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n      // again\n      filterServerNode =\n        overwrite.source.tagged ||\n        (oldViewCache.serverCache.isFiltered() && !pathIsEmpty(overwrite.path));\n      newViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.MERGE) {\n    const merge = operation as Merge;\n    if (merge.source.fromUser) {\n      newViewCache = viewProcessorApplyUserMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(merge.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered\n      filterServerNode =\n        merge.source.tagged || oldViewCache.serverCache.isFiltered();\n      newViewCache = viewProcessorApplyServerMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.ACK_USER_WRITE) {\n    const ackUserWrite = operation as AckUserWrite;\n    if (!ackUserWrite.revert) {\n      newViewCache = viewProcessorAckUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        ackUserWrite.affectedTree,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      newViewCache = viewProcessorRevertUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.LISTEN_COMPLETE) {\n    newViewCache = viewProcessorListenComplete(\n      viewProcessor,\n      oldViewCache,\n      operation.path,\n      writesCache,\n      accumulator\n    );\n  } else {\n    throw assertionError('Unknown operation type: ' + operation.type);\n  }\n  const changes = accumulator.getChanges();\n  viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, changes);\n  return { viewCache: newViewCache, changes };\n}\n\nfunction viewProcessorMaybeAddValueEvent(\n  oldViewCache: ViewCache,\n  newViewCache: ViewCache,\n  accumulator: Change[]\n): void {\n  const eventSnap = newViewCache.eventCache;\n  if (eventSnap.isFullyInitialized()) {\n    const isLeafOrEmpty =\n      eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n    const oldCompleteSnap = viewCacheGetCompleteEventSnap(oldViewCache);\n    if (\n      accumulator.length > 0 ||\n      !oldViewCache.eventCache.isFullyInitialized() ||\n      (isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap)) ||\n      !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())\n    ) {\n      accumulator.push(\n        changeValue(viewCacheGetCompleteEventSnap(newViewCache))\n      );\n    }\n  }\n}\n\nfunction viewProcessorGenerateEventCacheAfterServerEvent(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  changePath: Path,\n  writesCache: WriteTreeRef,\n  source: CompleteChildSource,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = viewCache.eventCache;\n  if (writeTreeRefShadowingWrite(writesCache, changePath) != null) {\n    // we have a shadowing write, ignore changes\n    return viewCache;\n  } else {\n    let newEventCache, serverNode;\n    if (pathIsEmpty(changePath)) {\n      // TODO: figure out how this plays with \"sliding ack windows\"\n      assert(\n        viewCache.serverCache.isFullyInitialized(),\n        'If change path is empty, we must have complete server data'\n      );\n      if (viewCache.serverCache.isFiltered()) {\n        // We need to special case this, because we need to only apply writes to complete children, or\n        // we might end up raising events for incomplete children. If the server data is filtered deep\n        // writes cannot be guaranteed to be complete\n        const serverCache = viewCacheGetCompleteServerSnap(viewCache);\n        const completeChildren =\n          serverCache instanceof ChildrenNode\n            ? serverCache\n            : ChildrenNode.EMPTY_NODE;\n        const completeEventChildren = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          completeChildren\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeEventChildren,\n          accumulator\n        );\n      } else {\n        const completeNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeNode,\n          accumulator\n        );\n      }\n    } else {\n      const childKey = pathGetFront(changePath);\n      if (childKey === '.priority') {\n        assert(\n          pathGetLength(changePath) === 1,\n          \"Can't have a priority with additional path components\"\n        );\n        const oldEventNode = oldEventSnap.getNode();\n        serverNode = viewCache.serverCache.getNode();\n        // we might have overwrites for this priority\n        const updatedPriority = writeTreeRefCalcEventCacheAfterServerOverwrite(\n          writesCache,\n          changePath,\n          oldEventNode,\n          serverNode\n        );\n        if (updatedPriority != null) {\n          newEventCache = viewProcessor.filter.updatePriority(\n            oldEventNode,\n            updatedPriority\n          );\n        } else {\n          // priority didn't change, keep old node\n          newEventCache = oldEventSnap.getNode();\n        }\n      } else {\n        const childChangePath = pathPopFront(changePath);\n        // update child\n        let newEventChild;\n        if (oldEventSnap.isCompleteForChild(childKey)) {\n          serverNode = viewCache.serverCache.getNode();\n          const eventChildUpdate =\n            writeTreeRefCalcEventCacheAfterServerOverwrite(\n              writesCache,\n              changePath,\n              oldEventSnap.getNode(),\n              serverNode\n            );\n          if (eventChildUpdate != null) {\n            newEventChild = oldEventSnap\n              .getNode()\n              .getImmediateChild(childKey)\n              .updateChild(childChangePath, eventChildUpdate);\n          } else {\n            // Nothing changed, just keep the old child\n            newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\n          }\n        } else {\n          newEventChild = writeTreeRefCalcCompleteChild(\n            writesCache,\n            childKey,\n            viewCache.serverCache\n          );\n        }\n        if (newEventChild != null) {\n          newEventCache = viewProcessor.filter.updateChild(\n            oldEventSnap.getNode(),\n            childKey,\n            newEventChild,\n            childChangePath,\n            source,\n            accumulator\n          );\n        } else {\n          // no complete child available or no change\n          newEventCache = oldEventSnap.getNode();\n        }\n      }\n    }\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath),\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n\nfunction viewProcessorApplyServerOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerSnap = oldViewCache.serverCache;\n  let newServerCache;\n  const serverFilter = filterServerNode\n    ? viewProcessor.filter\n    : viewProcessor.filter.getIndexedFilter();\n  if (pathIsEmpty(changePath)) {\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      changedSnap,\n      null\n    );\n  } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n    // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n    const newServerNode = oldServerSnap\n      .getNode()\n      .updateChild(changePath, changedSnap);\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      newServerNode,\n      null\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (\n      !oldServerSnap.isCompleteForPath(changePath) &&\n      pathGetLength(changePath) > 1\n    ) {\n      // We don't update incomplete nodes with updates intended for other listeners\n      return oldViewCache;\n    }\n    const childChangePath = pathPopFront(changePath);\n    const childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n    const newChildNode = childNode.updateChild(childChangePath, changedSnap);\n    if (childKey === '.priority') {\n      newServerCache = serverFilter.updatePriority(\n        oldServerSnap.getNode(),\n        newChildNode\n      );\n    } else {\n      newServerCache = serverFilter.updateChild(\n        oldServerSnap.getNode(),\n        childKey,\n        newChildNode,\n        childChangePath,\n        NO_COMPLETE_CHILD_SOURCE,\n        null\n      );\n    }\n  }\n  const newViewCache = viewCacheUpdateServerSnap(\n    oldViewCache,\n    newServerCache,\n    oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath),\n    serverFilter.filtersNodes()\n  );\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    newViewCache,\n    completeCache\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    changePath,\n    writesCache,\n    source,\n    accumulator\n  );\n}\n\nfunction viewProcessorApplyUserOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = oldViewCache.eventCache;\n  let newViewCache, newEventCache;\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    oldViewCache,\n    completeCache\n  );\n  if (pathIsEmpty(changePath)) {\n    newEventCache = viewProcessor.filter.updateFullNode(\n      oldViewCache.eventCache.getNode(),\n      changedSnap,\n      accumulator\n    );\n    newViewCache = viewCacheUpdateEventSnap(\n      oldViewCache,\n      newEventCache,\n      true,\n      viewProcessor.filter.filtersNodes()\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (childKey === '.priority') {\n      newEventCache = viewProcessor.filter.updatePriority(\n        oldViewCache.eventCache.getNode(),\n        changedSnap\n      );\n      newViewCache = viewCacheUpdateEventSnap(\n        oldViewCache,\n        newEventCache,\n        oldEventSnap.isFullyInitialized(),\n        oldEventSnap.isFiltered()\n      );\n    } else {\n      const childChangePath = pathPopFront(changePath);\n      const oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n      let newChild;\n      if (pathIsEmpty(childChangePath)) {\n        // Child overwrite, we can replace the child\n        newChild = changedSnap;\n      } else {\n        const childNode = source.getCompleteChild(childKey);\n        if (childNode != null) {\n          if (\n            pathGetBack(childChangePath) === '.priority' &&\n            childNode.getChild(pathParent(childChangePath)).isEmpty()\n          ) {\n            // This is a priority update on an empty node. If this node exists on the server, the\n            // server will send down the priority in the update, so ignore for now\n            newChild = childNode;\n          } else {\n            newChild = childNode.updateChild(childChangePath, changedSnap);\n          }\n        } else {\n          // There is no complete child node available\n          newChild = ChildrenNode.EMPTY_NODE;\n        }\n      }\n      if (!oldChild.equals(newChild)) {\n        const newEventSnap = viewProcessor.filter.updateChild(\n          oldEventSnap.getNode(),\n          childKey,\n          newChild,\n          childChangePath,\n          source,\n          accumulator\n        );\n        newViewCache = viewCacheUpdateEventSnap(\n          oldViewCache,\n          newEventSnap,\n          oldEventSnap.isFullyInitialized(),\n          viewProcessor.filter.filtersNodes()\n        );\n      } else {\n        newViewCache = oldViewCache;\n      }\n    }\n  }\n  return newViewCache;\n}\n\nfunction viewProcessorCacheHasChild(\n  viewCache: ViewCache,\n  childKey: string\n): boolean {\n  return viewCache.eventCache.isCompleteForChild(childKey);\n}\n\nfunction viewProcessorApplyUserMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (!viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorApplyMerge(\n  viewProcessor: ViewProcessor,\n  node: Node,\n  merge: ImmutableTree<Node>\n): Node {\n  merge.foreach((relativePath, childNode) => {\n    node = node.updateChild(relativePath, childNode);\n  });\n  return node;\n}\n\nfunction viewProcessorApplyServerMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n  // wait for the complete data update coming soon.\n  if (\n    viewCache.serverCache.getNode().isEmpty() &&\n    !viewCache.serverCache.isFullyInitialized()\n  ) {\n    return viewCache;\n  }\n\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  let viewMergeTree: ImmutableTree<Node>;\n  if (pathIsEmpty(path)) {\n    viewMergeTree = changedChildren;\n  } else {\n    viewMergeTree = new ImmutableTree<Node>(null).setTree(\n      path,\n      changedChildren\n    );\n  }\n  const serverNode = viewCache.serverCache.getNode();\n  viewMergeTree.children.inorderTraversal((childKey, childTree) => {\n    if (serverNode.hasChild(childKey)) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n  viewMergeTree.children.inorderTraversal((childKey, childMergeTree) => {\n    const isUnknownDeepMerge =\n      !viewCache.serverCache.isCompleteForChild(childKey) &&\n      childMergeTree.value === null;\n    if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childMergeTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorAckUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  ackPath: Path,\n  affectedTree: ImmutableTree<boolean>,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  if (writeTreeRefShadowingWrite(writesCache, ackPath) != null) {\n    return viewCache;\n  }\n\n  // Only filter server node if it is currently filtered\n  const filterServerNode = viewCache.serverCache.isFiltered();\n\n  // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n  // now that it won't be shadowed.\n  const serverCache = viewCache.serverCache;\n  if (affectedTree.value != null) {\n    // This is an overwrite.\n    if (\n      (pathIsEmpty(ackPath) && serverCache.isFullyInitialized()) ||\n      serverCache.isCompleteForPath(ackPath)\n    ) {\n      return viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        serverCache.getNode().getChild(ackPath),\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else if (pathIsEmpty(ackPath)) {\n      // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n      // should just re-apply whatever we have in our cache as a merge.\n      let changedChildren = new ImmutableTree<Node>(null);\n      serverCache.getNode().forEachChild(KEY_INDEX, (name, node) => {\n        changedChildren = changedChildren.set(new Path(name), node);\n      });\n      return viewProcessorApplyServerMerge(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        changedChildren,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else {\n      return viewCache;\n    }\n  } else {\n    // This is a merge.\n    let changedChildren = new ImmutableTree<Node>(null);\n    affectedTree.foreach((mergePath, value) => {\n      const serverCachePath = pathChild(ackPath, mergePath);\n      if (serverCache.isCompleteForPath(serverCachePath)) {\n        changedChildren = changedChildren.set(\n          mergePath,\n          serverCache.getNode().getChild(serverCachePath)\n        );\n      }\n    });\n    return viewProcessorApplyServerMerge(\n      viewProcessor,\n      viewCache,\n      ackPath,\n      changedChildren,\n      writesCache,\n      completeCache,\n      filterServerNode,\n      accumulator\n    );\n  }\n}\n\nfunction viewProcessorListenComplete(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerNode = viewCache.serverCache;\n  const newViewCache = viewCacheUpdateServerSnap(\n    viewCache,\n    oldServerNode.getNode(),\n    oldServerNode.isFullyInitialized() || pathIsEmpty(path),\n    oldServerNode.isFiltered()\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    path,\n    writesCache,\n    NO_COMPLETE_CHILD_SOURCE,\n    accumulator\n  );\n}\n\nfunction viewProcessorRevertUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  let complete;\n  if (writeTreeRefShadowingWrite(writesCache, path) != null) {\n    return viewCache;\n  } else {\n    const source = new WriteTreeCompleteChildSource(\n      writesCache,\n      viewCache,\n      completeServerCache\n    );\n    const oldEventCache = viewCache.eventCache.getNode();\n    let newEventCache;\n    if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\n      let newNode;\n      if (viewCache.serverCache.isFullyInitialized()) {\n        newNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n      } else {\n        const serverChildren = viewCache.serverCache.getNode();\n        assert(\n          serverChildren instanceof ChildrenNode,\n          'serverChildren would be complete if leaf node'\n        );\n        newNode = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          serverChildren as ChildrenNode\n        );\n      }\n      newNode = newNode as Node;\n      newEventCache = viewProcessor.filter.updateFullNode(\n        oldEventCache,\n        newNode,\n        accumulator\n      );\n    } else {\n      const childKey = pathGetFront(path);\n      let newChild = writeTreeRefCalcCompleteChild(\n        writesCache,\n        childKey,\n        viewCache.serverCache\n      );\n      if (\n        newChild == null &&\n        viewCache.serverCache.isCompleteForChild(childKey)\n      ) {\n        newChild = oldEventCache.getImmediateChild(childKey);\n      }\n      if (newChild != null) {\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          newChild,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else if (viewCache.eventCache.getNode().hasChild(childKey)) {\n        // No complete child available, delete the existing one, if any\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          ChildrenNode.EMPTY_NODE,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else {\n        newEventCache = oldEventCache;\n      }\n      if (\n        newEventCache.isEmpty() &&\n        viewCache.serverCache.isFullyInitialized()\n      ) {\n        // We might have reverted all child writes. Maybe the old event was a leaf node\n        complete = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        if (complete.isLeafNode()) {\n          newEventCache = viewProcessor.filter.updateFullNode(\n            newEventCache,\n            complete,\n            accumulator\n          );\n        }\n      }\n    }\n    complete =\n      viewCache.serverCache.isFullyInitialized() ||\n      writeTreeRefShadowingWrite(writesCache, newEmptyPath()) != null;\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      complete,\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Operation, OperationType } from '../operation/Operation';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\nimport { WriteTreeRef } from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { Change, changeChildAdded, changeValue } from './Change';\nimport { CancelEvent, Event } from './Event';\nimport {\n  EventGenerator,\n  eventGeneratorGenerateEventsForChanges\n} from './EventGenerator';\nimport { EventRegistration, QueryContext } from './EventRegistration';\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { queryParamsGetNodeFilter } from './QueryParams';\nimport {\n  newViewCache,\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap\n} from './ViewCache';\nimport {\n  newViewProcessor,\n  ViewProcessor,\n  viewProcessorApplyOperation,\n  viewProcessorAssertIndexed\n} from './ViewProcessor';\n\n/**\n * A view represents a specific location and query that has 1 or more event registrations.\n *\n * It does several things:\n *  - Maintains the list of event registrations for this location/query.\n *  - Maintains a cache of the data visible for this location/query.\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\n *    registrations returns the set of events to be raised.\n */\nexport class View {\n  processor_: ViewProcessor;\n  viewCache_: ViewCache;\n  eventRegistrations_: EventRegistration[] = [];\n  eventGenerator_: EventGenerator;\n\n  constructor(private query_: QueryContext, initialViewCache: ViewCache) {\n    const params = this.query_._queryParams;\n\n    const indexFilter = new IndexedFilter(params.getIndex());\n    const filter = queryParamsGetNodeFilter(params);\n\n    this.processor_ = newViewProcessor(filter);\n\n    const initialServerCache = initialViewCache.serverCache;\n    const initialEventCache = initialViewCache.eventCache;\n\n    // Don't filter server node with other filter than index, wait for tagged listen\n    const serverSnap = indexFilter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialServerCache.getNode(),\n      null\n    );\n    const eventSnap = filter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialEventCache.getNode(),\n      null\n    );\n    const newServerCache = new CacheNode(\n      serverSnap,\n      initialServerCache.isFullyInitialized(),\n      indexFilter.filtersNodes()\n    );\n    const newEventCache = new CacheNode(\n      eventSnap,\n      initialEventCache.isFullyInitialized(),\n      filter.filtersNodes()\n    );\n\n    this.viewCache_ = newViewCache(newEventCache, newServerCache);\n    this.eventGenerator_ = new EventGenerator(this.query_);\n  }\n\n  get query(): QueryContext {\n    return this.query_;\n  }\n}\n\nexport function viewGetServerCache(view: View): Node | null {\n  return view.viewCache_.serverCache.getNode();\n}\n\nexport function viewGetCompleteNode(view: View): Node | null {\n  return viewCacheGetCompleteEventSnap(view.viewCache_);\n}\n\nexport function viewGetCompleteServerCache(\n  view: View,\n  path: Path\n): Node | null {\n  const cache = viewCacheGetCompleteServerSnap(view.viewCache_);\n  if (cache) {\n    // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n    // we need to see if it contains the child we're interested in.\n    if (\n      view.query._queryParams.loadsAllData() ||\n      (!pathIsEmpty(path) &&\n        !cache.getImmediateChild(pathGetFront(path)).isEmpty())\n    ) {\n      return cache.getChild(path);\n    }\n  }\n  return null;\n}\n\nexport function viewIsEmpty(view: View): boolean {\n  return view.eventRegistrations_.length === 0;\n}\n\nexport function viewAddEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration\n) {\n  view.eventRegistrations_.push(eventRegistration);\n}\n\n/**\n * @param eventRegistration - If null, remove all callbacks.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns Cancel events, if cancelError was provided.\n */\nexport function viewRemoveEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): Event[] {\n  const cancelEvents: CancelEvent[] = [];\n  if (cancelError) {\n    assert(\n      eventRegistration == null,\n      'A cancel should cancel all event registrations.'\n    );\n    const path = view.query._path;\n    view.eventRegistrations_.forEach(registration => {\n      const maybeEvent = registration.createCancelEvent(cancelError, path);\n      if (maybeEvent) {\n        cancelEvents.push(maybeEvent);\n      }\n    });\n  }\n\n  if (eventRegistration) {\n    let remaining = [];\n    for (let i = 0; i < view.eventRegistrations_.length; ++i) {\n      const existing = view.eventRegistrations_[i];\n      if (!existing.matches(eventRegistration)) {\n        remaining.push(existing);\n      } else if (eventRegistration.hasAnyCallback()) {\n        // We're removing just this one\n        remaining = remaining.concat(view.eventRegistrations_.slice(i + 1));\n        break;\n      }\n    }\n    view.eventRegistrations_ = remaining;\n  } else {\n    view.eventRegistrations_ = [];\n  }\n  return cancelEvents;\n}\n\n/**\n * Applies the given Operation, updates our cache, and returns the appropriate events.\n */\nexport function viewApplyOperation(\n  view: View,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null\n): Event[] {\n  if (\n    operation.type === OperationType.MERGE &&\n    operation.source.queryId !== null\n  ) {\n    assert(\n      viewCacheGetCompleteServerSnap(view.viewCache_),\n      'We should always have a full cache before handling merges'\n    );\n    assert(\n      viewCacheGetCompleteEventSnap(view.viewCache_),\n      'Missing event cache, even though we have a server cache'\n    );\n  }\n\n  const oldViewCache = view.viewCache_;\n  const result = viewProcessorApplyOperation(\n    view.processor_,\n    oldViewCache,\n    operation,\n    writesCache,\n    completeServerCache\n  );\n  viewProcessorAssertIndexed(view.processor_, result.viewCache);\n\n  assert(\n    result.viewCache.serverCache.isFullyInitialized() ||\n      !oldViewCache.serverCache.isFullyInitialized(),\n    'Once a server snap is complete, it should never go back'\n  );\n\n  view.viewCache_ = result.viewCache;\n\n  return viewGenerateEventsForChanges_(\n    view,\n    result.changes,\n    result.viewCache.eventCache.getNode(),\n    null\n  );\n}\n\nexport function viewGetInitialEvents(\n  view: View,\n  registration: EventRegistration\n): Event[] {\n  const eventSnap = view.viewCache_.eventCache;\n  const initialChanges: Change[] = [];\n  if (!eventSnap.getNode().isLeafNode()) {\n    const eventNode = eventSnap.getNode() as ChildrenNode;\n    eventNode.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      initialChanges.push(changeChildAdded(key, childNode));\n    });\n  }\n  if (eventSnap.isFullyInitialized()) {\n    initialChanges.push(changeValue(eventSnap.getNode()));\n  }\n  return viewGenerateEventsForChanges_(\n    view,\n    initialChanges,\n    eventSnap.getNode(),\n    registration\n  );\n}\n\nfunction viewGenerateEventsForChanges_(\n  view: View,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistration?: EventRegistration\n): Event[] {\n  const registrations = eventRegistration\n    ? [eventRegistration]\n    : view.eventRegistrations_;\n  return eventGeneratorGenerateEventsForChanges(\n    view.eventGenerator_,\n    changes,\n    eventCache,\n    registrations\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ReferenceConstructor } from '../api/Reference';\n\nimport { Operation } from './operation/Operation';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\nimport {\n  View,\n  viewAddEventRegistration,\n  viewApplyOperation,\n  viewGetCompleteServerCache,\n  viewGetInitialEvents,\n  viewIsEmpty,\n  viewRemoveEventRegistration\n} from './view/View';\nimport { newViewCache } from './view/ViewCache';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\n/**\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\n * and user writes (set, transaction, update).\n *\n * It's responsible for:\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\n *    applyUserOverwrite, etc.)\n */\nexport class SyncPoint {\n  /**\n   * The Views being tracked at this location in the tree, stored as a map where the key is a\n   * queryId and the value is the View for that query.\n   *\n   * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\n   */\n  readonly views: Map<string, View> = new Map();\n}\n\nexport function syncPointSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncPointGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport function syncPointIsEmpty(syncPoint: SyncPoint): boolean {\n  return syncPoint.views.size === 0;\n}\n\nexport function syncPointApplyOperation(\n  syncPoint: SyncPoint,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  optCompleteServerCache: Node | null\n): Event[] {\n  const queryId = operation.source.queryId;\n  if (queryId !== null) {\n    const view = syncPoint.views.get(queryId);\n    assert(view != null, 'SyncTree gave us an op for an invalid query.');\n    return viewApplyOperation(\n      view,\n      operation,\n      writesCache,\n      optCompleteServerCache\n    );\n  } else {\n    let events: Event[] = [];\n\n    for (const view of syncPoint.views.values()) {\n      events = events.concat(\n        viewApplyOperation(view, operation, writesCache, optCompleteServerCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Get a view for the specified query.\n *\n * @param query - The query to return a view for\n * @param writesCache\n * @param serverCache\n * @param serverCacheComplete\n * @returns Events to raise.\n */\nexport function syncPointGetView(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): View {\n  const queryId = query._queryIdentifier;\n  const view = syncPoint.views.get(queryId);\n  if (!view) {\n    // TODO: make writesCache take flag for complete server node\n    let eventCache = writeTreeRefCalcCompleteEventCache(\n      writesCache,\n      serverCacheComplete ? serverCache : null\n    );\n    let eventCacheComplete = false;\n    if (eventCache) {\n      eventCacheComplete = true;\n    } else if (serverCache instanceof ChildrenNode) {\n      eventCache = writeTreeRefCalcCompleteEventChildren(\n        writesCache,\n        serverCache\n      );\n      eventCacheComplete = false;\n    } else {\n      eventCache = ChildrenNode.EMPTY_NODE;\n      eventCacheComplete = false;\n    }\n    const viewCache = newViewCache(\n      new CacheNode(eventCache, eventCacheComplete, false),\n      new CacheNode(serverCache, serverCacheComplete, false)\n    );\n    return new View(query, viewCache);\n  }\n  return view;\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @param query\n * @param eventRegistration\n * @param writesCache\n * @param serverCache - Complete server cache, if we have it.\n * @param serverCacheComplete\n * @returns Events to raise.\n */\nexport function syncPointAddEventRegistration(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  eventRegistration: EventRegistration,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): Event[] {\n  const view = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!syncPoint.views.has(query._queryIdentifier)) {\n    syncPoint.views.set(query._queryIdentifier, view);\n  }\n  // This is guaranteed to exist now, we just created anything that was missing\n  viewAddEventRegistration(view, eventRegistration);\n  return viewGetInitialEvents(view, eventRegistration);\n}\n\n/**\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\n *\n * If query is the default query, we'll check all views for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\n *\n * @param eventRegistration - If null, remove all callbacks.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns removed queries and any cancel events\n */\nexport function syncPointRemoveEventRegistration(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): { removed: QueryContext[]; events: Event[] } {\n  const queryId = query._queryIdentifier;\n  const removed: QueryContext[] = [];\n  let cancelEvents: Event[] = [];\n  const hadCompleteView = syncPointHasCompleteView(syncPoint);\n  if (queryId === 'default') {\n    // When you do ref.off(...), we search all views for the registration to remove.\n    for (const [viewQueryId, view] of syncPoint.views.entries()) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(viewQueryId);\n\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  } else {\n    // remove the callback from the specific view.\n    const view = syncPoint.views.get(queryId);\n    if (view) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(queryId);\n\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  }\n\n  if (hadCompleteView && !syncPointHasCompleteView(syncPoint)) {\n    // We removed our last complete view.\n    removed.push(\n      new (syncPointGetReferenceConstructor())(query._repo, query._path)\n    );\n  }\n\n  return { removed, events: cancelEvents };\n}\n\nexport function syncPointGetQueryViews(syncPoint: SyncPoint): View[] {\n  const result = [];\n  for (const view of syncPoint.views.values()) {\n    if (!view.query._queryParams.loadsAllData()) {\n      result.push(view);\n    }\n  }\n  return result;\n}\n\n/**\n * @param path - The path to the desired complete snapshot\n * @returns A complete cache, if it exists\n */\nexport function syncPointGetCompleteServerCache(\n  syncPoint: SyncPoint,\n  path: Path\n): Node | null {\n  let serverCache: Node | null = null;\n  for (const view of syncPoint.views.values()) {\n    serverCache = serverCache || viewGetCompleteServerCache(view, path);\n  }\n  return serverCache;\n}\n\nexport function syncPointViewForQuery(\n  syncPoint: SyncPoint,\n  query: QueryContext\n): View | null {\n  const params = query._queryParams;\n  if (params.loadsAllData()) {\n    return syncPointGetCompleteView(syncPoint);\n  } else {\n    const queryId = query._queryIdentifier;\n    return syncPoint.views.get(queryId);\n  }\n}\n\nexport function syncPointViewExistsForQuery(\n  syncPoint: SyncPoint,\n  query: QueryContext\n): boolean {\n  return syncPointViewForQuery(syncPoint, query) != null;\n}\n\nexport function syncPointHasCompleteView(syncPoint: SyncPoint): boolean {\n  return syncPointGetCompleteView(syncPoint) != null;\n}\n\nexport function syncPointGetCompleteView(syncPoint: SyncPoint): View | null {\n  for (const view of syncPoint.views.values()) {\n    if (view.query._queryParams.loadsAllData()) {\n      return view;\n    }\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ReferenceConstructor } from '../api/Reference';\n\nimport { AckUserWrite } from './operation/AckUserWrite';\nimport { ListenComplete } from './operation/ListenComplete';\nimport { Merge } from './operation/Merge';\nimport {\n  newOperationSourceServer,\n  newOperationSourceServerTaggedQuery,\n  newOperationSourceUser,\n  Operation\n} from './operation/Operation';\nimport { Overwrite } from './operation/Overwrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport {\n  SyncPoint,\n  syncPointAddEventRegistration,\n  syncPointApplyOperation,\n  syncPointGetCompleteServerCache,\n  syncPointGetCompleteView,\n  syncPointGetQueryViews,\n  syncPointGetView,\n  syncPointHasCompleteView,\n  syncPointIsEmpty,\n  syncPointRemoveEventRegistration,\n  syncPointViewExistsForQuery,\n  syncPointViewForQuery\n} from './SyncPoint';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathGetFront,\n  pathIsEmpty\n} from './util/Path';\nimport { each, errorForServerCode } from './util/util';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\nimport { View, viewGetCompleteNode, viewGetServerCache } from './view/View';\nimport {\n  newWriteTree,\n  WriteTree,\n  writeTreeAddMerge,\n  writeTreeAddOverwrite,\n  writeTreeCalcCompleteEventCache,\n  writeTreeChildWrites,\n  writeTreeGetWrite,\n  WriteTreeRef,\n  writeTreeRefChild,\n  writeTreeRemoveWrite\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\nexport function syncTreeSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncTreeGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport interface ListenProvider {\n  startListening(\n    query: QueryContext,\n    tag: number | null,\n    hashFn: () => string,\n    onComplete: (a: string, b?: unknown) => Event[]\n  ): Event[];\n\n  stopListening(a: QueryContext, b: number | null): void;\n}\n\n/**\n * Static tracker for next query tag.\n */\nlet syncTreeNextQueryTag_ = 1;\n\n/**\n * SyncTree is the central class for managing event callback registration, data caching, views\n * (query processing), and event generation.  There are typically two SyncTree instances for\n * each Repo, one for the normal Firebase data, and one for the .info data.\n *\n * It has a number of responsibilities, including:\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\n *    (applyUserOverwrite(), applyUserMerge()).\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\n *    applyServerMerge()).\n *  - Generating user-facing events for server and user changes (all of the apply* methods\n *    return the set of events that need to be raised as a result).\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\n *    to the correct set of paths and queries to satisfy the current set of user event\n *    callbacks (listens are started/stopped using the provided listenProvider).\n *\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\n * events are returned to the caller rather than raised synchronously.\n *\n */\nexport class SyncTree {\n  /**\n   * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\n   */\n  syncPointTree_: ImmutableTree<SyncPoint> = new ImmutableTree<SyncPoint>(null);\n\n  /**\n   * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\n   */\n  pendingWriteTree_: WriteTree = newWriteTree();\n\n  readonly tagToQueryMap: Map<number, string> = new Map();\n  readonly queryToTagMap: Map<string, number> = new Map();\n\n  /**\n   * @param listenProvider_ - Used by SyncTree to start / stop listening\n   *   to server data.\n   */\n  constructor(public listenProvider_: ListenProvider) {}\n}\n\n/**\n * Apply the data changes for a user-generated set() or transaction() call.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyUserOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node,\n  writeId: number,\n  visible?: boolean\n): Event[] {\n  // Record pending write.\n  writeTreeAddOverwrite(\n    syncTree.pendingWriteTree_,\n    path,\n    newData,\n    writeId,\n    visible\n  );\n\n  if (!visible) {\n    return [];\n  } else {\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new Overwrite(newOperationSourceUser(), path, newData)\n    );\n  }\n}\n\n/**\n * Apply the data from a user-generated update() call\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyUserMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n): Event[] {\n  // Record pending merge.\n  writeTreeAddMerge(syncTree.pendingWriteTree_, path, changedChildren, writeId);\n\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceUser(), path, changeTree)\n  );\n}\n\n/**\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\n *\n * @param revert - True if the given write failed and needs to be reverted\n * @returns Events to raise.\n */\nexport function syncTreeAckUserWrite(\n  syncTree: SyncTree,\n  writeId: number,\n  revert: boolean = false\n) {\n  const write = writeTreeGetWrite(syncTree.pendingWriteTree_, writeId);\n  const needToReevaluate = writeTreeRemoveWrite(\n    syncTree.pendingWriteTree_,\n    writeId\n  );\n  if (!needToReevaluate) {\n    return [];\n  } else {\n    let affectedTree = new ImmutableTree<boolean>(null);\n    if (write.snap != null) {\n      // overwrite\n      affectedTree = affectedTree.set(newEmptyPath(), true);\n    } else {\n      each(write.children, (pathString: string) => {\n        affectedTree = affectedTree.set(new Path(pathString), true);\n      });\n    }\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new AckUserWrite(write.path, affectedTree, revert)\n    );\n  }\n}\n\n/**\n * Apply new server data for the specified path..\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyServerOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Overwrite(newOperationSourceServer(), path, newData)\n  );\n}\n\n/**\n * Apply new server data to be merged in at the specified path.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyServerMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node }\n): Event[] {\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceServer(), path, changeTree)\n  );\n}\n\n/**\n * Apply a listen complete for a query\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyListenComplete(\n  syncTree: SyncTree,\n  path: Path\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new ListenComplete(newOperationSourceServer(), path)\n  );\n}\n\n/**\n * Apply a listen complete for a tagged query\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedListenComplete(\n  syncTree: SyncTree,\n  path: Path,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new ListenComplete(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Remove event callback(s).\n *\n * If query is the default query, we'll check all queries for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\n *\n * @param eventRegistration - If null, all callbacks are removed.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @param skipListenerDedup - When performing a `get()`, we don't add any new listeners, so no\n *  deduping needs to take place. This flag allows toggling of that behavior\n * @returns Cancel events, if cancelError was provided.\n */\nexport function syncTreeRemoveEventRegistration(\n  syncTree: SyncTree,\n  query: QueryContext,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error,\n  skipListenerDedup = false\n): Event[] {\n  // Find the syncPoint first. Then deal with whether or not it has matching listeners\n  const path = query._path;\n  const maybeSyncPoint = syncTree.syncPointTree_.get(path);\n  let cancelEvents: Event[] = [];\n  // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n  // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n  // not loadsAllData().\n  if (\n    maybeSyncPoint &&\n    (query._queryIdentifier === 'default' ||\n      syncPointViewExistsForQuery(maybeSyncPoint, query))\n  ) {\n    const removedAndEvents = syncPointRemoveEventRegistration(\n      maybeSyncPoint,\n      query,\n      eventRegistration,\n      cancelError\n    );\n    if (syncPointIsEmpty(maybeSyncPoint)) {\n      syncTree.syncPointTree_ = syncTree.syncPointTree_.remove(path);\n    }\n\n    const removed = removedAndEvents.removed;\n    cancelEvents = removedAndEvents.events;\n\n    if (!skipListenerDedup) {\n      /**\n       * We may have just removed one of many listeners and can short-circuit this whole process\n       * We may also not have removed a default listener, in which case all of the descendant listeners should already be\n       * properly set up.\n       */\n\n      // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n      // queryId === 'default'\n      const removingDefault =\n        -1 !==\n        removed.findIndex(query => {\n          return query._queryParams.loadsAllData();\n        });\n      const covered = syncTree.syncPointTree_.findOnPath(\n        path,\n        (relativePath, parentSyncPoint) =>\n          syncPointHasCompleteView(parentSyncPoint)\n      );\n\n      if (removingDefault && !covered) {\n        const subtree = syncTree.syncPointTree_.subtree(path);\n        // There are potentially child listeners. Determine what if any listens we need to send before executing the\n        // removal\n        if (!subtree.isEmpty()) {\n          // We need to fold over our subtree and collect the listeners to send\n          const newViews = syncTreeCollectDistinctViewsForSubTree_(subtree);\n\n          // Ok, we've collected all the listens we need. Set them up.\n          for (let i = 0; i < newViews.length; ++i) {\n            const view = newViews[i],\n              newQuery = view.query;\n            const listener = syncTreeCreateListenerForView_(syncTree, view);\n            syncTree.listenProvider_.startListening(\n              syncTreeQueryForListening_(newQuery),\n              syncTreeTagForQuery(syncTree, newQuery),\n              listener.hashFn,\n              listener.onComplete\n            );\n          }\n        }\n        // Otherwise there's nothing below us, so nothing we need to start listening on\n      }\n      // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n      // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n      // Also, note that if we have a cancelError, it's already been removed at the provider level.\n      if (!covered && removed.length > 0 && !cancelError) {\n        // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n        // default. Otherwise, we need to iterate through and cancel each individual query\n        if (removingDefault) {\n          // We don't tag default listeners\n          const defaultTag: number | null = null;\n          syncTree.listenProvider_.stopListening(\n            syncTreeQueryForListening_(query),\n            defaultTag\n          );\n        } else {\n          removed.forEach((queryToRemove: QueryContext) => {\n            const tagToRemove = syncTree.queryToTagMap.get(\n              syncTreeMakeQueryKey_(queryToRemove)\n            );\n            syncTree.listenProvider_.stopListening(\n              syncTreeQueryForListening_(queryToRemove),\n              tagToRemove\n            );\n          });\n        }\n      }\n    }\n    // Now, clear all of the tags we're tracking for the removed listens\n    syncTreeRemoveTags_(syncTree, removed);\n  } else {\n    // No-op, this listener must've been already removed\n  }\n  return cancelEvents;\n}\n\n/**\n * Apply new server data for the specified tagged query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedQueryOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  snap: Node,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey != null) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new Overwrite(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      snap\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // Query must have been removed already\n    return [];\n  }\n}\n\n/**\n * Apply server data to be merged in for the specified tagged query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedQueryMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const changeTree = ImmutableTree.fromObject(changedChildren);\n    const op = new Merge(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      changeTree\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeAddEventRegistration(\n  syncTree: SyncTree,\n  query: QueryContext,\n  eventRegistration: EventRegistration,\n  skipSetupListener = false\n): Event[] {\n  const path = query._path;\n\n  let serverCache: Node | null = null;\n  let foundAncestorDefaultView = false;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(sp);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(syncPoint);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let serverCacheComplete;\n  if (serverCache != null) {\n    serverCacheComplete = true;\n  } else {\n    serverCacheComplete = false;\n    serverCache = ChildrenNode.EMPTY_NODE;\n    const subtree = syncTree.syncPointTree_.subtree(path);\n    subtree.foreachChild((childName, childSyncPoint) => {\n      const completeCache = syncPointGetCompleteServerCache(\n        childSyncPoint,\n        newEmptyPath()\n      );\n      if (completeCache) {\n        serverCache = serverCache.updateImmediateChild(\n          childName,\n          completeCache\n        );\n      }\n    });\n  }\n\n  const viewAlreadyExists = syncPointViewExistsForQuery(syncPoint, query);\n  if (!viewAlreadyExists && !query._queryParams.loadsAllData()) {\n    // We need to track a tag for this query\n    const queryKey = syncTreeMakeQueryKey_(query);\n    assert(\n      !syncTree.queryToTagMap.has(queryKey),\n      'View does not exist, but we have a tag'\n    );\n    const tag = syncTreeGetNextQueryTag_();\n    syncTree.queryToTagMap.set(queryKey, tag);\n    syncTree.tagToQueryMap.set(tag, queryKey);\n  }\n  const writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, path);\n  let events = syncPointAddEventRegistration(\n    syncPoint,\n    query,\n    eventRegistration,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!viewAlreadyExists && !foundAncestorDefaultView && !skipSetupListener) {\n    const view = syncPointViewForQuery(syncPoint, query);\n    events = events.concat(syncTreeSetupListener_(syncTree, query, view));\n  }\n  return events;\n}\n\n/**\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\n *\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\n *\n * @param path - The path to the data we want\n * @param writeIdsToExclude - A specific set to be excluded\n */\nexport function syncTreeCalcCompleteEventCache(\n  syncTree: SyncTree,\n  path: Path,\n  writeIdsToExclude?: number[]\n): Node {\n  const includeHiddenSets = true;\n  const writeTree = syncTree.pendingWriteTree_;\n  const serverCache = syncTree.syncPointTree_.findOnPath(\n    path,\n    (pathSoFar, syncPoint) => {\n      const relativePath = newRelativePath(pathSoFar, path);\n      const serverCache = syncPointGetCompleteServerCache(\n        syncPoint,\n        relativePath\n      );\n      if (serverCache) {\n        return serverCache;\n      }\n    }\n  );\n  return writeTreeCalcCompleteEventCache(\n    writeTree,\n    path,\n    serverCache,\n    writeIdsToExclude,\n    includeHiddenSets\n  );\n}\n\nexport function syncTreeGetServerValue(\n  syncTree: SyncTree,\n  query: QueryContext\n): Node | null {\n  const path = query._path;\n  let serverCache: Node | null = null;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n  const serverCacheComplete = serverCache != null;\n  const serverCacheNode: CacheNode | null = serverCacheComplete\n    ? new CacheNode(serverCache, true, false)\n    : null;\n  const writesCache: WriteTreeRef | null = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    query._path\n  );\n  const view: View = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE,\n    serverCacheComplete\n  );\n  return viewGetCompleteNode(view);\n}\n\n/**\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\n *\n * NOTES:\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\n *\n * - We call applyOperation() on each SyncPoint passing three things:\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\n *   3. A snapshot Node with cached server data, if we have it.\n *\n * - We concatenate all of the events returned by each SyncPoint and return the result.\n */\nfunction syncTreeApplyOperationToSyncPoints_(\n  syncTree: SyncTree,\n  operation: Operation\n): Event[] {\n  return syncTreeApplyOperationHelper_(\n    operation,\n    syncTree.syncPointTree_,\n    /*serverCache=*/ null,\n    writeTreeChildWrites(syncTree.pendingWriteTree_, newEmptyPath())\n  );\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  if (pathIsEmpty(operation.path)) {\n    return syncTreeApplyOperationDescendantsHelper_(\n      operation,\n      syncPointTree,\n      serverCache,\n      writesCache\n    );\n  } else {\n    const syncPoint = syncPointTree.get(newEmptyPath());\n\n    // If we don't have cached server data, see if we can get it from this SyncPoint.\n    if (serverCache == null && syncPoint != null) {\n      serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n    }\n\n    let events: Event[] = [];\n    const childName = pathGetFront(operation.path);\n    const childOperation = operation.operationForChild(childName);\n    const childTree = syncPointTree.children.get(childName);\n    if (childTree && childOperation) {\n      const childServerCache = serverCache\n        ? serverCache.getImmediateChild(childName)\n        : null;\n      const childWritesCache = writeTreeRefChild(writesCache, childName);\n      events = events.concat(\n        syncTreeApplyOperationHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n\n    if (syncPoint) {\n      events = events.concat(\n        syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationDescendantsHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  const syncPoint = syncPointTree.get(newEmptyPath());\n\n  // If we don't have cached server data, see if we can get it from this SyncPoint.\n  if (serverCache == null && syncPoint != null) {\n    serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let events: Event[] = [];\n  syncPointTree.children.inorderTraversal((childName, childTree) => {\n    const childServerCache = serverCache\n      ? serverCache.getImmediateChild(childName)\n      : null;\n    const childWritesCache = writeTreeRefChild(writesCache, childName);\n    const childOperation = operation.operationForChild(childName);\n    if (childOperation) {\n      events = events.concat(\n        syncTreeApplyOperationDescendantsHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n  });\n\n  if (syncPoint) {\n    events = events.concat(\n      syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n    );\n  }\n\n  return events;\n}\n\nfunction syncTreeCreateListenerForView_(\n  syncTree: SyncTree,\n  view: View\n): { hashFn(): string; onComplete(a: string, b?: unknown): Event[] } {\n  const query = view.query;\n  const tag = syncTreeTagForQuery(syncTree, query);\n\n  return {\n    hashFn: () => {\n      const cache = viewGetServerCache(view) || ChildrenNode.EMPTY_NODE;\n      return cache.hash();\n    },\n    onComplete: (status: string): Event[] => {\n      if (status === 'ok') {\n        if (tag) {\n          return syncTreeApplyTaggedListenComplete(syncTree, query._path, tag);\n        } else {\n          return syncTreeApplyListenComplete(syncTree, query._path);\n        }\n      } else {\n        // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n        // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n        const error = errorForServerCode(status, query);\n        return syncTreeRemoveEventRegistration(\n          syncTree,\n          query,\n          /*eventRegistration*/ null,\n          error\n        );\n      }\n    }\n  };\n}\n\n/**\n * Return the tag associated with the given query.\n */\nexport function syncTreeTagForQuery(\n  syncTree: SyncTree,\n  query: QueryContext\n): number | null {\n  const queryKey = syncTreeMakeQueryKey_(query);\n  return syncTree.queryToTagMap.get(queryKey);\n}\n\n/**\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\n */\nfunction syncTreeMakeQueryKey_(query: QueryContext): string {\n  return query._path.toString() + '$' + query._queryIdentifier;\n}\n\n/**\n * Return the query associated with the given tag, if we have one\n */\nfunction syncTreeQueryKeyForTag_(\n  syncTree: SyncTree,\n  tag: number\n): string | null {\n  return syncTree.tagToQueryMap.get(tag);\n}\n\n/**\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\n */\nfunction syncTreeParseQueryKey_(queryKey: string): {\n  queryId: string;\n  path: Path;\n} {\n  const splitIndex = queryKey.indexOf('$');\n  assert(\n    splitIndex !== -1 && splitIndex < queryKey.length - 1,\n    'Bad queryKey.'\n  );\n  return {\n    queryId: queryKey.substr(splitIndex + 1),\n    path: new Path(queryKey.substr(0, splitIndex))\n  };\n}\n\n/**\n * A helper method to apply tagged operations\n */\nfunction syncTreeApplyTaggedOperation_(\n  syncTree: SyncTree,\n  queryPath: Path,\n  operation: Operation\n): Event[] {\n  const syncPoint = syncTree.syncPointTree_.get(queryPath);\n  assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n  const writesCache = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    queryPath\n  );\n  return syncPointApplyOperation(syncPoint, operation, writesCache, null);\n}\n\n/**\n * This collapses multiple unfiltered views into a single view, since we only need a single\n * listener for them.\n */\nfunction syncTreeCollectDistinctViewsForSubTree_(\n  subtree: ImmutableTree<SyncPoint>\n): View[] {\n  return subtree.fold<View[]>((relativePath, maybeChildSyncPoint, childMap) => {\n    if (maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\n      const completeView = syncPointGetCompleteView(maybeChildSyncPoint);\n      return [completeView];\n    } else {\n      // No complete view here, flatten any deeper listens into an array\n      let views: View[] = [];\n      if (maybeChildSyncPoint) {\n        views = syncPointGetQueryViews(maybeChildSyncPoint);\n      }\n      each(childMap, (_key: string, childViews: View[]) => {\n        views = views.concat(childViews);\n      });\n      return views;\n    }\n  });\n}\n\n/**\n * Normalizes a query to a query we send the server for listening\n *\n * @returns The normalized query\n */\nfunction syncTreeQueryForListening_(query: QueryContext): QueryContext {\n  if (query._queryParams.loadsAllData() && !query._queryParams.isDefault()) {\n    // We treat queries that load all data as default queries\n    // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n    // from Query\n    return new (syncTreeGetReferenceConstructor())(query._repo, query._path);\n  } else {\n    return query;\n  }\n}\n\nfunction syncTreeRemoveTags_(syncTree: SyncTree, queries: QueryContext[]) {\n  for (let j = 0; j < queries.length; ++j) {\n    const removedQuery = queries[j];\n    if (!removedQuery._queryParams.loadsAllData()) {\n      // We should have a tag for this\n      const removedQueryKey = syncTreeMakeQueryKey_(removedQuery);\n      const removedQueryTag = syncTree.queryToTagMap.get(removedQueryKey);\n      syncTree.queryToTagMap.delete(removedQueryKey);\n      syncTree.tagToQueryMap.delete(removedQueryTag);\n    }\n  }\n}\n\n/**\n * Static accessor for query tags.\n */\nfunction syncTreeGetNextQueryTag_(): number {\n  return syncTreeNextQueryTag_++;\n}\n\n/**\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\n *\n * @returns This method can return events to support synchronous data sources\n */\nfunction syncTreeSetupListener_(\n  syncTree: SyncTree,\n  query: QueryContext,\n  view: View\n): Event[] {\n  const path = query._path;\n  const tag = syncTreeTagForQuery(syncTree, query);\n  const listener = syncTreeCreateListenerForView_(syncTree, view);\n\n  const events = syncTree.listenProvider_.startListening(\n    syncTreeQueryForListening_(query),\n    tag,\n    listener.hashFn,\n    listener.onComplete\n  );\n\n  const subtree = syncTree.syncPointTree_.subtree(path);\n  // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n  // may need to shadow other listens as well.\n  if (tag) {\n    assert(\n      !syncPointHasCompleteView(subtree.value),\n      \"If we're adding a query, it shouldn't be shadowed\"\n    );\n  } else {\n    // Shadow everything at or below this location, this is a default listener.\n    const queriesToStop = subtree.fold<QueryContext[]>(\n      (relativePath, maybeChildSyncPoint, childMap) => {\n        if (\n          !pathIsEmpty(relativePath) &&\n          maybeChildSyncPoint &&\n          syncPointHasCompleteView(maybeChildSyncPoint)\n        ) {\n          return [syncPointGetCompleteView(maybeChildSyncPoint).query];\n        } else {\n          // No default listener here, flatten any deeper queries into an array\n          let queries: QueryContext[] = [];\n          if (maybeChildSyncPoint) {\n            queries = queries.concat(\n              syncPointGetQueryViews(maybeChildSyncPoint).map(\n                view => view.query\n              )\n            );\n          }\n          each(childMap, (_key: string, childQueries: QueryContext[]) => {\n            queries = queries.concat(childQueries);\n          });\n          return queries;\n        }\n      }\n    );\n    for (let i = 0; i < queriesToStop.length; ++i) {\n      const queryToStop = queriesToStop[i];\n      syncTree.listenProvider_.stopListening(\n        syncTreeQueryForListening_(queryToStop),\n        syncTreeTagForQuery(syncTree, queryToStop)\n      );\n    }\n  }\n  return events;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { LeafNode } from '../snap/LeafNode';\nimport { Node } from '../snap/Node';\nimport { nodeFromJSON } from '../snap/nodeFromJSON';\nimport { SyncTree, syncTreeCalcCompleteEventCache } from '../SyncTree';\n\nimport { Indexable } from './misc';\nimport { Path, pathChild } from './Path';\n\n/* It's critical for performance that we do not calculate actual values from a SyncTree\n * unless and until the value is needed. Because we expose both a SyncTree and Node\n * version of deferred value resolution, we ned a wrapper class that will let us share\n * code.\n *\n * @see https://github.com/firebase/firebase-js-sdk/issues/2487\n */\ninterface ValueProvider {\n  getImmediateChild(childName: string): ValueProvider;\n  node(): Node;\n}\n\nclass ExistingValueProvider implements ValueProvider {\n  constructor(readonly node_: Node) {}\n\n  getImmediateChild(childName: string): ValueProvider {\n    const child = this.node_.getImmediateChild(childName);\n    return new ExistingValueProvider(child);\n  }\n\n  node(): Node {\n    return this.node_;\n  }\n}\n\nclass DeferredValueProvider implements ValueProvider {\n  private syncTree_: SyncTree;\n  private path_: Path;\n\n  constructor(syncTree: SyncTree, path: Path) {\n    this.syncTree_ = syncTree;\n    this.path_ = path;\n  }\n\n  getImmediateChild(childName: string): ValueProvider {\n    const childPath = pathChild(this.path_, childName);\n    return new DeferredValueProvider(this.syncTree_, childPath);\n  }\n\n  node(): Node {\n    return syncTreeCalcCompleteEventCache(this.syncTree_, this.path_);\n  }\n}\n\n/**\n * Generate placeholders for deferred values.\n */\nexport const generateWithValues = function (\n  values: {\n    [k: string]: unknown;\n  } | null\n): { [k: string]: unknown } {\n  values = values || {};\n  values['timestamp'] = values['timestamp'] || new Date().getTime();\n  return values;\n};\n\n/**\n * Value to use when firing local events. When writing server values, fire\n * local events with an approximate value, otherwise return value as-is.\n */\nexport const resolveDeferredLeafValue = function (\n  value: { [k: string]: unknown } | string | number | boolean,\n  existingVal: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  if (!value || typeof value !== 'object') {\n    return value as string | number | boolean;\n  }\n  assert('.sv' in value, 'Unexpected leaf node or priority contents');\n\n  if (typeof value['.sv'] === 'string') {\n    return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\n  } else if (typeof value['.sv'] === 'object') {\n    return resolveComplexDeferredValue(value['.sv'], existingVal, serverValues);\n  } else {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\n  }\n};\n\nconst resolveScalarDeferredValue = function (\n  op: string,\n  existing: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  switch (op) {\n    case 'timestamp':\n      return serverValues['timestamp'] as string | number | boolean;\n    default:\n      assert(false, 'Unexpected server value: ' + op);\n  }\n};\n\nconst resolveComplexDeferredValue = function (\n  op: object,\n  existing: ValueProvider,\n  unused: { [k: string]: unknown }\n): string | number | boolean {\n  if (!op.hasOwnProperty('increment')) {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\n  }\n  const delta = op['increment'];\n  if (typeof delta !== 'number') {\n    assert(false, 'Unexpected increment value: ' + delta);\n  }\n\n  const existingNode = existing.node();\n  assert(\n    existingNode !== null && typeof existingNode !== 'undefined',\n    'Expected ChildrenNode.EMPTY_NODE for nulls'\n  );\n\n  // Incrementing a non-number sets the value to the incremented amount\n  if (!existingNode.isLeafNode()) {\n    return delta;\n  }\n\n  const leaf = existingNode as LeafNode;\n  const existingVal = leaf.getValue();\n  if (typeof existingVal !== 'number') {\n    return delta;\n  }\n\n  // No need to do over/underflow arithmetic here because JS only handles floats under the covers\n  return existingVal + delta;\n};\n\n/**\n * Recursively replace all deferred values and priorities in the tree with the\n * specified generated replacement values.\n * @param path - path to which write is relative\n * @param node - new data written at path\n * @param syncTree - current data\n */\nexport const resolveDeferredValueTree = function (\n  path: Path,\n  node: Node,\n  syncTree: SyncTree,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new DeferredValueProvider(syncTree, path),\n    serverValues\n  );\n};\n\n/**\n * Recursively replace all deferred values and priorities in the node with the\n * specified generated replacement values.  If there are no server values in the node,\n * it'll be returned as-is.\n */\nexport const resolveDeferredValueSnapshot = function (\n  node: Node,\n  existing: Node,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new ExistingValueProvider(existing),\n    serverValues\n  );\n};\n\nfunction resolveDeferredValue(\n  node: Node,\n  existingVal: ValueProvider,\n  serverValues: Indexable\n): Node {\n  const rawPri = node.getPriority().val() as\n    | Indexable\n    | boolean\n    | null\n    | number\n    | string;\n  const priority = resolveDeferredLeafValue(\n    rawPri,\n    existingVal.getImmediateChild('.priority'),\n    serverValues\n  );\n  let newNode: Node;\n\n  if (node.isLeafNode()) {\n    const leafNode = node as LeafNode;\n    const value = resolveDeferredLeafValue(\n      leafNode.getValue(),\n      existingVal,\n      serverValues\n    );\n    if (\n      value !== leafNode.getValue() ||\n      priority !== leafNode.getPriority().val()\n    ) {\n      return new LeafNode(value, nodeFromJSON(priority));\n    } else {\n      return node;\n    }\n  } else {\n    const childrenNode = node as ChildrenNode;\n    newNode = childrenNode;\n    if (priority !== childrenNode.getPriority().val()) {\n      newNode = newNode.updatePriority(new LeafNode(priority));\n    }\n    childrenNode.forEachChild(PRIORITY_INDEX, (childName, childNode) => {\n      const newChildNode = resolveDeferredValue(\n        childNode,\n        existingVal.getImmediateChild(childName),\n        serverValues\n      );\n      if (newChildNode !== childNode) {\n        newNode = newNode.updateImmediateChild(childName, newChildNode);\n      }\n    });\n    return newNode;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, safeGet } from '@firebase/util';\n\nimport { Path, pathGetFront, pathPopFront } from './Path';\nimport { each } from './util';\n\n/**\n * Node in a Tree.\n */\nexport interface TreeNode<T> {\n  // TODO: Consider making accessors that create children and value lazily or\n  // separate Internal / Leaf 'types'.\n  children: Record<string, TreeNode<T>>;\n  childCount: number;\n  value?: T;\n}\n\n/**\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\n * children.\n */\nexport class Tree<T> {\n  /**\n   * @param name - Optional name of the node.\n   * @param parent - Optional parent node.\n   * @param node - Optional node to wrap.\n   */\n  constructor(\n    readonly name: string = '',\n    readonly parent: Tree<T> | null = null,\n    public node: TreeNode<T> = { children: {}, childCount: 0 }\n  ) {}\n}\n\n/**\n * Returns a sub-Tree for the given path.\n *\n * @param pathObj - Path to look up.\n * @returns Tree for path.\n */\nexport function treeSubTree<T>(tree: Tree<T>, pathObj: string | Path): Tree<T> {\n  // TODO: Require pathObj to be Path?\n  let path = pathObj instanceof Path ? pathObj : new Path(pathObj);\n  let child = tree,\n    next = pathGetFront(path);\n  while (next !== null) {\n    const childNode = safeGet(child.node.children, next) || {\n      children: {},\n      childCount: 0\n    };\n    child = new Tree<T>(next, child, childNode);\n    path = pathPopFront(path);\n    next = pathGetFront(path);\n  }\n\n  return child;\n}\n\n/**\n * Returns the data associated with this tree node.\n *\n * @returns The data or null if no data exists.\n */\nexport function treeGetValue<T>(tree: Tree<T>): T | undefined {\n  return tree.node.value;\n}\n\n/**\n * Sets data to this tree node.\n *\n * @param value - Value to set.\n */\nexport function treeSetValue<T>(tree: Tree<T>, value: T | undefined): void {\n  tree.node.value = value;\n  treeUpdateParents(tree);\n}\n\n/**\n * @returns Whether the tree has any children.\n */\nexport function treeHasChildren<T>(tree: Tree<T>): boolean {\n  return tree.node.childCount > 0;\n}\n\n/**\n * @returns Whethe rthe tree is empty (no value or children).\n */\nexport function treeIsEmpty<T>(tree: Tree<T>): boolean {\n  return treeGetValue(tree) === undefined && !treeHasChildren(tree);\n}\n\n/**\n * Calls action for each child of this tree node.\n *\n * @param action - Action to be called for each child.\n */\nexport function treeForEachChild<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  each(tree.node.children, (child: string, childTree: TreeNode<T>) => {\n    action(new Tree<T>(child, tree, childTree));\n  });\n}\n\n/**\n * Does a depth-first traversal of this node's descendants, calling action for each one.\n *\n * @param action - Action to be called for each child.\n * @param includeSelf - Whether to call action on this node as well. Defaults to\n *   false.\n * @param childrenFirst - Whether to call action on children before calling it on\n *   parent.\n */\nexport function treeForEachDescendant<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void,\n  includeSelf?: boolean,\n  childrenFirst?: boolean\n): void {\n  if (includeSelf && !childrenFirst) {\n    action(tree);\n  }\n\n  treeForEachChild(tree, child => {\n    treeForEachDescendant(child, action, true, childrenFirst);\n  });\n\n  if (includeSelf && childrenFirst) {\n    action(tree);\n  }\n}\n\n/**\n * Calls action on each ancestor node.\n *\n * @param action - Action to be called on each parent; return\n *   true to abort.\n * @param includeSelf - Whether to call action on this node as well.\n * @returns true if the action callback returned true.\n */\nexport function treeForEachAncestor<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => unknown,\n  includeSelf?: boolean\n): boolean {\n  let node = includeSelf ? tree : tree.parent;\n  while (node !== null) {\n    if (action(node)) {\n      return true;\n    }\n    node = node.parent;\n  }\n  return false;\n}\n\n/**\n * Does a depth-first traversal of this node's descendants.  When a descendant with a value\n * is found, action is called on it and traversal does not continue inside the node.\n * Action is *not* called on this node.\n *\n * @param action - Action to be called for each child.\n */\nexport function treeForEachImmediateDescendantWithValue<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  treeForEachChild(tree, child => {\n    if (treeGetValue(child) !== undefined) {\n      action(child);\n    } else {\n      treeForEachImmediateDescendantWithValue(child, action);\n    }\n  });\n}\n\n/**\n * @returns The path of this tree node, as a Path.\n */\nexport function treeGetPath<T>(tree: Tree<T>) {\n  return new Path(\n    tree.parent === null\n      ? tree.name\n      : treeGetPath(tree.parent) + '/' + tree.name\n  );\n}\n\n/**\n * Adds or removes this child from its parent based on whether it's empty or not.\n */\nfunction treeUpdateParents<T>(tree: Tree<T>) {\n  if (tree.parent !== null) {\n    treeUpdateChild(tree.parent, tree.name, tree);\n  }\n}\n\n/**\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\n *\n * @param childName - The name of the child to update.\n * @param child - The child to update.\n */\nfunction treeUpdateChild<T>(tree: Tree<T>, childName: string, child: Tree<T>) {\n  const childEmpty = treeIsEmpty(child);\n  const childExists = contains(tree.node.children, childName);\n  if (childEmpty && childExists) {\n    delete tree.node.children[childName];\n    tree.node.childCount--;\n    treeUpdateParents(tree);\n  } else if (!childEmpty && !childExists) {\n    tree.node.children[childName] = child.node;\n    tree.node.childCount++;\n    treeUpdateParents(tree);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  contains,\n  errorPrefix as errorPrefixFxn,\n  safeGet,\n  stringLength\n} from '@firebase/util';\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport {\n  Path,\n  pathChild,\n  pathCompare,\n  pathContains,\n  pathGetBack,\n  pathGetFront,\n  pathSlice,\n  ValidationPath,\n  validationPathPop,\n  validationPathPush,\n  validationPathToErrorString\n} from './Path';\nimport { each, isInvalidJSONNumber } from './util';\n\n/**\n * True for invalid Firebase keys\n */\nexport const INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n\n/**\n * True for invalid Firebase paths.\n * Allows '/' in paths.\n */\nexport const INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n\n/**\n * Maximum number of characters to allow in leaf value\n */\nexport const MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n\nexport const isValidKey = function (key: unknown): boolean {\n  return (\n    typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key)\n  );\n};\n\nexport const isValidPathString = function (pathString: string): boolean {\n  return (\n    typeof pathString === 'string' &&\n    pathString.length !== 0 &&\n    !INVALID_PATH_REGEX_.test(pathString)\n  );\n};\n\nexport const isValidRootPathString = function (pathString: string): boolean {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  return isValidPathString(pathString);\n};\n\nexport const isValidPriority = function (priority: unknown): boolean {\n  return (\n    priority === null ||\n    typeof priority === 'string' ||\n    (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\n    (priority &&\n      typeof priority === 'object' &&\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      contains(priority as any, '.sv'))\n  );\n};\n\n/**\n * Pre-validate a datum passed as an argument to Firebase function.\n */\nexport const validateFirebaseDataArg = function (\n  fnName: string,\n  value: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && value === undefined) {\n    return;\n  }\n\n  validateFirebaseData(errorPrefixFxn(fnName, 'value'), value, path);\n};\n\n/**\n * Validate a data object client-side before sending to server.\n */\nexport const validateFirebaseData = function (\n  errorPrefix: string,\n  data: unknown,\n  path_: Path | ValidationPath\n) {\n  const path =\n    path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\n\n  if (data === undefined) {\n    throw new Error(\n      errorPrefix + 'contains undefined ' + validationPathToErrorString(path)\n    );\n  }\n  if (typeof data === 'function') {\n    throw new Error(\n      errorPrefix +\n        'contains a function ' +\n        validationPathToErrorString(path) +\n        ' with contents = ' +\n        data.toString()\n    );\n  }\n  if (isInvalidJSONNumber(data)) {\n    throw new Error(\n      errorPrefix +\n        'contains ' +\n        data.toString() +\n        ' ' +\n        validationPathToErrorString(path)\n    );\n  }\n\n  // Check max leaf size, but try to avoid the utf8 conversion if we can.\n  if (\n    typeof data === 'string' &&\n    data.length > MAX_LEAF_SIZE_ / 3 &&\n    stringLength(data) > MAX_LEAF_SIZE_\n  ) {\n    throw new Error(\n      errorPrefix +\n        'contains a string greater than ' +\n        MAX_LEAF_SIZE_ +\n        ' utf8 bytes ' +\n        validationPathToErrorString(path) +\n        \" ('\" +\n        data.substring(0, 50) +\n        \"...')\"\n    );\n  }\n\n  // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n  // to save extra walking of large objects.\n  if (data && typeof data === 'object') {\n    let hasDotValue = false;\n    let hasActualChild = false;\n    each(data, (key: string, value: unknown) => {\n      if (key === '.value') {\n        hasDotValue = true;\n      } else if (key !== '.priority' && key !== '.sv') {\n        hasActualChild = true;\n        if (!isValidKey(key)) {\n          throw new Error(\n            errorPrefix +\n              ' contains an invalid key (' +\n              key +\n              ') ' +\n              validationPathToErrorString(path) +\n              '.  Keys must be non-empty strings ' +\n              'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n          );\n        }\n      }\n\n      validationPathPush(path, key);\n      validateFirebaseData(errorPrefix, value, path);\n      validationPathPop(path);\n    });\n\n    if (hasDotValue && hasActualChild) {\n      throw new Error(\n        errorPrefix +\n          ' contains \".value\" child ' +\n          validationPathToErrorString(path) +\n          ' in addition to actual children.'\n      );\n    }\n  }\n};\n\n/**\n * Pre-validate paths passed in the firebase function.\n */\nexport const validateFirebaseMergePaths = function (\n  errorPrefix: string,\n  mergePaths: Path[]\n) {\n  let i, curPath: Path;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    const keys = pathSlice(curPath);\n    for (let j = 0; j < keys.length; j++) {\n      if (keys[j] === '.priority' && j === keys.length - 1) {\n        // .priority is OK\n      } else if (!isValidKey(keys[j])) {\n        throw new Error(\n          errorPrefix +\n            'contains an invalid key (' +\n            keys[j] +\n            ') in path ' +\n            curPath.toString() +\n            '. Keys must be non-empty strings ' +\n            'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n        );\n      }\n    }\n  }\n\n  // Check that update keys are not descendants of each other.\n  // We rely on the property that sorting guarantees that ancestors come\n  // right before descendants.\n  mergePaths.sort(pathCompare);\n  let prevPath: Path | null = null;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    if (prevPath !== null && pathContains(prevPath, curPath)) {\n      throw new Error(\n        errorPrefix +\n          'contains a path ' +\n          prevPath.toString() +\n          ' that is ancestor of another path ' +\n          curPath.toString()\n      );\n    }\n    prevPath = curPath;\n  }\n};\n\n/**\n * pre-validate an object passed as an argument to firebase function (\n * must be an object - e.g. for firebase.update()).\n */\nexport const validateFirebaseMergeDataArg = function (\n  fnName: string,\n  data: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  const errorPrefix = errorPrefixFxn(fnName, 'values');\n\n  if (!(data && typeof data === 'object') || Array.isArray(data)) {\n    throw new Error(\n      errorPrefix + ' must be an object containing the children to replace.'\n    );\n  }\n\n  const mergePaths: Path[] = [];\n  each(data, (key: string, value: unknown) => {\n    const curPath = new Path(key);\n    validateFirebaseData(errorPrefix, value, pathChild(path, curPath));\n    if (pathGetBack(curPath) === '.priority') {\n      if (!isValidPriority(value)) {\n        throw new Error(\n          errorPrefix +\n            \"contains an invalid value for '\" +\n            curPath.toString() +\n            \"', which must be a valid \" +\n            'Firebase priority (a string, finite number, server value, or null).'\n        );\n      }\n    }\n    mergePaths.push(curPath);\n  });\n  validateFirebaseMergePaths(errorPrefix, mergePaths);\n};\n\nexport const validatePriority = function (\n  fnName: string,\n  priority: unknown,\n  optional: boolean\n) {\n  if (optional && priority === undefined) {\n    return;\n  }\n  if (isInvalidJSONNumber(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'priority') +\n        'is ' +\n        priority.toString() +\n        ', but must be a valid Firebase priority (a string, finite number, ' +\n        'server value, or null).'\n    );\n  }\n  // Special case to allow importing data with a .sv.\n  if (!isValidPriority(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'priority') +\n        'must be a valid Firebase priority ' +\n        '(a string, finite number, server value, or null).'\n    );\n  }\n};\n\nexport const validateKey = function (\n  fnName: string,\n  argumentName: string,\n  key: string,\n  optional: boolean\n) {\n  if (optional && key === undefined) {\n    return;\n  }\n  if (!isValidKey(key)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) +\n        'was an invalid key = \"' +\n        key +\n        '\".  Firebase keys must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").'\n    );\n  }\n};\n\n/**\n * @internal\n */\nexport const validatePathString = function (\n  fnName: string,\n  argumentName: string,\n  pathString: string,\n  optional: boolean\n) {\n  if (optional && pathString === undefined) {\n    return;\n  }\n\n  if (!isValidPathString(pathString)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) +\n        'was an invalid path = \"' +\n        pathString +\n        '\". Paths must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"'\n    );\n  }\n};\n\nexport const validateRootPathString = function (\n  fnName: string,\n  argumentName: string,\n  pathString: string,\n  optional: boolean\n) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  validatePathString(fnName, argumentName, pathString, optional);\n};\n\n/**\n * @internal\n */\nexport const validateWritablePath = function (fnName: string, path: Path) {\n  if (pathGetFront(path) === '.info') {\n    throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n  }\n};\n\nexport const validateUrl = function (\n  fnName: string,\n  parsedUrl: { repoInfo: RepoInfo; path: Path }\n) {\n  // TODO = Validate server better.\n  const pathString = parsedUrl.path.toString();\n  if (\n    !(typeof parsedUrl.repoInfo.host === 'string') ||\n    parsedUrl.repoInfo.host.length === 0 ||\n    (!isValidKey(parsedUrl.repoInfo.namespace) &&\n      parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\n    (pathString.length !== 0 && !isValidRootPathString(pathString))\n  ) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'url') +\n        'must be a valid firebase URL and ' +\n        'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".'\n    );\n  }\n};\n\nexport const validateString = function (\n  fnName: string,\n  argumentName: string,\n  string: unknown,\n  optional: boolean\n) {\n  if (optional && string === undefined) {\n    return;\n  }\n  if (!(typeof string === 'string')) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a valid string.'\n    );\n  }\n};\n\nexport const validateObject = function (\n  fnName: string,\n  argumentName: string,\n  obj: unknown,\n  optional: boolean\n) {\n  if (optional && obj === undefined) {\n    return;\n  }\n  if (!(obj && typeof obj === 'object') || obj === null) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a valid object.'\n    );\n  }\n};\n\nexport const validateObjectContainsKey = function (\n  fnName: string,\n  argumentName: string,\n  obj: unknown,\n  key: string,\n  optional: boolean,\n  optType?: string\n) {\n  const objectContainsKey =\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    obj && typeof obj === 'object' && contains(obj as any, key);\n\n  if (!objectContainsKey) {\n    if (optional) {\n      return;\n    } else {\n      throw new Error(\n        errorPrefixFxn(fnName, argumentName) +\n          'must contain the key \"' +\n          key +\n          '\"'\n      );\n    }\n  }\n\n  if (optType) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const val = safeGet(obj as any, key);\n    if (\n      (optType === 'number' && !(typeof val === 'number')) ||\n      (optType === 'string' && !(typeof val === 'string')) ||\n      (optType === 'boolean' && !(typeof val === 'boolean')) ||\n      (optType === 'function' && !(typeof val === 'function')) ||\n      (optType === 'object' && !(typeof val === 'object') && val)\n    ) {\n      if (optional) {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentName) +\n            'contains invalid value for key \"' +\n            key +\n            '\" (must be of type \"' +\n            optType +\n            '\")'\n        );\n      } else {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentName) +\n            'must contain the key \"' +\n            key +\n            '\" with type \"' +\n            optType +\n            '\"'\n        );\n      }\n    }\n  }\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path, pathContains, pathEquals } from '../util/Path';\nimport { exceptionGuard, log, logger } from '../util/util';\n\nimport { Event } from './Event';\n\n/**\n * The event queue serves a few purposes:\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\n *    events being queued.\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\n *    left off, ensuring that the events are still raised synchronously and in order.\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\n *    events are raised synchronously.\n *\n * NOTE: This can all go away if/when we move to async events.\n *\n */\nexport class EventQueue {\n  eventLists_: EventList[] = [];\n\n  /**\n   * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\n   */\n  recursionDepth_ = 0;\n}\n\n/**\n * @param eventDataList - The new events to queue.\n */\nexport function eventQueueQueueEvents(\n  eventQueue: EventQueue,\n  eventDataList: Event[]\n) {\n  // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n  let currList: EventList | null = null;\n  for (let i = 0; i < eventDataList.length; i++) {\n    const data = eventDataList[i];\n    const path = data.getPath();\n    if (currList !== null && !pathEquals(path, currList.path)) {\n      eventQueue.eventLists_.push(currList);\n      currList = null;\n    }\n\n    if (currList === null) {\n      currList = { events: [], path };\n    }\n\n    currList.events.push(data);\n  }\n  if (currList) {\n    eventQueue.eventLists_.push(currList);\n  }\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones)\n * for the specified path.\n *\n * It is assumed that the new events are all for the specified path.\n *\n * @param path - The path to raise events for.\n * @param eventDataList - The new events to raise.\n */\nexport function eventQueueRaiseEventsAtPath(\n  eventQueue: EventQueue,\n  path: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, eventPath =>\n    pathEquals(eventPath, path)\n  );\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\n * locations related to the specified change path (i.e. all ancestors and descendants).\n *\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\n *\n * @param changedPath - The path to raise events for.\n * @param eventDataList - The events to raise\n */\nexport function eventQueueRaiseEventsForChangedPath(\n  eventQueue: EventQueue,\n  changedPath: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(\n    eventQueue,\n    eventPath =>\n      pathContains(eventPath, changedPath) ||\n      pathContains(changedPath, eventPath)\n  );\n}\n\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(\n  eventQueue: EventQueue,\n  predicate: (path: Path) => boolean\n) {\n  eventQueue.recursionDepth_++;\n\n  let sentAll = true;\n  for (let i = 0; i < eventQueue.eventLists_.length; i++) {\n    const eventList = eventQueue.eventLists_[i];\n    if (eventList) {\n      const eventPath = eventList.path;\n      if (predicate(eventPath)) {\n        eventListRaise(eventQueue.eventLists_[i]);\n        eventQueue.eventLists_[i] = null;\n      } else {\n        sentAll = false;\n      }\n    }\n  }\n\n  if (sentAll) {\n    eventQueue.eventLists_ = [];\n  }\n\n  eventQueue.recursionDepth_--;\n}\n\ninterface EventList {\n  events: Event[];\n  path: Path;\n}\n\n/**\n * Iterates through the list and raises each event\n */\nfunction eventListRaise(eventList: EventList) {\n  for (let i = 0; i < eventList.events.length; i++) {\n    const eventData = eventList.events[i];\n    if (eventData !== null) {\n      eventList.events[i] = null;\n      const eventFn = eventData.getEventRunner();\n      if (logger) {\n        log('event: ' + eventData.toString());\n      }\n      exceptionGuard(eventFn);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  isEmpty,\n  map,\n  safeGet,\n  stringify\n} from '@firebase/util';\n\nimport { ValueEventRegistration } from '../api/Reference_impl';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { PersistentConnection } from './PersistentConnection';\nimport { ReadonlyRestClient } from './ReadonlyRestClient';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { nodeFromJSON } from './snap/nodeFromJSON';\nimport { SnapshotHolder } from './SnapshotHolder';\nimport {\n  newSparseSnapshotTree,\n  SparseSnapshotTree,\n  sparseSnapshotTreeForEachTree,\n  sparseSnapshotTreeForget,\n  sparseSnapshotTreeRemember\n} from './SparseSnapshotTree';\nimport { StatsCollection } from './stats/StatsCollection';\nimport { StatsListener } from './stats/StatsListener';\nimport {\n  statsManagerGetCollection,\n  statsManagerGetOrCreateReporter\n} from './stats/StatsManager';\nimport { StatsReporter, statsReporterIncludeStat } from './stats/StatsReporter';\nimport {\n  SyncTree,\n  syncTreeAckUserWrite,\n  syncTreeAddEventRegistration,\n  syncTreeApplyServerMerge,\n  syncTreeApplyServerOverwrite,\n  syncTreeApplyTaggedQueryMerge,\n  syncTreeApplyTaggedQueryOverwrite,\n  syncTreeApplyUserMerge,\n  syncTreeApplyUserOverwrite,\n  syncTreeCalcCompleteEventCache,\n  syncTreeGetServerValue,\n  syncTreeRemoveEventRegistration,\n  syncTreeTagForQuery\n} from './SyncTree';\nimport { Indexable } from './util/misc';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathPopFront\n} from './util/Path';\nimport {\n  generateWithValues,\n  resolveDeferredValueSnapshot,\n  resolveDeferredValueTree\n} from './util/ServerValues';\nimport {\n  Tree,\n  treeForEachAncestor,\n  treeForEachChild,\n  treeForEachDescendant,\n  treeGetPath,\n  treeGetValue,\n  treeHasChildren,\n  treeSetValue,\n  treeSubTree\n} from './util/Tree';\nimport {\n  beingCrawled,\n  each,\n  exceptionGuard,\n  log,\n  LUIDGenerator,\n  warn\n} from './util/util';\nimport { isValidPriority, validateFirebaseData } from './util/validation';\nimport { Event } from './view/Event';\nimport {\n  EventQueue,\n  eventQueueQueueEvents,\n  eventQueueRaiseEventsAtPath,\n  eventQueueRaiseEventsForChangedPath\n} from './view/EventQueue';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\n\nconst INTERRUPT_REASON = 'repo_interrupt';\n\n/**\n * If a transaction does not succeed after 25 retries, we abort it. Among other\n * things this ensure that if there's ever a bug causing a mismatch between\n * client / server hashes for some data, we won't retry indefinitely.\n */\nconst MAX_TRANSACTION_RETRIES = 25;\n\nconst enum TransactionStatus {\n  // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\n  // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\n  // mismatched hash.\n  RUN,\n\n  // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\n  // or rejected yet).\n  SENT,\n\n  // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\n  // removed when we get a chance to prune completed ones.\n  COMPLETED,\n\n  // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\n  // If it comes back as unsuccessful, we'll abort it.\n  SENT_NEEDS_ABORT,\n\n  // Temporary state used to mark transactions that need to be aborted.\n  NEEDS_ABORT\n}\n\ninterface Transaction {\n  path: Path;\n  update: (a: unknown) => unknown;\n  onComplete: (\n    error: Error | null,\n    committed: boolean,\n    node: Node | null\n  ) => void;\n  status: TransactionStatus;\n  order: number;\n  applyLocally: boolean;\n  retryCount: number;\n  unwatcher: () => void;\n  abortReason: string | null;\n  currentWriteId: number;\n  currentInputSnapshot: Node | null;\n  currentOutputSnapshotRaw: Node | null;\n  currentOutputSnapshotResolved: Node | null;\n}\n\n/**\n * A connection to a single data repository.\n */\nexport class Repo {\n  /** Key for uniquely identifying this repo, used in RepoManager */\n  readonly key: string;\n\n  dataUpdateCount = 0;\n  infoSyncTree_: SyncTree;\n  serverSyncTree_: SyncTree;\n\n  stats_: StatsCollection;\n  statsListener_: StatsListener | null = null;\n  eventQueue_ = new EventQueue();\n  nextWriteId_ = 1;\n  server_: ServerActions;\n  statsReporter_: StatsReporter;\n  infoData_: SnapshotHolder;\n  interceptServerDataCallback_: ((a: string, b: unknown) => void) | null = null;\n\n  /** A list of data pieces and paths to be set when this client disconnects. */\n  onDisconnect_: SparseSnapshotTree = newSparseSnapshotTree();\n\n  /** Stores queues of outstanding transactions for Firebase locations. */\n  transactionQueueTree_ = new Tree<Transaction[]>();\n\n  // TODO: This should be @private but it's used by test_access.js and internal.js\n  persistentConnection_: PersistentConnection | null = null;\n\n  constructor(\n    public repoInfo_: RepoInfo,\n    public forceRestClient_: boolean,\n    public authTokenProvider_: AuthTokenProvider,\n    public appCheckProvider_: AppCheckTokenProvider\n  ) {\n    // This key is intentionally not updated if RepoInfo is later changed or replaced\n    this.key = this.repoInfo_.toURLString();\n  }\n\n  /**\n   * @returns The URL corresponding to the root of this Firebase.\n   */\n  toString(): string {\n    return (\n      (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host\n    );\n  }\n}\n\nexport function repoStart(\n  repo: Repo,\n  appId: string,\n  authOverride?: object\n): void {\n  repo.stats_ = statsManagerGetCollection(repo.repoInfo_);\n\n  if (repo.forceRestClient_ || beingCrawled()) {\n    repo.server_ = new ReadonlyRestClient(\n      repo.repoInfo_,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      repo.authTokenProvider_,\n      repo.appCheckProvider_\n    );\n\n    // Minor hack: Fire onConnect immediately, since there's no actual connection.\n    setTimeout(() => repoOnConnectStatus(repo, /* connectStatus= */ true), 0);\n  } else {\n    // Validate authOverride\n    if (typeof authOverride !== 'undefined' && authOverride !== null) {\n      if (typeof authOverride !== 'object') {\n        throw new Error(\n          'Only objects are supported for option databaseAuthVariableOverride'\n        );\n      }\n      try {\n        stringify(authOverride);\n      } catch (e) {\n        throw new Error('Invalid authOverride provided: ' + e);\n      }\n    }\n\n    repo.persistentConnection_ = new PersistentConnection(\n      repo.repoInfo_,\n      appId,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      (connectStatus: boolean) => {\n        repoOnConnectStatus(repo, connectStatus);\n      },\n      (updates: object) => {\n        repoOnServerInfoUpdate(repo, updates);\n      },\n      repo.authTokenProvider_,\n      repo.appCheckProvider_,\n      authOverride\n    );\n\n    repo.server_ = repo.persistentConnection_;\n  }\n\n  repo.authTokenProvider_.addTokenChangeListener(token => {\n    repo.server_.refreshAuthToken(token);\n  });\n\n  repo.appCheckProvider_.addTokenChangeListener(result => {\n    repo.server_.refreshAppCheckToken(result.token);\n  });\n\n  // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n  // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n  repo.statsReporter_ = statsManagerGetOrCreateReporter(\n    repo.repoInfo_,\n    () => new StatsReporter(repo.stats_, repo.server_)\n  );\n\n  // Used for .info.\n  repo.infoData_ = new SnapshotHolder();\n  repo.infoSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      let infoEvents: Event[] = [];\n      const node = repo.infoData_.getNode(query._path);\n      // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n      // on initial data...\n      if (!node.isEmpty()) {\n        infoEvents = syncTreeApplyServerOverwrite(\n          repo.infoSyncTree_,\n          query._path,\n          node\n        );\n        setTimeout(() => {\n          onComplete('ok');\n        }, 0);\n      }\n      return infoEvents;\n    },\n    stopListening: () => {}\n  });\n  repoUpdateInfo(repo, 'connected', false);\n\n  repo.serverSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      repo.server_.listen(query, currentHashFn, tag, (status, data) => {\n        const events = onComplete(status, data);\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          query._path,\n          events\n        );\n      });\n      // No synchronous events for network-backed sync trees\n      return [];\n    },\n    stopListening: (query, tag) => {\n      repo.server_.unlisten(query, tag);\n    }\n  });\n}\n\n/**\n * @returns The time in milliseconds, taking the server offset into account if we have one.\n */\nexport function repoServerTime(repo: Repo): number {\n  const offsetNode = repo.infoData_.getNode(new Path('.info/serverTimeOffset'));\n  const offset = (offsetNode.val() as number) || 0;\n  return new Date().getTime() + offset;\n}\n\n/**\n * Generate ServerValues using some variables from the repo object.\n */\nexport function repoGenerateServerValues(repo: Repo): Indexable {\n  return generateWithValues({\n    timestamp: repoServerTime(repo)\n  });\n}\n\n/**\n * Called by realtime when we get new messages from the server.\n */\nfunction repoOnDataUpdate(\n  repo: Repo,\n  pathString: string,\n  data: unknown,\n  isMerge: boolean,\n  tag: number | null\n): void {\n  // For testing.\n  repo.dataUpdateCount++;\n  const path = new Path(pathString);\n  data = repo.interceptServerDataCallback_\n    ? repo.interceptServerDataCallback_(pathString, data)\n    : data;\n  let events = [];\n  if (tag) {\n    if (isMerge) {\n      const taggedChildren = map(\n        data as { [k: string]: unknown },\n        (raw: unknown) => nodeFromJSON(raw)\n      );\n      events = syncTreeApplyTaggedQueryMerge(\n        repo.serverSyncTree_,\n        path,\n        taggedChildren,\n        tag\n      );\n    } else {\n      const taggedSnap = nodeFromJSON(data);\n      events = syncTreeApplyTaggedQueryOverwrite(\n        repo.serverSyncTree_,\n        path,\n        taggedSnap,\n        tag\n      );\n    }\n  } else if (isMerge) {\n    const changedChildren = map(\n      data as { [k: string]: unknown },\n      (raw: unknown) => nodeFromJSON(raw)\n    );\n    events = syncTreeApplyServerMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren\n    );\n  } else {\n    const snap = nodeFromJSON(data);\n    events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap);\n  }\n  let affectedPath = path;\n  if (events.length > 0) {\n    // Since we have a listener outstanding for each transaction, receiving any events\n    // is a proxy for some change having occurred.\n    affectedPath = repoRerunTransactions(repo, path);\n  }\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, events);\n}\n\n// TODO: This should be @private but it's used by test_access.js and internal.js\nexport function repoInterceptServerData(\n  repo: Repo,\n  callback: ((a: string, b: unknown) => unknown) | null\n): void {\n  repo.interceptServerDataCallback_ = callback;\n}\n\nfunction repoOnConnectStatus(repo: Repo, connectStatus: boolean): void {\n  repoUpdateInfo(repo, 'connected', connectStatus);\n  if (connectStatus === false) {\n    repoRunOnDisconnectEvents(repo);\n  }\n}\n\nfunction repoOnServerInfoUpdate(repo: Repo, updates: object): void {\n  each(updates, (key: string, value: unknown) => {\n    repoUpdateInfo(repo, key, value);\n  });\n}\n\nfunction repoUpdateInfo(repo: Repo, pathString: string, value: unknown): void {\n  const path = new Path('/.info/' + pathString);\n  const newNode = nodeFromJSON(value);\n  repo.infoData_.updateSnapshot(path, newNode);\n  const events = syncTreeApplyServerOverwrite(\n    repo.infoSyncTree_,\n    path,\n    newNode\n  );\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n}\n\nfunction repoGetNextWriteId(repo: Repo): number {\n  return repo.nextWriteId_++;\n}\n\n/**\n * The purpose of `getValue` is to return the latest known value\n * satisfying `query`.\n *\n * This method will first check for in-memory cached values\n * belonging to active listeners. If they are found, such values\n * are considered to be the most up-to-date.\n *\n * If the client is not connected, this method will wait until the\n *  repo has established a connection and then request the value for `query`.\n * If the client is not able to retrieve the query result for another reason,\n * it reports an error.\n *\n * @param query - The query to surface a value for.\n */\nexport function repoGetValue(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: ValueEventRegistration\n): Promise<Node> {\n  // Only active queries are cached. There is no persisted cache.\n  const cached = syncTreeGetServerValue(repo.serverSyncTree_, query);\n  if (cached != null) {\n    return Promise.resolve(cached);\n  }\n  return repo.server_.get(query).then(\n    payload => {\n      const node = nodeFromJSON(payload).withIndex(\n        query._queryParams.getIndex()\n      );\n      /**\n       * Below we simulate the actions of an `onlyOnce` `onValue()` event where:\n       * Add an event registration,\n       * Update data at the path,\n       * Raise any events,\n       * Cleanup the SyncTree\n       */\n      syncTreeAddEventRegistration(\n        repo.serverSyncTree_,\n        query,\n        eventRegistration,\n        true\n      );\n      let events: Event[];\n      if (query._queryParams.loadsAllData()) {\n        events = syncTreeApplyServerOverwrite(\n          repo.serverSyncTree_,\n          query._path,\n          node\n        );\n      } else {\n        const tag = syncTreeTagForQuery(repo.serverSyncTree_, query);\n        events = syncTreeApplyTaggedQueryOverwrite(\n          repo.serverSyncTree_,\n          query._path,\n          node,\n          tag\n        );\n      }\n      /*\n       * We need to raise events in the scenario where `get()` is called at a parent path, and\n       * while the `get()` is pending, `onValue` is called at a child location. While get() is waiting\n       * for the data, `onValue` will register a new event. Then, get() will come back, and update the syncTree\n       * and its corresponding serverCache, including the child location where `onValue` is called. Then,\n       * `onValue` will receive the event from the server, but look at the syncTree and see that the data received\n       * from the server is already at the SyncPoint, and so the `onValue` callback will never get fired.\n       * Calling `eventQueueRaiseEventsForChangedPath()` is the correct way to propagate the events and\n       * ensure the corresponding child events will get fired.\n       */\n      eventQueueRaiseEventsForChangedPath(\n        repo.eventQueue_,\n        query._path,\n        events\n      );\n      syncTreeRemoveEventRegistration(\n        repo.serverSyncTree_,\n        query,\n        eventRegistration,\n        null,\n        true\n      );\n      return node;\n    },\n    err => {\n      repoLog(repo, 'get for query ' + stringify(query) + ' failed: ' + err);\n      return Promise.reject(new Error(err as string));\n    }\n  );\n}\n\nexport function repoSetWithPriority(\n  repo: Repo,\n  path: Path,\n  newVal: unknown,\n  newPriority: number | string | null,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'set', {\n    path: path.toString(),\n    value: newVal,\n    priority: newPriority\n  });\n\n  // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n  // (b) store unresolved paths on JSON parse\n  const serverValues = repoGenerateServerValues(repo);\n  const newNodeUnresolved = nodeFromJSON(newVal, newPriority);\n  const existing = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path);\n  const newNode = resolveDeferredValueSnapshot(\n    newNodeUnresolved,\n    existing,\n    serverValues\n  );\n\n  const writeId = repoGetNextWriteId(repo);\n  const events = syncTreeApplyUserOverwrite(\n    repo.serverSyncTree_,\n    path,\n    newNode,\n    writeId,\n    true\n  );\n  eventQueueQueueEvents(repo.eventQueue_, events);\n  repo.server_.put(\n    path.toString(),\n    newNodeUnresolved.val(/*export=*/ true),\n    (status, errorReason) => {\n      const success = status === 'ok';\n      if (!success) {\n        warn('set at ' + path + ' failed: ' + status);\n      }\n\n      const clearEvents = syncTreeAckUserWrite(\n        repo.serverSyncTree_,\n        writeId,\n        !success\n      );\n      eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, clearEvents);\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n  const affectedPath = repoAbortTransactions(repo, path);\n  repoRerunTransactions(repo, affectedPath);\n  // We queued the events above, so just flush the queue here\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, []);\n}\n\nexport function repoUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'update', { path: path.toString(), value: childrenToMerge });\n\n  // Start with our existing data and merge each child into it.\n  let empty = true;\n  const serverValues = repoGenerateServerValues(repo);\n  const changedChildren: { [k: string]: Node } = {};\n  each(childrenToMerge, (changedKey: string, changedValue: unknown) => {\n    empty = false;\n    changedChildren[changedKey] = resolveDeferredValueTree(\n      pathChild(path, changedKey),\n      nodeFromJSON(changedValue),\n      repo.serverSyncTree_,\n      serverValues\n    );\n  });\n\n  if (!empty) {\n    const writeId = repoGetNextWriteId(repo);\n    const events = syncTreeApplyUserMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren,\n      writeId\n    );\n    eventQueueQueueEvents(repo.eventQueue_, events);\n    repo.server_.merge(\n      path.toString(),\n      childrenToMerge,\n      (status, errorReason) => {\n        const success = status === 'ok';\n        if (!success) {\n          warn('update at ' + path + ' failed: ' + status);\n        }\n\n        const clearEvents = syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          writeId,\n          !success\n        );\n        const affectedPath =\n          clearEvents.length > 0 ? repoRerunTransactions(repo, path) : path;\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          affectedPath,\n          clearEvents\n        );\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n      }\n    );\n\n    each(childrenToMerge, (changedPath: string) => {\n      const affectedPath = repoAbortTransactions(\n        repo,\n        pathChild(path, changedPath)\n      );\n      repoRerunTransactions(repo, affectedPath);\n    });\n\n    // We queued the events above, so just flush the queue here\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, []);\n  } else {\n    log(\"update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n  }\n}\n\n/**\n * Applies all of the changes stored up in the onDisconnect_ tree.\n */\nfunction repoRunOnDisconnectEvents(repo: Repo): void {\n  repoLog(repo, 'onDisconnectEvents');\n\n  const serverValues = repoGenerateServerValues(repo);\n  const resolvedOnDisconnectTree = newSparseSnapshotTree();\n  sparseSnapshotTreeForEachTree(\n    repo.onDisconnect_,\n    newEmptyPath(),\n    (path, node) => {\n      const resolved = resolveDeferredValueTree(\n        path,\n        node,\n        repo.serverSyncTree_,\n        serverValues\n      );\n      sparseSnapshotTreeRemember(resolvedOnDisconnectTree, path, resolved);\n    }\n  );\n  let events: Event[] = [];\n\n  sparseSnapshotTreeForEachTree(\n    resolvedOnDisconnectTree,\n    newEmptyPath(),\n    (path, snap) => {\n      events = events.concat(\n        syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap)\n      );\n      const affectedPath = repoAbortTransactions(repo, path);\n      repoRerunTransactions(repo, affectedPath);\n    }\n  );\n\n  repo.onDisconnect_ = newSparseSnapshotTree();\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, newEmptyPath(), events);\n}\n\nexport function repoOnDisconnectCancel(\n  repo: Repo,\n  path: Path,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repo.server_.onDisconnectCancel(path.toString(), (status, errorReason) => {\n    if (status === 'ok') {\n      sparseSnapshotTreeForget(repo.onDisconnect_, path);\n    }\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nexport function repoOnDisconnectSet(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectSetWithPriority(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  priority: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value, priority);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  if (isEmpty(childrenToMerge)) {\n    log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n    return;\n  }\n\n  repo.server_.onDisconnectMerge(\n    path.toString(),\n    childrenToMerge,\n    (status, errorReason) => {\n      if (status === 'ok') {\n        each(childrenToMerge, (childName: string, childNode: unknown) => {\n          const newChildNode = nodeFromJSON(childNode);\n          sparseSnapshotTreeRemember(\n            repo.onDisconnect_,\n            pathChild(path, childName),\n            newChildNode\n          );\n        });\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoAddEventCallbackForQuery(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): void {\n  let events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeAddEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeAddEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nexport function repoRemoveEventCallbackForQuery(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): void {\n  // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n  // a little bit by handling the return values anyways.\n  let events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeRemoveEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeRemoveEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nexport function repoInterrupt(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.interrupt(INTERRUPT_REASON);\n  }\n}\n\nexport function repoResume(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.resume(INTERRUPT_REASON);\n  }\n}\n\nexport function repoStats(repo: Repo, showDelta: boolean = false): void {\n  if (typeof console === 'undefined') {\n    return;\n  }\n\n  let stats: { [k: string]: unknown };\n  if (showDelta) {\n    if (!repo.statsListener_) {\n      repo.statsListener_ = new StatsListener(repo.stats_);\n    }\n    stats = repo.statsListener_.get();\n  } else {\n    stats = repo.stats_.get();\n  }\n\n  const longestName = Object.keys(stats).reduce(\n    (previousValue, currentValue) =>\n      Math.max(currentValue.length, previousValue),\n    0\n  );\n\n  each(stats, (stat: string, value: unknown) => {\n    let paddedStat = stat;\n    // pad stat names to be the same length (plus 2 extra spaces).\n    for (let i = stat.length; i < longestName + 2; i++) {\n      paddedStat += ' ';\n    }\n    console.log(paddedStat + value);\n  });\n}\n\nexport function repoStatsIncrementCounter(repo: Repo, metric: string): void {\n  repo.stats_.incrementCounter(metric);\n  statsReporterIncludeStat(repo.statsReporter_, metric);\n}\n\nfunction repoLog(repo: Repo, ...varArgs: unknown[]): void {\n  let prefix = '';\n  if (repo.persistentConnection_) {\n    prefix = repo.persistentConnection_.id + ':';\n  }\n  log(prefix, ...varArgs);\n}\n\nexport function repoCallOnCompleteCallback(\n  repo: Repo,\n  callback: ((status: Error | null, errorReason?: string) => void) | null,\n  status: string,\n  errorReason?: string | null\n): void {\n  if (callback) {\n    exceptionGuard(() => {\n      if (status === 'ok') {\n        callback(null);\n      } else {\n        const code = (status || 'error').toUpperCase();\n        let message = code;\n        if (errorReason) {\n          message += ': ' + errorReason;\n        }\n\n        const error = new Error(message);\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (error as any).code = code;\n        callback(error);\n      }\n    });\n  }\n}\n\n/**\n * Creates a new transaction, adds it to the transactions we're tracking, and\n * sends it to the server if possible.\n *\n * @param path - Path at which to do transaction.\n * @param transactionUpdate - Update callback.\n * @param onComplete - Completion callback.\n * @param unwatcher - Function that will be called when the transaction no longer\n * need data updates for `path`.\n * @param applyLocally - Whether or not to make intermediate results visible\n */\nexport function repoStartTransaction(\n  repo: Repo,\n  path: Path,\n  transactionUpdate: (a: unknown) => unknown,\n  onComplete: ((error: Error, committed: boolean, node: Node) => void) | null,\n  unwatcher: () => void,\n  applyLocally: boolean\n): void {\n  repoLog(repo, 'transaction on ' + path);\n\n  // Initialize transaction.\n  const transaction: Transaction = {\n    path,\n    update: transactionUpdate,\n    onComplete,\n    // One of TransactionStatus enums.\n    status: null,\n    // Used when combining transactions at different locations to figure out\n    // which one goes first.\n    order: LUIDGenerator(),\n    // Whether to raise local events for this transaction.\n    applyLocally,\n    // Count of how many times we've retried the transaction.\n    retryCount: 0,\n    // Function to call to clean up our .on() listener.\n    unwatcher,\n    // Stores why a transaction was aborted.\n    abortReason: null,\n    currentWriteId: null,\n    currentInputSnapshot: null,\n    currentOutputSnapshotRaw: null,\n    currentOutputSnapshotResolved: null\n  };\n\n  // Run transaction initially.\n  const currentState = repoGetLatestState(repo, path, undefined);\n  transaction.currentInputSnapshot = currentState;\n  const newVal = transaction.update(currentState.val());\n  if (newVal === undefined) {\n    // Abort transaction.\n    transaction.unwatcher();\n    transaction.currentOutputSnapshotRaw = null;\n    transaction.currentOutputSnapshotResolved = null;\n    if (transaction.onComplete) {\n      transaction.onComplete(null, false, transaction.currentInputSnapshot);\n    }\n  } else {\n    validateFirebaseData(\n      'transaction failed: Data returned ',\n      newVal,\n      transaction.path\n    );\n\n    // Mark as run and add to our queue.\n    transaction.status = TransactionStatus.RUN;\n    const queueNode = treeSubTree(repo.transactionQueueTree_, path);\n    const nodeQueue = treeGetValue(queueNode) || [];\n    nodeQueue.push(transaction);\n\n    treeSetValue(queueNode, nodeQueue);\n\n    // Update visibleData and raise events\n    // Note: We intentionally raise events after updating all of our\n    // transaction state, since the user could start new transactions from the\n    // event callbacks.\n    let priorityForNode;\n    if (\n      typeof newVal === 'object' &&\n      newVal !== null &&\n      contains(newVal, '.priority')\n    ) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      priorityForNode = safeGet(newVal as any, '.priority');\n      assert(\n        isValidPriority(priorityForNode),\n        'Invalid priority returned by transaction. ' +\n          'Priority must be a valid string, finite number, server value, or null.'\n      );\n    } else {\n      const currentNode =\n        syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path) ||\n        ChildrenNode.EMPTY_NODE;\n      priorityForNode = currentNode.getPriority().val();\n    }\n\n    const serverValues = repoGenerateServerValues(repo);\n    const newNodeUnresolved = nodeFromJSON(newVal, priorityForNode);\n    const newNode = resolveDeferredValueSnapshot(\n      newNodeUnresolved,\n      currentState,\n      serverValues\n    );\n    transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n    transaction.currentOutputSnapshotResolved = newNode;\n    transaction.currentWriteId = repoGetNextWriteId(repo);\n\n    const events = syncTreeApplyUserOverwrite(\n      repo.serverSyncTree_,\n      path,\n      newNode,\n      transaction.currentWriteId,\n      transaction.applyLocally\n    );\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n    repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n  }\n}\n\n/**\n * @param excludeSets - A specific set to exclude\n */\nfunction repoGetLatestState(\n  repo: Repo,\n  path: Path,\n  excludeSets?: number[]\n): Node {\n  return (\n    syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path, excludeSets) ||\n    ChildrenNode.EMPTY_NODE\n  );\n}\n\n/**\n * Sends any already-run transactions that aren't waiting for outstanding\n * transactions to complete.\n *\n * Externally it's called with no arguments, but it calls itself recursively\n * with a particular transactionQueueTree node to recurse through the tree.\n *\n * @param node - transactionQueueTree node to start at.\n */\nfunction repoSendReadyTransactions(\n  repo: Repo,\n  node: Tree<Transaction[]> = repo.transactionQueueTree_\n): void {\n  // Before recursing, make sure any completed transactions are removed.\n  if (!node) {\n    repoPruneCompletedTransactionsBelowNode(repo, node);\n  }\n\n  if (treeGetValue(node)) {\n    const queue = repoBuildTransactionQueue(repo, node);\n    assert(queue.length > 0, 'Sending zero length transaction queue');\n\n    const allRun = queue.every(\n      (transaction: Transaction) => transaction.status === TransactionStatus.RUN\n    );\n\n    // If they're all run (and not sent), we can send them.  Else, we must wait.\n    if (allRun) {\n      repoSendTransactionQueue(repo, treeGetPath(node), queue);\n    }\n  } else if (treeHasChildren(node)) {\n    treeForEachChild(node, childNode => {\n      repoSendReadyTransactions(repo, childNode);\n    });\n  }\n}\n\n/**\n * Given a list of run transactions, send them to the server and then handle\n * the result (success or failure).\n *\n * @param path - The location of the queue.\n * @param queue - Queue of transactions under the specified location.\n */\nfunction repoSendTransactionQueue(\n  repo: Repo,\n  path: Path,\n  queue: Transaction[]\n): void {\n  // Mark transactions as sent and increment retry count!\n  const setsToIgnore = queue.map(txn => {\n    return txn.currentWriteId;\n  });\n  const latestState = repoGetLatestState(repo, path, setsToIgnore);\n  let snapToSend = latestState;\n  const latestHash = latestState.hash();\n  for (let i = 0; i < queue.length; i++) {\n    const txn = queue[i];\n    assert(\n      txn.status === TransactionStatus.RUN,\n      'tryToSendTransactionQueue_: items in queue should all be run.'\n    );\n    txn.status = TransactionStatus.SENT;\n    txn.retryCount++;\n    const relativePath = newRelativePath(path, txn.path);\n    // If we've gotten to this point, the output snapshot must be defined.\n    snapToSend = snapToSend.updateChild(\n      relativePath /** @type {!Node} */,\n      txn.currentOutputSnapshotRaw\n    );\n  }\n\n  const dataToSend = snapToSend.val(true);\n  const pathToSend = path;\n\n  // Send the put.\n  repo.server_.put(\n    pathToSend.toString(),\n    dataToSend,\n    (status: string) => {\n      repoLog(repo, 'transaction put response', {\n        path: pathToSend.toString(),\n        status\n      });\n\n      let events: Event[] = [];\n      if (status === 'ok') {\n        // Queue up the callbacks and fire them after cleaning up all of our\n        // transaction state, since the callback could trigger more\n        // transactions or sets.\n        const callbacks = [];\n        for (let i = 0; i < queue.length; i++) {\n          queue[i].status = TransactionStatus.COMPLETED;\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId)\n          );\n          if (queue[i].onComplete) {\n            // We never unset the output snapshot, and given that this\n            // transaction is complete, it should be set\n            callbacks.push(() =>\n              queue[i].onComplete(\n                null,\n                true,\n                queue[i].currentOutputSnapshotResolved\n              )\n            );\n          }\n          queue[i].unwatcher();\n        }\n\n        // Now remove the completed transactions.\n        repoPruneCompletedTransactionsBelowNode(\n          repo,\n          treeSubTree(repo.transactionQueueTree_, path)\n        );\n        // There may be pending transactions that we can now send.\n        repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n        // Finally, trigger onComplete callbacks.\n        for (let i = 0; i < callbacks.length; i++) {\n          exceptionGuard(callbacks[i]);\n        }\n      } else {\n        // transactions are no longer sent.  Update their status appropriately.\n        if (status === 'datastale') {\n          for (let i = 0; i < queue.length; i++) {\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n              queue[i].status = TransactionStatus.NEEDS_ABORT;\n            } else {\n              queue[i].status = TransactionStatus.RUN;\n            }\n          }\n        } else {\n          warn(\n            'transaction at ' + pathToSend.toString() + ' failed: ' + status\n          );\n          for (let i = 0; i < queue.length; i++) {\n            queue[i].status = TransactionStatus.NEEDS_ABORT;\n            queue[i].abortReason = status;\n          }\n        }\n\n        repoRerunTransactions(repo, path);\n      }\n    },\n    latestHash\n  );\n}\n\n/**\n * Finds all transactions dependent on the data at changedPath and reruns them.\n *\n * Should be called any time cached data changes.\n *\n * Return the highest path that was affected by rerunning transactions. This\n * is the path at which events need to be raised for.\n *\n * @param changedPath - The path in mergedData that changed.\n * @returns The rootmost path that was affected by rerunning transactions.\n */\nfunction repoRerunTransactions(repo: Repo, changedPath: Path): Path {\n  const rootMostTransactionNode = repoGetAncestorTransactionNode(\n    repo,\n    changedPath\n  );\n  const path = treeGetPath(rootMostTransactionNode);\n\n  const queue = repoBuildTransactionQueue(repo, rootMostTransactionNode);\n  repoRerunTransactionQueue(repo, queue, path);\n\n  return path;\n}\n\n/**\n * Does all the work of rerunning transactions (as well as cleans up aborted\n * transactions and whatnot).\n *\n * @param queue - The queue of transactions to run.\n * @param path - The path the queue is for.\n */\nfunction repoRerunTransactionQueue(\n  repo: Repo,\n  queue: Transaction[],\n  path: Path\n): void {\n  if (queue.length === 0) {\n    return; // Nothing to do!\n  }\n\n  // Queue up the callbacks and fire them after cleaning up all of our\n  // transaction state, since the callback could trigger more transactions or\n  // sets.\n  const callbacks = [];\n  let events: Event[] = [];\n  // Ignore all of the sets we're going to re-run.\n  const txnsToRerun = queue.filter(q => {\n    return q.status === TransactionStatus.RUN;\n  });\n  const setsToIgnore = txnsToRerun.map(q => {\n    return q.currentWriteId;\n  });\n  for (let i = 0; i < queue.length; i++) {\n    const transaction = queue[i];\n    const relativePath = newRelativePath(path, transaction.path);\n    let abortTransaction = false,\n      abortReason;\n    assert(\n      relativePath !== null,\n      'rerunTransactionsUnderNode_: relativePath should not be null.'\n    );\n\n    if (transaction.status === TransactionStatus.NEEDS_ABORT) {\n      abortTransaction = true;\n      abortReason = transaction.abortReason;\n      events = events.concat(\n        syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          transaction.currentWriteId,\n          true\n        )\n      );\n    } else if (transaction.status === TransactionStatus.RUN) {\n      if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\n        abortTransaction = true;\n        abortReason = 'maxretry';\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            transaction.currentWriteId,\n            true\n          )\n        );\n      } else {\n        // This code reruns a transaction\n        const currentNode = repoGetLatestState(\n          repo,\n          transaction.path,\n          setsToIgnore\n        );\n        transaction.currentInputSnapshot = currentNode;\n        const newData = queue[i].update(currentNode.val());\n        if (newData !== undefined) {\n          validateFirebaseData(\n            'transaction failed: Data returned ',\n            newData,\n            transaction.path\n          );\n          let newDataNode = nodeFromJSON(newData);\n          const hasExplicitPriority =\n            typeof newData === 'object' &&\n            newData != null &&\n            contains(newData, '.priority');\n          if (!hasExplicitPriority) {\n            // Keep the old priority if there wasn't a priority explicitly specified.\n            newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n          }\n\n          const oldWriteId = transaction.currentWriteId;\n          const serverValues = repoGenerateServerValues(repo);\n          const newNodeResolved = resolveDeferredValueSnapshot(\n            newDataNode,\n            currentNode,\n            serverValues\n          );\n\n          transaction.currentOutputSnapshotRaw = newDataNode;\n          transaction.currentOutputSnapshotResolved = newNodeResolved;\n          transaction.currentWriteId = repoGetNextWriteId(repo);\n          // Mutates setsToIgnore in place\n          setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n          events = events.concat(\n            syncTreeApplyUserOverwrite(\n              repo.serverSyncTree_,\n              transaction.path,\n              newNodeResolved,\n              transaction.currentWriteId,\n              transaction.applyLocally\n            )\n          );\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, oldWriteId, true)\n          );\n        } else {\n          abortTransaction = true;\n          abortReason = 'nodata';\n          events = events.concat(\n            syncTreeAckUserWrite(\n              repo.serverSyncTree_,\n              transaction.currentWriteId,\n              true\n            )\n          );\n        }\n      }\n    }\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n    events = [];\n    if (abortTransaction) {\n      // Abort.\n      queue[i].status = TransactionStatus.COMPLETED;\n\n      // Removing a listener can trigger pruning which can muck with\n      // mergedData/visibleData (as it prunes data). So defer the unwatcher\n      // until we're done.\n      (function (unwatcher) {\n        setTimeout(unwatcher, Math.floor(0));\n      })(queue[i].unwatcher);\n\n      if (queue[i].onComplete) {\n        if (abortReason === 'nodata') {\n          callbacks.push(() =>\n            queue[i].onComplete(null, false, queue[i].currentInputSnapshot)\n          );\n        } else {\n          callbacks.push(() =>\n            queue[i].onComplete(new Error(abortReason), false, null)\n          );\n        }\n      }\n    }\n  }\n\n  // Clean up completed transactions.\n  repoPruneCompletedTransactionsBelowNode(repo, repo.transactionQueueTree_);\n\n  // Now fire callbacks, now that we're in a good, known state.\n  for (let i = 0; i < callbacks.length; i++) {\n    exceptionGuard(callbacks[i]);\n  }\n\n  // Try to send the transaction result to the server.\n  repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n}\n\n/**\n * Returns the rootmost ancestor node of the specified path that has a pending\n * transaction on it, or just returns the node for the given path if there are\n * no pending transactions on any ancestor.\n *\n * @param path - The location to start at.\n * @returns The rootmost node with a transaction.\n */\nfunction repoGetAncestorTransactionNode(\n  repo: Repo,\n  path: Path\n): Tree<Transaction[]> {\n  let front;\n\n  // Start at the root and walk deeper into the tree towards path until we\n  // find a node with pending transactions.\n  let transactionNode = repo.transactionQueueTree_;\n  front = pathGetFront(path);\n  while (front !== null && treeGetValue(transactionNode) === undefined) {\n    transactionNode = treeSubTree(transactionNode, front);\n    path = pathPopFront(path);\n    front = pathGetFront(path);\n  }\n\n  return transactionNode;\n}\n\n/**\n * Builds the queue of all transactions at or below the specified\n * transactionNode.\n *\n * @param transactionNode\n * @returns The generated queue.\n */\nfunction repoBuildTransactionQueue(\n  repo: Repo,\n  transactionNode: Tree<Transaction[]>\n): Transaction[] {\n  // Walk any child transaction queues and aggregate them into a single queue.\n  const transactionQueue: Transaction[] = [];\n  repoAggregateTransactionQueuesForNode(\n    repo,\n    transactionNode,\n    transactionQueue\n  );\n\n  // Sort them by the order the transactions were created.\n  transactionQueue.sort((a, b) => a.order - b.order);\n\n  return transactionQueue;\n}\n\nfunction repoAggregateTransactionQueuesForNode(\n  repo: Repo,\n  node: Tree<Transaction[]>,\n  queue: Transaction[]\n): void {\n  const nodeQueue = treeGetValue(node);\n  if (nodeQueue) {\n    for (let i = 0; i < nodeQueue.length; i++) {\n      queue.push(nodeQueue[i]);\n    }\n  }\n\n  treeForEachChild(node, child => {\n    repoAggregateTransactionQueuesForNode(repo, child, queue);\n  });\n}\n\n/**\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\n */\nfunction repoPruneCompletedTransactionsBelowNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    let to = 0;\n    for (let from = 0; from < queue.length; from++) {\n      if (queue[from].status !== TransactionStatus.COMPLETED) {\n        queue[to] = queue[from];\n        to++;\n      }\n    }\n    queue.length = to;\n    treeSetValue(node, queue.length > 0 ? queue : undefined);\n  }\n\n  treeForEachChild(node, childNode => {\n    repoPruneCompletedTransactionsBelowNode(repo, childNode);\n  });\n}\n\n/**\n * Aborts all transactions on ancestors or descendants of the specified path.\n * Called when doing a set() or update() since we consider them incompatible\n * with transactions.\n *\n * @param path - Path for which we want to abort related transactions.\n */\nfunction repoAbortTransactions(repo: Repo, path: Path): Path {\n  const affectedPath = treeGetPath(repoGetAncestorTransactionNode(repo, path));\n\n  const transactionNode = treeSubTree(repo.transactionQueueTree_, path);\n\n  treeForEachAncestor(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  repoAbortTransactionsOnNode(repo, transactionNode);\n\n  treeForEachDescendant(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  return affectedPath;\n}\n\n/**\n * Abort transactions stored in this transaction queue node.\n *\n * @param node - Node to abort transactions for.\n */\nfunction repoAbortTransactionsOnNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    // Queue up the callbacks and fire them after cleaning up all of our\n    // transaction state, since the callback could trigger more transactions\n    // or sets.\n    const callbacks = [];\n\n    // Go through queue.  Any already-sent transactions must be marked for\n    // abort, while the unsent ones can be immediately aborted and removed.\n    let events: Event[] = [];\n    let lastSent = -1;\n    for (let i = 0; i < queue.length; i++) {\n      if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n        // Already marked.  No action needed.\n      } else if (queue[i].status === TransactionStatus.SENT) {\n        assert(\n          lastSent === i - 1,\n          'All SENT items should be at beginning of queue.'\n        );\n        lastSent = i;\n        // Mark transaction for abort when it comes back.\n        queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\n        queue[i].abortReason = 'set';\n      } else {\n        assert(\n          queue[i].status === TransactionStatus.RUN,\n          'Unexpected transaction status in abort'\n        );\n        // We can abort it immediately.\n        queue[i].unwatcher();\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            queue[i].currentWriteId,\n            true\n          )\n        );\n        if (queue[i].onComplete) {\n          callbacks.push(\n            queue[i].onComplete.bind(null, new Error('set'), false, null)\n          );\n        }\n      }\n    }\n    if (lastSent === -1) {\n      // We're not waiting for any sent transactions.  We can clear the queue.\n      treeSetValue(node, undefined);\n    } else {\n      // Remove the transactions we aborted.\n      queue.length = lastSent + 1;\n    }\n\n    // Now fire the callbacks.\n    eventQueueRaiseEventsForChangedPath(\n      repo.eventQueue_,\n      treeGetPath(node),\n      events\n    );\n    for (let i = 0; i < callbacks.length; i++) {\n      exceptionGuard(callbacks[i]);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../../RepoInfo';\nimport { Path } from '../Path';\nimport { warnIfPageIsSecure, warn, fatal } from '../util';\n\nfunction decodePath(pathString: string): string {\n  let pathStringDecoded = '';\n  const pieces = pathString.split('/');\n  for (let i = 0; i < pieces.length; i++) {\n    if (pieces[i].length > 0) {\n      let piece = pieces[i];\n      try {\n        piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n      } catch (e) {}\n      pathStringDecoded += '/' + piece;\n    }\n  }\n  return pathStringDecoded;\n}\n\n/**\n * @returns key value hash\n */\nfunction decodeQuery(queryString: string): { [key: string]: string } {\n  const results = {};\n  if (queryString.charAt(0) === '?') {\n    queryString = queryString.substring(1);\n  }\n  for (const segment of queryString.split('&')) {\n    if (segment.length === 0) {\n      continue;\n    }\n    const kv = segment.split('=');\n    if (kv.length === 2) {\n      results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n    } else {\n      warn(`Invalid query segment '${segment}' in query '${queryString}'`);\n    }\n  }\n  return results;\n}\n\nexport const parseRepoInfo = function (\n  dataURL: string,\n  nodeAdmin: boolean\n): { repoInfo: RepoInfo; path: Path } {\n  const parsedUrl = parseDatabaseURL(dataURL),\n    namespace = parsedUrl.namespace;\n\n  if (parsedUrl.domain === 'firebase.com') {\n    fatal(\n      parsedUrl.host +\n        ' is no longer supported. ' +\n        'Please use <YOUR FIREBASE>.firebaseio.com instead'\n    );\n  }\n\n  // Catch common error of uninitialized namespace value.\n  if (\n    (!namespace || namespace === 'undefined') &&\n    parsedUrl.domain !== 'localhost'\n  ) {\n    fatal(\n      'Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com'\n    );\n  }\n\n  if (!parsedUrl.secure) {\n    warnIfPageIsSecure();\n  }\n\n  const webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n\n  return {\n    repoInfo: new RepoInfo(\n      parsedUrl.host,\n      parsedUrl.secure,\n      namespace,\n      webSocketOnly,\n      nodeAdmin,\n      /*persistenceKey=*/ '',\n      /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain\n    ),\n    path: new Path(parsedUrl.pathString)\n  };\n};\n\nexport const parseDatabaseURL = function (dataURL: string): {\n  host: string;\n  port: number;\n  domain: string;\n  subdomain: string;\n  secure: boolean;\n  scheme: string;\n  pathString: string;\n  namespace: string;\n} {\n  // Default to empty strings in the event of a malformed string.\n  let host = '',\n    domain = '',\n    subdomain = '',\n    pathString = '',\n    namespace = '';\n\n  // Always default to SSL, unless otherwise specified.\n  let secure = true,\n    scheme = 'https',\n    port = 443;\n\n  // Don't do any validation here. The caller is responsible for validating the result of parsing.\n  if (typeof dataURL === 'string') {\n    // Parse scheme.\n    let colonInd = dataURL.indexOf('//');\n    if (colonInd >= 0) {\n      scheme = dataURL.substring(0, colonInd - 1);\n      dataURL = dataURL.substring(colonInd + 2);\n    }\n\n    // Parse host, path, and query string.\n    let slashInd = dataURL.indexOf('/');\n    if (slashInd === -1) {\n      slashInd = dataURL.length;\n    }\n    let questionMarkInd = dataURL.indexOf('?');\n    if (questionMarkInd === -1) {\n      questionMarkInd = dataURL.length;\n    }\n    host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\n    if (slashInd < questionMarkInd) {\n      // For pathString, questionMarkInd will always come after slashInd\n      pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\n    }\n    const queryParams = decodeQuery(\n      dataURL.substring(Math.min(dataURL.length, questionMarkInd))\n    );\n\n    // If we have a port, use scheme for determining if it's secure.\n    colonInd = host.indexOf(':');\n    if (colonInd >= 0) {\n      secure = scheme === 'https' || scheme === 'wss';\n      port = parseInt(host.substring(colonInd + 1), 10);\n    } else {\n      colonInd = host.length;\n    }\n\n    const hostWithoutPort = host.slice(0, colonInd);\n    if (hostWithoutPort.toLowerCase() === 'localhost') {\n      domain = 'localhost';\n    } else if (hostWithoutPort.split('.').length <= 2) {\n      domain = hostWithoutPort;\n    } else {\n      // Interpret the subdomain of a 3 or more component URL as the namespace name.\n      const dotInd = host.indexOf('.');\n      subdomain = host.substring(0, dotInd).toLowerCase();\n      domain = host.substring(dotInd + 1);\n      // Normalize namespaces to lowercase to share storage / connection.\n      namespace = subdomain;\n    }\n    // Always treat the value of the `ns` as the namespace name if it is present.\n    if ('ns' in queryParams) {\n      namespace = queryParams['ns'];\n    }\n  }\n\n  return {\n    host,\n    port,\n    domain,\n    subdomain,\n    secure,\n    scheme,\n    pathString,\n    namespace\n  };\n};\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\n\nimport {\n  Repo,\n  repoOnDisconnectCancel,\n  repoOnDisconnectSet,\n  repoOnDisconnectSetWithPriority,\n  repoOnDisconnectUpdate\n} from '../core/Repo';\nimport { Path } from '../core/util/Path';\nimport {\n  validateFirebaseDataArg,\n  validateFirebaseMergeDataArg,\n  validatePriority,\n  validateWritablePath\n} from '../core/util/validation';\n\n/**\n * The `onDisconnect` class allows you to write or clear data when your client\n * disconnects from the Database server. These updates occur whether your\n * client disconnects cleanly or not, so you can rely on them to clean up data\n * even if a connection is dropped or a client crashes.\n *\n * The `onDisconnect` class is most commonly used to manage presence in\n * applications where it is useful to detect how many clients are connected and\n * when other clients disconnect. See\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n * for more information.\n *\n * To avoid problems when a connection is dropped before the requests can be\n * transferred to the Database server, these functions should be called before\n * writing any data.\n *\n * Note that `onDisconnect` operations are only triggered once. If you want an\n * operation to occur each time a disconnect occurs, you'll need to re-establish\n * the `onDisconnect` operations each time you reconnect.\n */\nexport class OnDisconnect {\n  /** @hideconstructor */\n  constructor(private _repo: Repo, private _path: Path) {}\n\n  /**\n   * Cancels all previously queued `onDisconnect()` set or update events for this\n   * location and all children.\n   *\n   * If a write has been queued for this location via a `set()` or `update()` at a\n   * parent location, the write at this location will be canceled, though writes\n   * to sibling locations will still occur.\n   *\n   * @returns Resolves when synchronization to the server is complete.\n   */\n  cancel(): Promise<void> {\n    const deferred = new Deferred<void>();\n    repoOnDisconnectCancel(\n      this._repo,\n      this._path,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Ensures the data at this location is deleted when the client is disconnected\n   * (due to closing the browser, navigating to a new page, or network issues).\n   *\n   * @returns Resolves when synchronization to the server is complete.\n   */\n  remove(): Promise<void> {\n    validateWritablePath('OnDisconnect.remove', this._path);\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSet(\n      this._repo,\n      this._path,\n      null,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Ensures the data at this location is set to the specified value when the\n   * client is disconnected (due to closing the browser, navigating to a new page,\n   * or network issues).\n   *\n   * `set()` is especially useful for implementing \"presence\" systems, where a\n   * value should be changed or cleared when a user disconnects so that they\n   * appear \"offline\" to other users. See\n   * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n   * for more information.\n   *\n   * Note that `onDisconnect` operations are only triggered once. If you want an\n   * operation to occur each time a disconnect occurs, you'll need to re-establish\n   * the `onDisconnect` operations each time.\n   *\n   * @param value - The value to be written to this location on disconnect (can\n   * be an object, array, string, number, boolean, or null).\n   * @returns Resolves when synchronization to the Database is complete.\n   */\n  set(value: unknown): Promise<void> {\n    validateWritablePath('OnDisconnect.set', this._path);\n    validateFirebaseDataArg('OnDisconnect.set', value, this._path, false);\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSet(\n      this._repo,\n      this._path,\n      value,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Ensures the data at this location is set to the specified value and priority\n   * when the client is disconnected (due to closing the browser, navigating to a\n   * new page, or network issues).\n   *\n   * @param value - The value to be written to this location on disconnect (can\n   * be an object, array, string, number, boolean, or null).\n   * @param priority - The priority to be written (string, number, or null).\n   * @returns Resolves when synchronization to the Database is complete.\n   */\n  setWithPriority(\n    value: unknown,\n    priority: number | string | null\n  ): Promise<void> {\n    validateWritablePath('OnDisconnect.setWithPriority', this._path);\n    validateFirebaseDataArg(\n      'OnDisconnect.setWithPriority',\n      value,\n      this._path,\n      false\n    );\n    validatePriority('OnDisconnect.setWithPriority', priority, false);\n\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSetWithPriority(\n      this._repo,\n      this._path,\n      value,\n      priority,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Writes multiple values at this location when the client is disconnected (due\n   * to closing the browser, navigating to a new page, or network issues).\n   *\n   * The `values` argument contains multiple property-value pairs that will be\n   * written to the Database together. Each child property can either be a simple\n   * property (for example, \"name\") or a relative path (for example, \"name/first\")\n   * from the current location to the data to update.\n   *\n   * As opposed to the `set()` method, `update()` can be use to selectively update\n   * only the referenced properties at the current location (instead of replacing\n   * all the child properties at the current location).\n   *\n   * @param values - Object containing multiple values.\n   * @returns Resolves when synchronization to the Database is complete.\n   */\n  update(values: object): Promise<void> {\n    validateWritablePath('OnDisconnect.update', this._path);\n    validateFirebaseMergeDataArg(\n      'OnDisconnect.update',\n      values,\n      this._path,\n      false\n    );\n    const deferred = new Deferred<void>();\n    repoOnDisconnectUpdate(\n      this._repo,\n      this._path,\n      values as Record<string, unknown>,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, getModularInstance, Deferred } from '@firebase/util';\n\nimport {\n  Repo,\n  repoAddEventCallbackForQuery,\n  repoGetValue,\n  repoRemoveEventCallbackForQuery,\n  repoServerTime,\n  repoSetWithPriority,\n  repoUpdate\n} from '../core/Repo';\nimport { ChildrenNode } from '../core/snap/ChildrenNode';\nimport { Index } from '../core/snap/indexes/Index';\nimport { KEY_INDEX } from '../core/snap/indexes/KeyIndex';\nimport { PathIndex } from '../core/snap/indexes/PathIndex';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../core/snap/indexes/ValueIndex';\nimport { Node } from '../core/snap/Node';\nimport { syncPointSetReferenceConstructor } from '../core/SyncPoint';\nimport { syncTreeSetReferenceConstructor } from '../core/SyncTree';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { nextPushId } from '../core/util/NextPushId';\nimport {\n  Path,\n  pathEquals,\n  pathGetBack,\n  pathGetFront,\n  pathChild,\n  pathParent,\n  pathToUrlEncodedString,\n  pathIsEmpty\n} from '../core/util/Path';\nimport {\n  fatal,\n  MAX_NAME,\n  MIN_NAME,\n  ObjectToUniqueKey\n} from '../core/util/util';\nimport {\n  isValidPriority,\n  validateFirebaseDataArg,\n  validateFirebaseMergeDataArg,\n  validateKey,\n  validatePathString,\n  validatePriority,\n  validateRootPathString,\n  validateUrl,\n  validateWritablePath\n} from '../core/util/validation';\nimport { Change } from '../core/view/Change';\nimport { CancelEvent, DataEvent, EventType } from '../core/view/Event';\nimport {\n  CallbackContext,\n  EventRegistration,\n  QueryContext,\n  UserCallback\n} from '../core/view/EventRegistration';\nimport {\n  QueryParams,\n  queryParamsEndAt,\n  queryParamsEndBefore,\n  queryParamsGetQueryObject,\n  queryParamsLimitToFirst,\n  queryParamsLimitToLast,\n  queryParamsOrderBy,\n  queryParamsStartAfter,\n  queryParamsStartAt\n} from '../core/view/QueryParams';\n\nimport { Database } from './Database';\nimport { OnDisconnect } from './OnDisconnect';\nimport {\n  ListenOptions,\n  Query as Query,\n  DatabaseReference,\n  Unsubscribe,\n  ThenableReference\n} from './Reference';\n\n/**\n * @internal\n */\nexport class QueryImpl implements Query, QueryContext {\n  /**\n   * @hideconstructor\n   */\n  constructor(\n    readonly _repo: Repo,\n    readonly _path: Path,\n    readonly _queryParams: QueryParams,\n    readonly _orderByCalled: boolean\n  ) {}\n\n  get key(): string | null {\n    if (pathIsEmpty(this._path)) {\n      return null;\n    } else {\n      return pathGetBack(this._path);\n    }\n  }\n\n  get ref(): DatabaseReference {\n    return new ReferenceImpl(this._repo, this._path);\n  }\n\n  get _queryIdentifier(): string {\n    const obj = queryParamsGetQueryObject(this._queryParams);\n    const id = ObjectToUniqueKey(obj);\n    return id === '{}' ? 'default' : id;\n  }\n\n  /**\n   * An object representation of the query parameters used by this Query.\n   */\n  get _queryObject(): object {\n    return queryParamsGetQueryObject(this._queryParams);\n  }\n\n  isEqual(other: QueryImpl | null): boolean {\n    other = getModularInstance(other);\n    if (!(other instanceof QueryImpl)) {\n      return false;\n    }\n\n    const sameRepo = this._repo === other._repo;\n    const samePath = pathEquals(this._path, other._path);\n    const sameQueryIdentifier =\n      this._queryIdentifier === other._queryIdentifier;\n\n    return sameRepo && samePath && sameQueryIdentifier;\n  }\n\n  toJSON(): string {\n    return this.toString();\n  }\n\n  toString(): string {\n    return this._repo.toString() + pathToUrlEncodedString(this._path);\n  }\n}\n\n/**\n * Validates that no other order by call has been made\n */\nfunction validateNoPreviousOrderByCall(query: QueryImpl, fnName: string) {\n  if (query._orderByCalled === true) {\n    throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n  }\n}\n\n/**\n * Validates start/end values for queries.\n */\nfunction validateQueryEndpoints(params: QueryParams) {\n  let startNode = null;\n  let endNode = null;\n  if (params.hasStart()) {\n    startNode = params.getIndexStartValue();\n  }\n  if (params.hasEnd()) {\n    endNode = params.getIndexEndValue();\n  }\n\n  if (params.getIndex() === KEY_INDEX) {\n    const tooManyArgsError =\n      'Query: When ordering by key, you may only pass one argument to ' +\n      'startAt(), endAt(), or equalTo().';\n    const wrongArgTypeError =\n      'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' +\n      'endAt(), endBefore(), or equalTo() must be a string.';\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      if (startName !== MIN_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof startNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      if (endName !== MAX_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof endNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n  } else if (params.getIndex() === PRIORITY_INDEX) {\n    if (\n      (startNode != null && !isValidPriority(startNode)) ||\n      (endNode != null && !isValidPriority(endNode))\n    ) {\n      throw new Error(\n        'Query: When ordering by priority, the first argument passed to startAt(), ' +\n          'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' +\n          '(null, a number, or a string).'\n      );\n    }\n  } else {\n    assert(\n      params.getIndex() instanceof PathIndex ||\n        params.getIndex() === VALUE_INDEX,\n      'unknown index type.'\n    );\n    if (\n      (startNode != null && typeof startNode === 'object') ||\n      (endNode != null && typeof endNode === 'object')\n    ) {\n      throw new Error(\n        'Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' +\n          'equalTo() cannot be an object.'\n      );\n    }\n  }\n}\n\n/**\n * Validates that limit* has been called with the correct combination of parameters\n */\nfunction validateLimit(params: QueryParams) {\n  if (\n    params.hasStart() &&\n    params.hasEnd() &&\n    params.hasLimit() &&\n    !params.hasAnchoredLimit()\n  ) {\n    throw new Error(\n      \"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" +\n        'limitToFirst() or limitToLast() instead.'\n    );\n  }\n}\n/**\n * @internal\n */\nexport class ReferenceImpl extends QueryImpl implements DatabaseReference {\n  /** @hideconstructor */\n  constructor(repo: Repo, path: Path) {\n    super(repo, path, new QueryParams(), false);\n  }\n\n  get parent(): ReferenceImpl | null {\n    const parentPath = pathParent(this._path);\n    return parentPath === null\n      ? null\n      : new ReferenceImpl(this._repo, parentPath);\n  }\n\n  get root(): ReferenceImpl {\n    let ref: ReferenceImpl = this;\n    while (ref.parent !== null) {\n      ref = ref.parent;\n    }\n    return ref;\n  }\n}\n\n/**\n * A `DataSnapshot` contains data from a Database location.\n *\n * Any time you read data from the Database, you receive the data as a\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\n * JavaScript object by calling the `val()` method. Alternatively, you can\n * traverse into the snapshot by calling `child()` to return child snapshots\n * (which you could then call `val()` on).\n *\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\n * a Database location. It cannot be modified and will never change (to modify\n * data, you always call the `set()` method on a `Reference` directly).\n */\nexport class DataSnapshot {\n  /**\n   * @param _node - A SnapshotNode to wrap.\n   * @param ref - The location this snapshot came from.\n   * @param _index - The iteration order for this snapshot\n   * @hideconstructor\n   */\n  constructor(\n    readonly _node: Node,\n    /**\n     * The location of this DataSnapshot.\n     */\n    readonly ref: DatabaseReference,\n    readonly _index: Index\n  ) {}\n\n  /**\n   * Gets the priority value of the data in this `DataSnapshot`.\n   *\n   * Applications need not use priority but can order collections by\n   * ordinary properties (see\n   * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\n   * ).\n   */\n  get priority(): string | number | null {\n    // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n    return this._node.getPriority().val() as string | number | null;\n  }\n\n  /**\n   * The key (last part of the path) of the location of this `DataSnapshot`.\n   *\n   * The last token in a Database location is considered its key. For example,\n   * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\n   * `DataSnapshot` will return the key for the location that generated it.\n   * However, accessing the key on the root URL of a Database will return\n   * `null`.\n   */\n  get key(): string | null {\n    return this.ref.key;\n  }\n\n  /** Returns the number of child properties of this `DataSnapshot`. */\n  get size(): number {\n    return this._node.numChildren();\n  }\n\n  /**\n   * Gets another `DataSnapshot` for the location at the specified relative path.\n   *\n   * Passing a relative path to the `child()` method of a DataSnapshot returns\n   * another `DataSnapshot` for the location at the specified relative path. The\n   * relative path can either be a simple child name (for example, \"ada\") or a\n   * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\n   * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\n   * whose value is `null`) is returned.\n   *\n   * @param path - A relative path to the location of child data.\n   */\n  child(path: string): DataSnapshot {\n    const childPath = new Path(path);\n    const childRef = child(this.ref, path);\n    return new DataSnapshot(\n      this._node.getChild(childPath),\n      childRef,\n      PRIORITY_INDEX\n    );\n  }\n  /**\n   * Returns true if this `DataSnapshot` contains any data. It is slightly more\n   * efficient than using `snapshot.val() !== null`.\n   */\n  exists(): boolean {\n    return !this._node.isEmpty();\n  }\n\n  /**\n   * Exports the entire contents of the DataSnapshot as a JavaScript object.\n   *\n   * The `exportVal()` method is similar to `val()`, except priority information\n   * is included (if available), making it suitable for backing up your data.\n   *\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\n   *   Array, string, number, boolean, or `null`).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  exportVal(): any {\n    return this._node.val(true);\n  }\n\n  /**\n   * Enumerates the top-level children in the `DataSnapshot`.\n   *\n   * Because of the way JavaScript objects work, the ordering of data in the\n   * JavaScript object returned by `val()` is not guaranteed to match the\n   * ordering on the server nor the ordering of `onChildAdded()` events. That is\n   * where `forEach()` comes in handy. It guarantees the children of a\n   * `DataSnapshot` will be iterated in their query order.\n   *\n   * If no explicit `orderBy*()` method is used, results are returned\n   * ordered by key (unless priorities are used, in which case, results are\n   * returned by priority).\n   *\n   * @param action - A function that will be called for each child DataSnapshot.\n   * The callback can return true to cancel further enumeration.\n   * @returns true if enumeration was canceled due to your callback returning\n   * true.\n   */\n  forEach(action: (child: DataSnapshot) => boolean | void): boolean {\n    if (this._node.isLeafNode()) {\n      return false;\n    }\n\n    const childrenNode = this._node as ChildrenNode;\n    // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n    return !!childrenNode.forEachChild(this._index, (key, node) => {\n      return action(\n        new DataSnapshot(node, child(this.ref, key), PRIORITY_INDEX)\n      );\n    });\n  }\n\n  /**\n   * Returns true if the specified child path has (non-null) data.\n   *\n   * @param path - A relative path to the location of a potential child.\n   * @returns `true` if data exists at the specified child path; else\n   *  `false`.\n   */\n  hasChild(path: string): boolean {\n    const childPath = new Path(path);\n    return !this._node.getChild(childPath).isEmpty();\n  }\n\n  /**\n   * Returns whether or not the `DataSnapshot` has any non-`null` child\n   * properties.\n   *\n   * You can use `hasChildren()` to determine if a `DataSnapshot` has any\n   * children. If it does, you can enumerate them using `forEach()`. If it\n   * doesn't, then either this snapshot contains a primitive value (which can be\n   * retrieved with `val()`) or it is empty (in which case, `val()` will return\n   * `null`).\n   *\n   * @returns true if this snapshot has any children; else false.\n   */\n  hasChildren(): boolean {\n    if (this._node.isLeafNode()) {\n      return false;\n    } else {\n      return !this._node.isEmpty();\n    }\n  }\n\n  /**\n   * Returns a JSON-serializable representation of this object.\n   */\n  toJSON(): object | null {\n    return this.exportVal();\n  }\n\n  /**\n   * Extracts a JavaScript value from a `DataSnapshot`.\n   *\n   * Depending on the data in a `DataSnapshot`, the `val()` method may return a\n   * scalar type (string, number, or boolean), an array, or an object. It may\n   * also return null, indicating that the `DataSnapshot` is empty (contains no\n   * data).\n   *\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\n   *   Array, string, number, boolean, or `null`).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  val(): any {\n    return this._node.val();\n  }\n}\n\n/**\n *\n * Returns a `Reference` representing the location in the Database\n * corresponding to the provided path. If no path is provided, the `Reference`\n * will point to the root of the Database.\n *\n * @param db - The database instance to obtain a reference for.\n * @param path - Optional path representing the location the returned\n *   `Reference` will point. If not provided, the returned `Reference` will\n *   point to the root of the Database.\n * @returns If a path is provided, a `Reference`\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\n *   root of the Database.\n */\nexport function ref(db: Database, path?: string): DatabaseReference {\n  db = getModularInstance(db);\n  db._checkNotDeleted('ref');\n  return path !== undefined ? child(db._root, path) : db._root;\n}\n\n/**\n * Returns a `Reference` representing the location in the Database\n * corresponding to the provided Firebase URL.\n *\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\n * has a different domain than the current `Database` instance.\n *\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\n * and are not applied to the returned `Reference`.\n *\n * @param db - The database instance to obtain a reference for.\n * @param url - The Firebase URL at which the returned `Reference` will\n *   point.\n * @returns A `Reference` pointing to the provided\n *   Firebase URL.\n */\nexport function refFromURL(db: Database, url: string): DatabaseReference {\n  db = getModularInstance(db);\n  db._checkNotDeleted('refFromURL');\n  const parsedURL = parseRepoInfo(url, db._repo.repoInfo_.nodeAdmin);\n  validateUrl('refFromURL', parsedURL);\n\n  const repoInfo = parsedURL.repoInfo;\n  if (\n    !db._repo.repoInfo_.isCustomHost() &&\n    repoInfo.host !== db._repo.repoInfo_.host\n  ) {\n    fatal(\n      'refFromURL' +\n        ': Host name does not match the current database: ' +\n        '(found ' +\n        repoInfo.host +\n        ' but expected ' +\n        db._repo.repoInfo_.host +\n        ')'\n    );\n  }\n\n  return ref(db, parsedURL.path.toString());\n}\n/**\n * Gets a `Reference` for the location at the specified relative path.\n *\n * The relative path can either be a simple child name (for example, \"ada\") or\n * a deeper slash-separated path (for example, \"ada/name/first\").\n *\n * @param parent - The parent location.\n * @param path - A relative path from this location to the desired child\n *   location.\n * @returns The specified child location.\n */\nexport function child(\n  parent: DatabaseReference,\n  path: string\n): DatabaseReference {\n  parent = getModularInstance(parent);\n  if (pathGetFront(parent._path) === null) {\n    validateRootPathString('child', 'path', path, false);\n  } else {\n    validatePathString('child', 'path', path, false);\n  }\n  return new ReferenceImpl(parent._repo, pathChild(parent._path, path));\n}\n\n/**\n * Returns an `OnDisconnect` object - see\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n * for more information on how to use it.\n *\n * @param ref - The reference to add OnDisconnect triggers for.\n */\nexport function onDisconnect(ref: DatabaseReference): OnDisconnect {\n  ref = getModularInstance(ref) as ReferenceImpl;\n  return new OnDisconnect(ref._repo, ref._path);\n}\n\nexport interface ThenableReferenceImpl\n  extends ReferenceImpl,\n    Pick<Promise<ReferenceImpl>, 'then' | 'catch'> {}\n\n/**\n * Generates a new child location using a unique key and returns its\n * `Reference`.\n *\n * This is the most common pattern for adding data to a collection of items.\n *\n * If you provide a value to `push()`, the value is written to the\n * generated location. If you don't pass a value, nothing is written to the\n * database and the child remains empty (but you can use the `Reference`\n * elsewhere).\n *\n * The unique keys generated by `push()` are ordered by the current time, so the\n * resulting list of items is chronologically sorted. The keys are also\n * designed to be unguessable (they contain 72 random bits of entropy).\n *\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}\n * </br>See {@link ttps://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}\n *\n * @param parent - The parent location.\n * @param value - Optional value to be written at the generated location.\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\n * but can be used immediately as the `Reference` to the child location.\n */\nexport function push(\n  parent: DatabaseReference,\n  value?: unknown\n): ThenableReference {\n  parent = getModularInstance(parent);\n  validateWritablePath('push', parent._path);\n  validateFirebaseDataArg('push', value, parent._path, true);\n  const now = repoServerTime(parent._repo);\n  const name = nextPushId(now);\n\n  // push() returns a ThennableReference whose promise is fulfilled with a\n  // regular Reference. We use child() to create handles to two different\n  // references. The first is turned into a ThennableReference below by adding\n  // then() and catch() methods and is used as the return value of push(). The\n  // second remains a regular Reference and is used as the fulfilled value of\n  // the first ThennableReference.\n  const thennablePushRef: Partial<ThenableReferenceImpl> = child(\n    parent,\n    name\n  ) as ReferenceImpl;\n  const pushRef = child(parent, name) as ReferenceImpl;\n\n  let promise: Promise<ReferenceImpl>;\n  if (value != null) {\n    promise = set(pushRef, value).then(() => pushRef);\n  } else {\n    promise = Promise.resolve(pushRef);\n  }\n\n  thennablePushRef.then = promise.then.bind(promise);\n  thennablePushRef.catch = promise.then.bind(promise, undefined);\n  return thennablePushRef as ThenableReferenceImpl;\n}\n\n/**\n * Removes the data at this Database location.\n *\n * Any data at child locations will also be deleted.\n *\n * The effect of the remove will be visible immediately and the corresponding\n * event 'value' will be triggered. Synchronization of the remove to the\n * Firebase servers will also be started, and the returned Promise will resolve\n * when complete. If provided, the onComplete callback will be called\n * asynchronously after synchronization has finished.\n *\n * @param ref - The location to remove.\n * @returns Resolves when remove on server is complete.\n */\nexport function remove(ref: DatabaseReference): Promise<void> {\n  validateWritablePath('remove', ref._path);\n  return set(ref, null);\n}\n\n/**\n * Writes data to this Database location.\n *\n * This will overwrite any data at this location and all child locations.\n *\n * The effect of the write will be visible immediately, and the corresponding\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\n * the data to the Firebase servers will also be started, and the returned\n * Promise will resolve when complete. If provided, the `onComplete` callback\n * will be called asynchronously after synchronization has finished.\n *\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\n * all data at this location and all child locations will be deleted.\n *\n * `set()` will remove any priority stored at this location, so if priority is\n * meant to be preserved, you need to use `setWithPriority()` instead.\n *\n * Note that modifying data with `set()` will cancel any pending transactions\n * at that location, so extreme care should be taken if mixing `set()` and\n * `transaction()` to modify the same data.\n *\n * A single `set()` will generate a single \"value\" event at the location where\n * the `set()` was performed.\n *\n * @param ref - The location to write to.\n * @param value - The value to be written (string, number, boolean, object,\n *   array, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function set(ref: DatabaseReference, value: unknown): Promise<void> {\n  ref = getModularInstance(ref);\n  validateWritablePath('set', ref._path);\n  validateFirebaseDataArg('set', value, ref._path, false);\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    ref._path,\n    value,\n    /*priority=*/ null,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Sets a priority for the data at this Database location.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\n * ).\n *\n * @param ref - The location to write to.\n * @param priority - The priority to be written (string, number, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function setPriority(\n  ref: DatabaseReference,\n  priority: string | number | null\n): Promise<void> {\n  ref = getModularInstance(ref);\n  validateWritablePath('setPriority', ref._path);\n  validatePriority('setPriority', priority, false);\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    pathChild(ref._path, '.priority'),\n    priority,\n    null,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Writes data the Database location. Like `set()` but also specifies the\n * priority for that data.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\n * ).\n *\n * @param ref - The location to write to.\n * @param value - The value to be written (string, number, boolean, object,\n *   array, or null).\n * @param priority - The priority to be written (string, number, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function setWithPriority(\n  ref: DatabaseReference,\n  value: unknown,\n  priority: string | number | null\n): Promise<void> {\n  validateWritablePath('setWithPriority', ref._path);\n  validateFirebaseDataArg('setWithPriority', value, ref._path, false);\n  validatePriority('setWithPriority', priority, false);\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw 'setWithPriority failed: ' + ref.key + ' is a read-only object.';\n  }\n\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    ref._path,\n    value,\n    priority,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Writes multiple values to the Database at once.\n *\n * The `values` argument contains multiple property-value pairs that will be\n * written to the Database together. Each child property can either be a simple\n * property (for example, \"name\") or a relative path (for example,\n * \"name/first\") from the current location to the data to update.\n *\n * As opposed to the `set()` method, `update()` can be use to selectively update\n * only the referenced properties at the current location (instead of replacing\n * all the child properties at the current location).\n *\n * The effect of the write will be visible immediately, and the corresponding\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\n * the data to the Firebase servers will also be started, and the returned\n * Promise will resolve when complete. If provided, the `onComplete` callback\n * will be called asynchronously after synchronization has finished.\n *\n * A single `update()` will generate a single \"value\" event at the location\n * where the `update()` was performed, regardless of how many children were\n * modified.\n *\n * Note that modifying data with `update()` will cancel any pending\n * transactions at that location, so extreme care should be taken if mixing\n * `update()` and `transaction()` to modify the same data.\n *\n * Passing `null` to `update()` will remove the data at this location.\n *\n * See\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\n *\n * @param ref - The location to write to.\n * @param values - Object containing multiple values.\n * @returns Resolves when update on server is complete.\n */\nexport function update(ref: DatabaseReference, values: object): Promise<void> {\n  validateFirebaseMergeDataArg('update', values, ref._path, false);\n  const deferred = new Deferred<void>();\n  repoUpdate(\n    ref._repo,\n    ref._path,\n    values as Record<string, unknown>,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Gets the most up-to-date result for this query.\n *\n * @param query - The query to run.\n * @returns A `Promise` which resolves to the resulting DataSnapshot if a value is\n * available, or rejects if the client is unable to return a value (e.g., if the\n * server is unreachable and there is nothing cached).\n */\nexport function get(query: Query): Promise<DataSnapshot> {\n  query = getModularInstance(query) as QueryImpl;\n  const callbackContext = new CallbackContext(() => {});\n  const container = new ValueEventRegistration(callbackContext);\n  return repoGetValue(query._repo, query, container).then(node => {\n    return new DataSnapshot(\n      node,\n      new ReferenceImpl(query._repo, query._path),\n      query._queryParams.getIndex()\n    );\n  });\n}\n/**\n * Represents registration for 'value' events.\n */\nexport class ValueEventRegistration implements EventRegistration {\n  constructor(private callbackContext: CallbackContext) {}\n\n  respondsTo(eventType: string): boolean {\n    return eventType === 'value';\n  }\n\n  createEvent(change: Change, query: QueryContext): DataEvent {\n    const index = query._queryParams.getIndex();\n    return new DataEvent(\n      'value',\n      this,\n      new DataSnapshot(\n        change.snapshotNode,\n        new ReferenceImpl(query._repo, query._path),\n        index\n      )\n    );\n  }\n\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    if (eventData.getEventType() === 'cancel') {\n      return () =>\n        this.callbackContext.onCancel((eventData as CancelEvent).error);\n    } else {\n      return () =>\n        this.callbackContext.onValue((eventData as DataEvent).snapshot, null);\n    }\n  }\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  matches(other: EventRegistration): boolean {\n    if (!(other instanceof ValueEventRegistration)) {\n      return false;\n    } else if (!other.callbackContext || !this.callbackContext) {\n      // If no callback specified, we consider it to match any callback.\n      return true;\n    } else {\n      return other.callbackContext.matches(this.callbackContext);\n    }\n  }\n\n  hasAnyCallback(): boolean {\n    return this.callbackContext !== null;\n  }\n}\n\n/**\n * Represents the registration of a child_x event.\n */\nexport class ChildEventRegistration implements EventRegistration {\n  constructor(\n    private eventType: string,\n    private callbackContext: CallbackContext | null\n  ) {}\n\n  respondsTo(eventType: string): boolean {\n    let eventToCheck =\n      eventType === 'children_added' ? 'child_added' : eventType;\n    eventToCheck =\n      eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n    return this.eventType === eventToCheck;\n  }\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  createEvent(change: Change, query: QueryContext): DataEvent {\n    assert(change.childName != null, 'Child events should have a childName.');\n    const childRef = child(\n      new ReferenceImpl(query._repo, query._path),\n      change.childName\n    );\n    const index = query._queryParams.getIndex();\n    return new DataEvent(\n      change.type as EventType,\n      this,\n      new DataSnapshot(change.snapshotNode, childRef, index),\n      change.prevName\n    );\n  }\n\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    if (eventData.getEventType() === 'cancel') {\n      return () =>\n        this.callbackContext.onCancel((eventData as CancelEvent).error);\n    } else {\n      return () =>\n        this.callbackContext.onValue(\n          (eventData as DataEvent).snapshot,\n          (eventData as DataEvent).prevName\n        );\n    }\n  }\n\n  matches(other: EventRegistration): boolean {\n    if (other instanceof ChildEventRegistration) {\n      return (\n        this.eventType === other.eventType &&\n        (!this.callbackContext ||\n          !other.callbackContext ||\n          this.callbackContext.matches(other.callbackContext))\n      );\n    }\n\n    return false;\n  }\n\n  hasAnyCallback(): boolean {\n    return !!this.callbackContext;\n  }\n}\n\nfunction addEventListener(\n  query: Query,\n  eventType: EventType,\n  callback: UserCallback,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n) {\n  let cancelCallback: ((error: Error) => unknown) | undefined;\n  if (typeof cancelCallbackOrListenOptions === 'object') {\n    cancelCallback = undefined;\n    options = cancelCallbackOrListenOptions;\n  }\n  if (typeof cancelCallbackOrListenOptions === 'function') {\n    cancelCallback = cancelCallbackOrListenOptions;\n  }\n\n  if (options && options.onlyOnce) {\n    const userCallback = callback;\n    const onceCallback: UserCallback = (dataSnapshot, previousChildName) => {\n      repoRemoveEventCallbackForQuery(query._repo, query, container);\n      userCallback(dataSnapshot, previousChildName);\n    };\n    onceCallback.userCallback = callback.userCallback;\n    onceCallback.context = callback.context;\n    callback = onceCallback;\n  }\n\n  const callbackContext = new CallbackContext(\n    callback,\n    cancelCallback || undefined\n  );\n  const container =\n    eventType === 'value'\n      ? new ValueEventRegistration(callbackContext)\n      : new ChildEventRegistration(eventType, callbackContext);\n  repoAddEventCallbackForQuery(query._repo, query, container);\n  return () => repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'value',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName?: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_added',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_changed',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_moved',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_removed',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\nexport { EventType };\n\n/**\n * Detaches a callback previously attached with the corresponding `on*()` (`onValue`, `onChildAdded`) listener.\n * Note: This is not the recommended way to remove a listener. Instead, please use the returned callback function from\n * the respective `on*` callbacks.\n *\n * Detach a callback previously attached with `on*()`. Calling `off()` on a parent listener\n * will not automatically remove listeners registered on child nodes, `off()`\n * must also be called on any child listeners to remove the callback.\n *\n * If a callback is not specified, all callbacks for the specified eventType\n * will be removed. Similarly, if no eventType is specified, all callbacks\n * for the `Reference` will be removed.\n *\n * Individual listeners can also be removed by invoking their unsubscribe\n * callbacks.\n *\n * @param query - The query that the listener was registered with.\n * @param eventType - One of the following strings: \"value\", \"child_added\",\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\n * for the `Reference` will be removed.\n * @param callback - The callback function that was passed to `on()` or\n * `undefined` to remove all callbacks.\n */\nexport function off(\n  query: Query,\n  eventType?: EventType,\n  callback?: (\n    snapshot: DataSnapshot,\n    previousChildName?: string | null\n  ) => unknown\n): void {\n  let container: EventRegistration | null = null;\n  const expCallback = callback ? new CallbackContext(callback) : null;\n  if (eventType === 'value') {\n    container = new ValueEventRegistration(expCallback);\n  } else if (eventType) {\n    container = new ChildEventRegistration(eventType, expCallback);\n  }\n  repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n\n/** Describes the different query constraints available in this SDK. */\nexport type QueryConstraintType =\n  | 'endAt'\n  | 'endBefore'\n  | 'startAt'\n  | 'startAfter'\n  | 'limitToFirst'\n  | 'limitToLast'\n  | 'orderByChild'\n  | 'orderByKey'\n  | 'orderByPriority'\n  | 'orderByValue'\n  | 'equalTo';\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\n * {@link orderByValue}  or {@link equalTo} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\nexport abstract class QueryConstraint {\n  /** The type of this query constraints */\n  abstract readonly type: QueryConstraintType;\n\n  /**\n   * Takes the provided `Query` and returns a copy of the `Query` with this\n   * `QueryConstraint` applied.\n   */\n  abstract _apply<T>(query: QueryImpl): QueryImpl;\n}\n\nclass QueryEndAtConstraint extends QueryConstraint {\n  readonly type: 'endAt';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('endAt', this._value, query._path, true);\n    const newParams = queryParamsEndAt(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'endAt: Starting point was already set (by another call to endAt, ' +\n          'endBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified ending point.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The ending point is inclusive, so children with exactly the specified value\n * will be included in the query. The optional key argument can be used to\n * further limit the range of the query. If it is specified, then children that\n * have exactly the specified value must also have a key name less than or equal\n * to the specified key.\n *\n * You can read more about `endAt()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to end at. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to end at, among the children with the previously\n * specified priority. This argument is only allowed if ordering by child,\n * value, or priority.\n */\nexport function endAt(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('endAt', 'key', key, true);\n  return new QueryEndAtConstraint(value, key);\n}\n\nclass QueryEndBeforeConstraint extends QueryConstraint {\n  readonly type: 'endBefore';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('endBefore', this._value, query._path, false);\n    const newParams = queryParamsEndBefore(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'endBefore: Starting point was already set (by another call to endAt, ' +\n          'endBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The ending point is exclusive. If only a value is provided, children\n * with a value less than the specified value will be included in the query.\n * If a key is specified, then children must have a value lesss than or equal\n * to the specified value and a a key name less than the specified key.\n *\n * @param value - The value to end before. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to end before, among the children with the\n * previously specified priority. This argument is only allowed if ordering by\n * child, value, or priority.\n */\nexport function endBefore(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('endBefore', 'key', key, true);\n  return new QueryEndBeforeConstraint(value, key);\n}\n\nclass QueryStartAtConstraint extends QueryConstraint {\n  readonly type: 'startAt';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('startAt', this._value, query._path, true);\n    const newParams = queryParamsStartAt(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'startAt: Starting point was already set (by another call to startAt, ' +\n          'startBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified starting point.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The starting point is inclusive, so children with exactly the specified value\n * will be included in the query. The optional key argument can be used to\n * further limit the range of the query. If it is specified, then children that\n * have exactly the specified value must also have a key name greater than or\n * equal to the specified key.\n *\n * You can read more about `startAt()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to start at. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start at. This argument is only allowed if\n * ordering by child, value, or priority.\n */\nexport function startAt(\n  value: number | string | boolean | null = null,\n  key?: string\n): QueryConstraint {\n  validateKey('startAt', 'key', key, true);\n  return new QueryStartAtConstraint(value, key);\n}\n\nclass QueryStartAfterConstraint extends QueryConstraint {\n  readonly type: 'startAfter';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('startAfter', this._value, query._path, false);\n    const newParams = queryParamsStartAfter(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'startAfter: Starting point was already set (by another call to startAt, ' +\n          'startAfter, or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The starting point is exclusive. If only a value is provided, children\n * with a value greater than the specified value will be included in the query.\n * If a key is specified, then children must have a value greater than or equal\n * to the specified value and a a key name greater than the specified key.\n *\n * @param value - The value to start after. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start after. This argument is only allowed if\n * ordering by child, value, or priority.\n */\nexport function startAfter(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('startAfter', 'key', key, true);\n  return new QueryStartAfterConstraint(value, key);\n}\n\nclass QueryLimitToFirstConstraint extends QueryConstraint {\n  readonly type: 'limitToFirst';\n\n  constructor(private readonly _limit: number) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    if (query._queryParams.hasLimit()) {\n      throw new Error(\n        'limitToFirst: Limit was already set (by another call to limitToFirst ' +\n          'or limitToLast).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      queryParamsLimitToFirst(query._queryParams, this._limit),\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that if limited to the first specific number\n * of children.\n *\n * The `limitToFirst()` method is used to set a maximum number of children to be\n * synced for a given callback. If we set a limit of 100, we will initially only\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\n * stored in our Database, a `child_added` event will fire for each message.\n * However, if we have over 100 messages, we will only receive a `child_added`\n * event for the first 100 ordered messages. As items change, we will receive\n * `child_removed` events for each item that drops out of the active list so\n * that the total number stays at 100.\n *\n * You can read more about `limitToFirst()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param limit - The maximum number of nodes to include in this query.\n */\nexport function limitToFirst(limit: number): QueryConstraint {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToFirst: First argument must be a positive integer.');\n  }\n  return new QueryLimitToFirstConstraint(limit);\n}\n\nclass QueryLimitToLastConstraint extends QueryConstraint {\n  readonly type: 'limitToLast';\n\n  constructor(private readonly _limit: number) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    if (query._queryParams.hasLimit()) {\n      throw new Error(\n        'limitToLast: Limit was already set (by another call to limitToFirst ' +\n          'or limitToLast).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      queryParamsLimitToLast(query._queryParams, this._limit),\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that is limited to return only the last\n * specified number of children.\n *\n * The `limitToLast()` method is used to set a maximum number of children to be\n * synced for a given callback. If we set a limit of 100, we will initially only\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\n * stored in our Database, a `child_added` event will fire for each message.\n * However, if we have over 100 messages, we will only receive a `child_added`\n * event for the last 100 ordered messages. As items change, we will receive\n * `child_removed` events for each item that drops out of the active list so\n * that the total number stays at 100.\n *\n * You can read more about `limitToLast()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param limit - The maximum number of nodes to include in this query.\n */\nexport function limitToLast(limit: number): QueryConstraint {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToLast: First argument must be a positive integer.');\n  }\n\n  return new QueryLimitToLastConstraint(limit);\n}\n\nclass QueryOrderByChildConstraint extends QueryConstraint {\n  readonly type: 'orderByChild';\n\n  constructor(private readonly _path: string) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByChild');\n    const parsedPath = new Path(this._path);\n    if (pathIsEmpty(parsedPath)) {\n      throw new Error(\n        'orderByChild: cannot pass in empty path. Use orderByValue() instead.'\n      );\n    }\n    const index = new PathIndex(parsedPath);\n    const newParams = queryParamsOrderBy(query._queryParams, index);\n    validateQueryEndpoints(newParams);\n\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by the specified child key.\n *\n * Queries can only order by one key at a time. Calling `orderByChild()`\n * multiple times on the same query is an error.\n *\n * Firebase queries allow you to order your data by any child key on the fly.\n * However, if you know in advance what your indexes will be, you can define\n * them via the .indexOn rule in your Security Rules for better performance. See\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\n * rule for more information.\n *\n * You can read more about `orderByChild()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n *\n * @param path - The path to order by.\n */\nexport function orderByChild(path: string): QueryConstraint {\n  if (path === '$key') {\n    throw new Error(\n      'orderByChild: \"$key\" is invalid.  Use orderByKey() instead.'\n    );\n  } else if (path === '$priority') {\n    throw new Error(\n      'orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.'\n    );\n  } else if (path === '$value') {\n    throw new Error(\n      'orderByChild: \"$value\" is invalid.  Use orderByValue() instead.'\n    );\n  }\n  validatePathString('orderByChild', 'path', path, false);\n  return new QueryOrderByChildConstraint(path);\n}\n\nclass QueryOrderByKeyConstraint extends QueryConstraint {\n  readonly type: 'orderByKey';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByKey');\n    const newParams = queryParamsOrderBy(query._queryParams, KEY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by the key.\n *\n * Sorts the results of a query by their (ascending) key values.\n *\n * You can read more about `orderByKey()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n */\nexport function orderByKey(): QueryConstraint {\n  return new QueryOrderByKeyConstraint();\n}\n\nclass QueryOrderByPriorityConstraint extends QueryConstraint {\n  readonly type: 'orderByPriority';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByPriority');\n    const newParams = queryParamsOrderBy(query._queryParams, PRIORITY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by priority.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\n * for alternatives to priority.\n */\nexport function orderByPriority(): QueryConstraint {\n  return new QueryOrderByPriorityConstraint();\n}\n\nclass QueryOrderByValueConstraint extends QueryConstraint {\n  readonly type: 'orderByValue';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByValue');\n    const newParams = queryParamsOrderBy(query._queryParams, VALUE_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by value.\n *\n * If the children of a query are all scalar values (string, number, or\n * boolean), you can order the results by their (ascending) values.\n *\n * You can read more about `orderByValue()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n */\nexport function orderByValue(): QueryConstraint {\n  return new QueryOrderByValueConstraint();\n}\n\nclass QueryEqualToValueConstraint extends QueryConstraint {\n  readonly type: 'equalTo';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('equalTo', this._value, query._path, false);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'equalTo: Starting point was already set (by another call to startAt/startAfter or ' +\n          'equalTo).'\n      );\n    }\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'equalTo: Ending point was already set (by another call to endAt/endBefore or ' +\n          'equalTo).'\n      );\n    }\n    return new QueryEndAtConstraint(this._value, this._key)._apply(\n      new QueryStartAtConstraint(this._value, this._key)._apply(query)\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` that includes children that match the specified\n * value.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The optional key argument can be used to further limit the range of the\n * query. If it is specified, then children that have exactly the specified\n * value must also have exactly the specified key as their key name. This can be\n * used to filter result sets with many matches for the same value.\n *\n * You can read more about `equalTo()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to match for. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start at, among the children with the\n * previously specified priority. This argument is only allowed if ordering by\n * child, value, or priority.\n */\nexport function equalTo(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('equalTo', 'key', key, true);\n  return new QueryEqualToValueConstraint(value, key);\n}\n\n/**\n * Creates a new immutable instance of `Query` that is extended to also include\n * additional query constraints.\n *\n * @param query - The Query instance to use as a base for the new constraints.\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */\nexport function query(\n  query: Query,\n  ...queryConstraints: QueryConstraint[]\n): Query {\n  let queryImpl = getModularInstance(query) as QueryImpl;\n  for (const constraint of queryConstraints) {\n    queryImpl = constraint._apply(queryImpl);\n  }\n  return queryImpl;\n}\n\n/**\n * Define reference constructor in various modules\n *\n * We are doing this here to avoid several circular\n * dependency issues\n */\nsyncPointSetReferenceConstructor(ReferenceImpl);\nsyncTreeSetReferenceConstructor(ReferenceImpl);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringify } from '@firebase/util';\n\nimport { DataSnapshot as ExpDataSnapshot } from '../../api/Reference_impl';\nimport { Path } from '../util/Path';\n\nimport { EventRegistration } from './EventRegistration';\n\n/**\n * Encapsulates the data needed to raise an event\n * @interface\n */\nexport interface Event {\n  getPath(): Path;\n\n  getEventType(): string;\n\n  getEventRunner(): () => void;\n\n  toString(): string;\n}\n\n/**\n * One of the following strings: \"value\", \"child_added\", \"child_changed\",\n * \"child_removed\", or \"child_moved.\"\n */\nexport type EventType =\n  | 'value'\n  | 'child_added'\n  | 'child_changed'\n  | 'child_moved'\n  | 'child_removed';\n\n/**\n * Encapsulates the data needed to raise an event\n */\nexport class DataEvent implements Event {\n  /**\n   * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\n   * @param eventRegistration - The function to call to with the event data. User provided\n   * @param snapshot - The data backing the event\n   * @param prevName - Optional, the name of the previous child for child_* events.\n   */\n  constructor(\n    public eventType: EventType,\n    public eventRegistration: EventRegistration,\n    public snapshot: ExpDataSnapshot,\n    public prevName?: string | null\n  ) {}\n  getPath(): Path {\n    const ref = this.snapshot.ref;\n    if (this.eventType === 'value') {\n      return ref._path;\n    } else {\n      return ref.parent._path;\n    }\n  }\n  getEventType(): string {\n    return this.eventType;\n  }\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n  toString(): string {\n    return (\n      this.getPath().toString() +\n      ':' +\n      this.eventType +\n      ':' +\n      stringify(this.snapshot.exportVal())\n    );\n  }\n}\n\nexport class CancelEvent implements Event {\n  constructor(\n    public eventRegistration: EventRegistration,\n    public error: Error,\n    public path: Path\n  ) {}\n  getPath(): Path {\n    return this.path;\n  }\n  getEventType(): string {\n    return 'cancel';\n  }\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n  toString(): string {\n    return this.path.toString() + ':cancel';\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { DataSnapshot } from '../../api/Reference_impl';\nimport { Repo } from '../Repo';\nimport { Path } from '../util/Path';\n\nimport { Change } from './Change';\nimport { CancelEvent, Event } from './Event';\nimport { QueryParams } from './QueryParams';\n\n/**\n * A user callback. Callbacks issues from the Legacy SDK maintain references\n * to the original user-issued callbacks, which allows equality\n * comparison by reference even though this callbacks are wrapped before\n * they can be passed to the firebase@exp SDK.\n *\n * @internal\n */\nexport interface UserCallback {\n  (dataSnapshot: DataSnapshot, previousChildName?: string | null): unknown;\n  userCallback?: unknown;\n  context?: object | null;\n}\n\n/**\n * A wrapper class that converts events from the database@exp SDK to the legacy\n * Database SDK. Events are not converted directly as event registration relies\n * on reference comparison of the original user callback (see `matches()`) and\n * relies on equality of the legacy SDK's `context` object.\n */\nexport class CallbackContext {\n  constructor(\n    private readonly snapshotCallback: UserCallback,\n    private readonly cancelCallback?: (error: Error) => unknown\n  ) {}\n\n  onValue(\n    expDataSnapshot: DataSnapshot,\n    previousChildName?: string | null\n  ): void {\n    this.snapshotCallback.call(null, expDataSnapshot, previousChildName);\n  }\n\n  onCancel(error: Error): void {\n    assert(\n      this.hasCancelCallback,\n      'Raising a cancel event on a listener with no cancel callback'\n    );\n    return this.cancelCallback.call(null, error);\n  }\n\n  get hasCancelCallback(): boolean {\n    return !!this.cancelCallback;\n  }\n\n  matches(other: CallbackContext): boolean {\n    return (\n      this.snapshotCallback === other.snapshotCallback ||\n      (this.snapshotCallback.userCallback !== undefined &&\n        this.snapshotCallback.userCallback ===\n          other.snapshotCallback.userCallback &&\n        this.snapshotCallback.context === other.snapshotCallback.context)\n    );\n  }\n}\n\nexport interface QueryContext {\n  readonly _queryIdentifier: string;\n  readonly _queryObject: object;\n  readonly _repo: Repo;\n  readonly _path: Path;\n  readonly _queryParams: QueryParams;\n}\n\n/**\n * An EventRegistration is basically an event type ('value', 'child_added', etc.) and a callback\n * to be notified of that type of event.\n *\n * That said, it can also contain a cancel callback to be notified if the event is canceled.  And\n * currently, this code is organized around the idea that you would register multiple child_ callbacks\n * together, as a single EventRegistration.  Though currently we don't do that.\n */\nexport interface EventRegistration {\n  /**\n   * True if this container has a callback to trigger for this event type\n   */\n  respondsTo(eventType: string): boolean;\n\n  createEvent(change: Change, query: QueryContext): Event;\n\n  /**\n   * Given event data, return a function to trigger the user's callback\n   */\n  getEventRunner(eventData: Event): () => void;\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null;\n\n  matches(other: EventRegistration): boolean;\n\n  /**\n   * False basically means this is a \"dummy\" callback container being used as a sentinel\n   * to remove all callback containers of a particular type.  (e.g. if the user does\n   * ref.off('value') without specifying a specific callback).\n   *\n   * (TODO: Rework this, since it's hacky)\n   *\n   */\n  hasAnyCallback(): boolean;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _FirebaseService,\n  _getProvider,\n  FirebaseApp,\n  getApp\n} from '@firebase/app';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\nimport {\n  getModularInstance,\n  createMockUserToken,\n  EmulatorMockTokenOptions\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from '../core/AppCheckTokenProvider';\nimport {\n  AuthTokenProvider,\n  EmulatorTokenProvider,\n  FirebaseAuthTokenProvider\n} from '../core/AuthTokenProvider';\nimport { Repo, repoInterrupt, repoResume, repoStart } from '../core/Repo';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { newEmptyPath, pathIsEmpty } from '../core/util/Path';\nimport {\n  warn,\n  fatal,\n  log,\n  enableLogging as enableLoggingImpl\n} from '../core/util/util';\nimport { validateUrl } from '../core/util/validation';\nimport { BrowserPollConnection } from '../realtime/BrowserPollConnection';\nimport { TransportManager } from '../realtime/TransportManager';\nimport { WebSocketConnection } from '../realtime/WebSocketConnection';\n\nimport { ReferenceImpl } from './Reference_impl';\n\nexport { EmulatorMockTokenOptions } from '@firebase/util';\n/**\n * This variable is also defined in the firebase Node.js Admin SDK. Before\n * modifying this definition, consult the definition in:\n *\n * https://github.com/firebase/firebase-admin-node\n *\n * and make sure the two are consistent.\n */\nconst FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\n\n/**\n * Creates and caches `Repo` instances.\n */\nconst repos: {\n  [appName: string]: {\n    [dbUrl: string]: Repo;\n  };\n} = {};\n\n/**\n * If true, any new `Repo` will be created to use `ReadonlyRestClient` (for testing purposes).\n */\nlet useRestClient = false;\n\n/**\n * Update an existing `Repo` in place to point to a new host/port.\n */\nfunction repoManagerApplyEmulatorSettings(\n  repo: Repo,\n  host: string,\n  port: number,\n  tokenProvider?: AuthTokenProvider\n): void {\n  repo.repoInfo_ = new RepoInfo(\n    `${host}:${port}`,\n    /* secure= */ false,\n    repo.repoInfo_.namespace,\n    repo.repoInfo_.webSocketOnly,\n    repo.repoInfo_.nodeAdmin,\n    repo.repoInfo_.persistenceKey,\n    repo.repoInfo_.includeNamespaceInQueryParams\n  );\n\n  if (tokenProvider) {\n    repo.authTokenProvider_ = tokenProvider;\n  }\n}\n\n/**\n * This function should only ever be called to CREATE a new database instance.\n * @internal\n */\nexport function repoManagerDatabaseFromApp(\n  app: FirebaseApp,\n  authProvider: Provider<FirebaseAuthInternalName>,\n  appCheckProvider?: Provider<AppCheckInternalComponentName>,\n  url?: string,\n  nodeAdmin?: boolean\n): Database {\n  let dbUrl: string | undefined = url || app.options.databaseURL;\n  if (dbUrl === undefined) {\n    if (!app.options.projectId) {\n      fatal(\n        \"Can't determine Firebase Database URL. Be sure to include \" +\n          ' a Project ID when calling firebase.initializeApp().'\n      );\n    }\n\n    log('Using default host for project ', app.options.projectId);\n    dbUrl = `${app.options.projectId}-default-rtdb.firebaseio.com`;\n  }\n\n  let parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n  let repoInfo = parsedUrl.repoInfo;\n\n  let isEmulator: boolean;\n\n  let dbEmulatorHost: string | undefined = undefined;\n  if (typeof process !== 'undefined' && process.env) {\n    dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\n  }\n\n  if (dbEmulatorHost) {\n    isEmulator = true;\n    dbUrl = `http://${dbEmulatorHost}?ns=${repoInfo.namespace}`;\n    parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n    repoInfo = parsedUrl.repoInfo;\n  } else {\n    isEmulator = !parsedUrl.repoInfo.secure;\n  }\n\n  const authTokenProvider =\n    nodeAdmin && isEmulator\n      ? new EmulatorTokenProvider(EmulatorTokenProvider.OWNER)\n      : new FirebaseAuthTokenProvider(app.name, app.options, authProvider);\n\n  validateUrl('Invalid Firebase Database URL', parsedUrl);\n  if (!pathIsEmpty(parsedUrl.path)) {\n    fatal(\n      'Database URL must point to the root of a Firebase Database ' +\n        '(not including a child path).'\n    );\n  }\n\n  const repo = repoManagerCreateRepo(\n    repoInfo,\n    app,\n    authTokenProvider,\n    new AppCheckTokenProvider(app.name, appCheckProvider)\n  );\n  return new Database(repo, app);\n}\n\n/**\n * Remove the repo and make sure it is disconnected.\n *\n */\nfunction repoManagerDeleteRepo(repo: Repo, appName: string): void {\n  const appRepos = repos[appName];\n  // This should never happen...\n  if (!appRepos || appRepos[repo.key] !== repo) {\n    fatal(`Database ${appName}(${repo.repoInfo_}) has already been deleted.`);\n  }\n  repoInterrupt(repo);\n  delete appRepos[repo.key];\n}\n\n/**\n * Ensures a repo doesn't already exist and then creates one using the\n * provided app.\n *\n * @param repoInfo - The metadata about the Repo\n * @returns The Repo object for the specified server / repoName.\n */\nfunction repoManagerCreateRepo(\n  repoInfo: RepoInfo,\n  app: FirebaseApp,\n  authTokenProvider: AuthTokenProvider,\n  appCheckProvider: AppCheckTokenProvider\n): Repo {\n  let appRepos = repos[app.name];\n\n  if (!appRepos) {\n    appRepos = {};\n    repos[app.name] = appRepos;\n  }\n\n  let repo = appRepos[repoInfo.toURLString()];\n  if (repo) {\n    fatal(\n      'Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.'\n    );\n  }\n  repo = new Repo(repoInfo, useRestClient, authTokenProvider, appCheckProvider);\n  appRepos[repoInfo.toURLString()] = repo;\n\n  return repo;\n}\n\n/**\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\n */\nexport function repoManagerForceRestClient(forceRestClient: boolean): void {\n  useRestClient = forceRestClient;\n}\n\n/**\n * Class representing a Firebase Realtime Database.\n */\nexport class Database implements _FirebaseService {\n  /** Represents a `Database` instance. */\n  readonly 'type' = 'database';\n\n  /** Track if the instance has been used (root or repo accessed) */\n  _instanceStarted: boolean = false;\n\n  /** Backing state for root_ */\n  private _rootInternal?: ReferenceImpl;\n\n  /** @hideconstructor */\n  constructor(\n    public _repoInternal: Repo,\n    /** The {@link @firebase/app#FirebaseApp} associated with this Realtime Database instance. */\n    readonly app: FirebaseApp\n  ) {}\n\n  get _repo(): Repo {\n    if (!this._instanceStarted) {\n      repoStart(\n        this._repoInternal,\n        this.app.options.appId,\n        this.app.options['databaseAuthVariableOverride']\n      );\n      this._instanceStarted = true;\n    }\n    return this._repoInternal;\n  }\n\n  get _root(): ReferenceImpl {\n    if (!this._rootInternal) {\n      this._rootInternal = new ReferenceImpl(this._repo, newEmptyPath());\n    }\n    return this._rootInternal;\n  }\n\n  _delete(): Promise<void> {\n    if (this._rootInternal !== null) {\n      repoManagerDeleteRepo(this._repo, this.app.name);\n      this._repoInternal = null;\n      this._rootInternal = null;\n    }\n    return Promise.resolve();\n  }\n\n  _checkNotDeleted(apiName: string) {\n    if (this._rootInternal === null) {\n      fatal('Cannot call ' + apiName + ' on a deleted database.');\n    }\n  }\n}\n\nfunction checkTransportInit() {\n  if (TransportManager.IS_TRANSPORT_INITIALIZED) {\n    warn(\n      'Transport has already been initialized. Please call this function before calling ref or setting up a listener'\n    );\n  }\n}\n\n/**\n * Force the use of websockets instead of longPolling.\n */\nexport function forceWebSockets() {\n  checkTransportInit();\n  BrowserPollConnection.forceDisallow();\n}\n\n/**\n * Force the use of longPolling instead of websockets. This will be ignored if websocket protocol is used in databaseURL.\n */\nexport function forceLongPolling() {\n  checkTransportInit();\n  WebSocketConnection.forceDisallow();\n  BrowserPollConnection.forceAllow();\n}\n\n/**\n * Returns the instance of the Realtime Database SDK that is associated\n * with the provided {@link @firebase/app#FirebaseApp}. Initializes a new instance with\n * with default settings if no instance exists or if the existing instance uses\n * a custom database URL.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned Realtime\n * Database instance is associated with.\n * @param url - The URL of the Realtime Database instance to connect to. If not\n * provided, the SDK connects to the default instance of the Firebase App.\n * @returns The `Database` instance of the provided app.\n */\nexport function getDatabase(\n  app: FirebaseApp = getApp(),\n  url?: string\n): Database {\n  return _getProvider(app, 'database').getImmediate({\n    identifier: url\n  }) as Database;\n}\n\n/**\n * Modify the provided instance to communicate with the Realtime Database\n * emulator.\n *\n * <p>Note: This method must be called before performing any other operation.\n *\n * @param db - The instance to modify.\n * @param host - The emulator host (ex: localhost)\n * @param port - The emulator port (ex: 8080)\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\n */\nexport function connectDatabaseEmulator(\n  db: Database,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('useEmulator');\n  if (db._instanceStarted) {\n    fatal(\n      'Cannot call useEmulator() after instance has already been initialized.'\n    );\n  }\n\n  const repo = db._repoInternal;\n  let tokenProvider: EmulatorTokenProvider | undefined = undefined;\n  if (repo.repoInfo_.nodeAdmin) {\n    if (options.mockUserToken) {\n      fatal(\n        'mockUserToken is not supported by the Admin SDK. For client access with mock users, please use the \"firebase\" package instead of \"firebase-admin\".'\n      );\n    }\n    tokenProvider = new EmulatorTokenProvider(EmulatorTokenProvider.OWNER);\n  } else if (options.mockUserToken) {\n    const token =\n      typeof options.mockUserToken === 'string'\n        ? options.mockUserToken\n        : createMockUserToken(options.mockUserToken, db.app.options.projectId);\n    tokenProvider = new EmulatorTokenProvider(token);\n  }\n\n  // Modify the repo to apply emulator settings\n  repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider);\n}\n\n/**\n * Disconnects from the server (all Database operations will be completed\n * offline).\n *\n * The client automatically maintains a persistent connection to the Database\n * server, which will remain active indefinitely and reconnect when\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\n * to control the client connection in cases where a persistent connection is\n * undesirable.\n *\n * While offline, the client will no longer receive data updates from the\n * Database. However, all Database operations performed locally will continue to\n * immediately fire events, allowing your application to continue behaving\n * normally. Additionally, each operation performed locally will automatically\n * be queued and retried upon reconnection to the Database server.\n *\n * To reconnect to the Database and begin receiving remote events, see\n * `goOnline()`.\n *\n * @param db - The instance to disconnect.\n */\nexport function goOffline(db: Database): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOffline');\n  repoInterrupt(db._repo);\n}\n\n/**\n * Reconnects to the server and synchronizes the offline Database state\n * with the server state.\n *\n * This method should be used after disabling the active connection with\n * `goOffline()`. Once reconnected, the client will transmit the proper data\n * and fire the appropriate events so that your client \"catches up\"\n * automatically.\n *\n * @param db - The instance to reconnect.\n */\nexport function goOnline(db: Database): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOnline');\n  repoResume(db._repo);\n}\n\n/**\n * Logs debugging information to the console.\n *\n * @param enabled - Enables logging if `true`, disables logging if `false`.\n * @param persistent - Remembers the logging state between page refreshes if\n * `true`.\n */\nexport function enableLogging(enabled: boolean, persistent?: boolean);\n\n/**\n * Logs debugging information to the console.\n *\n * @param logger - A custom logger function to control how things get logged.\n */\nexport function enableLogging(logger: (message: string) => unknown);\n\nexport function enableLogging(\n  logger: boolean | ((message: string) => unknown),\n  persistent?: boolean\n): void {\n  enableLoggingImpl(logger, persistent);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _registerComponent,\n  registerVersion,\n  SDK_VERSION\n} from '@firebase/app';\nimport { Component, ComponentType } from '@firebase/component';\n\nimport { name, version } from '../package.json';\nimport { setSDKVersion } from '../src/core/version';\n\nimport { repoManagerDatabaseFromApp } from './api/Database';\n\nexport function registerDatabase(variant?: string): void {\n  setSDKVersion(SDK_VERSION);\n  _registerComponent(\n    new Component(\n      'database',\n      (container, { instanceIdentifier: url }) => {\n        const app = container.getProvider('app').getImmediate()!;\n        const authProvider = container.getProvider('auth-internal');\n        const appCheckProvider = container.getProvider('app-check-internal');\n        return repoManagerDatabaseFromApp(\n          app,\n          authProvider,\n          appCheckProvider,\n          url\n        );\n      },\n      ComponentType.PUBLIC\n    ).setMultipleInstances(true)\n  );\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getModularInstance, Deferred } from '@firebase/util';\n\nimport { repoStartTransaction } from '../core/Repo';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { Node } from '../core/snap/Node';\nimport { validateWritablePath } from '../core/util/validation';\n\nimport { DatabaseReference } from './Reference';\nimport { DataSnapshot, onValue, ReferenceImpl } from './Reference_impl';\n\n/** An options object to configure transactions. */\nexport interface TransactionOptions {\n  /**\n   * By default, events are raised each time the transaction update function\n   * runs. So if it is run multiple times, you may see intermediate states. You\n   * can set this to false to suppress these intermediate states and instead\n   * wait until the transaction has completed before events are raised.\n   */\n  readonly applyLocally?: boolean;\n}\n\n/**\n * A type for the resolve value of {@link runTransaction}.\n */\nexport class TransactionResult {\n  /** @hideconstructor */\n  constructor(\n    /** Whether the transaction was successfully committed. */\n    readonly committed: boolean,\n    /** The resulting data snapshot. */\n    readonly snapshot: DataSnapshot\n  ) {}\n\n  /** Returns a JSON-serializable representation of this object. */\n  toJSON(): object {\n    return { committed: this.committed, snapshot: this.snapshot.toJSON() };\n  }\n}\n\n/**\n * Atomically modifies the data at this location.\n *\n * Atomically modify the data at this location. Unlike a normal `set()`, which\n * just overwrites the data regardless of its previous value, `runTransaction()` is\n * used to modify the existing value to a new value, ensuring there are no\n * conflicts with other clients writing to the same location at the same time.\n *\n * To accomplish this, you pass `runTransaction()` an update function which is\n * used to transform the current value into a new value. If another client\n * writes to the location before your new value is successfully written, your\n * update function will be called again with the new current value, and the\n * write will be retried. This will happen repeatedly until your write succeeds\n * without conflict or you abort the transaction by not returning a value from\n * your update function.\n *\n * Note: Modifying data with `set()` will cancel any pending transactions at\n * that location, so extreme care should be taken if mixing `set()` and\n * `runTransaction()` to update the same data.\n *\n * Note: When using transactions with Security and Firebase Rules in place, be\n * aware that a client needs `.read` access in addition to `.write` access in\n * order to perform a transaction. This is because the client-side nature of\n * transactions requires the client to read the data in order to transactionally\n * update it.\n *\n * @param ref - The location to atomically modify.\n * @param transactionUpdate - A developer-supplied function which will be passed\n * the current data stored at this location (as a JavaScript object). The\n * function should return the new value it would like written (as a JavaScript\n * object). If `undefined` is returned (i.e. you return with no arguments) the\n * transaction will be aborted and the data at this location will not be\n * modified.\n * @param options - An options object to configure transactions.\n * @returns A `Promise` that can optionally be used instead of the `onComplete`\n * callback to handle success and failure.\n */\nexport function runTransaction(\n  ref: DatabaseReference,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  transactionUpdate: (currentData: any) => unknown,\n  options?: TransactionOptions\n): Promise<TransactionResult> {\n  ref = getModularInstance(ref);\n\n  validateWritablePath('Reference.transaction', ref._path);\n\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw (\n      'Reference.transaction failed: ' + ref.key + ' is a read-only object.'\n    );\n  }\n\n  const applyLocally = options?.applyLocally ?? true;\n  const deferred = new Deferred<TransactionResult>();\n\n  const promiseComplete = (\n    error: Error | null,\n    committed: boolean,\n    node: Node | null\n  ) => {\n    let dataSnapshot: DataSnapshot | null = null;\n    if (error) {\n      deferred.reject(error);\n    } else {\n      dataSnapshot = new DataSnapshot(\n        node,\n        new ReferenceImpl(ref._repo, ref._path),\n        PRIORITY_INDEX\n      );\n      deferred.resolve(new TransactionResult(committed, dataSnapshot));\n    }\n  };\n\n  // Add a watch to make sure we get server updates.\n  const unwatcher = onValue(ref, () => {});\n\n  repoStartTransaction(\n    ref._repo,\n    ref._path,\n    transactionUpdate,\n    promiseComplete,\n    unwatcher,\n    applyLocally\n  );\n\n  return deferred.promise;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PersistentConnection } from '../core/PersistentConnection';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { Connection } from '../realtime/Connection';\n\nimport { repoManagerForceRestClient } from './Database';\n\nexport const DataConnection = PersistentConnection;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).simpleListen = function (\n  pathString: string,\n  onComplete: (a: unknown) => void\n) {\n  this.sendRequest('q', { p: pathString }, onComplete);\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).echo = function (\n  data: unknown,\n  onEcho: (a: unknown) => void\n) {\n  this.sendRequest('echo', { d: data }, onEcho);\n};\n\n// RealTimeConnection properties that we use in tests.\nexport const RealTimeConnection = Connection;\n\n/**\n * @internal\n */\nexport const hijackHash = function (newHash: () => string) {\n  const oldPut = PersistentConnection.prototype.put;\n  PersistentConnection.prototype.put = function (\n    pathString,\n    data,\n    onComplete,\n    hash\n  ) {\n    if (hash !== undefined) {\n      hash = newHash();\n    }\n    oldPut.call(this, pathString, data, onComplete, hash);\n  };\n  return function () {\n    PersistentConnection.prototype.put = oldPut;\n  };\n};\n\nexport const ConnectionTarget = RepoInfo;\n\n/**\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\n * @internal\n */\nexport const forceRestClient = function (forceRestClient: boolean) {\n  repoManagerForceRestClient(forceRestClient);\n};\n","/**\n * Firebase Realtime Database\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Database } from './api/Database';\nimport { registerDatabase } from './register';\n\nexport * from './api';\n\nregisterDatabase();\n\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    'database': Database;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const PROTOCOL_VERSION = '5';\n\nexport const VERSION_PARAM = 'v';\n\nexport const TRANSPORT_SESSION_PARAM = 's';\n\nexport const REFERER_PARAM = 'r';\n\nexport const FORGE_REF = 'f';\n\n// Matches console.firebase.google.com, firebase-console-*.corp.google.com and\n// firebase.corp.google.com\nexport const FORGE_DOMAIN_RE =\n  /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\n\nexport const LAST_SESSION_PARAM = 'ls';\n\nexport const APPLICATION_ID_PARAM = 'p';\n\nexport const APP_CHECK_TOKEN_PARAM = 'ac';\n\nexport const WEBSOCKET = 'websocket';\n\nexport const LONG_POLLING = 'long_polling';\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\nimport { Index } from './indexes/Index';\n\n/**\n * Node is an interface defining the common functionality for nodes in\n * a DataSnapshot.\n *\n * @interface\n */\nexport interface Node {\n  /**\n   * Whether this node is a leaf node.\n   * @returns Whether this is a leaf node.\n   */\n  isLeafNode(): boolean;\n\n  /**\n   * Gets the priority of the node.\n   * @returns The priority of the node.\n   */\n  getPriority(): Node;\n\n  /**\n   * Returns a duplicate node with the new priority.\n   * @param newPriorityNode - New priority to set for the node.\n   * @returns Node with new priority.\n   */\n  updatePriority(newPriorityNode: Node): Node;\n\n  /**\n   * Returns the specified immediate child, or null if it doesn't exist.\n   * @param childName - The name of the child to retrieve.\n   * @returns The retrieved child, or an empty node.\n   */\n  getImmediateChild(childName: string): Node;\n\n  /**\n   * Returns a child by path, or null if it doesn't exist.\n   * @param path - The path of the child to retrieve.\n   * @returns The retrieved child or an empty node.\n   */\n  getChild(path: Path): Node;\n\n  /**\n   * Returns the name of the child immediately prior to the specified childNode, or null.\n   * @param childName - The name of the child to find the predecessor of.\n   * @param childNode - The node to find the predecessor of.\n   * @param index - The index to use to determine the predecessor\n   * @returns The name of the predecessor child, or null if childNode is the first child.\n   */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string | null;\n\n  /**\n   * Returns a duplicate node, with the specified immediate child updated.\n   * Any value in the node will be removed.\n   * @param childName - The name of the child to update.\n   * @param newChildNode - The new child node\n   * @returns The updated node.\n   */\n  updateImmediateChild(childName: string, newChildNode: Node): Node;\n\n  /**\n   * Returns a duplicate node, with the specified child updated.  Any value will\n   * be removed.\n   * @param path - The path of the child to update.\n   * @param newChildNode - The new child node, which may be an empty node\n   * @returns The updated node.\n   */\n  updateChild(path: Path, newChildNode: Node): Node;\n\n  /**\n   * True if the immediate child specified exists\n   */\n  hasChild(childName: string): boolean;\n\n  /**\n   * @returns True if this node has no value or children.\n   */\n  isEmpty(): boolean;\n\n  /**\n   * @returns The number of children of this node.\n   */\n  numChildren(): number;\n\n  /**\n   * Calls action for each child.\n   * @param action - Action to be called for\n   * each child.  It's passed the child name and the child node.\n   * @returns The first truthy value return by action, or the last falsey one\n   */\n  forEachChild(index: Index, action: (a: string, b: Node) => void): unknown;\n\n  /**\n   * @param exportFormat - True for export format (also wire protocol format).\n   * @returns Value of this node as JSON.\n   */\n  val(exportFormat?: boolean): unknown;\n\n  /**\n   * @returns hash representing the node contents.\n   */\n  hash(): string;\n\n  /**\n   * @param other - Another node\n   * @returns -1 for less than, 0 for equal, 1 for greater than other\n   */\n  compareTo(other: Node): number;\n\n  /**\n   * @returns Whether or not this snapshot equals other\n   */\n  equals(other: Node): boolean;\n\n  /**\n   * @returns This node, with the specified index now available\n   */\n  withIndex(indexDefinition: Index): Node;\n\n  isIndexed(indexDefinition: Index): boolean;\n}\n\nexport class NamedNode {\n  constructor(public name: string, public node: Node) {}\n\n  static Wrap(name: string, node: Node) {\n    return new NamedNode(name, node);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deepCopy, contains } from '@firebase/util';\n\n/**\n * Tracks a collection of stats.\n */\nexport class StatsCollection {\n  private counters_: { [k: string]: number } = {};\n\n  incrementCounter(name: string, amount: number = 1) {\n    if (!contains(this.counters_, name)) {\n      this.counters_[name] = 0;\n    }\n\n    this.counters_[name] += amount;\n  }\n\n  get() {\n    return deepCopy(this.counters_);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst SERVER_TIMESTAMP = {\n  '.sv': 'timestamp'\n};\n\n/**\n * Returns a placeholder value for auto-populating the current timestamp (time\n * since the Unix epoch, in milliseconds) as determined by the Firebase\n * servers.\n */\nexport function serverTimestamp(): object {\n  return SERVER_TIMESTAMP;\n}\n\n/**\n * Returns a placeholder value that can be used to atomically increment the\n * current database value by the provided delta.\n *\n * @param delta - the amount to modify the current value atomically.\n * @returns A placeholder value for modifying data atomically server-side.\n */\nexport function increment(delta: number): object {\n  return {\n    '.sv': {\n      'increment': delta\n    }\n  };\n}\n","require(\"dotenv\").config();\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getDatabase, ref, onValue } from \"firebase/database\";\r\n\r\nconst firebaseConfig = JSON.parse(process.env.FIREBASE_FRONT);\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst rtdb = getDatabase();\r\n\r\nexport { firebaseConfig, app, rtdb };\r\n","import { firebaseConfig, app, rtdb } from \"./firebase\";\r\nimport { getDatabase, ref, onValue } from \"firebase/database\";\r\nimport * as _ from \"lodash\";\r\nconst API_BASE_URL = process.env.PORT || \"http://localhost:3099\";\r\n\r\ntype Message = {\r\n  from: string;\r\n  message: string;\r\n};\r\n\r\nconst state = {\r\n  data: {\r\n    email: \"\",\r\n    fullName: \"\",\r\n    userId: \"\",\r\n    roomId: \"\",\r\n    rtdbRoomId: \"\",\r\n    messages: [],\r\n  },\r\n  listeners: [],\r\n  getState() {\r\n    return this.data;\r\n  },\r\n  setState(newState) {\r\n    this.data = newState;\r\n    for (const callback of this.listeners) {\r\n      callback();\r\n    }\r\n    localStorage.setItem(\"state\", JSON.stringify(newState));\r\n    console.log(\"nuevo state\", this.data);\r\n  },\r\n  subscribe(callback: (any) => any) {\r\n    this.listeners.push(callback);\r\n  },\r\n  init() {\r\n    const recoverStateFromLocalSt = JSON.parse(localStorage.getItem(\"state\"));\r\n    this.setState(recoverStateFromLocalSt);\r\n    this.accessToRoom(() => {}, recoverStateFromLocalSt.roomId);\r\n  },\r\n\r\n  // funciones del proyecto\r\n  setEmailAndFullname(email: string, fullName: string, callback?) {\r\n    const cs = this.getState();\r\n    cs.fullName = fullName;\r\n    cs.email = email;\r\n\r\n    fetch(API_BASE_URL + \"/signup\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ email: cs.email, nombre: cs.fullName }),\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        cs.userId = data.id;\r\n        this.setState(cs);\r\n        callback();\r\n      });\r\n    this.setState(cs);\r\n  },\r\n\r\n  signIn(callback) {\r\n    const cs = this.getState();\r\n    if (cs.email) {\r\n      fetch(API_BASE_URL + \"/auth\", {\r\n        method: \"post\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ email: cs.email, nombre: cs.fullName }),\r\n      })\r\n        .then((res) => {\r\n          return res.json();\r\n        })\r\n        .then((data) => {\r\n          cs.userId = data.id;\r\n          this.setState(cs);\r\n          callback();\r\n        });\r\n    } else {\r\n      callback(true);\r\n    }\r\n  },\r\n\r\n  askNewRoom(callback?) {\r\n    const cs = this.getState();\r\n    if (cs.userId) {\r\n      fetch(API_BASE_URL + \"/rooms\", {\r\n        method: \"post\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ userId: cs.userId }),\r\n      })\r\n        .then((res) => {\r\n          return res.json();\r\n        })\r\n        .then((data) => {\r\n          cs.roomId = data.id;\r\n          this.setState(cs);\r\n          callback();\r\n        });\r\n    } else {\r\n      console.error(\"No hay user ID\");\r\n    }\r\n  },\r\n\r\n  accessToRoom(callback, userRoomId?) {\r\n    const cs = this.getState();\r\n    let roomId;\r\n    if (!cs.roomId) {\r\n      roomId = userRoomId;\r\n      cs.roomId = userRoomId;\r\n    } else if (cs.roomId) {\r\n      roomId = cs.roomId;\r\n    }\r\n\r\n    const URL = API_BASE_URL + \"/rooms/\" + roomId + \"?userId=\" + cs.userId;\r\n\r\n    fetch(URL)\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .catch((err) => alert(err))\r\n      .then((data) => {\r\n        cs.rtdbRoomId = data.rtdbshortRoomId;\r\n        this.setState(cs);\r\n        this.listenRoom();\r\n        callback();\r\n      });\r\n  },\r\n\r\n  listenRoom(callback?) {\r\n    const cs = this.getState();\r\n    const chatRoomRef = ref(rtdb, \"/rooms/\" + cs.rtdbRoomId);\r\n    onValue(chatRoomRef, (snapshot) => {\r\n      const cs = this.getState();\r\n      const messagesFromServer = snapshot.val();\r\n      const messagesList = _.map(messagesFromServer);\r\n      cs.messages = messagesList;\r\n      this.setState(cs);\r\n    });\r\n  },\r\n\r\n  //checkear si anda\r\n  pushMessage(message: string) {\r\n    const cs = this.getState();\r\n    fetch(API_BASE_URL + \"/messages\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        from: cs.fullName,\r\n        message: message,\r\n        roomId: cs.rtdbRoomId,\r\n      }),\r\n    });\r\n  },\r\n};\r\n\r\nexport { state };\r\n","import { Router } from \"@vaadin/router\";\r\nimport { state } from \"../state\";\r\n\r\nclass Home extends HTMLElement {\r\n  connectedCallback() {\r\n    this.render();\r\n    const form = this.querySelector(\".formulario\");\r\n    const selectEl = this.querySelector(\"#room-sel\");\r\n    const roomSelector = this.querySelector(\"#room-opt\");\r\n    const title = this.querySelector(\".title\");\r\n\r\n    selectEl.addEventListener(\"change\", (event) => {\r\n      if ((event.target as any).value === \"existing\") {\r\n        (roomSelector as any).style.display = \"inherit\";\r\n      } else if ((event.target as any).value === \"new\" || \"default\") {\r\n        (roomSelector as any).style.display = \"none\";\r\n      }\r\n    });\r\n    form.addEventListener(\"submit\", (e) => {\r\n      e.preventDefault();\r\n      const target = e.target as any;\r\n      const emailUser = target.email.value;\r\n      const nombreUser = target.nombre.value;\r\n      const dropdownUser = target.dropdown.value;\r\n      const roomnumUser = target.roomnum.value;\r\n      if (dropdownUser === \"none\") {\r\n        window.alert(\"seleccioná Room nuevo o existente\");\r\n      } else {\r\n        state.setEmailAndFullname(emailUser, nombreUser, (err) => {\r\n          if (err) console.error(\"hubo un problema en el signup\");\r\n          state.signIn((err) => {\r\n            if (err) {\r\n              console.error(\"hubo un error en el Auth\");\r\n            }\r\n            if (dropdownUser === \"new\") {\r\n              state.askNewRoom(() => {\r\n                state.accessToRoom((err) => {\r\n                  if (err) console.error(\"hubo un error en el accessRoom\");\r\n                });\r\n              });\r\n            } else if (dropdownUser === \"existing\") {\r\n              state.accessToRoom((err) => {\r\n                if (err) console.error(\"hubo un error en el accessRoom\");\r\n              }, roomnumUser);\r\n            }\r\n          });\r\n        });\r\n        let count = 3;\r\n        function countDown(div, count) {\r\n          var int = setInterval(() => {\r\n            div.innerHTML = `\r\n            Ingresando al room en ${count}\r\n            `;\r\n            count--;\r\n            if (count < 0) {\r\n              clearInterval(int);\r\n              setTimeout(() => {\r\n                Router.go(\"/chat\");\r\n              }, 800);\r\n            }\r\n          }, 1000);\r\n        }\r\n        countDown(title, count);\r\n      }\r\n    });\r\n  }\r\n  render() {\r\n    this.innerHTML = `\r\n    \r\n    <div class=\"columns\">\r\n    <div class=\"column\"></div>\r\n    <div class=\"column is-two-thirds\">\r\n      <div class=\"container\">\r\n        <h1 class=\"title is-1\">Bienvenido</h1>\r\n      </div>\r\n    </div>\r\n    <div class=\"column\"></div>\r\n  </div>\r\n  \r\n  <div class=\"columns\">\r\n    <div class=\"column\"></div>\r\n      <div class=\"column is-two-thirds\">\r\n      <form class=\"formulario\">\r\n        <div class=\"box\">\r\n          <div class=\"form\">\r\n            <div class=\"field\">\r\n              <label class=\"label\">Nombre</label>\r\n              <div class=\"control has-icons-left has-icons-right\">\r\n                <input class=\"input\" type=\"text\" placeholder=\"Tu nombre\" name=\"nombre\" required />\r\n                <span class=\"icon is-small is-left\">\r\n                  <i class=\"fas fa-user-astronaut\"></i>\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div class=\"field\">\r\n              <label class=\"label\">Email</label>\r\n              <div class=\"control has-icons-left has-icons-right\">\r\n                <input class=\"input\" type=\"email\" placeholder=\"tunombre@ejemplo.com\" name=\"email\" required />\r\n                <span class=\"icon is-small is-left\">\r\n                  <i class=\"fas fa-envelope\"></i>\r\n                </span>\r\n              </div>\r\n            </div>\r\n  \r\n            <div class=\"field\">\r\n              <label class=\"label\">Room</label>\r\n              <div class=\"control\">\r\n                <div class=\"select\">\r\n                  <select id=\"room-sel\" name=\"dropdown\" required>\r\n                    <option value=\"none\" selected=\"true\" disabled=\"disabled\">Seleccionar</option>\r\n                    <option value=\"new\">Nuevo Room</option>\r\n                    <option value=\"existing\">Room Existente</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"field\" id=\"room-opt\">\r\n              <label class=\"label\">ID del Room</label>\r\n              <div class=\"control\">\r\n                <input class=\"input\" type=\"text\" placeholder=\"1111\" name=\"roomnum\"/>\r\n              </div>\r\n            </div>\r\n  \r\n            <div class=\"field is-grouped\">\r\n              <div class=\"control\">\r\n                <button class=\"button is-success\">Comenzar</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        </form>\r\n      </div>\r\n    <div class=\"column\"></div>\r\n  </div>\r\n  \r\n      `;\r\n    const style = document.createElement(\"style\");\r\n    style.innerHTML = `\r\n    :root{\r\n      background-color: #1C1917\r\n    }\r\n    #room-opt{\r\n      display: none;\r\n    }\r\n    .input::placeholder {\r\n      color: #A8A29E;\r\n      opacity: 0.75;\r\n    }\r\n    * {\r\n      box-sizing: border-box;\r\n    }\r\n    body {\r\n      margin: 0;\r\n    }\r\n    .columns{\r\n      margin-top: 10px;\r\n    }\r\n    .box{\r\n      background-color: #164E63\r\n    }\r\n    .label, .input, #room-sel{\r\n      color: white\r\n    }\r\n    .input, #room-sel{\r\n      background-color: #155E75\r\n    }\r\n    .title{\r\n      text-align: center;\r\n      color: #06B6D4\r\n    }\r\n    .field{\r\n      margin-top:1.5em;\r\n      margin-bottom:1.5em;\r\n    }\r\n    @media (max-width: 769px) {\r\n      .formulario{\r\n        width: 70%;\r\n        margin: 0 auto;\r\n      }\r\n    }\r\n    `;\r\n    this.appendChild(style);\r\n  }\r\n}\r\ncustomElements.define(\"home-page\", Home);\r\n","import { state } from \"../state\";\r\n\r\ntype Message = {\r\n  from: string;\r\n  message: string;\r\n};\r\n\r\nclass Chat extends HTMLElement {\r\n  connectedCallback() {\r\n    state.subscribe(() => {\r\n      const currState = state.getState();\r\n      this.roomId = currState.roomId;\r\n      if (currState.messages !== undefined) {\r\n        this.messages = currState.messages;\r\n        this.render();\r\n      }\r\n    });\r\n    this.render();\r\n  }\r\n  addListeners() {\r\n    const form = this.querySelector(\".submit-message\");\r\n    form.addEventListener(\"submit\", (e) => {\r\n      e.preventDefault();\r\n      const target = e.target as any;\r\n      state.pushMessage(target[0].value);\r\n    });\r\n  }\r\n  roomId: string;\r\n  messages: Message[] = [];\r\n  render() {\r\n    const currState = state.getState();\r\n\r\n    this.innerHTML = `\r\n  <div class=\"columns is-mobile\">\r\n    <div class=\"column\"></div>\r\n    <div class=\"column is-two-thirds\">\r\n        <div class=\"container\">\r\n          <h1 class=\"title is-3\">Chat Page</h1>\r\n          <h4 class=\"roomid\">Room ID es ${currState.roomId}</h1>\r\n          </div>\r\n          </div>\r\n          <div class=\"column\"></div>\r\n          </div>\r\n          \r\n          \r\n          <div class=\"columns is-mobile\">\r\n          <div class=\"column\"></div>\r\n          <div class=\"column is-two-thirds\">\r\n          <div class=\"content\">\r\n          <div class=\"subt\">Mensajes</div>\r\n          <div class=\"containerrr\">\r\n          <div class=\"messages\">\r\n          ${this.messages\r\n            .map((msg) => {\r\n              if (msg.from !== undefined) {\r\n                if (msg.from === currState.fullName) {\r\n                  return `<div class=\"msg-container mens-mio\">\r\n                    <div class=\"messagefrom\">${msg.from}</div>\r\n                    <div class=\"messagecontent\">${msg.message}</div>\r\n                    </div>`;\r\n                } else if (msg.from !== currState.fullName) {\r\n                  return `<div class=\"msg-container mens-suyo\">\r\n                    <div class=\"messagefrom\">${msg.from}</div>\r\n                    <div class=\"messagecontent\">${msg.message}</div>\r\n                    </div>`;\r\n                }\r\n              }\r\n            })\r\n            .join(\"\")}\r\n          </div>\r\n       </div>\r\n     </div>\r\n     <form class=\"submit-message\">\r\n         <input type=\"text\" name=\"new-message\" class=\"input\" placeholder=\"Tu Mensaje\">\r\n         <button class=\"button is-success\">Enviar</button>\r\n       </form>\r\n  </div>\r\n\r\n        <div class=\"column\"></div>\r\n  </div>\r\n    `;\r\n    const style = document.createElement(\"style\");\r\n    style.innerHTML = `\r\n    :root{\r\n      background-color: #1C1917\r\n    }\r\n    * {\r\n      box-sizing: border-box;\r\n    }\r\n    body {\r\n      margin: 0;\r\n    }\r\n    .content{\r\n      height: 60vh;\r\n    }\r\n    .containerrr{\r\n      height: 50vh;\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 20px;\r\n      overflow: hidden;\r\n    }\r\n    .columns{\r\n      margin-top: 10px;\r\n    }\r\n    .content{\r\n      background-color: #164E63;\r\n      padding: 20px;\r\n      border-radius: 0.5em;\r\n      border: 1px white solid;\r\n    }\r\n    .title, .subt, .roomid{\r\n      text-align: center;\r\n      color: #06B6D4;\r\n    }\r\n    .subt{\r\n      margin-bottom: 20px;\r\n    }\r\n    .input{\r\n      background-color: #155E75;\r\n      color: white;\r\n    }\r\n    .input::placeholder {\r\n      color: #A8A29E;\r\n      opacity: 0.75;\r\n    }\r\n    .button{\r\n      margin-top:20px;\r\n    }\r\n    .messages{\r\n      overflow-y: scroll;\r\n    }\r\n    .messages, .msg-container{\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n    .messagefrom {\r\n      background-color: rgba(56, 189, 248, 0.7);\r\n      color: rgb(240, 249, 255);\r\n      margin: 1.5em 0.5em 0 0.5em;\r\n      text-align: center;\r\n      border-radius: 0.5em;\r\n      padding: 0.7em;\r\n    }\r\n    .messagecontent{\r\n      background-color: transparent;\r\n      color: white;\r\n      margin: 0.3em 20px 20px 20px;\r\n    }\r\n    .mens-mio{\r\n      align-self: flex-end;\r\n    }\r\n    .mens-suyo{\r\n      align-self: flex-start;\r\n    }\r\n    `;\r\n    this.appendChild(style);\r\n    this.addListeners();\r\n    var objDiv = this.querySelector(\".messages\");\r\n    objDiv.scrollTop = objDiv.scrollHeight;\r\n  }\r\n}\r\ncustomElements.define(\"chat-page\", Chat);\r\n","import { Router } from \"@vaadin/router\";\r\n\r\nconst router = new Router(document.getElementById(\"app\"));\r\nrouter.setRoutes([\r\n  { path: \"/\", component: \"home-page\" },\r\n  { path: \"/chat\", component: \"chat-page\" },\r\n]);\r\n","import \"./pages/home\";\nimport \"./pages/chat\";\nimport \"./router\";\nimport { state } from \"./state\";\nimport { Router } from \"@vaadin/router\";\n\n(function main() {\n  const app = document.getElementById(\"app\");\n  // if (localStorage.getItem(\"state\") !== null) {\n  //   state.init();\n  //   setTimeout(() => {\n  //     Router.go(\"/chat\");\n  //   }, 1000);\n  // }\n})();\n"],"names":["$f9d9d110dea7aeee$var$toArray","objectOrArray","Array","isArray","$f9d9d110dea7aeee$var$log","msg","$hPtJY","parcelRequire","$630dda8d81b1b9e8$var$LINE","$630dda8d81b1b9e8$var$_log","message","console","log","$630dda8d81b1b9e8$var$DotenvModule","options","dotenvPath","$k3kFo","resolve","cwd","encoding","debug","Boolean","override","envPath","path","join","$broFN","homedir","slice","parsed","parse","$kjyEk","readFileSync","Object","keys","forEach","key","prototype","hasOwnProperty","call","env","e","error","src","obj","match","lines","toString","replace","exec","value","trim","maybeQuote","module","exports","config","$cfae44f0dfdf62c0$var$cachedSetTimeout","$cfae44f0dfdf62c0$var$cachedClearTimeout","$cfae44f0dfdf62c0$var$process","$cfae44f0dfdf62c0$var$defaultSetTimout","Error","$cfae44f0dfdf62c0$var$defaultClearTimeout","$cfae44f0dfdf62c0$var$runTimeout","fun","setTimeout","e1","this","clearTimeout","$cfae44f0dfdf62c0$var$currentQueue","$cfae44f0dfdf62c0$var$queue","$cfae44f0dfdf62c0$var$draining","$cfae44f0dfdf62c0$var$queueIndex","$cfae44f0dfdf62c0$var$cleanUpNextTick","length","concat","$cfae44f0dfdf62c0$var$drainQueue","timeout","len","run","marker","$cfae44f0dfdf62c0$var$runClearTimeout","$cfae44f0dfdf62c0$var$Item","array","$cfae44f0dfdf62c0$var$noop","nextTick","args","arguments","i","push","apply","title","browser","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","chdir","dir","umask","$e9941e6bfdeb4d10$var$assertPath","TypeError","JSON","stringify","$e9941e6bfdeb4d10$var$normalizeStringPosix","allowAboveRoot","code","res","lastSegmentLength","lastSlash","dots","charCodeAt","lastSlashIndex","lastIndexOf","$e9941e6bfdeb4d10$var$posix","resolvedPath","resolvedAbsolute","undefined","$bwtrh","normalize","isAbsolute","trailingSeparator","joined","arg","relative","from","to","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","out","_makeLong","dirname","hasRoot","end","matchedSlash","basename","ext","start","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","pathObject","sep","root","base","$e9941e6bfdeb4d10$var$_format","ret","delimiter","win32","posix","$863984ddd3ec6474$var$cachedSetTimeout","$863984ddd3ec6474$var$cachedClearTimeout","$863984ddd3ec6474$var$process","$863984ddd3ec6474$var$defaultSetTimout","$863984ddd3ec6474$var$defaultClearTimeout","$863984ddd3ec6474$var$runTimeout","$863984ddd3ec6474$var$currentQueue","$863984ddd3ec6474$var$queue","$863984ddd3ec6474$var$draining","$863984ddd3ec6474$var$queueIndex","$863984ddd3ec6474$var$cleanUpNextTick","$863984ddd3ec6474$var$drainQueue","$863984ddd3ec6474$var$runClearTimeout","$863984ddd3ec6474$var$Item","$863984ddd3ec6474$var$noop","$85455ae811c2d9f2$export$c1d46b5ea6262c0b","FUNC_ERROR_TEXT","HASH_UNDEFINED","PLACEHOLDER","WRAP_CURRY_RIGHT_FLAG","WRAP_PARTIAL_FLAG","WRAP_PARTIAL_RIGHT_FLAG","WRAP_ARY_FLAG","WRAP_REARG_FLAG","INFINITY","MAX_SAFE_INTEGER","NAN","MAX_ARRAY_LENGTH","wrapFlags","argsTag","arrayTag","boolTag","dateTag","errorTag","funcTag","genTag","mapTag","numberTag","objectTag","promiseTag","regexpTag","setTag","stringTag","symbolTag","weakMapTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","RegExp","source","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","rePropName","reRegExpChar","reHasRegExpChar","reTrimStart","reWhitespace","reWrapComment","reWrapDetails","reSplitDetails","reAsciiWord","reForbiddenIdentifierChars","reEscapeChar","reEsTemplate","reFlags","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reIsUint","reLatin","reNoMatch","reUnescapedString","rsComboRange","rsComboMarksRange","rsDingbatRange","rsLowerRange","rsUpperRange","rsVarRange","rsBreakRange","rsMathOpRange","rsApos","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsMiscLower","rsMiscUpper","rsOptContrLower","rsOptContrUpper","reOptMod","rsOptVar","rsSeq","rsEmoji","rsSymbol","reApos","reComboMark","reUnicode","rsFitz","reUnicodeWord","reHasUnicode","reHasUnicodeWord","contextProps","templateCounter","typedArrayTags","cloneableTags","stringEscapes","freeParseFloat","parseFloat","freeParseInt","parseInt","freeGlobal","$parcel$global","freeSelf","self","Function","freeExports","nodeType","freeModule","moduleExports","freeProcess","process","nodeUtil","types","require","nodeIsArrayBuffer","isArrayBuffer","nodeIsDate","isDate","nodeIsMap","isMap","nodeIsRegExp","isRegExp","nodeIsSet","isSet","nodeIsTypedArray","isTypedArray","func","thisArg","arrayAggregator","setter","iteratee","accumulator","index","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","result","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","arrayPush","values","offset","arrayReduce","initAccum","arrayReduceRight","arraySome","asciiSize","baseProperty","baseFindKey","collection","eachFunc","baseFindIndex","fromIndex","fromRight","strictIndexOf","baseIsNaN","baseIndexOfWith","baseMean","baseSum","object","basePropertyOf","baseReduce","current","baseTimes","n","baseTrim","string","trimmedEndIndex","baseUnary","baseValues","props","cacheHas","cache","has","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","countHolders","placeholder","deburrLetter","escapeHtmlChar","escapeStringChar","chr","hasUnicode","test","mapToArray","map","size","overArg","transform","replaceHolders","setToArray","set","stringSize","lastIndex","unicodeSize","stringToArray","unicodeToArray","split","asciiToArray","charAt","unescapeHtmlChar","_","runInContext","context","uid","Array1","defaults","pick","Date","Function1","Math","Object1","RegExp1","String","arrayProto","funcProto","objectProto","coreJsData","funcToString","idCounter","maskSrcKey","IE_PROTO","nativeObjectToString","objectCtorString","oldDash","reIsNative","Buffer","Symbol","Uint8Array","allocUnsafe","getPrototype","getPrototypeOf","objectCreate","create","propertyIsEnumerable","splice","spreadableSymbol","isConcatSpreadable","symIterator","iterator","symToStringTag","toStringTag","defineProperty","getNative","ctxClearTimeout","ctxNow","now","ctxSetTimeout","nativeCeil","ceil","nativeFloor","floor","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","isBuffer","nativeIsFinite","isFinite","nativeJoin","nativeKeys","nativeMax","max","nativeMin","min","nativeNow","nativeParseInt","nativeRandom","random","nativeReverse","reverse","DataView","Map","Promise","Set","WeakMap","nativeCreate","metaMap","realNames","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","valueOf","symbolToString","lodash","isObjectLike","LazyWrapper","LodashWrapper","wrapperClone","baseCreate","proto","isObject","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","Hash","entries","clear","entry","ListCache","MapCache","SetCache","__data__","add","Stack","data","arrayLikeKeys","inherited","isArr","isArg","isArguments","isBuff","isType","skipIndexes","isIndex","arraySample","baseRandom","arraySampleSize","shuffleSelf","copyArray","baseClamp","arrayShuffle","assignMergeValue","eq","baseAssignValue","assignValue","objValue","assocIndexOf","baseAggregator","baseEach","baseAssign","copyObject","configurable","enumerable","writable","baseAt","paths","skip","get","number","lower","upper","baseClone","bitmask","customizer","stack","isDeep","isFlat","isFull","constructor","input","initCloneArray","tag","getTag","isFunc","cloneBuffer","initCloneObject","getSymbolsIn","copySymbolsIn","keysIn","baseAssignIn","getSymbols","copySymbols","Ctor","cloneArrayBuffer","dataView","buffer","byteOffset","byteLength","cloneDataView","cloneTypedArray","regexp","cloneRegExp","symbol","initCloneByTag","stacked","subValue","getAllKeysIn","getAllKeys","baseConformsTo","baseDelay","wait","baseDifference","includes","isCommon","valuesLength","outer","computed","valuesIndex","templateSettings","escape","evaluate","interpolate","variable","imports","pop","hash","getMapData","pairs","LARGE_ARRAY_SIZE","createBaseEach","baseForOwn","baseEachRight","baseForOwnRight","baseEvery","baseExtremum","isSymbol","baseFilter","baseFlatten","depth","isStrict","isFlattenable","baseFor","createBaseFor","baseForRight","baseFunctions","isFunction","baseGet","castPath","toKey","baseGetAllKeys","keysFunc","symbolsFunc","baseGetTag","isOwn","unmasked","getRawTag","objectToString","baseGt","other","baseHas","baseHasIn","baseIntersection","arrays","othLength","othIndex","caches","maxLength","Infinity","seen","baseInvoke","parent","last","baseIsArguments","baseIsEqual","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","convert","isPartial","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","objProps","objLength","objStacked","othStacked","skipCtor","othValue","compared","objCtor","othCtor","equalObjects","baseIsEqualDeep","baseIsMatch","matchData","noCustomizer","srcValue","COMPARE_PARTIAL_FLAG","baseIsNative","baseIteratee","identity","baseMatchesProperty","baseMatches","property","baseKeys","isPrototype","baseKeysIn","nativeKeysIn","isProto","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isKey","isStrictComparable","hasIn","baseMerge","srcIndex","mergeFunc","safeGet","newValue","isTyped","isArrayLikeObject","isPlainObject","toPlainObject","baseMergeDeep","baseNth","baseOrderBy","iteratees","orders","getIteratee","criteria","comparer","sort","baseSortBy","objCriteria","othCriteria","ordersLength","compareAscending","compareMultiple","basePickBy","baseSet","basePullAll","indexOf","basePullAt","indexes","previous","baseUnset","baseRepeat","baseRest","setToString","overRest","baseSample","baseSampleSize","nested","baseSetData","baseSetToString","constant","baseShuffle","baseSlice","baseSome","baseSortedIndex","retHighest","low","high","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","baseSortedUniq","baseToNumber","baseToString","baseUniq","createSet","seenIndex","baseUpdate","updater","baseWhile","isDrop","baseWrapperValue","actions","action","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castRest","castSlice","id","copy","arrayBuffer","typedArray","valIsDefined","valIsReflexive","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","isNew","createAggregator","initializer","createAssigner","assigner","sources","guard","isIterateeCall","iterable","createCaseFirst","methodName","trailing","createCompounder","callback","words","deburr","createCtor","thisBinding","createFind","findIndexFunc","createFlow","flatRest","funcs","prereq","thru","wrapper","getFuncName","funcName","getData","isLaziable","plant","createHybrid","partialsRight","holdersRight","argPos","ary","arity","isAry","isBind","isBindKey","isFlip","getHolder","holdersCount","newHolders","createRecurry","fn","reorder","createInverter","toIteratee","baseInverter","createMathOperation","operator","defaultValue","createOver","arrayFunc","createPadding","chars","charsLength","createRange","step","toFinite","baseRange","createRelationalOperation","toNumber","wrapFunc","isCurry","newData","setData","setWrapToString","createRound","precision","toInteger","pair","noop","createToPairs","setToPairs","baseToPairs","createWrap","srcBitmask","newBitmask","isCombo","mergeData","createCurry","createPartial","createBind","customDefaultsAssignIn","customDefaultsMerge","customOmitClone","arrLength","arrStacked","arrValue","flatten","otherFunc","type","getValue","stubArray","hasPath","hasFunc","isLength","ArrayBuffer","ctorString","isMaskable","stubFalse","otherArgs","oldArray","shortOut","reference","details","insertWrapDetails","updateWrapDetails","getWrapDetails","count","lastCalled","stamp","remaining","rand","memoize","memoizeCapped","quote","subString","clone","difference","differenceBy","differenceWith","findIndex","findLastIndex","head","intersection","mapped","intersectionBy","intersectionWith","pull","pullAll","pullAt","union","unionBy","unionWith","unzip","group","unzipWith","without","xor","xorBy","xorWith","zip","zipWith","chain","interceptor","wrapperAt","countBy","find","findLast","forEachRight","groupBy","invokeMap","keyBy","partition","sortBy","before","bind","bindKey","WRAP_BIND_FLAG","debounce","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","invokeFunc","time","leadingEdge","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","cancel","flush","defer","delay","resolver","memoized","Cache","negate","overArgs","transforms","funcsLength","partial","partialRight","rearg","gt","gte","isError","isInteger","isNumber","isString","lt","lte","toArray","next","done","iteratorToArray","remainder","toLength","isBinary","assign","assignIn","assignInWith","assignWith","at","propsIndex","propsLength","defaultsDeep","mergeWith","invert","invertBy","invoke","merge","omit","CLONE_DEEP_FLAG","basePick","pickBy","prop","toPairs","toPairsIn","camelCase","word","toLowerCase","capitalize","upperFirst","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","toUpperCase","pattern","hasUnicodeWord","unicodeWords","asciiWords","attempt","bindAll","methodNames","flow","flowRight","method","methodOf","mixin","over","overEvery","overSome","basePropertyDeep","range","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","round","subtract","minuend","subtrahend","after","castArray","chunk","compact","cond","conforms","baseConforms","properties","curry","curryRight","drop","dropRight","dropRightWhile","dropWhile","fill","baseFill","filter","flatMap","flatMapDeep","flatMapDepth","flattenDeep","flattenDepth","flip","fromPairs","functions","functionsIn","initial","mapKeys","mapValues","matches","matchesProperty","nthArg","omitBy","orderBy","propertyOf","pullAllBy","pullAllWith","reject","remove","rest","sampleSize","setWith","shuffle","sortedUniq","sortedUniqBy","separator","limit","spread","tail","take","takeRight","takeRightWhile","takeWhile","tap","throttle","toPath","isArrLike","unary","uniq","uniqBy","uniqWith","unset","update","updateWith","valuesIn","wrap","zipObject","zipObjectDeep","entriesIn","extend","extendWith","clamp","cloneDeep","cloneDeepWith","cloneWith","conformsTo","defaultTo","endsWith","target","position","escapeRegExp","every","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","inRange","baseInRange","isBoolean","isElement","isEmpty","isEqual","isEqualWith","isMatch","isMatchWith","isNaN","isNative","isNil","isNull","isSafeInteger","isUndefined","isWeakMap","isWeakSet","strictLastIndexOf","maxBy","mean","meanBy","minBy","stubObject","stubString","stubTrue","nth","noConflict","pad","strLength","padEnd","padStart","radix","floating","temp","reduce","reduceRight","repeat","sample","some","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","startsWith","sum","sumBy","template","settings","isEscaping","isEvaluating","importsKeys","importsValues","reDelimiters","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","times","toLower","toSafeInteger","toUpper","trimEnd","trimStart","truncate","omission","search","substring","global","newEnd","unescape","uniqueId","prefix","each","eachRight","first","VERSION","isFilter","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","isRight","view","getView","iterLength","takeCount","iterIndex","commit","wrapped","toJSON","define","amd","$f9d9d110dea7aeee$var$bundleKeys","$f9d9d110dea7aeee$var$ensureBundle","$f9d9d110dea7aeee$var$ensureRoute","route","$f9d9d110dea7aeee$var$isString","bundle","stringKeys","$f9d9d110dea7aeee$var$isFunction","children","$f9d9d110dea7aeee$var$isObject","redirect","overriddenProp","warn","$f9d9d110dea7aeee$var$ensureRoutes","routes","$f9d9d110dea7aeee$var$loadScript","script","document","querySelector","createElement","setAttribute","async","onreadystatechange","onload","__dynamicImportLoaded","onerror","parentNode","removeChild","appendChild","$f9d9d110dea7aeee$var$fireRouterEvent","detail","window","dispatchEvent","CustomEvent","cancelable","o","f","s","$f9d9d110dea7aeee$var$getNotFoundError","pathname","$f9d9d110dea7aeee$var$notFoundResult","$f9d9d110dea7aeee$var$vaadinRouterGlobalClickHandler","event","defaultPrevented","button","shiftKey","ctrlKey","altKey","metaKey","anchor","composedPath","nodeName","hasAttribute","location","origin","port","protocol","hostname","host","$f9d9d110dea7aeee$var$getAnchorOrigin","preventDefault","scrollTo","$f9d9d110dea7aeee$var$CLICK","activate","addEventListener","inactivate","removeEventListener","$f9d9d110dea7aeee$var$vaadinRouterGlobalPopstateHandler","state","navigator","userAgent","PopStateEvent","inType","params","createEvent","initEvent","bubbles","Event","$f9d9d110dea7aeee$var$POPSTATE","$f9d9d110dea7aeee$var$pathToRegexp_1","$f9d9d110dea7aeee$var$pathToRegexp","$f9d9d110dea7aeee$var$parse_1","$f9d9d110dea7aeee$var$parse","$f9d9d110dea7aeee$var$compile_1","str","$f9d9d110dea7aeee$var$tokensToFunction","$f9d9d110dea7aeee$var$tokensToFunction_1","$f9d9d110dea7aeee$var$tokensToRegExp_1","$f9d9d110dea7aeee$var$tokensToRegExp","$f9d9d110dea7aeee$var$PATH_REGEXP","tokens","defaultDelimiter","delimiters","pathEscaped","m","escaped","prev","capture","modifier","k","optional","$f9d9d110dea7aeee$var$escapeGroup","$f9d9d110dea7aeee$var$escapeString","substr","encode","encodeURIComponent","token","segment","j","$f9d9d110dea7aeee$var$flags","sensitive","strict","isEndDelimited","groups","$f9d9d110dea7aeee$var$regexpToRegexp","parts","$f9d9d110dea7aeee$var$arrayToRegexp","$f9d9d110dea7aeee$var$stringToRegexp","$f9d9d110dea7aeee$var$hasOwnProperty","$f9d9d110dea7aeee$var$cache","$f9d9d110dea7aeee$var$decodeParam","val","decodeURIComponent","err","$f9d9d110dea7aeee$var$matchRoute","ignoreLeadingSlash","parentKeys","parentParams","childMatches","childIndex","routepath","routeToSkip","__children","exact","cacheKey","pathToRegexp","$f9d9d110dea7aeee$var$matchPath","childRoute","matchedLength","childMatch","$f9d9d110dea7aeee$var$resolveRoute","$f9d9d110dea7aeee$export$8b4c839865b08288","baseUrl","errorHandler","resolveRoute","__synthetic","getRoutes","setRoutes","newRoutes","addRoutes","removeRoutes","pathnameOrContext","__normalizePathname","nextMatches","currentContext","resume","prevResult","parentRoute","$f9d9d110dea7aeee$var$isChildRoute","item","$f9d9d110dea7aeee$var$updateChainForRoute","then","resolution","catch","errorMessage","routePath","$f9d9d110dea7aeee$var$generateErrorMessage","DOMException","static","url","URL","__effectiveBaseUrl","__createUrl","baseURI","href","normalizedUrl","$f9d9d110dea7aeee$var$cacheRoutes","routesByName","component","$f9d9d110dea7aeee$var$getRouteByName","routeName","$f9d9d110dea7aeee$var$getRoutePath","$f9d9d110dea7aeee$var$generateUrls","router","fullPath","rt","tokensToFunction","stringifyQueryParams","queryParams","keys1","i1","query","$f9d9d110dea7aeee$var$triggers","$f9d9d110dea7aeee$var$animate","elem","className","classList","getComputedStyle","getPropertyValue","$f9d9d110dea7aeee$var$willAnimate","rect","getBoundingClientRect","bottom","top","right","left","cb","listener","$f9d9d110dea7aeee$var$waitForAnimation","removeAttribute","$f9d9d110dea7aeee$var$isResultNotEmpty","$f9d9d110dea7aeee$var$createLocation","redirectFrom","getUrl","userParams","$f9d9d110dea7aeee$var$getPathnameForRouter","$f9d9d110dea7aeee$export$55185c17a0fcbe46","compile","$f9d9d110dea7aeee$var$getMatchedPath","$f9d9d110dea7aeee$var$createRedirect","$f9d9d110dea7aeee$var$runCallbackIfPossible","$f9d9d110dea7aeee$var$amend","amendmentFunction","element","amendmentResult","$f9d9d110dea7aeee$var$removeDomNodes","nodes","a","b","outlet","baseElement","baseHref","getAttribute","super","__resolveRoute","triggers","NavigationTrigger","setTriggers","ready","__lastStartedRenderId","__navigationEventHandler","__onNavigationEvent","setOutlet","subscribe","__createdByRouter","__addedByRouter","callbacks","$f9d9d110dea7aeee$var$copyContextWithoutNext","newChildren","childRoutes","$f9d9d110dea7aeee$var$processNewChildren","commands","__isLatestRender","HTMLElement","race","__ensureOutlet","__outlet","getOutlet","skipRender","__previousContext","__urlForName","render","shouldUpdateHistory","renderId","__renderId","__fullyResolveChain","previousContext","__updateBrowserHistory","__skipAttach","__copyUnchangedElements","__addAppearingContent","animationDone","__animateIfNeeded","__runOnAfterEnterCallbacks","__runOnAfterLeaveCallbacks","__removeDisappearingContent","topOfTheChainContextBeforeRedirects","contextBeforeRedirects","__findComponentContextAfterAllRedirects","contextAfterRedirects","topOfTheChainContextAfterRedirects","isFound","findNextContextIfAny","nextContext","__amendWithOnBeforeCallbacks","$f9d9d110dea7aeee$var$renderElement","__redirect","__redirectCount","stringType","$f9d9d110dea7aeee$var$logValue","contextWithFullChain","__runOnBeforeCallbacks","amendedContext","newContext","previousChain","newChain","prevent","__divergedChainIndex","__isReusableElement","__runOnBeforeLeaveCallbacks","i2","__runOnBeforeEnterCallbacks","i3","i4","chainElement","afterLeaveFunction","beforeEnterFunction","otherElement","localName","redirectData","counter","urlForPath","Node","changeState","history","deepestCommonParent","unchangedElement","__removeAppearingContent","__appearingContent","__disappearingContent","parentElement","elementToAdd","targetContext","currentComponent","onAfterLeave","onAfterEnter","promises","animate","leave","enter","all","unsubscribe","newTriggers","trigger","urlForName","$f9d9d110dea7aeee$var$DEV_MODE_CODE_REGEXP","$f9d9d110dea7aeee$var$FlowClients","Vaadin","Flow","clients","$f9d9d110dea7aeee$var$uncommentAndRun","$f9d9d110dea7aeee$var$runIfDevelopmentMode","developmentMode","$f9d9d110dea7aeee$var$maybeGatherAndSendStats","localStorage","getItem","client","productionMode","$f9d9d110dea7aeee$var$isFlowProductionMode","$f9d9d110dea7aeee$var$isDevelopmentMode","registrations","is","$c38e0f42709c826a$export$588c7fdda06fbb0a","assertion","$c38e0f42709c826a$export$a39cad550e7ab28a","$c38e0f42709c826a$var$stringToByteArray$1","p","c","charToByteMapWebSafe_","ENCODED_VALS_BASE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","webSafe","init_","byteToCharMap","byteToCharMapWebSafe_","byteToCharMap_","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","encodeString","btoa","decodeString","bytes","pos","c1","fromCharCode","stringToByteArray","c2","u","c22","c31","$c38e0f42709c826a$var$byteArrayToString","decodeStringToByteArray","charToByteMap","charToByteMap_","byte4","ENCODED_VALS","ENCODED_VALS_WEBSAFE","$c38e0f42709c826a$export$e510a73ee562749","utf8Bytes","$c38e0f42709c826a$export$b3b2de96497acc47","$c38e0f42709c826a$export$4b5284a3025a455","$c38e0f42709c826a$export$c62426fdd000a97e","$c38e0f42709c826a$export$6c40052bed430212","$c38e0f42709c826a$export$54e9fb29908872fa","$c38e0f42709c826a$export$85f6557964517f1a","promise","$c38e0f42709c826a$export$c36915b22ce77c19","$c38e0f42709c826a$export$872f8323f01d7ae0","$c38e0f42709c826a$export$5d1d834fbbf8bab7","customData","setPrototypeOf","$c38e0f42709c826a$export$dd24e9cd51226c56","captureStackTrace","$c38e0f42709c826a$export$3fa6e1b18a3b2d40","service","serviceName","errors","fullCode","$c38e0f42709c826a$var$PATTERN","$c38e0f42709c826a$var$replaceTemplate","fullMessage","$c38e0f42709c826a$export$c5a53ce6a17cf18d","claims","header","signature","$c38e0f42709c826a$export$9565ca3d387f8aa0","$c38e0f42709c826a$export$2f872c0f2117be69","$c38e0f42709c826a$export$fc970ed23da99565","$c38e0f42709c826a$export$2344b14b097df817","$c38e0f42709c826a$export$871de8747c9eaa88","contextObj","$c38e0f42709c826a$export$9cb4719e2e525b7a","aKeys","bKeys","aProp","bProp","$c38e0f42709c826a$var$isObject","k1","thing","$a83e7ccd68ca8d4e$export$16fa2f45be04daa8","instanceFactory","multipleInstances","serviceProps","instantiationMode","onInstanceCreated","mode","setServiceProps","container","instances","instancesDeferred","instancesOptions","onInitCallbacks","normalizedIdentifier","deferred","isInitialized","shouldAutoInitialize","normalizeInstanceIdentifier","identifier","_a","$a83e7ccd68ca8d4e$var$isComponentEager","getOrInitializeService","instanceIdentifier","instanceDeferred","instance","delete","services","INTERNAL","_delete","opts","isComponentSet","onInit","existingCallbacks","existingInstance","invokeOnInitCallbacks","$45b460d9de9b230f$var$instances","$45b460d9de9b230f$export$243e62d78d3b544d","LogLevel","DEBUG","VERBOSE","INFO","WARN","ERROR","SILENT","$45b460d9de9b230f$var$defaultLogLevel","$45b460d9de9b230f$var$ConsoleMethod","$45b460d9de9b230f$var$defaultLogHandler","logType","logLevel","toISOString","_logLevel","_logHandler","_userLogHandler","$45b460d9de9b230f$var$levelStringToEnum","$e67bf383372d72f4$var$idbProxyableTypes","$e67bf383372d72f4$var$cursorAdvanceMethods","$e67bf383372d72f4$var$cursorRequestMap","$e67bf383372d72f4$var$transactionDoneMap","$e67bf383372d72f4$var$transactionStoreNamesMap","$e67bf383372d72f4$var$transformCache","$e67bf383372d72f4$export$407448d2b89b1813","$e67bf383372d72f4$var$idbProxyTraps","receiver","IDBTransaction","objectStoreNames","objectStore","$e67bf383372d72f4$export$efccba1c4a2ef57b","$e67bf383372d72f4$var$wrapFunction","IDBDatabase","transaction","IDBCursor","advance","continue","continuePrimaryKey","$e67bf383372d72f4$export$3b14a55fb2447963","storeNames","tx","$e67bf383372d72f4$var$transformCachableValue","unlisten","complete","$e67bf383372d72f4$var$cacheDonePromiseForTransaction","IDBObjectStore","IDBIndex","Proxy","IDBRequest","request","success","$e67bf383372d72f4$var$promisifyRequest","$da032767b57a4aa4$export$ca0ed41b1a2af7e","blocked","upgrade","blocking","terminated","indexedDB","open","openPromise","oldVersion","newVersion","db","$da032767b57a4aa4$var$readMethods","$da032767b57a4aa4$var$writeMethods","$da032767b57a4aa4$var$cachedMethods","$da032767b57a4aa4$var$getMethod","targetFuncName","useIndex","isWrite","storeName","store","shift","oldTraps","$57d436074e210fb5$var$PlatformLoggerServiceImpl","getPlatformInfoString","databaseCompatName","$45b460d9de9b230f$export$efa9a398d6368992","$57d436074e210fb5$var$PLATFORM_LOG_STRING","$57d436074e210fb5$export$b4e3c36c855b14b5","$57d436074e210fb5$export$9566bce3835c0f28","$57d436074e210fb5$export$fa5244b94c62d36a","app","addComponent","$57d436074e210fb5$var$logger","$57d436074e210fb5$export$c930050e7bb63965","componentName","$57d436074e210fb5$export$fa0d6da0f5838f50","heartbeatController","getProvider","getImmediate","triggerHeartbeat","$57d436074e210fb5$var$ERROR_FACTORY","setLogLevelImpl","$57d436074e210fb5$var$FirebaseAppImpl","_isDeleted","_options","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","checkDestroyed","isDeleted","appName","$57d436074e210fb5$export$d29d5299a7137abc","libraryKeyOrName","variant","library","versionMismatch","warning","libraryMismatch","DB_CHECK_NAME","onsuccess","close","preExist","deleteDatabase","onupgradeneeded","$da38ac6aa733c404$var$SDK_VERSION","$da38ac6aa733c404$var$DOMStorageWrapper","domStorage_","removeItem","prefixedName_","storedVal","prefix_","$da38ac6aa733c404$var$MemoryStorage","cache_","isInMemoryStorage","$da38ac6aa733c404$var$createStoragefor","domStorageName","domStorage","$da38ac6aa733c404$var$PersistentStorage","$da38ac6aa733c404$var$SessionStorage","$da38ac6aa733c404$var$sha1","$c38e0f42709c826a$export$655666783217a925","sha1","$c38e0f42709c826a$export$c85d589bf4e25fef","digest","sha1Bytes","$da38ac6aa733c404$var$buildLogMessage_","varArgs","$c38e0f42709c826a$export$fac44ee5b035f737","$da38ac6aa733c404$var$firstLog_","$da38ac6aa733c404$var$enableLogging$1","logger_","persistent","$c38e0f42709c826a$export$a7a9523472993e97","$da38ac6aa733c404$var$logClient","$da38ac6aa733c404$var$logger","$da38ac6aa733c404$var$log","$da38ac6aa733c404$var$logWrapper","$da38ac6aa733c404$var$isInvalidJSONNumber","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","$da38ac6aa733c404$var$nameCompare","bAsInt","aAsInt","$da38ac6aa733c404$var$requireKey","$da38ac6aa733c404$var$ObjectToUniqueKey","dataSegs","segsize","$da38ac6aa733c404$var$each","$da38ac6aa733c404$var$doubleToIEEE754String","v","bias","ln","abs","pow","bits","hexByteString","hexByte","$da38ac6aa733c404$var$INTEGER_REGEXP_","$da38ac6aa733c404$var$tryParseInt","intVal","$da38ac6aa733c404$var$exceptionGuard","$da38ac6aa733c404$var$warn","$da38ac6aa733c404$var$setTimeoutNonBlocking","Deno","unrefTimer","$da38ac6aa733c404$var$AppCheckTokenProvider","appName_","appCheckProvider","appCheck","getToken","forceRefresh","addTokenChangeListener","addTokenListener","notifyForInvalidToken","$da38ac6aa733c404$var$FirebaseAuthTokenProvider","firebaseOptions_","authProvider_","auth_","auth","addAuthTokenListener","removeAuthTokenListener","$da38ac6aa733c404$var$EmulatorTokenProvider","accessToken","OWNER","$da38ac6aa733c404$var$RepoInfo","secure","namespace","webSocketOnly","nodeAdmin","persistenceKey","includeNamespaceInQueryParams","_host","_domain","internalHost","newHost","isCacheableHost","toURLString","$da38ac6aa733c404$var$repoInfoConnectionURL","repoInfo","connURL","counters_","amount","hashString","$da38ac6aa733c404$var$collections","$da38ac6aa733c404$var$StatsCollection","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","requestNum","toProcess","applicationId","appCheckToken","authToken","transportSessionId","lastSessionId","connId","bytesSent","everConnected_","log_","stats_","$da38ac6aa733c404$var$statsManagerGetCollection","urlFn","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","$da38ac6aa733c404$var$PacketReceiver","isClosed_","connectTimeoutTimer_","onClosed_","readyState","wrappedFn","body","called","attachEvent","$da38ac6aa733c404$var$executeWhenDOMReady","scriptTagHolder","$da38ac6aa733c404$var$FirebaseIFrameScriptHolder","command","arg1","arg2","arg3","arg4","incrementIncomingBytes_","password","sendNewPolls","urlParams","uniqueCallbackIdentifier","$da38ac6aa733c404$var$FORGE_DOMAIN_RE","connectURL","addTag","startLongPoll","addDisconnectPingFrame","$da38ac6aa733c404$var$BrowserPollConnection","forceAllow_","forceDisallow_","Windows","UI","myDisconnFrame","shutdown_","send","dataStr","incrementCounter","base64data","$da38ac6aa733c404$var$splitStringBySize","$da38ac6aa733c404$var$MAX_URL_DATA_SIZE","enqueueSegment","pw","style","display","bytesReceived","commandCB","onMessageCB","outstandingRequests","pendingSegs","currentSerial","$da38ac6aa733c404$var$LUIDGenerator","myIFrame","createIFrame_","domain","iframeContents","doc","write","iframe","contentWindow","contentDocument","alive","innerHTML","myID","myPW","newRequest_","d","curDataString","theSeg","seg","ts","theURL","addLongPollTag_","segnum","totalsegs","serial","doNewRequest","keepaliveTimeout","loadCB","doNodeLongPoll","newScript","rstate","MozWebSocket","$da38ac6aa733c404$var$WebSocketImpl","WebSocket","$da38ac6aa733c404$var$WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","headers","platform","proxy","mySock","onclose","onmessage","handleIncomingFrame","oldAndroidRegex","oldAndroidMatch","isOldAndroid","jsonMess","fullMess","frameCount","extractFrameCount_","handleNewFrameCount_","mess","resetKeepAlive","appendFrame_","remainingData","sendString_","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","$da38ac6aa733c404$var$TransportManager","initTransports_","ALL_TRANSPORTS","IS_TRANSPORT_INITIALIZED","globalTransportInitialized_","isWebSocketsAvailable","isSkipPollConnection","previouslyFailed","transports_","transports","transport","initialTransport","upgradeTransport","$da38ac6aa733c404$var$Connection","repoInfo_","applicationId_","appCheckToken_","authToken_","onReady_","onKill_","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","healthyTimeout_","markConnectionHealthy","healthyTimeoutMS","connectionCount","everConnected","onConnectionLost_","secondaryConn_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","t","sendData_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","onSecondaryControl_","isHealthy_","proceedWithUpgrade_","tryCleanupConnection","onControl_","onDataMessage_","onPrimaryResponse_","payload","onHandshake_","onReset_","$da38ac6aa733c404$var$error","sendPingOnPrimaryIfNecessary_","handshake","h","sessionId","onConnectionEstablished_","timestamp","tryStartUpgrade_","closeConnections_","reason","pathString","onComplete","stats","allowedEvents_","listeners_","eventType","validateEventType_","eventData","et","$da38ac6aa733c404$var$EventEmitter","online_","$da38ac6aa733c404$var$OnlineMonitor","pathOrString","pieceNum","pieces_","copyTo","pieceNum_","$da38ac6aa733c404$var$newEmptyPath","$da38ac6aa733c404$var$Path","$da38ac6aa733c404$var$pathGetFront","$da38ac6aa733c404$var$pathGetLength","$da38ac6aa733c404$var$pathPopFront","$da38ac6aa733c404$var$pathSlice","begin","$da38ac6aa733c404$var$pathParent","pieces","childPathObj","childPieces","$da38ac6aa733c404$var$pathIsEmpty","$da38ac6aa733c404$var$newRelativePath","outerPath","innerPath","inner","$da38ac6aa733c404$var$pathEquals","$da38ac6aa733c404$var$ValidationPath","errorPrefix_","parts_","byteLength_","$c38e0f42709c826a$export$9536dc0a75b20bf9","$da38ac6aa733c404$var$validationPathCheckValid","validationPath","$da38ac6aa733c404$var$validationPathToErrorString","$da38ac6aa733c404$var$VisibilityMonitor","visibilityChange","hidden","visible_","visible","$da38ac6aa733c404$var$PersistentConnection","$da38ac6aa733c404$var$ServerActions","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","appCheckTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens","outstandingPuts_","outstandingGets_","outstandingPutCount_","outstandingGetCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","forceTokenRefresh_","invalidAuthTokenCount_","invalidAppCheckTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","getInstance","onVisible_","onOnline_","onResponse","curReqNum","initConnection_","outstandingGet","_path","q","_queryObject","sendGet_","listen","currentHashFn","queryId","_queryIdentifier","_queryParams","isDefault","loadsAllData","listenSpec","hashFn","sendListen_","req","status","warnOnListenWarnings_","removeListen_","warnings","$c38e0f42709c826a$export$e51ae4db7b428f67","indexSpec","getIndex","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","tryAppCheck","authMethod","requestData","cred","onAuthRevoked_","onAppCheckRevoked_","sendUnlisten_","queryObj","sendOnDisconnect_","onDisconnectMerge","setMaxNode","MAX_NODE","onDisconnectCancel","response","putInternal","sendPut_","queued","errorReason","reqNum","onListenRevoked_","onSecurityDebugPacket_","getTime","handleTimestamp_","sendConnectStats_","restoreState_","scheduleConnect_","online","nodeFromJSON","shouldReconnect_","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage","onReady","onRealtimeDisconnect_","nextConnectionId_","canceled","connection","closeFn","sendRequestFn","interrupt","$c38e0f42709c826a$export$dd1bc94b04021eeb","delta","serverTimeOffset","cancelSentTransactions_","put","normalizedPathString","statusCode","explanation","queries","clientName","reportStats","currentlyOnline","$da38ac6aa733c404$var$NamedNode","node","compare","oldNode","newNode","oldWrapped","newWrapped","minPost","MIN","$da38ac6aa733c404$var$KeyIndex","$da38ac6aa733c404$var$Index","$da38ac6aa733c404$var$__EMPTY_NODE","__EMPTY_NODE","makePost","indexValue","$da38ac6aa733c404$var$KEY_INDEX","$da38ac6aa733c404$var$SortedMapIterator","startKey","isReverse_","resultGenerator_","nodeStack_","cmp","$da38ac6aa733c404$var$LLRBNode","color","RED","$da38ac6aa733c404$var$SortedMap","EMPTY_NODE","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","comparator_","root_","getPredecessorKey","rightParent","resultGenerator","$da38ac6aa733c404$var$NAME_ONLY_COMPARATOR","priority","priorityNode","isLeafNode","$da38ac6aa733c404$var$MAX_NODE$2","getPriority","$da38ac6aa733c404$var$__childrenNodeConstructor","$da38ac6aa733c404$var$nodeFromJSON$1","$da38ac6aa733c404$var$MAX_NODE$1","$da38ac6aa733c404$var$LeafNode","value_","priorityNode_","lazyHash_","__childrenNodeConstructor","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","exportFormat","toHash","$da38ac6aa733c404$var$priorityHashText","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","equals","aPriority","bPriority","indexCmp","compareTo","isDefinedOn","$da38ac6aa733c404$var$LOG_2","$da38ac6aa733c404$var$Base12Num","num","current_","mask","bits_","nextBitIsOne","childList","keyFn","mapSortFn","buildBalancedTree","namedNode","middle","base12","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","buildFrom12Array","$da38ac6aa733c404$var$_defaultIndexMap","indexes_","indexSet_","Default","$da38ac6aa733c404$var$fallbackObject","$da38ac6aa733c404$var$PRIORITY_INDEX","$da38ac6aa733c404$var$IndexMap","indexKey","sortedMap","indexDefinition","existingChildren","getIterator","Wrap","getNext","sawIndexedValue","newIndex","$da38ac6aa733c404$var$buildChildSet","getCompare","indexName","newIndexes","newIndexSet","addToIndexes","indexedChildren","iter","existingSnap","removeFromIndexes","$da38ac6aa733c404$var$EMPTY_NODE","$da38ac6aa733c404$var$ChildrenNode","children_","indexMap_","$da38ac6aa733c404$var$validatePriorityNode","$da38ac6aa733c404$var$NAME_COMPARATOR","child","hasChild","newIndexMap","newPriority","newImmediateChild","numKeys","allIntegerKeys","INTEGER_REGEXP_","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getLastChildName","wrappedNode","getIteratorFrom","startPost","peek","getReverseIteratorFrom","maxPost","endPost","$da38ac6aa733c404$var$MAX_NODE","withIndex","hasIndex","addIndex","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","$da38ac6aa733c404$var$nodeFromJSON","json","childData","childrenHavePriority","childSet","sortedChildSet","indexPath_","snap","aChild","extractChild","bChild","valueNode","$da38ac6aa733c404$var$VALUE_INDEX","MAX","$da38ac6aa733c404$var$PUSH_CHARS","lastPushTime","$da38ac6aa733c404$var$changeValue","snapshotNode","$da38ac6aa733c404$var$changeChildAdded","oldSnap","index_","newChild","affectedPath","optChangeAccumulator","isIndexed","oldChild","trackChildChange","$da38ac6aa733c404$var$changeChildRemoved","$da38ac6aa733c404$var$changeChildChanged","updateFullNode","newSnap","indexedFilter_","$da38ac6aa733c404$var$IndexedFilter","startPost_","$da38ac6aa733c404$var$RangedFilter","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","filtered","getIndexedFilter","hasStart","startName","getIndexStartName","getIndexStartValue","hasEnd","endName","getIndexEndName","getIndexEndValue","$da38ac6aa733c404$var$LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","fullLimitUpdateChild_","hasNext","iterator1","getReverseIterator","indexCompare","count1","foundStartPost","next1","childKey","childSnap","changeAccumulator","oldEventCache","newChildNamedNode","windowBoundary","getFirstChild","getLastChild","oldChildSnap","nextChild","getChildAfterChild","compareNext","newEventCache","startSet_","startNameSet_","startAfterSet_","endSet_","endNameSet_","endBeforeSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","hasLimit","limitSet_","$da38ac6aa733c404$export$7ba287e361c94330","$da38ac6aa733c404$var$queryParamsToRestQueryStringParameters","qs","$da38ac6aa733c404$var$PathIndex","$da38ac6aa733c404$var$queryParamsGetQueryObject","viewFrom","$da38ac6aa733c404$var$ReadonlyRestClient","listens_","listenId","getListenId_","thisListen","queryStringParameters","restRequest_","referenceConstructor","refreshAuthToken","$c38e0f42709c826a$export$ac4103b836844853","xhr","XMLHttpRequest","responseText","$da38ac6aa733c404$var$SnapshotHolder","rootNode_","getNode","newSnapshotNode","$da38ac6aa733c404$var$newSparseSnapshotTree","$da38ac6aa733c404$var$sparseSnapshotTreeRemember","sparseSnapshotTree","$da38ac6aa733c404$var$sparseSnapshotTreeForEachTree","prefixPath","tree","$da38ac6aa733c404$var$sparseSnapshotTreeForEachChild","last_","collection_","stat","newStats","server_","statsToReport_","reportStats_","statsListener_","reportedStats","haveStatsToReport","$da38ac6aa733c404$var$OperationType","OperationType","$da38ac6aa733c404$var$newOperationSourceServerTaggedQuery","fromUser","tagged","$da38ac6aa733c404$var$AckUserWrite","affectedTree","revert","ACK_USER_WRITE","fromServer","subtree","LISTEN_COMPLETE","$da38ac6aa733c404$var$Overwrite","OVERWRITE","operationForChild","MERGE","$da38ac6aa733c404$var$Merge","fullyInitialized_","filtered_","node_","isFiltered","isFullyInitialized","isCompleteForChild","$da38ac6aa733c404$var$EventGenerator","query_","$da38ac6aa733c404$var$eventGeneratorGenerateEventsForType","eventGenerator","events","changes","eventCache","filteredChanges","change","aWrapped","bWrapped","$da38ac6aa733c404$var$eventGeneratorCompareChanges","materializedChange","prevName","$da38ac6aa733c404$var$eventGeneratorMaterializeSingleChange","registration","respondsTo","$da38ac6aa733c404$var$newViewCache","serverCache","$da38ac6aa733c404$var$viewCacheUpdateEventSnap","viewCache","eventSnap","$da38ac6aa733c404$var$CacheNode","$da38ac6aa733c404$var$viewCacheUpdateServerSnap","serverSnap","$da38ac6aa733c404$var$viewCacheGetCompleteEventSnap","$da38ac6aa733c404$var$viewCacheGetCompleteServerSnap","$da38ac6aa733c404$var$emptyChildrenSingleton","$da38ac6aa733c404$var$ImmutableTree","$da38ac6aa733c404$var$stringCompare","$da38ac6aa733c404$var$EmptyChildren","childPath","findRootMostMatchingPathAndValue","relativePath","childExistingPathAndValue","errorPrefixFxn","$da38ac6aa733c404$var$pathChild","toSet","errorPrefix","setTree","newTree","fold_","accum","pathSoFar","findOnPath","findOnPath_","pathToFollow","foreachOnPath_","currentRelativePath","foreach","foreach_","writeTree_","$da38ac6aa733c404$var$CompoundWrite","compoundWrite","rootmost","findRootMostValueAndPath","rootMostPath","$da38ac6aa733c404$var$compoundWriteAddWrites","updates","newWrite","$da38ac6aa733c404$var$compoundWriteAddWrite","$da38ac6aa733c404$var$compoundWriteRemoveWrite","empty","newWriteTree","$da38ac6aa733c404$var$compoundWriteHasCompleteWrite","$da38ac6aa733c404$var$compoundWriteGetCompleteNode","$da38ac6aa733c404$var$compoundWriteGetCompleteChildren","$da38ac6aa733c404$var$compoundWriteChildCompoundWrite","shadowingNode","$da38ac6aa733c404$var$compoundWriteIsEmpty","$da38ac6aa733c404$var$compoundWriteApply","$da38ac6aa733c404$var$applySubtreeWrite","writeTree","priorityWrite","$da38ac6aa733c404$var$writeTreeChildWrites","$da38ac6aa733c404$var$newWriteTreeRef","allWrites","writeId","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","$da38ac6aa733c404$var$writeTreeRecordContainsPath_","$da38ac6aa733c404$var$pathContains","visibleWrites","$da38ac6aa733c404$var$writeTreeLayerTree_","$da38ac6aa733c404$var$writeTreeDefaultFilter_","lastWriteId","$da38ac6aa733c404$var$writeTreeResetTree_","writeRecord","writes","writePath","treeRoot","deepNode","$da38ac6aa733c404$var$writeTreeCalcCompleteEventCache","treePath","completeServerCache","writeIdsToExclude","includeHiddenWrites","subMerge","$da38ac6aa733c404$var$writeTreeRefCalcCompleteEventCache","writeTreeRef","completeServerChildren","completeChildren","topLevelSet","existingEventSnap","existingServerSnap","childMerge","$da38ac6aa733c404$var$writeTreeRefCalcIndexedSlice","completeServerData","toIterate","$da38ac6aa733c404$var$writeTreeRefCalcCompleteChild","existingServerCache","$da38ac6aa733c404$var$ChildChangeAccumulator","changeMap","oldChange","oldType","$da38ac6aa733c404$var$NO_COMPLETE_CHILD_SOURCE","getCompleteChild","writes_","viewCache_","optCompleteServerCache_","serverNode","$da38ac6aa733c404$var$viewProcessorApplyOperation","viewProcessor","oldViewCache","operation","writesCache","completeCache","newViewCache","filterServerNode","overwrite","$da38ac6aa733c404$var$viewProcessorApplyUserOverwrite","$da38ac6aa733c404$var$viewProcessorApplyServerOverwrite","changedChildren","curViewCache","$da38ac6aa733c404$var$viewProcessorCacheHasChild","$da38ac6aa733c404$var$viewProcessorApplyUserMerge","$da38ac6aa733c404$var$viewProcessorApplyServerMerge","ackUserWrite","$da38ac6aa733c404$var$writeTreeRefShadowingWrite","$da38ac6aa733c404$var$WriteTreeCompleteChildSource","serverChildren","$da38ac6aa733c404$var$writeTreeRefCalcCompleteEventChildren","filtersNodes","$da38ac6aa733c404$var$viewProcessorRevertUserWrite","ackPath","isCompleteForPath","changedChildren1","mergePath","serverCachePath","oldServerNode","$da38ac6aa733c404$var$viewProcessorGenerateEventCacheAfterServerEvent","$da38ac6aa733c404$var$viewProcessorListenComplete","getChanges","isLeafOrEmpty","oldCompleteSnap","changePath","completeEventChildren","completeNode","oldEventNode","oldEventSnap","updatedPriority","$da38ac6aa733c404$var$writeTreeRefCalcEventCacheAfterServerOverwrite","childChangePath","newEventChild","eventChildUpdate","changedSnap","oldServerSnap","newServerCache","serverFilter","newServerNode","$da38ac6aa733c404$var$pathGetBack","$da38ac6aa733c404$var$viewProcessorApplyMerge","viewMergeTree","childMergeTree","isUnknownDeepMerge","$da38ac6aa733c404$var$View","initialViewCache","eventRegistrations_","indexFilter","processor_","$da38ac6aa733c404$var$newViewProcessor","initialServerCache","initialEventCache","eventGenerator_","$da38ac6aa733c404$var$viewIsEmpty","$da38ac6aa733c404$var$viewRemoveEventRegistration","eventRegistration","cancelError","cancelEvents","maybeEvent","createCancelEvent","existing","hasAnyCallback","$da38ac6aa733c404$var$viewApplyOperation","$da38ac6aa733c404$var$viewGenerateEventsForChanges_","eventRegistrations","indexedValueChanged","moves","$da38ac6aa733c404$var$referenceConstructor$1","$da38ac6aa733c404$var$referenceConstructor","$da38ac6aa733c404$var$SyncPoint","views","$da38ac6aa733c404$var$syncPointApplyOperation","syncPoint","optCompleteServerCache","view1","$da38ac6aa733c404$var$syncPointGetView","serverCacheComplete","eventCacheComplete","$da38ac6aa733c404$var$syncPointAddEventRegistration","$da38ac6aa733c404$var$viewAddEventRegistration","initialChanges","$da38ac6aa733c404$var$viewGetInitialEvents","$da38ac6aa733c404$var$syncPointRemoveEventRegistration","removed","hadCompleteView","$da38ac6aa733c404$var$syncPointHasCompleteView","viewQueryId","_repo","$da38ac6aa733c404$var$syncPointGetQueryViews","$da38ac6aa733c404$var$syncPointGetCompleteServerCache","$da38ac6aa733c404$var$viewGetCompleteServerCache","$da38ac6aa733c404$var$syncPointViewForQuery","$da38ac6aa733c404$var$syncPointGetCompleteView","$da38ac6aa733c404$var$syncPointViewExistsForQuery","$da38ac6aa733c404$var$syncTreeNextQueryTag_","$da38ac6aa733c404$var$SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","$da38ac6aa733c404$var$syncTreeApplyUserOverwrite","syncTree","$da38ac6aa733c404$var$syncTreeApplyOperationToSyncPoints_","$da38ac6aa733c404$var$syncTreeAckUserWrite","record","$da38ac6aa733c404$var$writeTreeGetWrite","$da38ac6aa733c404$var$writeTreeRemoveWrite","$da38ac6aa733c404$var$syncTreeApplyServerOverwrite","$da38ac6aa733c404$var$syncTreeRemoveEventRegistration","skipListenerDedup","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","$da38ac6aa733c404$var$syncTreeCollectDistinctViewsForSubTree_","newQuery","$da38ac6aa733c404$var$syncTreeCreateListenerForView_","startListening","$da38ac6aa733c404$var$syncTreeQueryForListening_","$da38ac6aa733c404$var$syncTreeTagForQuery","defaultTag","stopListening","queryToRemove","tagToRemove","$da38ac6aa733c404$var$syncTreeMakeQueryKey_","$da38ac6aa733c404$var$syncTreeRemoveTags_","$da38ac6aa733c404$var$syncTreeApplyTaggedQueryOverwrite","queryKey","$da38ac6aa733c404$var$syncTreeQueryKeyForTag_","enableLoggingImpl","r","$da38ac6aa733c404$var$syncTreeParseQueryKey_","queryPath","SDK_VERSION","$da38ac6aa733c404$var$syncTreeApplyTaggedOperation_","$da38ac6aa733c404$var$syncTreeAddEventRegistration","skipSetupListener","foreachOnPath","pathToSyncPoint","sp","foundAncestorDefaultView","foreachChild","childSyncPoint","viewAlreadyExists","$da38ac6aa733c404$var$syncTreeSetupListener_","$da38ac6aa733c404$var$syncTreeCalcCompleteEventCache","$da38ac6aa733c404$var$ListenComplete","creatorFunction","$da38ac6aa733c404$var$reporters","changeTree","fromObject","rawConfig","name1","existingApp","$a83e7ccd68ca8d4e$export$436a80eea5d5c0c5","newApp","$9d0840e0f81e5cfa$export$8a7957e57f12f09c","$0b89d474933103bc$export$ca000e230c0caa3e","email","fullName","userId","roomId","rtdbRoomId","messages","getState","setState","newState","setItem","init","recoverStateFromLocalSt","accessToRoom","setEmailAndFullname","cs","fetch","$0b89d474933103bc$var$API_BASE_URL","nombre","signIn","askNewRoom","userRoomId","alert","rtdbshortRoomId","listenRoom","$da38ac6aa733c404$export$ad30f661f41f4d90","$da38ac6aa733c404$export$eff4d24c3ff7876e","snapshot","messagesFromServer","messagesList","$f1q41","pushMessage","$19ce7e3c9d6231eb$var$Home","connectedCallback","form","selectEl","roomSelector","emailUser","nombreUser","dropdownUser","dropdown","roomnumUser","roomnum","countDown","div","int","go","$f52c0bdb49533de2$var$Chat","currState","addListeners","getElementById"],"version":3,"file":"index.a9f1bc73.js.map"}